

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Sep 24 18:35:02 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 09/04/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F26K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    97  0000                     
    98 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    99  0000                     
   100 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   101  0000                     _ANSELA	set	3896
   102  0000                     _ANSELB	set	3897
   103  0000                     _ANSELC	set	3898
   104  0000                     _CCPTMRS0bits	set	3913
   105  0000                     _TXREG1	set	4013
   106  0000                     _RCREG1	set	4014
   107  0000                     _RCSTA1bits	set	4011
   108  0000                     _TXSTA1bits	set	4012
   109  0000                     _SPBRGH1	set	4016
   110  0000                     _SPBRG1	set	4015
   111  0000                     _TXSTA1	set	4012
   112  0000                     _RCSTA1	set	4011
   113  0000                     _BAUDCON1	set	4024
   114  0000                     _OSCTUNE	set	3995
   115  0000                     _OSCCON2	set	4050
   116  0000                     _OSCCON	set	4051
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _WPUB	set	3937
   119  0000                     _TRISC	set	3988
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISA	set	3986
   122  0000                     _LATC	set	3979
   123  0000                     _LATB	set	3978
   124  0000                     _LATA	set	3977
   125  0000                     _T0CON	set	4053
   126  0000                     _INTCONbits	set	4082
   127  0000                     _TMR0L	set	4054
   128  0000                     _TMR0H	set	4055
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T2CONbits	set	4026
   131  0000                     _T2CON	set	4026
   132  0000                     _PIR1bits	set	3998
   133  0000                     _TMR2	set	4028
   134  0000                     _PR2	set	4027
   135  0000                     _CCPR1L	set	4030
   136  0000                     _CCPR1H	set	4031
   137  0000                     _PSTR1CON	set	4025
   138  0000                     _PWM1CON	set	4023
   139  0000                     _ECCP1AS	set	4022
   140  0000                     _CCP1CON	set	4029
   141  0000                     _PLLRDY	set	32407
   142                           
   143                           	psect	mediumconst
   144  00FCD6                     __pmediumconst:
   145                           	callstack 0
   146  00FCD6  00                 	db	0
   147  00FCD7                     STR_47:
   148  00FCD7  54                 	db	84	;'T'
   149  00FCD8  68                 	db	104	;'h'
   150  00FCD9  65                 	db	101	;'e'
   151  00FCDA  20                 	db	32
   152  00FCDB  64                 	db	100	;'d'
   153  00FCDC  75                 	db	117	;'u'
   154  00FCDD  74                 	db	116	;'t'
   155  00FCDE  79                 	db	121	;'y'
   156  00FCDF  20                 	db	32
   157  00FCE0  63                 	db	99	;'c'
   158  00FCE1  79                 	db	121	;'y'
   159  00FCE2  63                 	db	99	;'c'
   160  00FCE3  6C                 	db	108	;'l'
   161  00FCE4  65                 	db	101	;'e'
   162  00FCE5  20                 	db	32
   163  00FCE6  69                 	db	105	;'i'
   164  00FCE7  73                 	db	115	;'s'
   165  00FCE8  20                 	db	32
   166  00FCE9  25                 	db	37
   167  00FCEA  64                 	db	100	;'d'
   168  00FCEB  20                 	db	32
   169  00FCEC  54                 	db	84	;'T'
   170  00FCED  4D                 	db	77	;'M'
   171  00FCEE  52                 	db	82	;'R'
   172  00FCEF  32                 	db	50	;'2'
   173  00FCF0  20                 	db	32
   174  00FCF1  63                 	db	99	;'c'
   175  00FCF2  6F                 	db	111	;'o'
   176  00FCF3  75                 	db	117	;'u'
   177  00FCF4  6E                 	db	110	;'n'
   178  00FCF5  74                 	db	116	;'t'
   179  00FCF6  73                 	db	115	;'s'
   180  00FCF7  20                 	db	32
   181  00FCF8  68                 	db	104	;'h'
   182  00FCF9  69                 	db	105	;'i'
   183  00FCFA  67                 	db	103	;'g'
   184  00FCFB  68                 	db	104	;'h'
   185  00FCFC  20                 	db	32
   186  00FCFD  69                 	db	105	;'i'
   187  00FCFE  6E                 	db	110	;'n'
   188  00FCFF  20                 	db	32
   189  00FD00  61                 	db	97	;'a'
   190  00FD01  20                 	db	32
   191  00FD02  70                 	db	112	;'p'
   192  00FD03  65                 	db	101	;'e'
   193  00FD04  72                 	db	114	;'r'
   194  00FD05  69                 	db	105	;'i'
   195  00FD06  6F                 	db	111	;'o'
   196  00FD07  64                 	db	100	;'d'
   197  00FD08  20                 	db	32
   198  00FD09  6F                 	db	111	;'o'
   199  00FD0A  66                 	db	102	;'f'
   200  00FD0B  20                 	db	32
   201  00FD0C  25                 	db	37
   202  00FD0D  64                 	db	100	;'d'
   203  00FD0E  20                 	db	32
   204  00FD0F  54                 	db	84	;'T'
   205  00FD10  4D                 	db	77	;'M'
   206  00FD11  52                 	db	82	;'R'
   207  00FD12  32                 	db	50	;'2'
   208  00FD13  20                 	db	32
   209  00FD14  63                 	db	99	;'c'
   210  00FD15  6F                 	db	111	;'o'
   211  00FD16  75                 	db	117	;'u'
   212  00FD17  6E                 	db	110	;'n'
   213  00FD18  74                 	db	116	;'t'
   214  00FD19  73                 	db	115	;'s'
   215  00FD1A  2E                 	db	46
   216  00FD1B  0D                 	db	13
   217  00FD1C  0A                 	db	10
   218  00FD1D  00                 	db	0
   219  00FD1E                     STR_11:
   220  00FD1E  66                 	db	102	;'f'
   221  00FD1F  3A                 	db	58	;':'
   222  00FD20  20                 	db	32
   223  00FD21  70                 	db	112	;'p'
   224  00FD22  72                 	db	114	;'r'
   225  00FD23  69                 	db	105	;'i'
   226  00FD24  6E                 	db	110	;'n'
   227  00FD25  74                 	db	116	;'t'
   228  00FD26  20                 	db	32
   229  00FD27  75                 	db	117	;'u'
   230  00FD28  73                 	db	115	;'s'
   231  00FD29  69                 	db	105	;'i'
   232  00FD2A  6E                 	db	110	;'n'
   233  00FD2B  67                 	db	103	;'g'
   234  00FD2C  20                 	db	32
   235  00FD2D  73                 	db	115	;'s'
   236  00FD2E  65                 	db	101	;'e'
   237  00FD2F  76                 	db	118	;'v'
   238  00FD30  65                 	db	101	;'e'
   239  00FD31  72                 	db	114	;'r'
   240  00FD32  61                 	db	97	;'a'
   241  00FD33  6C                 	db	108	;'l'
   242  00FD34  20                 	db	32
   243  00FD35  66                 	db	102	;'f'
   244  00FD36  6F                 	db	111	;'o'
   245  00FD37  72                 	db	114	;'r'
   246  00FD38  6D                 	db	109	;'m'
   247  00FD39  61                 	db	97	;'a'
   248  00FD3A  74                 	db	116	;'t'
   249  00FD3B  20                 	db	32
   250  00FD3C  73                 	db	115	;'s'
   251  00FD3D  70                 	db	112	;'p'
   252  00FD3E  65                 	db	101	;'e'
   253  00FD3F  63                 	db	99	;'c'
   254  00FD40  69                 	db	105	;'i'
   255  00FD41  66                 	db	102	;'f'
   256  00FD42  69                 	db	105	;'i'
   257  00FD43  65                 	db	101	;'e'
   258  00FD44  72                 	db	114	;'r'
   259  00FD45  73                 	db	115	;'s'
   260  00FD46  2E                 	db	46
   261  00FD47  0D                 	db	13
   262  00FD48  0A                 	db	10
   263  00FD49  00                 	db	0
   264  00FD4A                     STR_38:
   265  00FD4A  54                 	db	84	;'T'
   266  00FD4B  68                 	db	104	;'h'
   267  00FD4C  69                 	db	105	;'i'
   268  00FD4D  73                 	db	115	;'s'
   269  00FD4E  20                 	db	32
   270  00FD4F  69                 	db	105	;'i'
   271  00FD50  73                 	db	115	;'s'
   272  00FD51  20                 	db	32
   273  00FD52  68                 	db	104	;'h'
   274  00FD53  6F                 	db	111	;'o'
   275  00FD54  77                 	db	119	;'w'
   276  00FD55  20                 	db	32
   277  00FD56  79                 	db	121	;'y'
   278  00FD57  6F                 	db	111	;'o'
   279  00FD58  75                 	db	117	;'u'
   280  00FD59  20                 	db	32
   281  00FD5A  70                 	db	112	;'p'
   282  00FD5B  72                 	db	114	;'r'
   283  00FD5C  69                 	db	105	;'i'
   284  00FD5D  6E                 	db	110	;'n'
   285  00FD5E  74                 	db	116	;'t'
   286  00FD5F  20                 	db	32
   287  00FD60  61                 	db	97	;'a'
   288  00FD61  20                 	db	32
   289  00FD62  62                 	db	98	;'b'
   290  00FD63  61                 	db	97	;'a'
   291  00FD64  63                 	db	99	;'c'
   292  00FD65  6B                 	db	107	;'k'
   293  00FD66  73                 	db	115	;'s'
   294  00FD67  6C                 	db	108	;'l'
   295  00FD68  61                 	db	97	;'a'
   296  00FD69  73                 	db	115	;'s'
   297  00FD6A  68                 	db	104	;'h'
   298  00FD6B  20                 	db	32
   299  00FD6C  5C                 	db	92	;'\'
   300  00FD6D  20                 	db	32
   301  00FD6E  20                 	db	32
   302  00FD6F  0D                 	db	13
   303  00FD70  0A                 	db	10
   304  00FD71  00                 	db	0
   305  00FD72                     STR_17:
   306  00FD72  70                 	db	112	;'p'
   307  00FD73  2F                 	db	47
   308  00FD74  50                 	db	80	;'P'
   309  00FD75  3A                 	db	58	;':'
   310  00FD76  20                 	db	32
   311  00FD77  64                 	db	100	;'d'
   312  00FD78  65                 	db	101	;'e'
   313  00FD79  63                 	db	99	;'c'
   314  00FD7A  72                 	db	114	;'r'
   315  00FD7B  65                 	db	101	;'e'
   316  00FD7C  61                 	db	97	;'a'
   317  00FD7D  73                 	db	115	;'s'
   318  00FD7E  65                 	db	101	;'e'
   319  00FD7F  2F                 	db	47
   320  00FD80  69                 	db	105	;'i'
   321  00FD81  6E                 	db	110	;'n'
   322  00FD82  63                 	db	99	;'c'
   323  00FD83  72                 	db	114	;'r'
   324  00FD84  65                 	db	101	;'e'
   325  00FD85  61                 	db	97	;'a'
   326  00FD86  73                 	db	115	;'s'
   327  00FD87  65                 	db	101	;'e'
   328  00FD88  20                 	db	32
   329  00FD89  50                 	db	80	;'P'
   330  00FD8A  57                 	db	87	;'W'
   331  00FD8B  4D                 	db	77	;'M'
   332  00FD8C  20                 	db	32
   333  00FD8D  64                 	db	100	;'d'
   334  00FD8E  75                 	db	117	;'u'
   335  00FD8F  74                 	db	116	;'t'
   336  00FD90  79                 	db	121	;'y'
   337  00FD91  20                 	db	32
   338  00FD92  63                 	db	99	;'c'
   339  00FD93  79                 	db	121	;'y'
   340  00FD94  63                 	db	99	;'c'
   341  00FD95  6C                 	db	108	;'l'
   342  00FD96  65                 	db	101	;'e'
   343  00FD97  0D                 	db	13
   344  00FD98  0A                 	db	10
   345  00FD99  00                 	db	0
   346  00FD9A                     STR_14:
   347  00FD9A  65                 	db	101	;'e'
   348  00FD9B  3A                 	db	58	;':'
   349  00FD9C  20                 	db	32
   350  00FD9D  70                 	db	112	;'p'
   351  00FD9E  72                 	db	114	;'r'
   352  00FD9F  69                 	db	105	;'i'
   353  00FDA0  6E                 	db	110	;'n'
   354  00FDA1  74                 	db	116	;'t'
   355  00FDA2  20                 	db	32
   356  00FDA3  73                 	db	115	;'s'
   357  00FDA4  65                 	db	101	;'e'
   358  00FDA5  76                 	db	118	;'v'
   359  00FDA6  65                 	db	101	;'e'
   360  00FDA7  72                 	db	114	;'r'
   361  00FDA8  61                 	db	97	;'a'
   362  00FDA9  6C                 	db	108	;'l'
   363  00FDAA  20                 	db	32
   364  00FDAB  65                 	db	101	;'e'
   365  00FDAC  73                 	db	115	;'s'
   366  00FDAD  63                 	db	99	;'c'
   367  00FDAE  61                 	db	97	;'a'
   368  00FDAF  70                 	db	112	;'p'
   369  00FDB0  65                 	db	101	;'e'
   370  00FDB1  64                 	db	100	;'d'
   371  00FDB2  20                 	db	32
   372  00FDB3  63                 	db	99	;'c'
   373  00FDB4  68                 	db	104	;'h'
   374  00FDB5  61                 	db	97	;'a'
   375  00FDB6  72                 	db	114	;'r'
   376  00FDB7  61                 	db	97	;'a'
   377  00FDB8  63                 	db	99	;'c'
   378  00FDB9  74                 	db	116	;'t'
   379  00FDBA  65                 	db	101	;'e'
   380  00FDBB  72                 	db	114	;'r'
   381  00FDBC  73                 	db	115	;'s'
   382  00FDBD  2E                 	db	46
   383  00FDBE  0D                 	db	13
   384  00FDBF  0A                 	db	10
   385  00FDC0  00                 	db	0
   386  00FDC1                     STR_37:
   387  00FDC1  54                 	db	84	;'T'
   388  00FDC2  68                 	db	104	;'h'
   389  00FDC3  69                 	db	105	;'i'
   390  00FDC4  73                 	db	115	;'s'
   391  00FDC5  20                 	db	32
   392  00FDC6  69                 	db	105	;'i'
   393  00FDC7  73                 	db	115	;'s'
   394  00FDC8  20                 	db	32
   395  00FDC9  68                 	db	104	;'h'
   396  00FDCA  6F                 	db	111	;'o'
   397  00FDCB  77                 	db	119	;'w'
   398  00FDCC  20                 	db	32
   399  00FDCD  79                 	db	121	;'y'
   400  00FDCE  6F                 	db	111	;'o'
   401  00FDCF  75                 	db	117	;'u'
   402  00FDD0  20                 	db	32
   403  00FDD1  70                 	db	112	;'p'
   404  00FDD2  72                 	db	114	;'r'
   405  00FDD3  69                 	db	105	;'i'
   406  00FDD4  6E                 	db	110	;'n'
   407  00FDD5  74                 	db	116	;'t'
   408  00FDD6  20                 	db	32
   409  00FDD7  61                 	db	97	;'a'
   410  00FDD8  20                 	db	32
   411  00FDD9  70                 	db	112	;'p'
   412  00FDDA  65                 	db	101	;'e'
   413  00FDDB  72                 	db	114	;'r'
   414  00FDDC  63                 	db	99	;'c'
   415  00FDDD  65                 	db	101	;'e'
   416  00FDDE  6E                 	db	110	;'n'
   417  00FDDF  74                 	db	116	;'t'
   418  00FDE0  20                 	db	32
   419  00FDE1  25                 	db	37
   420  00FDE2  25                 	db	37
   421  00FDE3  20                 	db	32
   422  00FDE4  0D                 	db	13
   423  00FDE5  0A                 	db	10
   424  00FDE6  00                 	db	0
   425  00FDE7                     STR_42:
   426  00FDE7  54                 	db	84	;'T'
   427  00FDE8  68                 	db	104	;'h'
   428  00FDE9  69                 	db	105	;'i'
   429  00FDEA  73                 	db	115	;'s'
   430  00FDEB  20                 	db	32
   431  00FDEC  69                 	db	105	;'i'
   432  00FDED  73                 	db	115	;'s'
   433  00FDEE  20                 	db	32
   434  00FDEF  61                 	db	97	;'a'
   435  00FDF0  20                 	db	32
   436  00FDF1  68                 	db	104	;'h'
   437  00FDF2  6F                 	db	111	;'o'
   438  00FDF3  72                 	db	114	;'r'
   439  00FDF4  69                 	db	105	;'i'
   440  00FDF5  7A                 	db	122	;'z'
   441  00FDF6  6F                 	db	111	;'o'
   442  00FDF7  6E                 	db	110	;'n'
   443  00FDF8  74                 	db	116	;'t'
   444  00FDF9  61                 	db	97	;'a'
   445  00FDFA  6C                 	db	108	;'l'
   446  00FDFB  20                 	db	32
   447  00FDFC  74                 	db	116	;'t'
   448  00FDFD  61                 	db	97	;'a'
   449  00FDFE  62                 	db	98	;'b'
   450  00FDFF  20                 	db	32
   451  00FE00  09                 	db	9
   452  00FE01  20                 	db	32
   453  00FE02  69                 	db	105	;'i'
   454  00FE03  6E                 	db	110	;'n'
   455  00FE04  20                 	db	32
   456  00FE05  6C                 	db	108	;'l'
   457  00FE06  69                 	db	105	;'i'
   458  00FE07  6E                 	db	110	;'n'
   459  00FE08  65                 	db	101	;'e'
   460  00FE09  2E                 	db	46
   461  00FE0A  0D                 	db	13
   462  00FE0B  0A                 	db	10
   463  00FE0C  00                 	db	0
   464  00FE0D                     STR_36:
   465  00FE0D  54                 	db	84	;'T'
   466  00FE0E  68                 	db	104	;'h'
   467  00FE0F  69                 	db	105	;'i'
   468  00FE10  73                 	db	115	;'s'
   469  00FE11  20                 	db	32
   470  00FE12  69                 	db	105	;'i'
   471  00FE13  73                 	db	115	;'s'
   472  00FE14  20                 	db	32
   473  00FE15  68                 	db	104	;'h'
   474  00FE16  6F                 	db	111	;'o'
   475  00FE17  77                 	db	119	;'w'
   476  00FE18  20                 	db	32
   477  00FE19  79                 	db	121	;'y'
   478  00FE1A  6F                 	db	111	;'o'
   479  00FE1B  75                 	db	117	;'u'
   480  00FE1C  20                 	db	32
   481  00FE1D  70                 	db	112	;'p'
   482  00FE1E  72                 	db	114	;'r'
   483  00FE1F  69                 	db	105	;'i'
   484  00FE20  6E                 	db	110	;'n'
   485  00FE21  74                 	db	116	;'t'
   486  00FE22  20                 	db	32
   487  00FE23  61                 	db	97	;'a'
   488  00FE24  20                 	db	32
   489  00FE25  71                 	db	113	;'q'
   490  00FE26  75                 	db	117	;'u'
   491  00FE27  6F                 	db	111	;'o'
   492  00FE28  74                 	db	116	;'t'
   493  00FE29  65                 	db	101	;'e'
   494  00FE2A  20                 	db	32
   495  00FE2B  22                 	db	34
   496  00FE2C  20                 	db	32
   497  00FE2D  20                 	db	32
   498  00FE2E  0D                 	db	13
   499  00FE2F  0A                 	db	10
   500  00FE30  00                 	db	0
   501  00FE31                     STR_43:
   502  00FE31  54                 	db	84	;'T'
   503  00FE32  68                 	db	104	;'h'
   504  00FE33  69                 	db	105	;'i'
   505  00FE34  73                 	db	115	;'s'
   506  00FE35  20                 	db	32
   507  00FE36  69                 	db	105	;'i'
   508  00FE37  73                 	db	115	;'s'
   509  00FE38  20                 	db	32
   510  00FE39  61                 	db	97	;'a'
   511  00FE3A  20                 	db	32
   512  00FE3B  62                 	db	98	;'b'
   513  00FE3C  61                 	db	97	;'a'
   514  00FE3D  63                 	db	99	;'c'
   515  00FE3E  6B                 	db	107	;'k'
   516  00FE3F  73                 	db	115	;'s'
   517  00FE40  70                 	db	112	;'p'
   518  00FE41  61                 	db	97	;'a'
   519  00FE42  63                 	db	99	;'c'
   520  00FE43  65                 	db	101	;'e'
   521  00FE44  20                 	db	32
   522  00FE45  08                 	db	8
   523  00FE46  63                 	db	99	;'c'
   524  00FE47  68                 	db	104	;'h'
   525  00FE48  61                 	db	97	;'a'
   526  00FE49  72                 	db	114	;'r'
   527  00FE4A  61                 	db	97	;'a'
   528  00FE4B  63                 	db	99	;'c'
   529  00FE4C  74                 	db	116	;'t'
   530  00FE4D  65                 	db	101	;'e'
   531  00FE4E  72                 	db	114	;'r'
   532  00FE4F  2E                 	db	46
   533  00FE50  0D                 	db	13
   534  00FE51  0A                 	db	10
   535  00FE52  00                 	db	0
   536  00FE53                     STR_40:
   537  00FE53  4C                 	db	76	;'L'
   538  00FE54  69                 	db	105	;'i'
   539  00FE55  6E                 	db	110	;'n'
   540  00FE56  65                 	db	101	;'e'
   541  00FE57  20                 	db	32
   542  00FE58  77                 	db	119	;'w'
   543  00FE59  69                 	db	105	;'i'
   544  00FE5A  74                 	db	116	;'t'
   545  00FE5B  68                 	db	104	;'h'
   546  00FE5C  20                 	db	32
   547  00FE5D  6A                 	db	106	;'j'
   548  00FE5E  75                 	db	117	;'u'
   549  00FE5F  73                 	db	115	;'s'
   550  00FE60  74                 	db	116	;'t'
   551  00FE61  20                 	db	32
   552  00FE62  61                 	db	97	;'a'
   553  00FE63  20                 	db	32
   554  00FE64  63                 	db	99	;'c'
   555  00FE65  61                 	db	97	;'a'
   556  00FE66  72                 	db	114	;'r'
   557  00FE67  72                 	db	114	;'r'
   558  00FE68  69                 	db	105	;'i'
   559  00FE69  61                 	db	97	;'a'
   560  00FE6A  67                 	db	103	;'g'
   561  00FE6B  65                 	db	101	;'e'
   562  00FE6C  20                 	db	32
   563  00FE6D  72                 	db	114	;'r'
   564  00FE6E  65                 	db	101	;'e'
   565  00FE6F  74                 	db	116	;'t'
   566  00FE70  75                 	db	117	;'u'
   567  00FE71  72                 	db	114	;'r'
   568  00FE72  6E                 	db	110	;'n'
   569  00FE73  0D                 	db	13
   570  00FE74  00                 	db	0
   571  00FE75                     STR_6:
   572  00FE75  2D                 	db	45
   573  00FE76  2D                 	db	45
   574  00FE77  2D                 	db	45
   575  00FE78  2D                 	db	45
   576  00FE79  2D                 	db	45
   577  00FE7A  2D                 	db	45
   578  00FE7B  2D                 	db	45
   579  00FE7C  2D                 	db	45
   580  00FE7D  2D                 	db	45
   581  00FE7E  2D                 	db	45
   582  00FE7F  2D                 	db	45
   583  00FE80  2D                 	db	45
   584  00FE81  2D                 	db	45
   585  00FE82  2D                 	db	45
   586  00FE83  2D                 	db	45
   587  00FE84  2D                 	db	45
   588  00FE85  2D                 	db	45
   589  00FE86  2D                 	db	45
   590  00FE87  2D                 	db	45
   591  00FE88  2D                 	db	45
   592  00FE89  2D                 	db	45
   593  00FE8A  2D                 	db	45
   594  00FE8B  2D                 	db	45
   595  00FE8C  2D                 	db	45
   596  00FE8D  2D                 	db	45
   597  00FE8E  2D                 	db	45
   598  00FE8F  2D                 	db	45
   599  00FE90  2D                 	db	45
   600  00FE91  2D                 	db	45
   601  00FE92  2D                 	db	45
   602  00FE93  0D                 	db	13
   603  00FE94  0A                 	db	10
   604  00FE95  00                 	db	0
   605  00FE96                     STR_39:
   606  00FE96  4C                 	db	76	;'L'
   607  00FE97  69                 	db	105	;'i'
   608  00FE98  6E                 	db	110	;'n'
   609  00FE99  65                 	db	101	;'e'
   610  00FE9A  20                 	db	32
   611  00FE9B  77                 	db	119	;'w'
   612  00FE9C  69                 	db	105	;'i'
   613  00FE9D  74                 	db	116	;'t'
   614  00FE9E  68                 	db	104	;'h'
   615  00FE9F  20                 	db	32
   616  00FEA0  6A                 	db	106	;'j'
   617  00FEA1  75                 	db	117	;'u'
   618  00FEA2  73                 	db	115	;'s'
   619  00FEA3  74                 	db	116	;'t'
   620  00FEA4  20                 	db	32
   621  00FEA5  61                 	db	97	;'a'
   622  00FEA6  20                 	db	32
   623  00FEA7  6E                 	db	110	;'n'
   624  00FEA8  65                 	db	101	;'e'
   625  00FEA9  77                 	db	119	;'w'
   626  00FEAA  20                 	db	32
   627  00FEAB  6C                 	db	108	;'l'
   628  00FEAC  69                 	db	105	;'i'
   629  00FEAD  6E                 	db	110	;'n'
   630  00FEAE  65                 	db	101	;'e'
   631  00FEAF  20                 	db	32
   632  00FEB0  0A                 	db	10
   633  00FEB1  00                 	db	0
   634  00FEB2                     STR_16:
   635  00FEB2  54                 	db	84	;'T'
   636  00FEB3  3A                 	db	58	;':'
   637  00FEB4  20                 	db	32
   638  00FEB5  44                 	db	68	;'D'
   639  00FEB6  69                 	db	105	;'i'
   640  00FEB7  73                 	db	115	;'s'
   641  00FEB8  70                 	db	112	;'p'
   642  00FEB9  6C                 	db	108	;'l'
   643  00FEBA  61                 	db	97	;'a'
   644  00FEBB  79                 	db	121	;'y'
   645  00FEBC  20                 	db	32
   646  00FEBD  63                 	db	99	;'c'
   647  00FEBE  75                 	db	117	;'u'
   648  00FEBF  72                 	db	114	;'r'
   649  00FEC0  72                 	db	114	;'r'
   650  00FEC1  65                 	db	101	;'e'
   651  00FEC2  6E                 	db	110	;'n'
   652  00FEC3  74                 	db	116	;'t'
   653  00FEC4  20                 	db	32
   654  00FEC5  54                 	db	84	;'T'
   655  00FEC6  4D                 	db	77	;'M'
   656  00FEC7  52                 	db	82	;'R'
   657  00FEC8  30                 	db	48	;'0'
   658  00FEC9  0D                 	db	13
   659  00FECA  0A                 	db	10
   660  00FECB  00                 	db	0
   661  00FECC                     STR_15:
   662  00FECC  74                 	db	116	;'t'
   663  00FECD  3A                 	db	58	;':'
   664  00FECE  20                 	db	32
   665  00FECF  44                 	db	68	;'D'
   666  00FED0  69                 	db	105	;'i'
   667  00FED1  73                 	db	115	;'s'
   668  00FED2  70                 	db	112	;'p'
   669  00FED3  6C                 	db	108	;'l'
   670  00FED4  61                 	db	97	;'a'
   671  00FED5  79                 	db	121	;'y'
   672  00FED6  20                 	db	32
   673  00FED7  63                 	db	99	;'c'
   674  00FED8  75                 	db	117	;'u'
   675  00FED9  72                 	db	114	;'r'
   676  00FEDA  72                 	db	114	;'r'
   677  00FEDB  65                 	db	101	;'e'
   678  00FEDC  6E                 	db	110	;'n'
   679  00FEDD  74                 	db	116	;'t'
   680  00FEDE  20                 	db	32
   681  00FEDF  54                 	db	84	;'T'
   682  00FEE0  4D                 	db	77	;'M'
   683  00FEE1  52                 	db	82	;'R'
   684  00FEE2  32                 	db	50	;'2'
   685  00FEE3  0D                 	db	13
   686  00FEE4  0A                 	db	10
   687  00FEE5  00                 	db	0
   688  00FEE6                     STR_10:
   689  00FEE6  7A                 	db	122	;'z'
   690  00FEE7  3A                 	db	58	;':'
   691  00FEE8  20                 	db	32
   692  00FEE9  43                 	db	67	;'C'
   693  00FEEA  6C                 	db	108	;'l'
   694  00FEEB  65                 	db	101	;'e'
   695  00FEEC  61                 	db	97	;'a'
   696  00FEED  72                 	db	114	;'r'
   697  00FEEE  20                 	db	32
   698  00FEEF  74                 	db	116	;'t'
   699  00FEF0  68                 	db	104	;'h'
   700  00FEF1  65                 	db	101	;'e'
   701  00FEF2  20                 	db	32
   702  00FEF3  74                 	db	116	;'t'
   703  00FEF4  65                 	db	101	;'e'
   704  00FEF5  72                 	db	114	;'r'
   705  00FEF6  6D                 	db	109	;'m'
   706  00FEF7  69                 	db	105	;'i'
   707  00FEF8  6E                 	db	110	;'n'
   708  00FEF9  61                 	db	97	;'a'
   709  00FEFA  6C                 	db	108	;'l'
   710  00FEFB  0D                 	db	13
   711  00FEFC  0A                 	db	10
   712  00FEFD  00                 	db	0
   713  00FEFE                     STR_3:
   714  00FEFE  44                 	db	68	;'D'
   715  00FEFF  65                 	db	101	;'e'
   716  00FF00  76                 	db	118	;'v'
   717  00FF01  27                 	db	39
   718  00FF02  32                 	db	50	;'2'
   719  00FF03  31                 	db	49	;'1'
   720  00FF04  20                 	db	32
   721  00FF05  62                 	db	98	;'b'
   722  00FF06  6F                 	db	111	;'o'
   723  00FF07  61                 	db	97	;'a'
   724  00FF08  72                 	db	114	;'r'
   725  00FF09  64                 	db	100	;'d'
   726  00FF0A  20                 	db	32
   727  00FF0B  77                 	db	119	;'w'
   728  00FF0C  69                 	db	105	;'i'
   729  00FF0D  72                 	db	114	;'r'
   730  00FF0E  69                 	db	105	;'i'
   731  00FF0F  6E                 	db	110	;'n'
   732  00FF10  67                 	db	103	;'g'
   733  00FF11  0D                 	db	13
   734  00FF12  0A                 	db	10
   735  00FF13  00                 	db	0
   736  00FF14                     STR_9:
   737  00FF14  5A                 	db	90	;'Z'
   738  00FF15  3A                 	db	58	;':'
   739  00FF16  20                 	db	32
   740  00FF17  52                 	db	82	;'R'
   741  00FF18  65                 	db	101	;'e'
   742  00FF19  73                 	db	115	;'s'
   743  00FF1A  65                 	db	101	;'e'
   744  00FF1B  74                 	db	116	;'t'
   745  00FF1C  20                 	db	32
   746  00FF1D  70                 	db	112	;'p'
   747  00FF1E  72                 	db	114	;'r'
   748  00FF1F  6F                 	db	111	;'o'
   749  00FF20  63                 	db	99	;'c'
   750  00FF21  65                 	db	101	;'e'
   751  00FF22  73                 	db	115	;'s'
   752  00FF23  73                 	db	115	;'s'
   753  00FF24  6F                 	db	111	;'o'
   754  00FF25  72                 	db	114	;'r'
   755  00FF26  0D                 	db	13
   756  00FF27  0A                 	db	10
   757  00FF28  00                 	db	0
   758  00FF29                     STR_51:
   759  00FF29  55                 	db	85	;'U'
   760  00FF2A  6E                 	db	110	;'n'
   761  00FF2B  6B                 	db	107	;'k'
   762  00FF2C  6E                 	db	110	;'n'
   763  00FF2D  6F                 	db	111	;'o'
   764  00FF2E  77                 	db	119	;'w'
   765  00FF2F  6E                 	db	110	;'n'
   766  00FF30  20                 	db	32
   767  00FF31  6B                 	db	107	;'k'
   768  00FF32  65                 	db	101	;'e'
   769  00FF33  79                 	db	121	;'y'
   770  00FF34  20                 	db	32
   771  00FF35  25                 	db	37
   772  00FF36  63                 	db	99	;'c'
   773  00FF37  0D                 	db	13
   774  00FF38  0A                 	db	10
   775  00FF39  00                 	db	0
   776  00FF3A                     STR_4:
   777  00FF3A  52                 	db	82	;'R'
   778  00FF3B  43                 	db	67	;'C'
   779  00FF3C  32                 	db	50	;'2'
   780  00FF3D  20                 	db	32
   781  00FF3E  3C                 	db	60	;'<'
   782  00FF3F  2D                 	db	45
   783  00FF40  3E                 	db	62	;'>'
   784  00FF41  20                 	db	32
   785  00FF42  52                 	db	82	;'R'
   786  00FF43  65                 	db	101	;'e'
   787  00FF44  64                 	db	100	;'d'
   788  00FF45  20                 	db	32
   789  00FF46  4C                 	db	76	;'L'
   790  00FF47  45                 	db	69	;'E'
   791  00FF48  44                 	db	68	;'D'
   792  00FF49  00                 	db	0
   793  00FF4A                     STR_23:
   794  00FF4A  25                 	db	37
   795  00FF4B  25                 	db	37
   796  00FF4C  30                 	db	48	;'0'
   797  00FF4D  34                 	db	52	;'4'
   798  00FF4E  78                 	db	120	;'x'
   799  00FF4F  20                 	db	32
   800  00FF50  25                 	db	37
   801  00FF51  30                 	db	48	;'0'
   802  00FF52  34                 	db	52	;'4'
   803  00FF53  78                 	db	120	;'x'
   804  00FF54  0D                 	db	13
   805  00FF55  0A                 	db	10
   806  00FF56  0D                 	db	13
   807  00FF57  0A                 	db	10
   808  00FF58  00                 	db	0
   809  00FF59                     STR_7:
   810  00FF59  3F                 	db	63	;'?'
   811  00FF5A  3A                 	db	58	;':'
   812  00FF5B  20                 	db	32
   813  00FF5C  48                 	db	72	;'H'
   814  00FF5D  65                 	db	101	;'e'
   815  00FF5E  6C                 	db	108	;'l'
   816  00FF5F  70                 	db	112	;'p'
   817  00FF60  20                 	db	32
   818  00FF61  6D                 	db	109	;'m'
   819  00FF62  65                 	db	101	;'e'
   820  00FF63  6E                 	db	110	;'n'
   821  00FF64  75                 	db	117	;'u'
   822  00FF65  0D                 	db	13
   823  00FF66  0A                 	db	10
   824  00FF67  00                 	db	0
   825  00FF68                     STR_46:
   826  00FF68  54                 	db	84	;'T'
   827  00FF69  4D                 	db	77	;'M'
   828  00FF6A  52                 	db	82	;'R'
   829  00FF6B  30                 	db	48	;'0'
   830  00FF6C  20                 	db	32
   831  00FF6D  3D                 	db	61	;'='
   832  00FF6E  20                 	db	32
   833  00FF6F  25                 	db	37
   834  00FF70  30                 	db	48	;'0'
   835  00FF71  34                 	db	52	;'4'
   836  00FF72  58                 	db	88	;'X'
   837  00FF73  0D                 	db	13
   838  00FF74  0A                 	db	10
   839  00FF75  00                 	db	0
   840  00FF76                     STR_45:
   841  00FF76  54                 	db	84	;'T'
   842  00FF77  4D                 	db	77	;'M'
   843  00FF78  52                 	db	82	;'R'
   844  00FF79  32                 	db	50	;'2'
   845  00FF7A  20                 	db	32
   846  00FF7B  3D                 	db	61	;'='
   847  00FF7C  20                 	db	32
   848  00FF7D  25                 	db	37
   849  00FF7E  30                 	db	48	;'0'
   850  00FF7F  34                 	db	52	;'4'
   851  00FF80  58                 	db	88	;'X'
   852  00FF81  0D                 	db	13
   853  00FF82  0A                 	db	10
   854  00FF83  00                 	db	0
   855  00FF84                     STR_2:
   856  00FF84  43                 	db	67	;'C'
   857  00FF85  6F                 	db	111	;'o'
   858  00FF86  6C                 	db	108	;'l'
   859  00FF87  6F                 	db	111	;'o'
   860  00FF88  72                 	db	114	;'r'
   861  00FF89  20                 	db	32
   862  00FF8A  43                 	db	67	;'C'
   863  00FF8B  75                 	db	117	;'u'
   864  00FF8C  62                 	db	98	;'b'
   865  00FF8D  65                 	db	101	;'e'
   866  00FF8E  0D                 	db	13
   867  00FF8F  0A                 	db	10
   868  00FF90  00                 	db	0
   869  00FF91                     STR_1:
   870  00FF91  69                 	db	105	;'i'
   871  00FF92  6E                 	db	110	;'n'
   872  00FF93  4C                 	db	76	;'L'
   873  00FF94  61                 	db	97	;'a'
   874  00FF95  62                 	db	98	;'b'
   875  00FF96  20                 	db	32
   876  00FF97  30                 	db	48	;'0'
   877  00FF98  35                 	db	53	;'5'
   878  00FF99  0D                 	db	13
   879  00FF9A  0A                 	db	10
   880  00FF9B  00                 	db	0
   881  00FF9C                     STR_41:
   882  00FF9C  68                 	db	104	;'h'
   883  00FF9D  65                 	db	101	;'e'
   884  00FF9E  72                 	db	114	;'r'
   885  00FF9F  65                 	db	101	;'e'
   886  00FFA0  3F                 	db	63	;'?'
   887  00FFA1  3F                 	db	63	;'?'
   888  00FFA2  0D                 	db	13
   889  00FFA3  0A                 	db	10
   890  00FFA4  00                 	db	0
   891  00FFA5                     STR_19:
   892  00FFA5  25                 	db	37
   893  00FFA6  25                 	db	37
   894  00FFA7  63                 	db	99	;'c'
   895  00FFA8  20                 	db	32
   896  00FFA9  25                 	db	37
   897  00FFAA  63                 	db	99	;'c'
   898  00FFAB  0D                 	db	13
   899  00FFAC  0A                 	db	10
   900  00FFAD  00                 	db	0
   901  00FFAE                     STR_21:
   902  00FFAE  25                 	db	37
   903  00FFAF  25                 	db	37
   904  00FFB0  64                 	db	100	;'d'
   905  00FFB1  20                 	db	32
   906  00FFB2  25                 	db	37
   907  00FFB3  64                 	db	100	;'d'
   908  00FFB4  0D                 	db	13
   909  00FFB5  0A                 	db	10
   910  00FFB6  00                 	db	0
   911  00FFB7                     STR_20:
   912  00FFB7  25                 	db	37
   913  00FFB8  25                 	db	37
   914  00FFB9  75                 	db	117	;'u'
   915  00FFBA  20                 	db	32
   916  00FFBB  25                 	db	37
   917  00FFBC  75                 	db	117	;'u'
   918  00FFBD  0D                 	db	13
   919  00FFBE  0A                 	db	10
   920  00FFBF  00                 	db	0
   921  00FFC0                     STR_22:
   922  00FFC0  25                 	db	37
   923  00FFC1  25                 	db	37
   924  00FFC2  78                 	db	120	;'x'
   925  00FFC3  20                 	db	32
   926  00FFC4  25                 	db	37
   927  00FFC5  78                 	db	120	;'x'
   928  00FFC6  0D                 	db	13
   929  00FFC7  0A                 	db	10
   930  00FFC8  00                 	db	0
   931  00FFC9                     STR_35:
   932  00FFC9  25                 	db	37
   933  00FFCA  30                 	db	48	;'0'
   934  00FFCB  38                 	db	56	;'8'
   935  00FFCC  6C                 	db	108	;'l'
   936  00FFCD  78                 	db	120	;'x'
   937  00FFCE  0D                 	db	13
   938  00FFCF  0A                 	db	10
   939  00FFD0  00                 	db	0
   940  00FFD1                     STR_8:
   941  00FFD1  6F                 	db	111	;'o'
   942  00FFD2  3A                 	db	58	;':'
   943  00FFD3  20                 	db	32
   944  00FFD4  6B                 	db	107	;'k'
   945  00FFD5  0D                 	db	13
   946  00FFD6  0A                 	db	10
   947  00FFD7  00                 	db	0
   948  00FFD8                     STR_13:
   949  00FFD8  25                 	db	37
   950  00FFD9  30                 	db	48	;'0'
   951  00FFDA  34                 	db	52	;'4'
   952  00FFDB  78                 	db	120	;'x'
   953  00FFDC  0D                 	db	13
   954  00FFDD  0A                 	db	10
   955  00FFDE  00                 	db	0
   956  00FFDF                     STR_33:
   957  00FFDF  25                 	db	37
   958  00FFE0  30                 	db	48	;'0'
   959  00FFE1  34                 	db	52	;'4'
   960  00FFE2  78                 	db	120	;'x'
   961  00FFE3  3A                 	db	58	;':'
   962  00FFE4  00                 	db	0
   963  00FFE5                     STR_5:
   964  00FFE5  0D                 	db	13
   965  00FFE6  0A                 	db	10
   966  00FFE7  3E                 	db	62	;'>'
   967  00FFE8  20                 	db	32
   968  00FFE9  00                 	db	0
   969  00FFEA                     STR_12:
   970  00FFEA  30                 	db	48	;'0'
   971  00FFEB  78                 	db	120	;'x'
   972  00FFEC  25                 	db	37
   973  00FFED  58                 	db	88	;'X'
   974  00FFEE  00                 	db	0
   975  00FFEF                     STR_70:
   976  00FFEF  6C                 	db	108	;'l'
   977  00FFF0  58                 	db	88	;'X'
   978  00FFF1  00                 	db	0
   979  00FFF2                     STR_52:
   980  00FFF2  6C                 	db	108	;'l'
   981  00FFF3  64                 	db	100	;'d'
   982  00FFF4  00                 	db	0
   983  00FFF5                     STR_56:
   984  00FFF5  6C                 	db	108	;'l'
   985  00FFF6  69                 	db	105	;'i'
   986  00FFF7  00                 	db	0
   987  00FFF8                     STR_61:
   988  00FFF8  6C                 	db	108	;'l'
   989  00FFF9  75                 	db	117	;'u'
   990  00FFFA  00                 	db	0
   991  00FFFB                     STR_66:
   992  00FFFB  6C                 	db	108	;'l'
   993  00FFFC  78                 	db	120	;'x'
   994  00FFFD  00                 	db	0
   995  00FFFE  00                 	db	0	; dummy byte at the end
   996  0000                     
   997                           ; #config settings
   998                           
   999                           	psect	cinit
  1000  00D9B6                     __pcinit:
  1001                           	callstack 0
  1002  00D9B6                     start_initialization:
  1003                           	callstack 0
  1004  00D9B6                     __initialization:
  1005                           	callstack 0
  1006                           
  1007                           ; Clear objects allocated to BANK0 (48 bytes)
  1008  00D9B6  EE00  F092         	lfsr	0,__pbssBANK0
  1009  00D9BA  0E30               	movlw	48
  1010  00D9BC                     clear_0:
  1011  00D9BC  6AEE               	clrf	postinc0,c
  1012  00D9BE  06E8               	decf	wreg,f,c
  1013  00D9C0  E1FD               	bnz	clear_0
  1014                           
  1015                           ; Clear objects allocated to COMRAM (1 bytes)
  1016  00D9C2  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1017  00D9C4                     end_of_initialization:
  1018                           	callstack 0
  1019  00D9C4                     __end_of__initialization:
  1020                           	callstack 0
  1021  00D9C4  0100               	movlb	0
  1022  00D9C6  EF6F  F077         	goto	_main	;jump to C main() function
  1023                           
  1024                           	psect	bssCOMRAM
  1025  00005F                     __pbssCOMRAM:
  1026                           	callstack 0
  1027  00005F                     _eusart1RxLastError:
  1028                           	callstack 0
  1029  00005F                     	ds	1
  1030                           
  1031                           	psect	bssBANK0
  1032  000092                     __pbssBANK0:
  1033                           	callstack 0
  1034  000092                     _nout:
  1035                           	callstack 0
  1036  000092                     	ds	2
  1037  000094                     _width:
  1038                           	callstack 0
  1039  000094                     	ds	2
  1040  000096                     _prec:
  1041                           	callstack 0
  1042  000096                     	ds	2
  1043  000098                     _flags:
  1044                           	callstack 0
  1045  000098                     	ds	2
  1046  00009A                     _EUSART1_ErrorHandler:
  1047                           	callstack 0
  1048  00009A                     	ds	2
  1049  00009C                     _EUSART1_OverrunErrorHandler:
  1050                           	callstack 0
  1051  00009C                     	ds	2
  1052  00009E                     _EUSART1_FramingErrorHandler:
  1053                           	callstack 0
  1054  00009E                     	ds	2
  1055  0000A0                     _timer0ReloadVal:
  1056                           	callstack 0
  1057  0000A0                     	ds	2
  1058  0000A2                     _dbuf:
  1059                           	callstack 0
  1060  0000A2                     	ds	32
  1061                           
  1062                           	psect	cstackBANK0
  1063  000060                     __pcstackBANK0:
  1064                           	callstack 0
  1065  000060                     vfpfcnvrt@done:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x0
  1069  000060                     	ds	2
  1070  000062                     _vfpfcnvrt$1286:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x2
  1074  000062                     	ds	2
  1075  000064                     vfpfcnvrt@ll:
  1076                           	callstack 0
  1077                           
  1078                           ; 8 bytes @ 0x4
  1079  000064                     	ds	8
  1080  00006C                     vfpfcnvrt@c:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xC
  1084  00006C                     	ds	1
  1085  00006D                     vfpfcnvrt@llu:
  1086                           	callstack 0
  1087                           
  1088                           ; 8 bytes @ 0xD
  1089  00006D                     	ds	8
  1090  000075                     vfprintf@cfmt:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x15
  1094  000075                     	ds	2
  1095  000077                     ?_printf:
  1096                           	callstack 0
  1097  000077                     printf@fmt:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x17
  1101  000077                     	ds	8
  1102  00007F                     printf@ap:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x1F
  1106  00007F                     	ds	2
  1107  000081                     ??_main:
  1108                           
  1109                           ; 1 bytes @ 0x21
  1110  000081                     	ds	6
  1111  000087                     main@cmd:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x27
  1115  000087                     	ds	1
  1116  000088                     main@var16:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x28
  1120  000088                     	ds	2
  1121  00008A                     main@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x2A
  1125  00008A                     	ds	1
  1126  00008B                     main@var8:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x2B
  1130  00008B                     	ds	1
  1131  00008C                     main@duty:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x2C
  1135  00008C                     	ds	2
  1136  00008E                     main@var32_667:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x2E
  1140  00008E                     	ds	4
  1141                           
  1142                           	psect	cstackCOMRAM
  1143  000001                     __pcstackCOMRAM:
  1144                           	callstack 0
  1145  000001                     ??_TMR0_Initialize:
  1146  000001                     ?_strlen:
  1147                           	callstack 0
  1148  000001                     ?_isupper:
  1149                           	callstack 0
  1150  000001                     ?_isalpha:
  1151                           	callstack 0
  1152  000001                     ?_isdigit:
  1153                           	callstack 0
  1154  000001                     ?_strncmp:
  1155                           	callstack 0
  1156  000001                     ?_isspace:
  1157                           	callstack 0
  1158  000001                     ?_islower:
  1159                           	callstack 0
  1160  000001                     ?_TMR0_ReadTimer:
  1161                           	callstack 0
  1162  000001                     ?___wmul:
  1163                           	callstack 0
  1164  000001                     ?___aodiv:
  1165                           	callstack 0
  1166  000001                     ?___aomod:
  1167                           	callstack 0
  1168  000001                     ?___lodiv:
  1169                           	callstack 0
  1170  000001                     ?___lomod:
  1171                           	callstack 0
  1172  000001                     TMR2_ReadTimer@readVal:
  1173                           	callstack 0
  1174  000001                     EUSART1_Write@txData:
  1175                           	callstack 0
  1176  000001                     EPWM1_LoadDutyValue@dutyValue:
  1177                           	callstack 0
  1178  000001                     TMR0_WriteTimer@timerVal:
  1179                           	callstack 0
  1180  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1181                           	callstack 0
  1182  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1183                           	callstack 0
  1184  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1185                           	callstack 0
  1186  000001                     ___wmul@multiplier:
  1187                           	callstack 0
  1188  000001                     isalpha@c:
  1189                           	callstack 0
  1190  000001                     isdigit@c:
  1191                           	callstack 0
  1192  000001                     isspace@c:
  1193                           	callstack 0
  1194  000001                     isupper@c:
  1195                           	callstack 0
  1196  000001                     strlen@s:
  1197                           	callstack 0
  1198  000001                     strncmp@_l:
  1199                           	callstack 0
  1200  000001                     islower@c:
  1201                           	callstack 0
  1202  000001                     ___aodiv@dividend:
  1203                           	callstack 0
  1204  000001                     ___aomod@dividend:
  1205                           	callstack 0
  1206  000001                     ___lodiv@dividend:
  1207                           	callstack 0
  1208  000001                     ___lomod@dividend:
  1209                           	callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x0
  1212  000001                     	ds	1
  1213  000002                     putch@txData:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x1
  1217  000002                     	ds	1
  1218  000003                     ??_isupper:
  1219  000003                     ??_isalpha:
  1220  000003                     ??_isdigit:
  1221  000003                     ??_isspace:
  1222  000003                     ??_islower:
  1223  000003                     ??_EPWM1_LoadDutyValue:
  1224  000003                     ??_TMR0_ReadTimer:
  1225  000003                     ___wmul@multiplicand:
  1226                           	callstack 0
  1227  000003                     fputc@c:
  1228                           	callstack 0
  1229  000003                     strlen@a:
  1230                           	callstack 0
  1231  000003                     strncmp@_r:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x2
  1235  000003                     	ds	2
  1236  000005                     TMR0_ReadTimer@readVal:
  1237                           	callstack 0
  1238  000005                     ___wmul@product:
  1239                           	callstack 0
  1240  000005                     fputc@fp:
  1241                           	callstack 0
  1242  000005                     strncmp@n:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x4
  1246  000005                     	ds	2
  1247  000007                     ??_fputc:
  1248  000007                     ??_strncmp:
  1249  000007                     ?_toupper:
  1250                           	callstack 0
  1251  000007                     TMR0_ReadTimer@readValLow:
  1252                           	callstack 0
  1253  000007                     _isspace$1359:
  1254                           	callstack 0
  1255  000007                     toupper@c:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x6
  1259  000007                     	ds	1
  1260  000008                     ?_atoi:
  1261                           	callstack 0
  1262  000008                     TMR0_ReadTimer@readValHigh:
  1263                           	callstack 0
  1264  000008                     atoi@s:
  1265                           	callstack 0
  1266  000008                     strncmp@l:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x7
  1270  000008                     	ds	1
  1271  000009                     ??_toupper:
  1272  000009                     ___aodiv@divisor:
  1273                           	callstack 0
  1274  000009                     ___aomod@divisor:
  1275                           	callstack 0
  1276  000009                     ___lodiv@divisor:
  1277                           	callstack 0
  1278  000009                     ___lomod@divisor:
  1279                           	callstack 0
  1280                           
  1281                           ; 8 bytes @ 0x8
  1282  000009                     	ds	1
  1283  00000A                     ??_atoi:
  1284  00000A                     strncmp@r:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x9
  1288  00000A                     	ds	2
  1289  00000C                     fputs@s:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0xB
  1293  00000C                     	ds	1
  1294  00000D                     _toupper$1414:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0xC
  1298  00000D                     	ds	1
  1299  00000E                     atoi@neg:
  1300                           	callstack 0
  1301  00000E                     fputs@fp:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0xD
  1305  00000E                     	ds	2
  1306  000010                     fputs@c:
  1307                           	callstack 0
  1308  000010                     _atoi$1332:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0xF
  1312  000010                     	ds	1
  1313  000011                     ___aodiv@counter:
  1314                           	callstack 0
  1315  000011                     ___aomod@counter:
  1316                           	callstack 0
  1317  000011                     ___lomod@counter:
  1318                           	callstack 0
  1319  000011                     fputs@i:
  1320                           	callstack 0
  1321  000011                     ___lodiv@quotient:
  1322                           	callstack 0
  1323                           
  1324                           ; 8 bytes @ 0x10
  1325  000011                     	ds	1
  1326  000012                     ___aodiv@sign:
  1327                           	callstack 0
  1328  000012                     ___aomod@sign:
  1329                           	callstack 0
  1330  000012                     _atoi$1334:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x11
  1334  000012                     	ds	1
  1335  000013                     ?_abs:
  1336                           	callstack 0
  1337  000013                     ?_pad:
  1338                           	callstack 0
  1339  000013                     pad@fp:
  1340                           	callstack 0
  1341  000013                     abs@a:
  1342                           	callstack 0
  1343  000013                     ___aodiv@quotient:
  1344                           	callstack 0
  1345                           
  1346                           ; 8 bytes @ 0x12
  1347  000013                     	ds	1
  1348  000014                     _atoi$1333:
  1349                           	callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x13
  1352  000014                     	ds	1
  1353  000015                     ??_abs:
  1354  000015                     pad@buf:
  1355                           	callstack 0
  1356  000015                     atoi@n:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x14
  1360  000015                     	ds	2
  1361  000017                     pad@p:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x16
  1365  000017                     	ds	2
  1366  000019                     ??_pad:
  1367  000019                     ___lodiv@counter:
  1368                           	callstack 0
  1369                           
  1370                           ; 1 bytes @ 0x18
  1371  000019                     	ds	1
  1372  00001A                     pad@i:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x19
  1376  00001A                     	ds	2
  1377  00001C                     pad@w:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x1B
  1381  00001C                     	ds	2
  1382  00001E                     ?_ctoa:
  1383                           	callstack 0
  1384  00001E                     ?_dtoa:
  1385                           	callstack 0
  1386  00001E                     ?_utoa:
  1387                           	callstack 0
  1388  00001E                     ?_xtoa:
  1389                           	callstack 0
  1390  00001E                     ctoa@fp:
  1391                           	callstack 0
  1392  00001E                     dtoa@fp:
  1393                           	callstack 0
  1394  00001E                     utoa@fp:
  1395                           	callstack 0
  1396  00001E                     xtoa@fp:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x1D
  1400  00001E                     	ds	2
  1401  000020                     ctoa@c:
  1402                           	callstack 0
  1403  000020                     dtoa@d:
  1404                           	callstack 0
  1405  000020                     utoa@d:
  1406                           	callstack 0
  1407  000020                     xtoa@d:
  1408                           	callstack 0
  1409                           
  1410                           ; 8 bytes @ 0x1F
  1411  000020                     	ds	1
  1412  000021                     ctoa@w:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x20
  1416  000021                     	ds	7
  1417  000028                     ??_dtoa:
  1418  000028                     ??_utoa:
  1419  000028                     xtoa@x:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0x27
  1423  000028                     	ds	1
  1424  000029                     ??_xtoa:
  1425                           
  1426                           ; 1 bytes @ 0x28
  1427  000029                     	ds	7
  1428  000030                     _dtoa$1254:
  1429                           	callstack 0
  1430  000030                     utoa@p:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x2F
  1434  000030                     	ds	1
  1435  000031                     _xtoa$1271:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x30
  1439  000031                     	ds	1
  1440  000032                     dtoa@p:
  1441                           	callstack 0
  1442  000032                     utoa@w:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x31
  1446  000032                     	ds	1
  1447  000033                     _xtoa$1272:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x32
  1451  000033                     	ds	1
  1452  000034                     dtoa@w:
  1453                           	callstack 0
  1454  000034                     utoa@n:
  1455                           	callstack 0
  1456                           
  1457                           ; 8 bytes @ 0x33
  1458  000034                     	ds	1
  1459  000035                     xtoa@p:
  1460                           	callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x34
  1463  000035                     	ds	1
  1464  000036                     dtoa@s:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x35
  1468  000036                     	ds	1
  1469  000037                     xtoa@w:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x36
  1473  000037                     	ds	1
  1474  000038                     dtoa@n:
  1475                           	callstack 0
  1476                           
  1477                           ; 8 bytes @ 0x37
  1478  000038                     	ds	1
  1479  000039                     xtoa@n:
  1480                           	callstack 0
  1481                           
  1482                           ; 8 bytes @ 0x38
  1483  000039                     	ds	3
  1484  00003C                     utoa@i:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x3B
  1488  00003C                     	ds	4
  1489  000040                     dtoa@i:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x3F
  1493  000040                     	ds	1
  1494  000041                     xtoa@i:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x40
  1498  000041                     	ds	2
  1499  000043                     xtoa@c:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x42
  1503  000043                     	ds	2
  1504  000045                     ?_vfpfcnvrt:
  1505                           	callstack 0
  1506  000045                     vfpfcnvrt@fp:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x44
  1510  000045                     	ds	2
  1511  000047                     vfpfcnvrt@fmt:
  1512                           	callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x46
  1515  000047                     	ds	2
  1516  000049                     vfpfcnvrt@ap:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x48
  1520  000049                     	ds	2
  1521  00004B                     ??_vfpfcnvrt:
  1522                           
  1523                           ; 1 bytes @ 0x4A
  1524  00004B                     	ds	14
  1525  000059                     ?_vfprintf:
  1526                           	callstack 0
  1527  000059                     vfprintf@fp:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x58
  1531  000059                     	ds	2
  1532  00005B                     vfprintf@fmt:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x5A
  1536  00005B                     	ds	2
  1537  00005D                     vfprintf@ap:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x5C
  1541  00005D                     	ds	2
  1542  00005F                     
  1543                           ; 1 bytes @ 0x5E
  1544 ;;
  1545 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1546 ;;
  1547 ;; *************** function _main *****************
  1548 ;; Defined at:
  1549 ;;		line 31 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  var32           4   46[BANK0 ] unsigned long 
  1554 ;;  var32           4    0        unsigned long 
  1555 ;;  duty            2   44[BANK0 ] unsigned short 
  1556 ;;  var16           2   40[BANK0 ] unsigned short 
  1557 ;;  var8            1   43[BANK0 ] unsigned char 
  1558 ;;  i               1   42[BANK0 ] unsigned char 
  1559 ;;  cmd             1   39[BANK0 ] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;Total ram usage:       17 bytes
  1574 ;; Hardware stack levels required when called:    9
  1575 ;; This function calls:
  1576 ;;		_EPWM1_LoadDutyValue
  1577 ;;		_EUSART1_Read
  1578 ;;		_EUSART1_is_rx_ready
  1579 ;;		_SYSTEM_Initialize
  1580 ;;		_TMR0_HasOverflowOccured
  1581 ;;		_TMR0_ReadTimer
  1582 ;;		_TMR0_WriteTimer
  1583 ;;		_TMR2_ReadTimer
  1584 ;;		_printf
  1585 ;; This function is called by:
  1586 ;;		Startup code after reset
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text0
  1591  00EEDE                     __ptext0:
  1592                           	callstack 0
  1593  00EEDE                     _main:
  1594                           	callstack 22
  1595  00EEDE                     
  1596                           ;main.c: 33:         if ((EUSART1_is_rx_ready())) {
  1597  00EEDE  0EAB               	movlw	171
  1598  00EEE0  0100               	movlb	0	; () banked
  1599  00EEE2  6F8B               	movwf	main@var8& (0+255),b
  1600                           
  1601                           ;main.c: 34:             cmd = EUSART1_Read();
  1602  00EEE4  0EAB               	movlw	171
  1603  00EEE6  6F89               	movwf	(main@var16+1)& (0+255),b
  1604  00EEE8  0ECD               	movlw	205
  1605  00EEEA  6F88               	movwf	main@var16& (0+255),b
  1606                           
  1607                           ;main.c: 37:                     printf("------------------------------\r\n");
  1608  00EEEC  0E00               	movlw	0
  1609  00EEEE  6F8D               	movwf	(main@duty+1)& (0+255),b
  1610  00EEF0  0E7F               	movlw	127
  1611  00EEF2  6F8C               	movwf	main@duty& (0+255),b
  1612  00EEF4                     
  1613                           ; BSR set to: 0
  1614                           ;main.c: 38:                     printf("?: Help menu\r\n");;main.c: 39:                
      +                               printf("o: k\r\n");;main.c: 41:                     printf("z: Clear the terminal\r
      +                          \n");
  1615  00EEF4  ECF0  F06C         	call	_SYSTEM_Initialize	;wreg free
  1616  00EEF8                     
  1617                           ;main.c: 46:                     printf("%04x\r\n", var32 & 0xFFFF);
  1618  00EEF8  0E00               	movlw	0
  1619  00EEFA  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1620  00EEFC  0E00               	movlw	0
  1621  00EEFE  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  1622  00EF00  ECB5  F06C         	call	_TMR0_WriteTimer	;wreg free
  1623  00EF04                     
  1624                           ;main.c: 47:                     printf("e: print several escaped characters.\r\n");
  1625  00EF04  94F2               	bcf	242,2,c	;volatile
  1626  00EF06                     l2927:
  1627  00EF06  ECD1  F06C         	call	_TMR0_HasOverflowOccured	;wreg free
  1628  00EF0A  0900               	iorlw	0
  1629  00EF0C  B4D8               	btfsc	status,2,c
  1630  00EF0E  EF8B  F077         	goto	u2571
  1631  00EF12  EF8D  F077         	goto	u2570
  1632  00EF16                     u2571:
  1633  00EF16  EF83  F077         	goto	l2927
  1634  00EF1A                     u2570:
  1635  00EF1A                     
  1636                           ;main.c: 50:                     printf("p/P: decrease/increase PWM duty cycle\r\n");
  1637  00EF1A  0E91               	movlw	low STR_1
  1638  00EF1C  0100               	movlb	0	; () banked
  1639  00EF1E  6F77               	movwf	printf@fmt& (0+255),b
  1640  00EF20  0EFF               	movlw	high STR_1
  1641  00EF22  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1642  00EF24  EC65  F06D         	call	_printf	;wreg free
  1643                           
  1644                           ;main.c: 51:                     printf("------------------------------\r\n");
  1645  00EF28  0E84               	movlw	low STR_2
  1646  00EF2A  0100               	movlb	0	; () banked
  1647  00EF2C  6F77               	movwf	printf@fmt& (0+255),b
  1648  00EF2E  0EFF               	movlw	high STR_2
  1649  00EF30  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1650  00EF32  EC65  F06D         	call	_printf	;wreg free
  1651                           
  1652                           ;main.c: 52:                     break;
  1653  00EF36  0EFE               	movlw	low STR_3
  1654  00EF38  0100               	movlb	0	; () banked
  1655  00EF3A  6F77               	movwf	printf@fmt& (0+255),b
  1656  00EF3C  0EFE               	movlw	high STR_3
  1657  00EF3E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1658  00EF40  EC65  F06D         	call	_printf	;wreg free
  1659                           
  1660                           ;main.c: 53: 
  1661  00EF44  0E3A               	movlw	low STR_4
  1662  00EF46  0100               	movlb	0	; () banked
  1663  00EF48  6F77               	movwf	printf@fmt& (0+255),b
  1664  00EF4A  0EFF               	movlw	high STR_4
  1665  00EF4C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1666  00EF4E  EC65  F06D         	call	_printf	;wreg free
  1667                           
  1668                           ;main.c: 54: 
  1669  00EF52  0EE5               	movlw	low STR_5
  1670  00EF54  0100               	movlb	0	; () banked
  1671  00EF56  6F77               	movwf	printf@fmt& (0+255),b
  1672  00EF58  0EFF               	movlw	high STR_5
  1673  00EF5A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1674  00EF5C  EC65  F06D         	call	_printf	;wreg free
  1675  00EF60                     l2931:
  1676                           
  1677                           ;main.c: 58:                     printf("%%c %c\r\n", var8);
  1678  00EF60  ECC7  F06C         	call	_EUSART1_is_rx_ready	;wreg free
  1679  00EF64  0900               	iorlw	0
  1680  00EF66  B4D8               	btfsc	status,2,c
  1681  00EF68  EFB8  F077         	goto	u2581
  1682  00EF6C  EFBA  F077         	goto	u2580
  1683  00EF70                     u2581:
  1684  00EF70  EFB0  F077         	goto	l2931
  1685  00EF74                     u2580:
  1686  00EF74                     
  1687                           ;main.c: 59:                     printf("%%u %u\r\n", var8);
  1688  00EF74  EC3D  F06D         	call	_EUSART1_Read	;wreg free
  1689  00EF78  0100               	movlb	0	; () banked
  1690  00EF7A  6F87               	movwf	main@cmd& (0+255),b
  1691                           
  1692                           ;main.c: 60:                     printf("%%d %d\r\n", var8);
  1693  00EF7C  EFE5  F079         	goto	l3007
  1694  00EF80                     l2935:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;main.c: 62:                     printf("%%04x %04x\r\n\r\n", var8);
  1698  00EF80  0E75               	movlw	low STR_6
  1699  00EF82  6F77               	movwf	printf@fmt& (0+255),b
  1700  00EF84  0EFE               	movlw	high STR_6
  1701  00EF86  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1702  00EF88  EC65  F06D         	call	_printf	;wreg free
  1703                           
  1704                           ;main.c: 63: 
  1705  00EF8C  0E59               	movlw	low STR_7
  1706  00EF8E  0100               	movlb	0	; () banked
  1707  00EF90  6F77               	movwf	printf@fmt& (0+255),b
  1708  00EF92  0EFF               	movlw	high STR_7
  1709  00EF94  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1710  00EF96  EC65  F06D         	call	_printf	;wreg free
  1711                           
  1712                           ;main.c: 64:                     printf("%%c %c\r\n", var16);
  1713  00EF9A  0ED1               	movlw	low STR_8
  1714  00EF9C  0100               	movlb	0	; () banked
  1715  00EF9E  6F77               	movwf	printf@fmt& (0+255),b
  1716  00EFA0  0EFF               	movlw	high STR_8
  1717  00EFA2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1718  00EFA4  EC65  F06D         	call	_printf	;wreg free
  1719                           
  1720                           ;main.c: 65:                     printf("%%u %u\r\n", var16);
  1721  00EFA8  0E14               	movlw	low STR_9
  1722  00EFAA  0100               	movlb	0	; () banked
  1723  00EFAC  6F77               	movwf	printf@fmt& (0+255),b
  1724  00EFAE  0EFF               	movlw	high STR_9
  1725  00EFB0  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1726  00EFB2  EC65  F06D         	call	_printf	;wreg free
  1727                           
  1728                           ;main.c: 66:                     printf("%%d %d\r\n", var16);
  1729  00EFB6  0EE6               	movlw	low STR_10
  1730  00EFB8  0100               	movlb	0	; () banked
  1731  00EFBA  6F77               	movwf	printf@fmt& (0+255),b
  1732  00EFBC  0EFE               	movlw	high STR_10
  1733  00EFBE  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1734  00EFC0  EC65  F06D         	call	_printf	;wreg free
  1735                           
  1736                           ;main.c: 67:                     printf("%%x %x\r\n", var16);
  1737  00EFC4  0E1E               	movlw	low STR_11
  1738  00EFC6  0100               	movlb	0	; () banked
  1739  00EFC8  6F77               	movwf	printf@fmt& (0+255),b
  1740  00EFCA  0EFD               	movlw	high STR_11
  1741  00EFCC  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1742  00EFCE  EC65  F06D         	call	_printf	;wreg free
  1743  00EFD2                     
  1744                           ;main.c: 68:                     printf("%%04x %04x\r\n\r\n", var16);
  1745  00EFD2  0E23               	movlw	35
  1746  00EFD4  0100               	movlb	0	; () banked
  1747  00EFD6  6F8E               	movwf	main@var32_667& (0+255),b
  1748  00EFD8  0E01               	movlw	1
  1749  00EFDA  6F8F               	movwf	(main@var32_667+1)& (0+255),b
  1750  00EFDC  0ECD               	movlw	205
  1751  00EFDE  6F90               	movwf	(main@var32_667+2)& (0+255),b
  1752  00EFE0  0EAB               	movlw	171
  1753  00EFE2  6F91               	movwf	(main@var32_667+3)& (0+255),b
  1754  00EFE4                     
  1755                           ; BSR set to: 0
  1756                           ;main.c: 70:                     printf("%%c %c\r\n", var32);
  1757  00EFE4  0EEA               	movlw	low STR_12
  1758  00EFE6  6F77               	movwf	printf@fmt& (0+255),b
  1759  00EFE8  0EFF               	movlw	high STR_12
  1760  00EFEA  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1761  00EFEC  0ECD               	movlw	205
  1762  00EFEE  6F79               	movwf	(?_printf+2)& (0+255),b
  1763  00EFF0  0EAB               	movlw	171
  1764  00EFF2  6F7A               	movwf	(?_printf+3)& (0+255),b
  1765  00EFF4  0E00               	movlw	0
  1766  00EFF6  6F7B               	movwf	(?_printf+4)& (0+255),b
  1767  00EFF8  0E00               	movlw	0
  1768  00EFFA  6F7C               	movwf	(?_printf+5)& (0+255),b
  1769  00EFFC  EC65  F06D         	call	_printf	;wreg free
  1770  00F000                     
  1771                           ;main.c: 71:                     printf("%%u %u\r\n", var32);
  1772  00F000  0ED8               	movlw	low STR_13
  1773  00F002  0100               	movlb	0	; () banked
  1774  00F004  6F77               	movwf	printf@fmt& (0+255),b
  1775  00F006  0EFF               	movlw	high STR_13
  1776  00F008  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1777  00F00A  0E23               	movlw	35
  1778  00F00C  6F79               	movwf	(?_printf+2)& (0+255),b
  1779  00F00E  0E01               	movlw	1
  1780  00F010  6F7A               	movwf	(?_printf+3)& (0+255),b
  1781  00F012  0E00               	movlw	0
  1782  00F014  6F7B               	movwf	(?_printf+4)& (0+255),b
  1783  00F016  0E00               	movlw	0
  1784  00F018  6F7C               	movwf	(?_printf+5)& (0+255),b
  1785  00F01A  EC65  F06D         	call	_printf	;wreg free
  1786  00F01E                     
  1787                           ;main.c: 72:                     printf("%%d %d\r\n", var32);
  1788  00F01E  0E9A               	movlw	low STR_14
  1789  00F020  0100               	movlb	0	; () banked
  1790  00F022  6F77               	movwf	printf@fmt& (0+255),b
  1791  00F024  0EFD               	movlw	high STR_14
  1792  00F026  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1793  00F028  EC65  F06D         	call	_printf	;wreg free
  1794  00F02C                     
  1795                           ;main.c: 73:                     printf("%%x %x\r\n", var32);
  1796  00F02C  0ECC               	movlw	low STR_15
  1797  00F02E  0100               	movlb	0	; () banked
  1798  00F030  6F77               	movwf	printf@fmt& (0+255),b
  1799  00F032  0EFE               	movlw	high STR_15
  1800  00F034  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1801  00F036  EC65  F06D         	call	_printf	;wreg free
  1802  00F03A                     
  1803                           ;main.c: 74: 
  1804  00F03A  0EB2               	movlw	low STR_16
  1805  00F03C  0100               	movlb	0	; () banked
  1806  00F03E  6F77               	movwf	printf@fmt& (0+255),b
  1807  00F040  0EFE               	movlw	high STR_16
  1808  00F042  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1809  00F044  EC65  F06D         	call	_printf	;wreg free
  1810  00F048                     
  1811                           ;main.c: 75:                     printf("%04x:", var32 >> 16);
  1812  00F048  0E72               	movlw	low STR_17
  1813  00F04A  0100               	movlb	0	; () banked
  1814  00F04C  6F77               	movwf	printf@fmt& (0+255),b
  1815  00F04E  0EFD               	movlw	high STR_17
  1816  00F050  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1817  00F052  EC65  F06D         	call	_printf	;wreg free
  1818  00F056                     
  1819                           ;main.c: 76:                     printf("%04x\r\n", var32 & 0xFFFF);
  1820  00F056  0E75               	movlw	low STR_6
  1821  00F058  0100               	movlb	0	; () banked
  1822  00F05A  6F77               	movwf	printf@fmt& (0+255),b
  1823  00F05C  0EFE               	movlw	high STR_6
  1824  00F05E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1825  00F060  EC65  F06D         	call	_printf	;wreg free
  1826                           
  1827                           ;main.c: 77: 
  1828  00F064  EFB0  F077         	goto	l2931
  1829  00F068                     l2953:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 83: 
  1833  00F068  0EA5               	movlw	low STR_19
  1834  00F06A  6F77               	movwf	printf@fmt& (0+255),b
  1835  00F06C  0EFF               	movlw	high STR_19
  1836  00F06E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1837  00F070  C08B  F079         	movff	main@var8,?_printf+2
  1838  00F074  6B7A               	clrf	(?_printf+3)& (0+255),b
  1839  00F076  EC65  F06D         	call	_printf	;wreg free
  1840                           
  1841                           ;main.c: 84: 
  1842  00F07A  0EB7               	movlw	low STR_20
  1843  00F07C  0100               	movlb	0	; () banked
  1844  00F07E  6F77               	movwf	printf@fmt& (0+255),b
  1845  00F080  0EFF               	movlw	high STR_20
  1846  00F082  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1847  00F084  C08B  F079         	movff	main@var8,?_printf+2
  1848  00F088  6B7A               	clrf	(?_printf+3)& (0+255),b
  1849  00F08A  EC65  F06D         	call	_printf	;wreg free
  1850                           
  1851                           ;main.c: 85:                 case 'e':
  1852  00F08E  0EAE               	movlw	low STR_21
  1853  00F090  0100               	movlb	0	; () banked
  1854  00F092  6F77               	movwf	printf@fmt& (0+255),b
  1855  00F094  0EFF               	movlw	high STR_21
  1856  00F096  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1857  00F098  C08B  F079         	movff	main@var8,?_printf+2
  1858  00F09C  6B7A               	clrf	(?_printf+3)& (0+255),b
  1859  00F09E  EC65  F06D         	call	_printf	;wreg free
  1860                           
  1861                           ;main.c: 86:                     printf("This is how you print a quote \"  \r\n");
  1862  00F0A2  0EC0               	movlw	low STR_22
  1863  00F0A4  0100               	movlb	0	; () banked
  1864  00F0A6  6F77               	movwf	printf@fmt& (0+255),b
  1865  00F0A8  0EFF               	movlw	high STR_22
  1866  00F0AA  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1867  00F0AC  C08B  F079         	movff	main@var8,?_printf+2
  1868  00F0B0  6B7A               	clrf	(?_printf+3)& (0+255),b
  1869  00F0B2  EC65  F06D         	call	_printf	;wreg free
  1870                           
  1871                           ;main.c: 87:                     printf("This is how you print a percent %% \r\n");
  1872  00F0B6  0E4A               	movlw	low STR_23
  1873  00F0B8  0100               	movlb	0	; () banked
  1874  00F0BA  6F77               	movwf	printf@fmt& (0+255),b
  1875  00F0BC  0EFF               	movlw	high STR_23
  1876  00F0BE  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1877  00F0C0  C08B  F079         	movff	main@var8,?_printf+2
  1878  00F0C4  6B7A               	clrf	(?_printf+3)& (0+255),b
  1879  00F0C6  EC65  F06D         	call	_printf	;wreg free
  1880                           
  1881                           ;main.c: 89:                     printf("Line with just a new line \n");
  1882  00F0CA  0EA5               	movlw	low STR_19
  1883  00F0CC  0100               	movlb	0	; () banked
  1884  00F0CE  6F77               	movwf	printf@fmt& (0+255),b
  1885  00F0D0  0EFF               	movlw	high STR_19
  1886  00F0D2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1887  00F0D4  C088  F079         	movff	main@var16,?_printf+2
  1888  00F0D8  C089  F07A         	movff	main@var16+1,?_printf+3
  1889  00F0DC  EC65  F06D         	call	_printf	;wreg free
  1890                           
  1891                           ;main.c: 90:                     printf("Line with just a carriage return\r");
  1892  00F0E0  0EB7               	movlw	low STR_20
  1893  00F0E2  0100               	movlb	0	; () banked
  1894  00F0E4  6F77               	movwf	printf@fmt& (0+255),b
  1895  00F0E6  0EFF               	movlw	high STR_20
  1896  00F0E8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1897  00F0EA  C088  F079         	movff	main@var16,?_printf+2
  1898  00F0EE  C089  F07A         	movff	main@var16+1,?_printf+3
  1899  00F0F2  EC65  F06D         	call	_printf	;wreg free
  1900                           
  1901                           ;main.c: 91:                     printf("here??\r\n");
  1902  00F0F6  0EAE               	movlw	low STR_21
  1903  00F0F8  0100               	movlb	0	; () banked
  1904  00F0FA  6F77               	movwf	printf@fmt& (0+255),b
  1905  00F0FC  0EFF               	movlw	high STR_21
  1906  00F0FE  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1907  00F100  C088  F079         	movff	main@var16,?_printf+2
  1908  00F104  C089  F07A         	movff	main@var16+1,?_printf+3
  1909  00F108  EC65  F06D         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 92:                     printf("This is a horizontal tab \t in line.\r\n");
  1912  00F10C  0EC0               	movlw	low STR_22
  1913  00F10E  0100               	movlb	0	; () banked
  1914  00F110  6F77               	movwf	printf@fmt& (0+255),b
  1915  00F112  0EFF               	movlw	high STR_22
  1916  00F114  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1917  00F116  C088  F079         	movff	main@var16,?_printf+2
  1918  00F11A  C089  F07A         	movff	main@var16+1,?_printf+3
  1919  00F11E  EC65  F06D         	call	_printf	;wreg free
  1920                           
  1921                           ;main.c: 93:                     printf("This is a backspace \bcharacter.\r\n");
  1922  00F122  0E4A               	movlw	low STR_23
  1923  00F124  0100               	movlb	0	; () banked
  1924  00F126  6F77               	movwf	printf@fmt& (0+255),b
  1925  00F128  0EFF               	movlw	high STR_23
  1926  00F12A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1927  00F12C  C088  F079         	movff	main@var16,?_printf+2
  1928  00F130  C089  F07A         	movff	main@var16+1,?_printf+3
  1929  00F134  EC65  F06D         	call	_printf	;wreg free
  1930                           
  1931                           ;main.c: 95: 
  1932  00F138  0EA5               	movlw	low STR_19
  1933  00F13A  0100               	movlb	0	; () banked
  1934  00F13C  6F77               	movwf	printf@fmt& (0+255),b
  1935  00F13E  0EFF               	movlw	high STR_19
  1936  00F140  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1937  00F142  C08E  F079         	movff	main@var32_667,?_printf+2
  1938  00F146  C08F  F07A         	movff	main@var32_667+1,?_printf+3
  1939  00F14A  C090  F07B         	movff	main@var32_667+2,?_printf+4
  1940  00F14E  C091  F07C         	movff	main@var32_667+3,?_printf+5
  1941  00F152  EC65  F06D         	call	_printf	;wreg free
  1942                           
  1943                           ;main.c: 96: 
  1944  00F156  0EB7               	movlw	low STR_20
  1945  00F158  0100               	movlb	0	; () banked
  1946  00F15A  6F77               	movwf	printf@fmt& (0+255),b
  1947  00F15C  0EFF               	movlw	high STR_20
  1948  00F15E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1949  00F160  C08E  F079         	movff	main@var32_667,?_printf+2
  1950  00F164  C08F  F07A         	movff	main@var32_667+1,?_printf+3
  1951  00F168  C090  F07B         	movff	main@var32_667+2,?_printf+4
  1952  00F16C  C091  F07C         	movff	main@var32_667+3,?_printf+5
  1953  00F170  EC65  F06D         	call	_printf	;wreg free
  1954                           
  1955                           ;main.c: 97: 
  1956  00F174  0EAE               	movlw	low STR_21
  1957  00F176  0100               	movlb	0	; () banked
  1958  00F178  6F77               	movwf	printf@fmt& (0+255),b
  1959  00F17A  0EFF               	movlw	high STR_21
  1960  00F17C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1961  00F17E  C08E  F079         	movff	main@var32_667,?_printf+2
  1962  00F182  C08F  F07A         	movff	main@var32_667+1,?_printf+3
  1963  00F186  C090  F07B         	movff	main@var32_667+2,?_printf+4
  1964  00F18A  C091  F07C         	movff	main@var32_667+3,?_printf+5
  1965  00F18E  EC65  F06D         	call	_printf	;wreg free
  1966                           
  1967                           ;main.c: 98: 
  1968  00F192  0EC0               	movlw	low STR_22
  1969  00F194  0100               	movlb	0	; () banked
  1970  00F196  6F77               	movwf	printf@fmt& (0+255),b
  1971  00F198  0EFF               	movlw	high STR_22
  1972  00F19A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1973  00F19C  C08E  F079         	movff	main@var32_667,?_printf+2
  1974  00F1A0  C08F  F07A         	movff	main@var32_667+1,?_printf+3
  1975  00F1A4  C090  F07B         	movff	main@var32_667+2,?_printf+4
  1976  00F1A8  C091  F07C         	movff	main@var32_667+3,?_printf+5
  1977  00F1AC  EC65  F06D         	call	_printf	;wreg free
  1978                           
  1979                           ;main.c: 100:                     printf(" k\r\n");
  1980  00F1B0  0EDF               	movlw	low STR_33
  1981  00F1B2  0100               	movlb	0	; () banked
  1982  00F1B4  6F77               	movwf	printf@fmt& (0+255),b
  1983  00F1B6  0EFF               	movlw	high STR_33
  1984  00F1B8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1985  00F1BA  C090  F079         	movff	main@var32_667+2,?_printf+2
  1986  00F1BE  C091  F07A         	movff	main@var32_667+3,?_printf+3
  1987  00F1C2  6B7B               	clrf	(?_printf+4)& (0+255),b
  1988  00F1C4  6B7C               	clrf	(?_printf+5)& (0+255),b
  1989  00F1C6  EC65  F06D         	call	_printf	;wreg free
  1990                           
  1991                           ;main.c: 101:                     break;
  1992  00F1CA  0ED8               	movlw	low STR_13
  1993  00F1CC  0100               	movlb	0	; () banked
  1994  00F1CE  6F77               	movwf	printf@fmt& (0+255),b
  1995  00F1D0  0EFF               	movlw	high STR_13
  1996  00F1D2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  1997  00F1D4  0EFF               	movlw	255
  1998  00F1D6  158E               	andwf	main@var32_667& (0+255),w,b
  1999  00F1D8  6F79               	movwf	(?_printf+2)& (0+255),b
  2000  00F1DA  0EFF               	movlw	255
  2001  00F1DC  158F               	andwf	(main@var32_667+1)& (0+255),w,b
  2002  00F1DE  6F7A               	movwf	(?_printf+3)& (0+255),b
  2003  00F1E0  0E00               	movlw	0
  2004  00F1E2  1590               	andwf	(main@var32_667+2)& (0+255),w,b
  2005  00F1E4  6F7B               	movwf	(?_printf+4)& (0+255),b
  2006  00F1E6  0E00               	movlw	0
  2007  00F1E8  1591               	andwf	(main@var32_667+3)& (0+255),w,b
  2008  00F1EA  6F7C               	movwf	(?_printf+5)& (0+255),b
  2009  00F1EC  EC65  F06D         	call	_printf	;wreg free
  2010                           
  2011                           ;main.c: 103: 
  2012  00F1F0  0EC9               	movlw	low STR_35
  2013  00F1F2  0100               	movlb	0	; () banked
  2014  00F1F4  6F77               	movwf	printf@fmt& (0+255),b
  2015  00F1F6  0EFF               	movlw	high STR_35
  2016  00F1F8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2017  00F1FA  C08E  F079         	movff	main@var32_667,?_printf+2
  2018  00F1FE  C08F  F07A         	movff	main@var32_667+1,?_printf+3
  2019  00F202  C090  F07B         	movff	main@var32_667+2,?_printf+4
  2020  00F206  C091  F07C         	movff	main@var32_667+3,?_printf+5
  2021  00F20A  EC65  F06D         	call	_printf	;wreg free
  2022                           
  2023                           ;main.c: 104: 
  2024  00F20E  EFB0  F077         	goto	l2931
  2025  00F212                     l2955:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;main.c: 111: 
  2029  00F212  0E0D               	movlw	low STR_36
  2030  00F214  6F77               	movwf	printf@fmt& (0+255),b
  2031  00F216  0EFE               	movlw	high STR_36
  2032  00F218  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2033  00F21A  EC65  F06D         	call	_printf	;wreg free
  2034                           
  2035                           ;main.c: 112: 
  2036  00F21E  0EC1               	movlw	low STR_37
  2037  00F220  0100               	movlb	0	; () banked
  2038  00F222  6F77               	movwf	printf@fmt& (0+255),b
  2039  00F224  0EFD               	movlw	high STR_37
  2040  00F226  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2041  00F228  EC65  F06D         	call	_printf	;wreg free
  2042                           
  2043                           ;main.c: 113:                 case 'T':
  2044  00F22C  0E4A               	movlw	low STR_38
  2045  00F22E  0100               	movlb	0	; () banked
  2046  00F230  6F77               	movwf	printf@fmt& (0+255),b
  2047  00F232  0EFD               	movlw	high STR_38
  2048  00F234  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2049  00F236  EC65  F06D         	call	_printf	;wreg free
  2050                           
  2051                           ;main.c: 114:                     printf("TMR0 = %04X\r\n", TMR0_ReadTimer());
  2052  00F23A  0E96               	movlw	low STR_39
  2053  00F23C  0100               	movlb	0	; () banked
  2054  00F23E  6F77               	movwf	printf@fmt& (0+255),b
  2055  00F240  0EFE               	movlw	high STR_39
  2056  00F242  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2057  00F244  EC65  F06D         	call	_printf	;wreg free
  2058                           
  2059                           ;main.c: 115:                     break;
  2060  00F248  0E53               	movlw	low STR_40
  2061  00F24A  0100               	movlb	0	; () banked
  2062  00F24C  6F77               	movwf	printf@fmt& (0+255),b
  2063  00F24E  0EFE               	movlw	high STR_40
  2064  00F250  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2065  00F252  EC65  F06D         	call	_printf	;wreg free
  2066                           
  2067                           ;main.c: 116: 
  2068  00F256  0E9C               	movlw	low STR_41
  2069  00F258  0100               	movlb	0	; () banked
  2070  00F25A  6F77               	movwf	printf@fmt& (0+255),b
  2071  00F25C  0EFF               	movlw	high STR_41
  2072  00F25E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2073  00F260  EC65  F06D         	call	_printf	;wreg free
  2074                           
  2075                           ;main.c: 117: 
  2076  00F264  0EE7               	movlw	low STR_42
  2077  00F266  0100               	movlb	0	; () banked
  2078  00F268  6F77               	movwf	printf@fmt& (0+255),b
  2079  00F26A  0EFD               	movlw	high STR_42
  2080  00F26C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2081  00F26E  EC65  F06D         	call	_printf	;wreg free
  2082                           
  2083                           ;main.c: 118: 
  2084  00F272  0E31               	movlw	low STR_43
  2085  00F274  0100               	movlb	0	; () banked
  2086  00F276  6F77               	movwf	printf@fmt& (0+255),b
  2087  00F278  0EFE               	movlw	high STR_43
  2088  00F27A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2089  00F27C  EC65  F06D         	call	_printf	;wreg free
  2090                           
  2091                           ;main.c: 119: 
  2092  00F280  EFB0  F077         	goto	l2931
  2093  00F284                     l2957:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;main.c: 125: 
  2097  00F284  0ED3               	movlw	low (STR_8+2)
  2098  00F286  6F77               	movwf	printf@fmt& (0+255),b
  2099  00F288  0EFF               	movlw	high (STR_8+2)
  2100  00F28A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2101  00F28C  EC65  F06D         	call	_printf	;wreg free
  2102                           
  2103                           ;main.c: 126: 
  2104  00F290  EFB0  F077         	goto	l2931
  2105  00F294                     l2959:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 132:                     printf("The duty cycle is %d TMR2 counts high in a per
      +                          iod of %d TMR2 counts.\r\n", duty, 0xFF);
  2109  00F294  0E76               	movlw	low STR_45
  2110  00F296  6F77               	movwf	printf@fmt& (0+255),b
  2111  00F298  0EFF               	movlw	high STR_45
  2112  00F29A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2113  00F29C  ECA2  F06C         	call	_TMR2_ReadTimer	;wreg free
  2114  00F2A0  0100               	movlb	0	; () banked
  2115  00F2A2  6F81               	movwf	??_main& (0+255),b
  2116  00F2A4  5181               	movf	??_main& (0+255),w,b
  2117  00F2A6  6F79               	movwf	(?_printf+2)& (0+255),b
  2118  00F2A8  6B7A               	clrf	(?_printf+3)& (0+255),b
  2119  00F2AA  EC65  F06D         	call	_printf	;wreg free
  2120                           
  2121                           ;main.c: 133:                     break;
  2122  00F2AE  EFB0  F077         	goto	l2931
  2123  00F2B2                     l2961:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 139:                     for (i = 0; i < 40; i++) printf("\n");
  2127  00F2B2  0E68               	movlw	low STR_46
  2128  00F2B4  6F77               	movwf	printf@fmt& (0+255),b
  2129  00F2B6  0EFF               	movlw	high STR_46
  2130  00F2B8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2131  00F2BA  EC0B  F06D         	call	_TMR0_ReadTimer	;wreg free
  2132  00F2BE  C001  F079         	movff	?_TMR0_ReadTimer,?_printf+2
  2133  00F2C2  C002  F07A         	movff	?_TMR0_ReadTimer+1,?_printf+3
  2134  00F2C6  EC65  F06D         	call	_printf	;wreg free
  2135                           
  2136                           ;main.c: 140:                     __asm("reset");
  2137  00F2CA  EFB0  F077         	goto	l2931
  2138  00F2CE                     l2963:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;main.c: 146:                 case 'z':
  2142  00F2CE  518D               	movf	(main@duty+1)& (0+255),w,b
  2143  00F2D0  E109               	bnz	u2590
  2144  00F2D2  0E10               	movlw	16
  2145  00F2D4  5D8C               	subwf	main@duty& (0+255),w,b
  2146  00F2D6  A0D8               	btfss	status,0,c
  2147  00F2D8  EF70  F079         	goto	u2591
  2148  00F2DC  EF72  F079         	goto	u2590
  2149  00F2E0                     u2591:
  2150  00F2E0  EF76  F079         	goto	l2967
  2151  00F2E4                     u2590:
  2152  00F2E4                     
  2153                           ; BSR set to: 0
  2154  00F2E4  0E10               	movlw	16
  2155  00F2E6  5F8C               	subwf	main@duty& (0+255),f,b
  2156  00F2E8  0E00               	movlw	0
  2157  00F2EA  5B8D               	subwfb	(main@duty+1)& (0+255),f,b
  2158  00F2EC                     l2967:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;main.c: 147:                     for (i = 0; i < 40; i++) printf("\n");
  2162  00F2EC  C08C  F001         	movff	main@duty,EPWM1_LoadDutyValue@dutyValue
  2163  00F2F0  C08D  F002         	movff	main@duty+1,EPWM1_LoadDutyValue@dutyValue+1
  2164  00F2F4  EC8E  F06D         	call	_EPWM1_LoadDutyValue	;wreg free
  2165  00F2F8                     
  2166                           ;main.c: 148:                     break;
  2167  00F2F8  0ED7               	movlw	low STR_47
  2168  00F2FA  0100               	movlb	0	; () banked
  2169  00F2FC  6F77               	movwf	printf@fmt& (0+255),b
  2170  00F2FE  0EFC               	movlw	high STR_47
  2171  00F300  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2172  00F302  C08C  F079         	movff	main@duty,?_printf+2
  2173  00F306  C08D  F07A         	movff	main@duty+1,?_printf+3
  2174  00F30A  0E00               	movlw	0
  2175  00F30C  6F7C               	movwf	(?_printf+5)& (0+255),b
  2176  00F30E  697B               	setf	(?_printf+4)& (0+255),b
  2177  00F310  EC65  F06D         	call	_printf	;wreg free
  2178                           
  2179                           ;main.c: 149: 
  2180  00F314  EFB0  F077         	goto	l2931
  2181  00F318                     l2971:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;main.c: 155:                     break;
  2185  00F318  518D               	movf	(main@duty+1)& (0+255),w,b
  2186  00F31A  E107               	bnz	u2601
  2187  00F31C  0EF0               	movlw	240
  2188  00F31E  5D8C               	subwf	main@duty& (0+255),w,b
  2189  00F320  B0D8               	btfsc	status,0,c
  2190  00F322  EF95  F079         	goto	u2601
  2191  00F326  EF97  F079         	goto	u2600
  2192  00F32A                     u2601:
  2193  00F32A  EF9B  F079         	goto	l2975
  2194  00F32E                     u2600:
  2195  00F32E                     
  2196                           ; BSR set to: 0
  2197  00F32E  0E10               	movlw	16
  2198  00F330  278C               	addwf	main@duty& (0+255),f,b
  2199  00F332  0E00               	movlw	0
  2200  00F334  238D               	addwfc	(main@duty+1)& (0+255),f,b
  2201  00F336                     l2975:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 156:             }
  2205  00F336  C08C  F001         	movff	main@duty,EPWM1_LoadDutyValue@dutyValue
  2206  00F33A  C08D  F002         	movff	main@duty+1,EPWM1_LoadDutyValue@dutyValue+1
  2207  00F33E  EC8E  F06D         	call	_EPWM1_LoadDutyValue	;wreg free
  2208  00F342                     
  2209                           ;main.c: 157:         }
  2210  00F342  0ED7               	movlw	low STR_47
  2211  00F344  0100               	movlb	0	; () banked
  2212  00F346  6F77               	movwf	printf@fmt& (0+255),b
  2213  00F348  0EFC               	movlw	high STR_47
  2214  00F34A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2215  00F34C  C08C  F079         	movff	main@duty,?_printf+2
  2216  00F350  C08D  F07A         	movff	main@duty+1,?_printf+3
  2217  00F354  0E00               	movlw	0
  2218  00F356  6F7C               	movwf	(?_printf+5)& (0+255),b
  2219  00F358  697B               	setf	(?_printf+4)& (0+255),b
  2220  00F35A  EC65  F06D         	call	_printf	;wreg free
  2221                           
  2222                           ;main.c: 158:     }
  2223  00F35E  EFB0  F077         	goto	l2931
  2224  00F362                     l2979:
  2225                           
  2226                           ; BSR set to: 0
  2227  00F362  0E00               	movlw	0
  2228  00F364  6F8A               	movwf	main@i& (0+255),b
  2229  00F366                     l2985:
  2230                           
  2231                           ; BSR set to: 0
  2232  00F366  0E57               	movlw	low (STR_23+13)
  2233  00F368  6F77               	movwf	printf@fmt& (0+255),b
  2234  00F36A  0EFF               	movlw	high (STR_23+13)
  2235  00F36C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2236  00F36E  EC65  F06D         	call	_printf	;wreg free
  2237  00F372  0100               	movlb	0	; () banked
  2238  00F374  2B8A               	incf	main@i& (0+255),f,b
  2239  00F376                     
  2240                           ; BSR set to: 0
  2241  00F376  0E27               	movlw	39
  2242  00F378  658A               	cpfsgt	main@i& (0+255),b
  2243  00F37A  EFC1  F079         	goto	u2611
  2244  00F37E  EFC3  F079         	goto	u2610
  2245  00F382                     u2611:
  2246  00F382  EFB3  F079         	goto	l2985
  2247  00F386                     u2610:
  2248  00F386                     
  2249                           ; BSR set to: 0
  2250  00F386  00FF               	reset		;# 
  2251  00F388  EFB0  F077         	goto	l2931
  2252  00F38C                     l2991:
  2253                           
  2254                           ; BSR set to: 0
  2255  00F38C  0E00               	movlw	0
  2256  00F38E  6F8A               	movwf	main@i& (0+255),b
  2257  00F390                     l2997:
  2258                           
  2259                           ; BSR set to: 0
  2260  00F390  0E57               	movlw	low (STR_23+13)
  2261  00F392  6F77               	movwf	printf@fmt& (0+255),b
  2262  00F394  0EFF               	movlw	high (STR_23+13)
  2263  00F396  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2264  00F398  EC65  F06D         	call	_printf	;wreg free
  2265  00F39C  0100               	movlb	0	; () banked
  2266  00F39E  2B8A               	incf	main@i& (0+255),f,b
  2267  00F3A0                     
  2268                           ; BSR set to: 0
  2269  00F3A0  0E27               	movlw	39
  2270  00F3A2  658A               	cpfsgt	main@i& (0+255),b
  2271  00F3A4  EFD6  F079         	goto	u2621
  2272  00F3A8  EFD8  F079         	goto	u2620
  2273  00F3AC                     u2621:
  2274  00F3AC  EFC8  F079         	goto	l2997
  2275  00F3B0                     u2620:
  2276  00F3B0  EFB0  F077         	goto	l2931
  2277  00F3B4                     l3003:
  2278                           
  2279                           ; BSR set to: 0
  2280  00F3B4  0E29               	movlw	low STR_51
  2281  00F3B6  6F77               	movwf	printf@fmt& (0+255),b
  2282  00F3B8  0EFF               	movlw	high STR_51
  2283  00F3BA  6F78               	movwf	(printf@fmt+1)& (0+255),b
  2284  00F3BC  C087  F079         	movff	main@cmd,?_printf+2
  2285  00F3C0  6B7A               	clrf	(?_printf+3)& (0+255),b
  2286  00F3C2  EC65  F06D         	call	_printf	;wreg free
  2287  00F3C6  EFB0  F077         	goto	l2931
  2288  00F3CA                     l3007:
  2289                           
  2290                           ; BSR set to: 0
  2291  00F3CA  5187               	movf	main@cmd& (0+255),w,b
  2292  00F3CC  6F81               	movwf	??_main& (0+255),b
  2293  00F3CE  6B82               	clrf	(??_main+1)& (0+255),b
  2294                           
  2295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 1, Range of values is 0 to 0
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            4     3 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  00F3D0  5182               	movf	(??_main+1)& (0+255),w,b
  2303  00F3D2  0A00               	xorlw	0	; case 0
  2304  00F3D4  B4D8               	btfsc	status,2,c
  2305  00F3D6  EFEF  F079         	goto	l3083
  2306  00F3DA  EFDA  F079         	goto	l3003
  2307  00F3DE                     l3083:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 10, Range of values is 63 to 122
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte           31    16 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316  00F3DE  5181               	movf	??_main& (0+255),w,b
  2317  00F3E0  0A3F               	xorlw	63	; case 63
  2318  00F3E2  B4D8               	btfsc	status,2,c
  2319  00F3E4  EFC0  F077         	goto	l2935
  2320  00F3E8  0A6F               	xorlw	111	; case 80
  2321  00F3EA  B4D8               	btfsc	status,2,c
  2322  00F3EC  EF8C  F079         	goto	l2971
  2323  00F3F0  0A04               	xorlw	4	; case 84
  2324  00F3F2  B4D8               	btfsc	status,2,c
  2325  00F3F4  EF59  F079         	goto	l2961
  2326  00F3F8  0A0E               	xorlw	14	; case 90
  2327  00F3FA  B4D8               	btfsc	status,2,c
  2328  00F3FC  EFB1  F079         	goto	l2979
  2329  00F400  0A3F               	xorlw	63	; case 101
  2330  00F402  B4D8               	btfsc	status,2,c
  2331  00F404  EF09  F079         	goto	l2955
  2332  00F408  0A03               	xorlw	3	; case 102
  2333  00F40A  B4D8               	btfsc	status,2,c
  2334  00F40C  EF34  F078         	goto	l2953
  2335  00F410  0A09               	xorlw	9	; case 111
  2336  00F412  B4D8               	btfsc	status,2,c
  2337  00F414  EF42  F079         	goto	l2957
  2338  00F418  0A1F               	xorlw	31	; case 112
  2339  00F41A  B4D8               	btfsc	status,2,c
  2340  00F41C  EF67  F079         	goto	l2963
  2341  00F420  0A04               	xorlw	4	; case 116
  2342  00F422  B4D8               	btfsc	status,2,c
  2343  00F424  EF4A  F079         	goto	l2959
  2344  00F428  0A0E               	xorlw	14	; case 122
  2345  00F42A  B4D8               	btfsc	status,2,c
  2346  00F42C  EFC6  F079         	goto	l2991
  2347  00F430  EFDA  F079         	goto	l3003
  2348  00F434  EF00  F000         	goto	start
  2349  00F438                     __end_of_main:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _printf *****************
  2353 ;; Defined at:
  2354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2357 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  2358 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  2359 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  2360 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  2361 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  2362 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  2363 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  2364 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  2365 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  2366 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  2367 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  2368 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  2369 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  ap              2   31[BANK0 ] PTR void [1]
  2372 ;;		 -> ?_printf(2), 
  2373 ;;  ret             2    0        int 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2   23[BANK0 ] int 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:       10 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    8
  2390 ;; This function calls:
  2391 ;;		_vfprintf
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text1
  2398  00DACA                     __ptext1:
  2399                           	callstack 0
  2400  00DACA                     _printf:
  2401                           	callstack 22
  2402  00DACA  0E79               	movlw	low (?_printf+2)
  2403  00DACC  0100               	movlb	0	; () banked
  2404  00DACE  6F7F               	movwf	printf@ap& (0+255),b
  2405  00DAD0  0E00               	movlw	high (?_printf+2)
  2406  00DAD2  6F80               	movwf	(printf@ap+1)& (0+255),b
  2407  00DAD4                     
  2408                           ; BSR set to: 0
  2409  00DAD4  0E00               	movlw	0
  2410  00DAD6  6E59               	movwf	vfprintf@fp^0,c
  2411  00DAD8  0E00               	movlw	0
  2412  00DADA  6E5A               	movwf	(vfprintf@fp+1)^0,c
  2413  00DADC  C077  F05B         	movff	printf@fmt,vfprintf@fmt
  2414  00DAE0  C078  F05C         	movff	printf@fmt+1,vfprintf@fmt+1
  2415  00DAE4  0E7F               	movlw	low printf@ap
  2416  00DAE6  6E5D               	movwf	vfprintf@ap^0,c
  2417  00DAE8  0E00               	movlw	high printf@ap
  2418  00DAEA  6E5E               	movwf	(vfprintf@ap+1)^0,c
  2419  00DAEC  EC19  F06F         	call	_vfprintf	;wreg free
  2420  00DAF0  0012               	return		;funcret
  2421  00DAF2                     __end_of_printf:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function _vfprintf *****************
  2425 ;; Defined at:
  2426 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
  2429 ;;		 -> NULL(0), 
  2430 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  2431 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  2432 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  2433 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  2434 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  2435 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  2436 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  2437 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  2438 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  2439 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  2440 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  2441 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  2442 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  2443 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  2444 ;;  ap              2   92[COMRAM] PTR PTR void 
  2445 ;;		 -> printf@ap(2), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  cfmt            2   21[BANK0 ] PTR unsigned char 
  2448 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  2449 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  2450 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  2451 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  2452 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  2453 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  2454 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  2455 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  2456 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  2457 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  2458 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  2459 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  2460 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  2   88[COMRAM] int 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        8 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    7
  2477 ;; This function calls:
  2478 ;;		_vfpfcnvrt
  2479 ;; This function is called by:
  2480 ;;		_printf
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text2
  2485  00DE32                     __ptext2:
  2486                           	callstack 0
  2487  00DE32                     _vfprintf:
  2488                           	callstack 22
  2489  00DE32                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2491  00DE32  C05B  F075         	movff	vfprintf@fmt,vfprintf@cfmt
  2492  00DE36  C05C  F076         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2493  00DE3A                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2495  00DE3A  0E00               	movlw	0
  2496  00DE3C  0100               	movlb	0	; () banked
  2497  00DE3E  6F93               	movwf	(_nout+1)& (0+255),b
  2498  00DE40  0E00               	movlw	0
  2499  00DE42  6F92               	movwf	_nout& (0+255),b
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2502  00DE44  EF37  F06F         	goto	l2857
  2503  00DE48                     l2855:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2507  00DE48  C059  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  2508  00DE4C  C05A  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2509  00DE50  0E75               	movlw	low vfprintf@cfmt
  2510  00DE52  6E47               	movwf	vfpfcnvrt@fmt^0,c
  2511  00DE54  0E00               	movlw	high vfprintf@cfmt
  2512  00DE56  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2513  00DE58  C05D  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  2514  00DE5C  C05E  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2515  00DE60  EC1C  F07A         	call	_vfpfcnvrt	;wreg free
  2516  00DE64  5045               	movf	?_vfpfcnvrt^0,w,c
  2517  00DE66  0100               	movlb	0	; () banked
  2518  00DE68  2792               	addwf	_nout& (0+255),f,b
  2519  00DE6A  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  2520  00DE6C  2393               	addwfc	(_nout+1)& (0+255),f,b
  2521  00DE6E                     l2857:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2525  00DE6E  C075  FFF6         	movff	vfprintf@cfmt,tblptrl
  2526  00DE72  C076  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2527  00DE76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2528  00DE76  6AF8               	clrf	tblptru,c
  2529  00DE78                     	endif
  2530  00DE78                     	if	0	;tblptru may be non-zero
  2531  00DE78                     	endif
  2532  00DE78  0008               	tblrd		*
  2533  00DE7A  50F5               	movf	tablat,w,c
  2534  00DE7C  0900               	iorlw	0
  2535  00DE7E  A4D8               	btfss	status,2,c
  2536  00DE80  EF44  F06F         	goto	u2521
  2537  00DE84  EF46  F06F         	goto	u2520
  2538  00DE88                     u2521:
  2539  00DE88  EF24  F06F         	goto	l2855
  2540  00DE8C                     u2520:
  2541  00DE8C                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2544  00DE8C  C092  F059         	movff	_nout,?_vfprintf
  2545  00DE90  C093  F05A         	movff	_nout+1,?_vfprintf+1
  2546  00DE94                     
  2547                           ; BSR set to: 0
  2548  00DE94  0012               	return		;funcret
  2549  00DE96                     __end_of_vfprintf:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _vfpfcnvrt *****************
  2553 ;; Defined at:
  2554 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  2557 ;;		 -> NULL(0), 
  2558 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  2559 ;;		 -> vfprintf@cfmt(2), 
  2560 ;;  ap              2   72[COMRAM] PTR PTR void 
  2561 ;;		 -> printf@ap(2), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  llu             8   13[BANK0 ] unsigned long long 
  2564 ;;  ll              8    4[BANK0 ] long long 
  2565 ;;  f               4    0        long long 
  2566 ;;  vp              3    0        PTR void 
  2567 ;;  ct              3    0        unsigned char [3]
  2568 ;;  cp              3    0        PTR unsigned char 
  2569 ;;  done            2    0[BANK0 ] int 
  2570 ;;  i               2    0        int 
  2571 ;;  c               1   12[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2   68[COMRAM] int 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:        20      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:       41 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    6
  2588 ;; This function calls:
  2589 ;;		_atoi
  2590 ;;		_ctoa
  2591 ;;		_dtoa
  2592 ;;		_fputc
  2593 ;;		_isdigit
  2594 ;;		_strncmp
  2595 ;;		_utoa
  2596 ;;		_xtoa
  2597 ;; This function is called by:
  2598 ;;		_vfprintf
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text3
  2603  00F438                     __ptext3:
  2604                           	callstack 0
  2605  00F438                     _vfpfcnvrt:
  2606                           	callstack 22
  2607  00F438                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2609  00F438  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  00F43C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  00F440  CFDE FFF6          	movff	postinc2,tblptrl
  2612  00F444  CFDD FFF7          	movff	postdec2,tblptrh
  2613  00F448                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2614  00F448  6AF8               	clrf	tblptru,c
  2615  00F44A                     	endif
  2616  00F44A                     	if	0	;tblptru may be non-zero
  2617  00F44A                     	endif
  2618  00F44A  0008               	tblrd		*
  2619  00F44C  50F5               	movf	tablat,w,c
  2620  00F44E  0A25               	xorlw	37
  2621  00F450  A4D8               	btfss	status,2,c
  2622  00F452  EF2D  F07A         	goto	u2311
  2623  00F456  EF2F  F07A         	goto	u2310
  2624  00F45A                     u2311:
  2625  00F45A  EF4E  F07E         	goto	l2799
  2626  00F45E                     u2310:
  2627  00F45E                     
  2628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2629  00F45E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2630  00F462  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2631  00F466  2ADE               	incf	postinc2,f,c
  2632  00F468  0E00               	movlw	0
  2633  00F46A  22DD               	addwfc	postdec2,f,c
  2634  00F46C                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2636  00F46C  0E00               	movlw	0
  2637  00F46E  0100               	movlb	0	; () banked
  2638  00F470  6F95               	movwf	(_width+1)& (0+255),b
  2639  00F472  0E00               	movlw	0
  2640  00F474  6F94               	movwf	_width& (0+255),b
  2641  00F476  C094  F098         	movff	_width,_flags
  2642  00F47A  C095  F099         	movff	_width+1,_flags+1
  2643  00F47E                     
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2646  00F47E  6996               	setf	_prec& (0+255),b
  2647  00F480  6997               	setf	(_prec+1)& (0+255),b
  2648  00F482                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  2651  00F482  0E00               	movlw	0
  2652  00F484  6F61               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2653  00F486  0E00               	movlw	0
  2654  00F488  6F60               	movwf	vfpfcnvrt@done& (0+255),b
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  2657  00F48A  EF8E  F07A         	goto	l2689
  2658  00F48E                     l2663:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  2662  00F48E  8198               	bsf	_flags& (0+255),0,b
  2663  00F490                     l2665:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  2667  00F490  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2668  00F494  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2669  00F498  2ADE               	incf	postinc2,f,c
  2670  00F49A  0E00               	movlw	0
  2671  00F49C  22DD               	addwfc	postdec2,f,c
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  2674  00F49E  EF8E  F07A         	goto	l2689
  2675  00F4A2                     l2667:
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  2679  00F4A2  8398               	bsf	_flags& (0+255),1,b
  2680  00F4A4  EF48  F07A         	goto	l2665
  2681  00F4A8                     l2671:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  2685  00F4A8  8598               	bsf	_flags& (0+255),2,b
  2686  00F4AA  EF48  F07A         	goto	l2665
  2687  00F4AE                     l2675:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  2691  00F4AE  8798               	bsf	_flags& (0+255),3,b
  2692  00F4B0  EF48  F07A         	goto	l2665
  2693  00F4B4                     l2679:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  2697  00F4B4  8998               	bsf	_flags& (0+255),4,b
  2698  00F4B6  EF48  F07A         	goto	l2665
  2699  00F4BA                     l2683:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  2703  00F4BA  0E00               	movlw	0
  2704  00F4BC  6F61               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2705  00F4BE  0E01               	movlw	1
  2706  00F4C0  6F60               	movwf	vfpfcnvrt@done& (0+255),b
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  2709  00F4C2  EF8E  F07A         	goto	l2689
  2710  00F4C6                     l2687:
  2711                           
  2712                           ; BSR set to: 0
  2713  00F4C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2714  00F4CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2715  00F4CE  CFDE FFF6          	movff	postinc2,tblptrl
  2716  00F4D2  CFDD FFF7          	movff	postdec2,tblptrh
  2717  00F4D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2718  00F4D6  6AF8               	clrf	tblptru,c
  2719  00F4D8                     	endif
  2720  00F4D8                     	if	0	;tblptru may be non-zero
  2721  00F4D8                     	endif
  2722  00F4D8  0008               	tblrd		*
  2723  00F4DA  50F5               	movf	tablat,w,c
  2724  00F4DC  6E4B               	movwf	??_vfpfcnvrt^0,c
  2725  00F4DE  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  2726                           
  2727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2728                           ; Switch size 1, requested type "simple"
  2729                           ; Number of cases is 1, Range of values is 0 to 0
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte            4     3 (average)
  2733                           ;	Chosen strategy is simple_byte
  2734  00F4E0  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2735  00F4E2  0A00               	xorlw	0	; case 0
  2736  00F4E4  B4D8               	btfsc	status,2,c
  2737  00F4E6  EF77  F07A         	goto	l3085
  2738  00F4EA  EF5D  F07A         	goto	l2683
  2739  00F4EE                     l3085:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ; Switch size 1, requested type "simple"
  2743                           ; Number of cases is 5, Range of values is 32 to 48
  2744                           ; switch strategies available:
  2745                           ; Name         Instructions Cycles
  2746                           ; simple_byte           16     9 (average)
  2747                           ;	Chosen strategy is simple_byte
  2748  00F4EE  504B               	movf	??_vfpfcnvrt^0,w,c
  2749  00F4F0  0A20               	xorlw	32	; case 32
  2750  00F4F2  B4D8               	btfsc	status,2,c
  2751  00F4F4  EF57  F07A         	goto	l2675
  2752  00F4F8  0A03               	xorlw	3	; case 35
  2753  00F4FA  B4D8               	btfsc	status,2,c
  2754  00F4FC  EF5A  F07A         	goto	l2679
  2755  00F500  0A08               	xorlw	8	; case 43
  2756  00F502  B4D8               	btfsc	status,2,c
  2757  00F504  EF54  F07A         	goto	l2671
  2758  00F508  0A06               	xorlw	6	; case 45
  2759  00F50A  B4D8               	btfsc	status,2,c
  2760  00F50C  EF47  F07A         	goto	l2663
  2761  00F510  0A1D               	xorlw	29	; case 48
  2762  00F512  B4D8               	btfsc	status,2,c
  2763  00F514  EF51  F07A         	goto	l2667
  2764  00F518  EF5D  F07A         	goto	l2683
  2765  00F51C                     l2689:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  2769  00F51C  5160               	movf	vfpfcnvrt@done& (0+255),w,b
  2770  00F51E  1161               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2771  00F520  B4D8               	btfsc	status,2,c
  2772  00F522  EF95  F07A         	goto	u2321
  2773  00F526  EF97  F07A         	goto	u2320
  2774  00F52A                     u2321:
  2775  00F52A  EF63  F07A         	goto	l2687
  2776  00F52E                     u2320:
  2777  00F52E                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  2780  00F52E  A198               	btfss	_flags& (0+255),0,b
  2781  00F530  EF9C  F07A         	goto	u2331
  2782  00F534  EF9E  F07A         	goto	u2330
  2783  00F538                     u2331:
  2784  00F538  EF9F  F07A         	goto	l2693
  2785  00F53C                     u2330:
  2786  00F53C                     
  2787                           ; BSR set to: 0
  2788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  2789  00F53C  9398               	bcf	_flags& (0+255),1,b
  2790  00F53E                     l2693:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  2794  00F53E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2795  00F542  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2796  00F546  CFDE FFF6          	movff	postinc2,tblptrl
  2797  00F54A  CFDD FFF7          	movff	postdec2,tblptrh
  2798  00F54E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2799  00F54E  6AF8               	clrf	tblptru,c
  2800  00F550                     	endif
  2801  00F550                     	if	0	;tblptru may be non-zero
  2802  00F550                     	endif
  2803  00F550  0008               	tblrd		*
  2804  00F552  50F5               	movf	tablat,w,c
  2805  00F554  0A2A               	xorlw	42
  2806  00F556  A4D8               	btfss	status,2,c
  2807  00F558  EFB0  F07A         	goto	u2341
  2808  00F55C  EFB2  F07A         	goto	u2340
  2809  00F560                     u2341:
  2810  00F560  EFDB  F07A         	goto	l2701
  2811  00F564                     u2340:
  2812  00F564                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  2815  00F564  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2816  00F568  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2817  00F56C  2ADE               	incf	postinc2,f,c
  2818  00F56E  0E00               	movlw	0
  2819  00F570  22DD               	addwfc	postdec2,f,c
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2822  00F572  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2823  00F576  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2824  00F57A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2825  00F57E  0E02               	movlw	2
  2826  00F580  26DE               	addwf	postinc2,f,c
  2827  00F582  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2828  00F586  0E00               	movlw	0
  2829  00F588  22DD               	addwfc	postdec2,f,c
  2830  00F58A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2831  00F58E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2832  00F592  CFDE F094          	movff	postinc2,_width
  2833  00F596  CFDD F095          	movff	postdec2,_width+1
  2834  00F59A                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  2837  00F59A  BF95               	btfsc	(_width+1)& (0+255),7,b
  2838  00F59C  EFD4  F07A         	goto	u2350
  2839  00F5A0  EFD2  F07A         	goto	u2351
  2840  00F5A4                     u2351:
  2841  00F5A4  EF20  F07B         	goto	l2711
  2842  00F5A8                     u2350:
  2843  00F5A8                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  2846  00F5A8  8198               	bsf	_flags& (0+255),0,b
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  2849  00F5AA  6D94               	negf	_width& (0+255),b
  2850  00F5AC  1F95               	comf	(_width+1)& (0+255),f,b
  2851  00F5AE  B0D8               	btfsc	status,0,c
  2852  00F5B0  2B95               	incf	(_width+1)& (0+255),f,b
  2853  00F5B2  EF20  F07B         	goto	l2711
  2854  00F5B6                     l2701:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  2858  00F5B6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859  00F5BA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860  00F5BE  CFDE F008          	movff	postinc2,atoi@s
  2861  00F5C2  CFDD F009          	movff	postdec2,atoi@s+1
  2862  00F5C6  ECC4  F072         	call	_atoi	;wreg free
  2863  00F5CA  C008  F094         	movff	?_atoi,_width
  2864  00F5CE  C009  F095         	movff	?_atoi+1,_width+1
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2867  00F5D2  EFF2  F07A         	goto	l2705
  2868  00F5D6                     l2703:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  2872  00F5D6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2873  00F5DA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2874  00F5DE  2ADE               	incf	postinc2,f,c
  2875  00F5E0  0E00               	movlw	0
  2876  00F5E2  22DD               	addwfc	postdec2,f,c
  2877  00F5E4                     l2705:
  2878  00F5E4  0ED0               	movlw	208
  2879  00F5E6  6E4B               	movwf	??_vfpfcnvrt^0,c
  2880  00F5E8  0EFF               	movlw	255
  2881  00F5EA  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2882  00F5EC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2883  00F5F0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2884  00F5F4  CFDE FFF6          	movff	postinc2,tblptrl
  2885  00F5F8  CFDD FFF7          	movff	postdec2,tblptrh
  2886  00F5FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2887  00F5FC  6AF8               	clrf	tblptru,c
  2888  00F5FE                     	endif
  2889  00F5FE                     	if	0	;tblptru may be non-zero
  2890  00F5FE                     	endif
  2891  00F5FE  0008               	tblrd		*
  2892  00F600  50F5               	movf	tablat,w,c
  2893  00F602  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2894  00F604  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2895  00F606  504B               	movf	??_vfpfcnvrt^0,w,c
  2896  00F608  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2897  00F60A  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2898  00F60C  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2899  00F60E  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2900  00F610  E10A               	bnz	u2360
  2901  00F612  0E0A               	movlw	10
  2902  00F614  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2903  00F616  A0D8               	btfss	status,0,c
  2904  00F618  EF10  F07B         	goto	u2361
  2905  00F61C  EF13  F07B         	goto	u2360
  2906  00F620                     u2361:
  2907  00F620  0E01               	movlw	1
  2908  00F622  EF14  F07B         	goto	u2370
  2909  00F626                     u2360:
  2910  00F626  0E00               	movlw	0
  2911  00F628                     u2370:
  2912  00F628  0100               	movlb	0	; () banked
  2913  00F62A  6F62               	movwf	_vfpfcnvrt$1286& (0+255),b
  2914  00F62C  6B63               	clrf	(_vfpfcnvrt$1286+1)& (0+255),b
  2915  00F62E                     
  2916                           ; BSR set to: 0
  2917  00F62E  5162               	movf	_vfpfcnvrt$1286& (0+255),w,b
  2918  00F630  1163               	iorwf	(_vfpfcnvrt$1286+1)& (0+255),w,b
  2919  00F632  A4D8               	btfss	status,2,c
  2920  00F634  EF1E  F07B         	goto	u2381
  2921  00F638  EF20  F07B         	goto	u2380
  2922  00F63C                     u2381:
  2923  00F63C  EFEB  F07A         	goto	l2703
  2924  00F640                     u2380:
  2925  00F640                     l2711:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2929  00F640  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  00F644  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  00F648  CFDE FFF6          	movff	postinc2,tblptrl
  2932  00F64C  CFDD FFF7          	movff	postdec2,tblptrh
  2933  00F650                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2934  00F650  6AF8               	clrf	tblptru,c
  2935  00F652                     	endif
  2936  00F652                     	if	0	;tblptru may be non-zero
  2937  00F652                     	endif
  2938  00F652  0008               	tblrd		*
  2939  00F654  50F5               	movf	tablat,w,c
  2940  00F656  0A63               	xorlw	99
  2941  00F658  A4D8               	btfss	status,2,c
  2942  00F65A  EF31  F07B         	goto	u2391
  2943  00F65E  EF33  F07B         	goto	u2390
  2944  00F662                     u2391:
  2945  00F662  EF5A  F07B         	goto	l2719
  2946  00F666                     u2390:
  2947  00F666                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2950  00F666  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2951  00F66A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2952  00F66E  2ADE               	incf	postinc2,f,c
  2953  00F670  0E00               	movlw	0
  2954  00F672  22DD               	addwfc	postdec2,f,c
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2957  00F674  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2958  00F678  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2959  00F67C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2960  00F680  0E02               	movlw	2
  2961  00F682  26DE               	addwf	postinc2,f,c
  2962  00F684  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2963  00F688  0E00               	movlw	0
  2964  00F68A  22DD               	addwfc	postdec2,f,c
  2965  00F68C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2966  00F690  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2967  00F694  50DF               	movf	indf2,w,c
  2968  00F696  6F6C               	movwf	vfpfcnvrt@c& (0+255),b
  2969  00F698                     
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2972  00F698  C045  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  2973  00F69C  C046  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2974  00F6A0  C06C  F020         	movff	vfpfcnvrt@c,ctoa@c
  2975  00F6A4  ECBD  F06E         	call	_ctoa	;wreg free
  2976  00F6A8  C01E  F045         	movff	?_ctoa,?_vfpfcnvrt
  2977  00F6AC  C01F  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2978  00F6B0  EF6A  F07E         	goto	l1118
  2979  00F6B4                     l2719:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2983  00F6B4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2984  00F6B8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2985  00F6BC  CFDE FFF6          	movff	postinc2,tblptrl
  2986  00F6C0  CFDD FFF7          	movff	postdec2,tblptrh
  2987  00F6C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2988  00F6C4  6AF8               	clrf	tblptru,c
  2989  00F6C6                     	endif
  2990  00F6C6                     	if	0	;tblptru may be non-zero
  2991  00F6C6                     	endif
  2992  00F6C6  0008               	tblrd		*
  2993  00F6C8  50F5               	movf	tablat,w,c
  2994  00F6CA  0A64               	xorlw	100
  2995  00F6CC  B4D8               	btfsc	status,2,c
  2996  00F6CE  EF6B  F07B         	goto	u2401
  2997  00F6D2  EF6D  F07B         	goto	u2400
  2998  00F6D6                     u2401:
  2999  00F6D6  EF80  F07B         	goto	l2723
  3000  00F6DA                     u2400:
  3001  00F6DA                     
  3002                           ; BSR set to: 0
  3003  00F6DA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3004  00F6DE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3005  00F6E2  CFDE FFF6          	movff	postinc2,tblptrl
  3006  00F6E6  CFDD FFF7          	movff	postdec2,tblptrh
  3007  00F6EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3008  00F6EA  6AF8               	clrf	tblptru,c
  3009  00F6EC                     	endif
  3010  00F6EC                     	if	0	;tblptru may be non-zero
  3011  00F6EC                     	endif
  3012  00F6EC  0008               	tblrd		*
  3013  00F6EE  50F5               	movf	tablat,w,c
  3014  00F6F0  0A69               	xorlw	105
  3015  00F6F2  A4D8               	btfss	status,2,c
  3016  00F6F4  EF7E  F07B         	goto	u2411
  3017  00F6F8  EF80  F07B         	goto	u2410
  3018  00F6FC                     u2411:
  3019  00F6FC  EFC0  F07B         	goto	l2729
  3020  00F700                     u2410:
  3021  00F700                     l2723:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3025  00F700  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3026  00F704  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3027  00F708  2ADE               	incf	postinc2,f,c
  3028  00F70A  0E00               	movlw	0
  3029  00F70C  22DD               	addwfc	postdec2,f,c
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3032  00F70E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3033  00F712  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3034  00F716  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3035  00F71A  0E02               	movlw	2
  3036  00F71C  26DE               	addwf	postinc2,f,c
  3037  00F71E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3038  00F722  0E00               	movlw	0
  3039  00F724  22DD               	addwfc	postdec2,f,c
  3040  00F726  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3041  00F72A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3042  00F72E  CFDE F064          	movff	postinc2,vfpfcnvrt@ll
  3043  00F732  CFDD F065          	movff	postdec2,vfpfcnvrt@ll+1
  3044  00F736  0E00               	movlw	0
  3045  00F738  BF65               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3046  00F73A  0EFF               	movlw	-1
  3047  00F73C  6F66               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3048  00F73E  6F67               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3049  00F740  6F68               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3050  00F742  6F69               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3051  00F744  6F6A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3052  00F746  6F6B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3053  00F748                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  3056  00F748  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3057  00F74C  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3058  00F750  C064  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3059  00F754  C065  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3060  00F758  C066  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3061  00F75C  C067  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3062  00F760  C068  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3063  00F764  C069  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3064  00F768  C06A  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3065  00F76C  C06B  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3066  00F770  ECFE  F075         	call	_dtoa	;wreg free
  3067  00F774  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  3068  00F778  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3069  00F77C  EF6A  F07E         	goto	l1118
  3070  00F780                     l2729:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 835:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  3074  00F780  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3075  00F784  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3076  00F788  CFDE F001          	movff	postinc2,strncmp@_l
  3077  00F78C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3078  00F790  0EF2               	movlw	low STR_52
  3079  00F792  6E03               	movwf	strncmp@_r^0,c
  3080  00F794  0EFF               	movlw	high STR_52
  3081  00F796  6E04               	movwf	(strncmp@_r+1)^0,c
  3082  00F798  0E00               	movlw	0
  3083  00F79A  6E06               	movwf	(strncmp@n+1)^0,c
  3084  00F79C  0E02               	movlw	2
  3085  00F79E  6E05               	movwf	strncmp@n^0,c
  3086  00F7A0  EC61  F070         	call	_strncmp	;wreg free
  3087  00F7A4  5001               	movf	?_strncmp^0,w,c
  3088  00F7A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3089  00F7A8  B4D8               	btfsc	status,2,c
  3090  00F7AA  EFD9  F07B         	goto	u2421
  3091  00F7AE  EFDB  F07B         	goto	u2420
  3092  00F7B2                     u2421:
  3093  00F7B2  EFF6  F07B         	goto	l2733
  3094  00F7B6                     u2420:
  3095  00F7B6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3096  00F7BA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3097  00F7BE  CFDE F001          	movff	postinc2,strncmp@_l
  3098  00F7C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3099  00F7C6  0EF5               	movlw	low STR_56
  3100  00F7C8  6E03               	movwf	strncmp@_r^0,c
  3101  00F7CA  0EFF               	movlw	high STR_56
  3102  00F7CC  6E04               	movwf	(strncmp@_r+1)^0,c
  3103  00F7CE  0E00               	movlw	0
  3104  00F7D0  6E06               	movwf	(strncmp@n+1)^0,c
  3105  00F7D2  0E02               	movlw	2
  3106  00F7D4  6E05               	movwf	strncmp@n^0,c
  3107  00F7D6  EC61  F070         	call	_strncmp	;wreg free
  3108  00F7DA  5001               	movf	?_strncmp^0,w,c
  3109  00F7DC  1002               	iorwf	(?_strncmp+1)^0,w,c
  3110  00F7DE  A4D8               	btfss	status,2,c
  3111  00F7E0  EFF4  F07B         	goto	u2431
  3112  00F7E4  EFF6  F07B         	goto	u2430
  3113  00F7E8                     u2431:
  3114  00F7E8  EF53  F07C         	goto	l2739
  3115  00F7EC                     u2430:
  3116  00F7EC                     l2733:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 836: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 838:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  3119  00F7EC  0E02               	movlw	2
  3120  00F7EE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  00F7F2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  00F7F6  26DE               	addwf	postinc2,f,c
  3123  00F7F8  0E00               	movlw	0
  3124  00F7FA  22DD               	addwfc	postdec2,f,c
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 839:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3127  00F7FC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3128  00F800  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3129  00F804  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3130  00F808  0E04               	movlw	4
  3131  00F80A  26DE               	addwf	postinc2,f,c
  3132  00F80C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3133  00F810  0E00               	movlw	0
  3134  00F812  22DD               	addwfc	postdec2,f,c
  3135  00F814  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3136  00F818  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3137  00F81C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3138  00F820  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+3
  3139  00F824  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+4
  3140  00F828  CFDE F050          	movff	postinc2,??_vfpfcnvrt+5
  3141  00F82C  C04D  F051         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  3142  00F830  C04E  F052         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  3143  00F834  C04F  F053         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  3144  00F838  C050  F054         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  3145  00F83C  6A55               	clrf	(??_vfpfcnvrt+10)^0,c
  3146  00F83E  BE54               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  3147  00F840  6855               	setf	(??_vfpfcnvrt+10)^0,c
  3148  00F842  C055  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  3149  00F846  C055  F057         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  3150  00F84A  C055  F058         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  3151  00F84E  C051  F064         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  3152  00F852  C052  F065         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  3153  00F856  C053  F066         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  3154  00F85A  C054  F067         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  3155  00F85E  C055  F068         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  3156  00F862  C056  F069         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  3157  00F866  C057  F06A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  3158  00F86A  C058  F06B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  3159  00F86E                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 841:             
      +                          return dtoa(fp, ll);
  3161  00F86E  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3162  00F872  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3163  00F876  C064  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3164  00F87A  C065  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3165  00F87E  C066  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3166  00F882  C067  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3167  00F886  C068  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3168  00F88A  C069  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3169  00F88E  C06A  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3170  00F892  C06B  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3171  00F896  ECFE  F075         	call	_dtoa	;wreg free
  3172  00F89A  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  3173  00F89E  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3174  00F8A2  EF6A  F07E         	goto	l1118
  3175  00F8A6                     l2739:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  3178  00F8A6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3179  00F8AA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3180  00F8AE  CFDE FFF6          	movff	postinc2,tblptrl
  3181  00F8B2  CFDD FFF7          	movff	postdec2,tblptrh
  3182  00F8B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3183  00F8B6  6AF8               	clrf	tblptru,c
  3184  00F8B8                     	endif
  3185  00F8B8                     	if	0	;tblptru may be non-zero
  3186  00F8B8                     	endif
  3187  00F8B8  0008               	tblrd		*
  3188  00F8BA  50F5               	movf	tablat,w,c
  3189  00F8BC  0A75               	xorlw	117
  3190  00F8BE  A4D8               	btfss	status,2,c
  3191  00F8C0  EF64  F07C         	goto	u2441
  3192  00F8C4  EF66  F07C         	goto	u2440
  3193  00F8C8                     u2441:
  3194  00F8C8  EFA8  F07C         	goto	l2747
  3195  00F8CC                     u2440:
  3196  00F8CC                     
  3197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  3198  00F8CC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3199  00F8D0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3200  00F8D4  2ADE               	incf	postinc2,f,c
  3201  00F8D6  0E00               	movlw	0
  3202  00F8D8  22DD               	addwfc	postdec2,f,c
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3205  00F8DA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3206  00F8DE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3207  00F8E2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3208  00F8E6  0E02               	movlw	2
  3209  00F8E8  26DE               	addwf	postinc2,f,c
  3210  00F8EA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3211  00F8EE  0E00               	movlw	0
  3212  00F8F0  22DD               	addwfc	postdec2,f,c
  3213  00F8F2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3214  00F8F6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3215  00F8FA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3216  00F8FE  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3217  00F902  C04D  F06D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3218  00F906  C04E  F06E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3219  00F90A  0100               	movlb	0	; () banked
  3220  00F90C  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3221  00F90E  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3222  00F910  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3223  00F912  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3224  00F914  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3225  00F916  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3226  00F918                     
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
  3229  00F918  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  3230  00F91C  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3231  00F920  C06D  F020         	movff	vfpfcnvrt@llu,utoa@d
  3232  00F924  C06E  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3233  00F928  C06F  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3234  00F92C  C070  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3235  00F930  C071  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3236  00F934  C072  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3237  00F938  C073  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3238  00F93C  C074  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3239  00F940  EC91  F073         	call	_utoa	;wreg free
  3240  00F944  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  3241  00F948  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  3242  00F94C  EF6A  F07E         	goto	l1118
  3243  00F950                     l2747:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1192:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3246  00F950  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3247  00F954  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3248  00F958  CFDE F001          	movff	postinc2,strncmp@_l
  3249  00F95C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3250  00F960  0EF8               	movlw	low STR_61
  3251  00F962  6E03               	movwf	strncmp@_r^0,c
  3252  00F964  0EFF               	movlw	high STR_61
  3253  00F966  6E04               	movwf	(strncmp@_r+1)^0,c
  3254  00F968  0E00               	movlw	0
  3255  00F96A  6E06               	movwf	(strncmp@n+1)^0,c
  3256  00F96C  0E02               	movlw	2
  3257  00F96E  6E05               	movwf	strncmp@n^0,c
  3258  00F970  EC61  F070         	call	_strncmp	;wreg free
  3259  00F974  5001               	movf	?_strncmp^0,w,c
  3260  00F976  1002               	iorwf	(?_strncmp+1)^0,w,c
  3261  00F978  A4D8               	btfss	status,2,c
  3262  00F97A  EFC1  F07C         	goto	u2451
  3263  00F97E  EFC3  F07C         	goto	u2450
  3264  00F982                     u2451:
  3265  00F982  EF0C  F07D         	goto	l2755
  3266  00F986                     u2450:
  3267  00F986                     
  3268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1194:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3269  00F986  0E02               	movlw	2
  3270  00F988  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3271  00F98C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3272  00F990  26DE               	addwf	postinc2,f,c
  3273  00F992  0E00               	movlw	0
  3274  00F994  22DD               	addwfc	postdec2,f,c
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1195:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  3277  00F996  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3278  00F99A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3279  00F99E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3280  00F9A2  0E04               	movlw	4
  3281  00F9A4  26DE               	addwf	postinc2,f,c
  3282  00F9A6  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3283  00F9AA  0E00               	movlw	0
  3284  00F9AC  22DD               	addwfc	postdec2,f,c
  3285  00F9AE  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3286  00F9B2  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3287  00F9B6  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3288  00F9BA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+3
  3289  00F9BE  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+4
  3290  00F9C2  CFDE F050          	movff	postinc2,??_vfpfcnvrt+5
  3291  00F9C6  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3292  00F9C8  0100               	movlb	0	; () banked
  3293  00F9CA  6F6D               	movwf	vfpfcnvrt@llu& (0+255),b
  3294  00F9CC  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  3295  00F9CE  6F6E               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  3296  00F9D0  504F               	movf	(??_vfpfcnvrt+4)^0,w,c
  3297  00F9D2  6F6F               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  3298  00F9D4  5050               	movf	(??_vfpfcnvrt+5)^0,w,c
  3299  00F9D6  6F70               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  3300  00F9D8  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3301  00F9DA  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3302  00F9DC  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3303  00F9DE  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3304  00F9E0                     
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1197:            
      +                           return utoa(fp, llu);
  3307  00F9E0  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  3308  00F9E4  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3309  00F9E8  C06D  F020         	movff	vfpfcnvrt@llu,utoa@d
  3310  00F9EC  C06E  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3311  00F9F0  C06F  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3312  00F9F4  C070  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3313  00F9F8  C071  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3314  00F9FC  C072  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3315  00FA00  C073  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3316  00FA04  C074  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3317  00FA08  EC91  F073         	call	_utoa	;wreg free
  3318  00FA0C  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  3319  00FA10  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  3320  00FA14  EF6A  F07E         	goto	l1118
  3321  00FA18                     l2755:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3324  00FA18  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3325  00FA1C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3326  00FA20  CFDE FFF6          	movff	postinc2,tblptrl
  3327  00FA24  CFDD FFF7          	movff	postdec2,tblptrh
  3328  00FA28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3329  00FA28  6AF8               	clrf	tblptru,c
  3330  00FA2A                     	endif
  3331  00FA2A                     	if	0	;tblptru may be non-zero
  3332  00FA2A                     	endif
  3333  00FA2A  0008               	tblrd		*
  3334  00FA2C  50F5               	movf	tablat,w,c
  3335  00FA2E  0A78               	xorlw	120
  3336  00FA30  B4D8               	btfsc	status,2,c
  3337  00FA32  EF1D  F07D         	goto	u2461
  3338  00FA36  EF1F  F07D         	goto	u2460
  3339  00FA3A                     u2461:
  3340  00FA3A  EF32  F07D         	goto	l2759
  3341  00FA3E                     u2460:
  3342  00FA3E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3343  00FA42  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3344  00FA46  CFDE FFF6          	movff	postinc2,tblptrl
  3345  00FA4A  CFDD FFF7          	movff	postdec2,tblptrh
  3346  00FA4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3347  00FA4E  6AF8               	clrf	tblptru,c
  3348  00FA50                     	endif
  3349  00FA50                     	if	0	;tblptru may be non-zero
  3350  00FA50                     	endif
  3351  00FA50  0008               	tblrd		*
  3352  00FA52  50F5               	movf	tablat,w,c
  3353  00FA54  0A58               	xorlw	88
  3354  00FA56  A4D8               	btfss	status,2,c
  3355  00FA58  EF30  F07D         	goto	u2471
  3356  00FA5C  EF32  F07D         	goto	u2470
  3357  00FA60                     u2471:
  3358  00FA60  EF82  F07D         	goto	l2769
  3359  00FA64                     u2470:
  3360  00FA64                     l2759:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  3363  00FA64  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3364  00FA68  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3365  00FA6C  CFDE FFF6          	movff	postinc2,tblptrl
  3366  00FA70  CFDD FFF7          	movff	postdec2,tblptrh
  3367  00FA74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3368  00FA74  6AF8               	clrf	tblptru,c
  3369  00FA76                     	endif
  3370  00FA76                     	if	0	;tblptru may be non-zero
  3371  00FA76                     	endif
  3372  00FA76  0008               	tblrd		*
  3373  00FA78  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  3374  00FA7C                     
  3375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  3376  00FA7C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3377  00FA80  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3378  00FA84  2ADE               	incf	postinc2,f,c
  3379  00FA86  0E00               	movlw	0
  3380  00FA88  22DD               	addwfc	postdec2,f,c
  3381  00FA8A                     
  3382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3383  00FA8A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3384  00FA8E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3385  00FA92  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3386  00FA96  0E02               	movlw	2
  3387  00FA98  26DE               	addwf	postinc2,f,c
  3388  00FA9A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3389  00FA9E  0E00               	movlw	0
  3390  00FAA0  22DD               	addwfc	postdec2,f,c
  3391  00FAA2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3392  00FAA6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3393  00FAAA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3394  00FAAE  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3395  00FAB2  C04D  F06D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3396  00FAB6  C04E  F06E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3397  00FABA  0100               	movlb	0	; () banked
  3398  00FABC  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3399  00FABE  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3400  00FAC0  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3401  00FAC2  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3402  00FAC4  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3403  00FAC6  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3404  00FAC8                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  3407  00FAC8  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3408  00FACC  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3409  00FAD0  C06D  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3410  00FAD4  C06E  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3411  00FAD8  C06F  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3412  00FADC  C070  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3413  00FAE0  C071  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3414  00FAE4  C072  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3415  00FAE8  C073  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3416  00FAEC  C074  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3417  00FAF0  C06C  F028         	movff	vfpfcnvrt@c,xtoa@x
  3418  00FAF4  EC92  F074         	call	_xtoa	;wreg free
  3419  00FAF8  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3420  00FAFC  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3421  00FB00  EF6A  F07E         	goto	l1118
  3422  00FB04                     l2769:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1285:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
  3425  00FB04  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  00FB08  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  00FB0C  CFDE F001          	movff	postinc2,strncmp@_l
  3428  00FB10  CFDD F002          	movff	postdec2,strncmp@_l+1
  3429  00FB14  0EFB               	movlw	low STR_66
  3430  00FB16  6E03               	movwf	strncmp@_r^0,c
  3431  00FB18  0EFF               	movlw	high STR_66
  3432  00FB1A  6E04               	movwf	(strncmp@_r+1)^0,c
  3433  00FB1C  0E00               	movlw	0
  3434  00FB1E  6E06               	movwf	(strncmp@n+1)^0,c
  3435  00FB20  0E02               	movlw	2
  3436  00FB22  6E05               	movwf	strncmp@n^0,c
  3437  00FB24  EC61  F070         	call	_strncmp	;wreg free
  3438  00FB28  5001               	movf	?_strncmp^0,w,c
  3439  00FB2A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3440  00FB2C  B4D8               	btfsc	status,2,c
  3441  00FB2E  EF9B  F07D         	goto	u2481
  3442  00FB32  EF9D  F07D         	goto	u2480
  3443  00FB36                     u2481:
  3444  00FB36  EFB8  F07D         	goto	l2773
  3445  00FB3A                     u2480:
  3446  00FB3A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3447  00FB3E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  00FB42  CFDE F001          	movff	postinc2,strncmp@_l
  3449  00FB46  CFDD F002          	movff	postdec2,strncmp@_l+1
  3450  00FB4A  0EEF               	movlw	low STR_70
  3451  00FB4C  6E03               	movwf	strncmp@_r^0,c
  3452  00FB4E  0EFF               	movlw	high STR_70
  3453  00FB50  6E04               	movwf	(strncmp@_r+1)^0,c
  3454  00FB52  0E00               	movlw	0
  3455  00FB54  6E06               	movwf	(strncmp@n+1)^0,c
  3456  00FB56  0E02               	movlw	2
  3457  00FB58  6E05               	movwf	strncmp@n^0,c
  3458  00FB5A  EC61  F070         	call	_strncmp	;wreg free
  3459  00FB5E  5001               	movf	?_strncmp^0,w,c
  3460  00FB60  1002               	iorwf	(?_strncmp+1)^0,w,c
  3461  00FB62  A4D8               	btfss	status,2,c
  3462  00FB64  EFB6  F07D         	goto	u2491
  3463  00FB68  EFB8  F07D         	goto	u2490
  3464  00FB6C                     u2491:
  3465  00FB6C  EF17  F07E         	goto	l2783
  3466  00FB70                     u2490:
  3467  00FB70                     l2773:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1286: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1288:             c = (*fmt)
      +                          [1];
  3470  00FB70  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  00FB74  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  00FB78  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3473  00FB7C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3474  00FB80  0E01               	movlw	1
  3475  00FB82  264B               	addwf	??_vfpfcnvrt^0,f,c
  3476  00FB84  0E00               	movlw	0
  3477  00FB86  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3478  00FB88  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3479  00FB8C  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3480  00FB90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3481  00FB90  6AF8               	clrf	tblptru,c
  3482  00FB92                     	endif
  3483  00FB92                     	if	0	;tblptru may be non-zero
  3484  00FB92                     	endif
  3485  00FB92  0008               	tblrd		*
  3486  00FB94  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  3487  00FB98                     
  3488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1289:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  3489  00FB98  0E02               	movlw	2
  3490  00FB9A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3491  00FB9E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3492  00FBA2  26DE               	addwf	postinc2,f,c
  3493  00FBA4  0E00               	movlw	0
  3494  00FBA6  22DD               	addwfc	postdec2,f,c
  3495  00FBA8                     
  3496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1290:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  3497  00FBA8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3498  00FBAC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3499  00FBB0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3500  00FBB4  0E04               	movlw	4
  3501  00FBB6  26DE               	addwf	postinc2,f,c
  3502  00FBB8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3503  00FBBC  0E00               	movlw	0
  3504  00FBBE  22DD               	addwfc	postdec2,f,c
  3505  00FBC0  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3506  00FBC4  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3507  00FBC8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3508  00FBCC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+3
  3509  00FBD0  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+4
  3510  00FBD4  CFDE F050          	movff	postinc2,??_vfpfcnvrt+5
  3511  00FBD8  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3512  00FBDA  0100               	movlb	0	; () banked
  3513  00FBDC  6F6D               	movwf	vfpfcnvrt@llu& (0+255),b
  3514  00FBDE  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  3515  00FBE0  6F6E               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  3516  00FBE2  504F               	movf	(??_vfpfcnvrt+4)^0,w,c
  3517  00FBE4  6F6F               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  3518  00FBE6  5050               	movf	(??_vfpfcnvrt+5)^0,w,c
  3519  00FBE8  6F70               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  3520  00FBEA  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3521  00FBEC  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3522  00FBEE  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3523  00FBF0  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3524  00FBF2                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1292:            
      +                           return xtoa(fp, llu, c);
  3527  00FBF2  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3528  00FBF6  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3529  00FBFA  C06D  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3530  00FBFE  C06E  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3531  00FC02  C06F  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3532  00FC06  C070  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3533  00FC0A  C071  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3534  00FC0E  C072  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3535  00FC12  C073  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3536  00FC16  C074  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3537  00FC1A  C06C  F028         	movff	vfpfcnvrt@c,xtoa@x
  3538  00FC1E  EC92  F074         	call	_xtoa	;wreg free
  3539  00FC22  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3540  00FC26  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3541  00FC2A  EF6A  F07E         	goto	l1118
  3542  00FC2E                     l2783:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  3545  00FC2E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  00FC32  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  00FC36  CFDE FFF6          	movff	postinc2,tblptrl
  3548  00FC3A  CFDD FFF7          	movff	postdec2,tblptrh
  3549  00FC3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3550  00FC3E  6AF8               	clrf	tblptru,c
  3551  00FC40                     	endif
  3552  00FC40                     	if	0	;tblptru may be non-zero
  3553  00FC40                     	endif
  3554  00FC40  0008               	tblrd		*
  3555  00FC42  50F5               	movf	tablat,w,c
  3556  00FC44  0A25               	xorlw	37
  3557  00FC46  A4D8               	btfss	status,2,c
  3558  00FC48  EF28  F07E         	goto	u2501
  3559  00FC4C  EF2A  F07E         	goto	u2500
  3560  00FC50                     u2501:
  3561  00FC50  EF41  F07E         	goto	l2793
  3562  00FC54                     u2500:
  3563  00FC54                     
  3564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  3565  00FC54  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3566  00FC58  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3567  00FC5C  2ADE               	incf	postinc2,f,c
  3568  00FC5E  0E00               	movlw	0
  3569  00FC60  22DD               	addwfc	postdec2,f,c
  3570  00FC62                     
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  3572  00FC62  0E00               	movlw	0
  3573  00FC64  6E04               	movwf	(fputc@c+1)^0,c
  3574  00FC66  0E25               	movlw	37
  3575  00FC68  6E03               	movwf	fputc@c^0,c
  3576  00FC6A  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3577  00FC6E  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3578  00FC72  EC4B  F06F         	call	_fputc	;wreg free
  3579  00FC76                     l2789:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  3582  00FC76  0E00               	movlw	0
  3583  00FC78  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3584  00FC7A  0E01               	movlw	1
  3585  00FC7C  6E45               	movwf	?_vfpfcnvrt^0,c
  3586  00FC7E  EF6A  F07E         	goto	l1118
  3587  00FC82                     l2793:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  3590  00FC82  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3591  00FC86  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3592  00FC8A  2ADE               	incf	postinc2,f,c
  3593  00FC8C  0E00               	movlw	0
  3594  00FC8E  22DD               	addwfc	postdec2,f,c
  3595  00FC90                     
  3596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  3597  00FC90  0E00               	movlw	0
  3598  00FC92  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3599  00FC94  0E00               	movlw	0
  3600  00FC96  6E45               	movwf	?_vfpfcnvrt^0,c
  3601  00FC98  EF6A  F07E         	goto	l1118
  3602  00FC9C                     l2799:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3605  00FC9C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  00FCA0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  00FCA4  CFDE FFF6          	movff	postinc2,tblptrl
  3608  00FCA8  CFDD FFF7          	movff	postdec2,tblptrh
  3609  00FCAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3610  00FCAC  6AF8               	clrf	tblptru,c
  3611  00FCAE                     	endif
  3612  00FCAE                     	if	0	;tblptru may be non-zero
  3613  00FCAE                     	endif
  3614  00FCAE  0008               	tblrd		*
  3615  00FCB0  50F5               	movf	tablat,w,c
  3616  00FCB2  6E03               	movwf	fputc@c^0,c
  3617  00FCB4  6A04               	clrf	(fputc@c+1)^0,c
  3618  00FCB6  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3619  00FCBA  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3620  00FCBE  EC4B  F06F         	call	_fputc	;wreg free
  3621  00FCC2                     
  3622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3623  00FCC2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3624  00FCC6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3625  00FCCA  2ADE               	incf	postinc2,f,c
  3626  00FCCC  0E00               	movlw	0
  3627  00FCCE  22DD               	addwfc	postdec2,f,c
  3628  00FCD0  EF3B  F07E         	goto	l2789
  3629  00FCD4                     l1118:
  3630  00FCD4  0012               	return		;funcret
  3631  00FCD6                     __end_of_vfpfcnvrt:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _xtoa *****************
  3635 ;; Defined at:
  3636 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3639 ;;		 -> NULL(0), 
  3640 ;;  d               8   31[COMRAM] unsigned long long 
  3641 ;;  x               1   39[COMRAM] unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  n               8   56[COMRAM] unsigned long long 
  3644 ;;  c               2   66[COMRAM] int 
  3645 ;;  i               2   64[COMRAM] int 
  3646 ;;  w               2   54[COMRAM] int 
  3647 ;;  p               2   52[COMRAM] int 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2   29[COMRAM] int 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:       39 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    5
  3664 ;; This function calls:
  3665 ;;		_isalpha
  3666 ;;		_isupper
  3667 ;;		_pad
  3668 ;;		_toupper
  3669 ;; This function is called by:
  3670 ;;		_vfpfcnvrt
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text4
  3675  00E924                     __ptext4:
  3676                           	callstack 0
  3677  00E924                     _xtoa:
  3678                           	callstack 22
  3679  00E924                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  3681  00E924  0100               	movlb	0	; () banked
  3682  00E926  BF97               	btfsc	(_prec+1)& (0+255),7,b
  3683  00E928  EF98  F074         	goto	u2021
  3684  00E92C  EF9A  F074         	goto	u2020
  3685  00E930                     u2021:
  3686  00E930  EF9B  F074         	goto	l2523
  3687  00E934                     u2020:
  3688  00E934                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  3691  00E934  9398               	bcf	_flags& (0+255),1,b
  3692  00E936                     l2523:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  3696  00E936  BF97               	btfsc	(_prec+1)& (0+255),7,b
  3697  00E938  EFA8  F074         	goto	u2030
  3698  00E93C  5197               	movf	(_prec+1)& (0+255),w,b
  3699  00E93E  E106               	bnz	u2031
  3700  00E940  0596               	decf	_prec& (0+255),w,b
  3701  00E942  B0D8               	btfsc	status,0,c
  3702  00E944  EFA6  F074         	goto	u2031
  3703  00E948  EFA8  F074         	goto	u2030
  3704  00E94C                     u2031:
  3705  00E94C  EFAE  F074         	goto	l1066
  3706  00E950                     u2030:
  3707  00E950                     
  3708                           ; BSR set to: 0
  3709  00E950  0E00               	movlw	0
  3710  00E952  6E36               	movwf	(xtoa@p+1)^0,c
  3711  00E954  0E01               	movlw	1
  3712  00E956  6E35               	movwf	xtoa@p^0,c
  3713  00E958  EFB2  F074         	goto	l1068
  3714  00E95C                     l1066:
  3715                           
  3716                           ; BSR set to: 0
  3717  00E95C  C096  F035         	movff	_prec,xtoa@p
  3718  00E960  C097  F036         	movff	_prec+1,xtoa@p+1
  3719  00E964                     l1068:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  3723  00E964  C094  F037         	movff	_width,xtoa@w
  3724  00E968  C095  F038         	movff	_width+1,xtoa@w+1
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  3727  00E96C  A998               	btfss	_flags& (0+255),4,b
  3728  00E96E  EFBB  F074         	goto	u2041
  3729  00E972  EFBD  F074         	goto	u2040
  3730  00E976                     u2041:
  3731  00E976  EFC1  F074         	goto	l2529
  3732  00E97A                     u2040:
  3733  00E97A                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  3736  00E97A  0EFE               	movlw	254
  3737  00E97C  2637               	addwf	xtoa@w^0,f,c
  3738  00E97E  0EFF               	movlw	255
  3739  00E980  2238               	addwfc	(xtoa@w+1)^0,f,c
  3740  00E982                     l2529:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  3744  00E982  C020  F039         	movff	xtoa@d,xtoa@n
  3745  00E986  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  3746  00E98A  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  3747  00E98E  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  3748  00E992  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  3749  00E996  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  3750  00E99A  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  3751  00E99E  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  3752  00E9A2                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  3755  00E9A2  0E00               	movlw	0
  3756  00E9A4  6E42               	movwf	(xtoa@i+1)^0,c
  3757  00E9A6  0E1F               	movlw	31
  3758  00E9A8  6E41               	movwf	xtoa@i^0,c
  3759  00E9AA                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  3762  00E9AA  0E00               	movlw	0
  3763  00E9AC  6FC1               	movwf	(_dbuf+31)& (0+255),b
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3766  00E9AE  EF8C  F075         	goto	l2565
  3767  00E9B2                     l2535:
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  3770  00E9B2  0641               	decf	xtoa@i^0,f,c
  3771  00E9B4  A0D8               	btfss	status,0,c
  3772  00E9B6  0642               	decf	(xtoa@i+1)^0,f,c
  3773  00E9B8                     
  3774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  3775  00E9B8  0E0F               	movlw	15
  3776  00E9BA  1439               	andwf	xtoa@n^0,w,c
  3777  00E9BC  6E43               	movwf	xtoa@c^0,c
  3778  00E9BE  6A44               	clrf	(xtoa@c+1)^0,c
  3779  00E9C0                     
  3780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  3781  00E9C0  BE44               	btfsc	(xtoa@c+1)^0,7,c
  3782  00E9C2  EFEC  F074         	goto	u2051
  3783  00E9C6  5044               	movf	(xtoa@c+1)^0,w,c
  3784  00E9C8  E109               	bnz	u2050
  3785  00E9CA  0E0A               	movlw	10
  3786  00E9CC  5C43               	subwf	xtoa@c^0,w,c
  3787  00E9CE  A0D8               	btfss	status,0,c
  3788  00E9D0  EFEC  F074         	goto	u2051
  3789  00E9D4  EFEE  F074         	goto	u2050
  3790  00E9D8                     u2051:
  3791  00E9D8  EFF6  F074         	goto	l2543
  3792  00E9DC                     u2050:
  3793  00E9DC  0E57               	movlw	87
  3794  00E9DE  2443               	addwf	xtoa@c^0,w,c
  3795  00E9E0  6E43               	movwf	xtoa@c^0,c
  3796  00E9E2  0E00               	movlw	0
  3797  00E9E4  2044               	addwfc	(xtoa@c+1)^0,w,c
  3798  00E9E6  6E44               	movwf	(xtoa@c+1)^0,c
  3799  00E9E8  EFFC  F074         	goto	l1075
  3800  00E9EC                     l2543:
  3801  00E9EC  0E30               	movlw	48
  3802  00E9EE  2443               	addwf	xtoa@c^0,w,c
  3803  00E9F0  6E43               	movwf	xtoa@c^0,c
  3804  00E9F2  0E00               	movlw	0
  3805  00E9F4  2044               	addwfc	(xtoa@c+1)^0,w,c
  3806  00E9F6  6E44               	movwf	(xtoa@c+1)^0,c
  3807  00E9F8                     l1075:
  3808  00E9F8  0EBF               	movlw	191
  3809  00E9FA  6E29               	movwf	??_xtoa^0,c
  3810  00E9FC  0EFF               	movlw	255
  3811  00E9FE  6E2A               	movwf	(??_xtoa+1)^0,c
  3812  00EA00  5028               	movf	xtoa@x^0,w,c
  3813  00EA02  6E2B               	movwf	(??_xtoa+2)^0,c
  3814  00EA04  6A2C               	clrf	(??_xtoa+3)^0,c
  3815  00EA06  5029               	movf	??_xtoa^0,w,c
  3816  00EA08  262B               	addwf	(??_xtoa+2)^0,f,c
  3817  00EA0A  502A               	movf	(??_xtoa+1)^0,w,c
  3818  00EA0C  222C               	addwfc	(??_xtoa+3)^0,f,c
  3819  00EA0E  502C               	movf	(??_xtoa+3)^0,w,c
  3820  00EA10  E10A               	bnz	u2060
  3821  00EA12  0E1A               	movlw	26
  3822  00EA14  5C2B               	subwf	(??_xtoa+2)^0,w,c
  3823  00EA16  A0D8               	btfss	status,0,c
  3824  00EA18  EF10  F075         	goto	u2061
  3825  00EA1C  EF13  F075         	goto	u2060
  3826  00EA20                     u2061:
  3827  00EA20  0E01               	movlw	1
  3828  00EA22  EF14  F075         	goto	u2070
  3829  00EA26                     u2060:
  3830  00EA26  0E00               	movlw	0
  3831  00EA28                     u2070:
  3832  00EA28  6E31               	movwf	_xtoa$1271^0,c
  3833  00EA2A  6A32               	clrf	(_xtoa$1271+1)^0,c
  3834  00EA2C  5031               	movf	_xtoa$1271^0,w,c
  3835  00EA2E  1032               	iorwf	(_xtoa$1271+1)^0,w,c
  3836  00EA30  B4D8               	btfsc	status,2,c
  3837  00EA32  EF1D  F075         	goto	u2081
  3838  00EA36  EF1F  F075         	goto	u2080
  3839  00EA3A                     u2081:
  3840  00EA3A  EF4F  F075         	goto	l2557
  3841  00EA3E                     u2080:
  3842  00EA3E  0E9F               	movlw	159
  3843  00EA40  6E29               	movwf	??_xtoa^0,c
  3844  00EA42  0EFF               	movlw	255
  3845  00EA44  6E2A               	movwf	(??_xtoa+1)^0,c
  3846  00EA46  0E20               	movlw	32
  3847  00EA48  1043               	iorwf	xtoa@c^0,w,c
  3848  00EA4A  6E2B               	movwf	(??_xtoa+2)^0,c
  3849  00EA4C  0E00               	movlw	0
  3850  00EA4E  1044               	iorwf	(xtoa@c+1)^0,w,c
  3851  00EA50  6E2C               	movwf	(??_xtoa+3)^0,c
  3852  00EA52  5029               	movf	??_xtoa^0,w,c
  3853  00EA54  262B               	addwf	(??_xtoa+2)^0,f,c
  3854  00EA56  502A               	movf	(??_xtoa+1)^0,w,c
  3855  00EA58  222C               	addwfc	(??_xtoa+3)^0,f,c
  3856  00EA5A  502C               	movf	(??_xtoa+3)^0,w,c
  3857  00EA5C  E10A               	bnz	u2090
  3858  00EA5E  0E1A               	movlw	26
  3859  00EA60  5C2B               	subwf	(??_xtoa+2)^0,w,c
  3860  00EA62  A0D8               	btfss	status,0,c
  3861  00EA64  EF36  F075         	goto	u2091
  3862  00EA68  EF39  F075         	goto	u2090
  3863  00EA6C                     u2091:
  3864  00EA6C  0E01               	movlw	1
  3865  00EA6E  EF3A  F075         	goto	u2100
  3866  00EA72                     u2090:
  3867  00EA72  0E00               	movlw	0
  3868  00EA74                     u2100:
  3869  00EA74  6E33               	movwf	_xtoa$1272^0,c
  3870  00EA76  6A34               	clrf	(_xtoa$1272+1)^0,c
  3871  00EA78  5033               	movf	_xtoa$1272^0,w,c
  3872  00EA7A  1034               	iorwf	(_xtoa$1272+1)^0,w,c
  3873  00EA7C  B4D8               	btfsc	status,2,c
  3874  00EA7E  EF43  F075         	goto	u2111
  3875  00EA82  EF45  F075         	goto	u2110
  3876  00EA86                     u2111:
  3877  00EA86  EF4F  F075         	goto	l2557
  3878  00EA8A                     u2110:
  3879  00EA8A                     
  3880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  3881  00EA8A  C043  F007         	movff	xtoa@c,toupper@c
  3882  00EA8E  C044  F008         	movff	xtoa@c+1,toupper@c+1
  3883  00EA92  ECEA  F06E         	call	_toupper	;wreg free
  3884  00EA96  C007  F043         	movff	?_toupper,xtoa@c
  3885  00EA9A  C008  F044         	movff	?_toupper+1,xtoa@c+1
  3886  00EA9E                     l2557:
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  3889  00EA9E  0EA2               	movlw	low _dbuf
  3890  00EAA0  2441               	addwf	xtoa@i^0,w,c
  3891  00EAA2  6ED9               	movwf	fsr2l,c
  3892  00EAA4  0E00               	movlw	high _dbuf
  3893  00EAA6  2042               	addwfc	(xtoa@i+1)^0,w,c
  3894  00EAA8  6EDA               	movwf	fsr2h,c
  3895  00EAAA  C043  FFDF         	movff	xtoa@c,indf2
  3896  00EAAE                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  3898  00EAAE  0635               	decf	xtoa@p^0,f,c
  3899  00EAB0  A0D8               	btfss	status,0,c
  3900  00EAB2  0636               	decf	(xtoa@p+1)^0,f,c
  3901  00EAB4                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  3903  00EAB4  0637               	decf	xtoa@w^0,f,c
  3904  00EAB6  A0D8               	btfss	status,0,c
  3905  00EAB8  0638               	decf	(xtoa@w+1)^0,f,c
  3906  00EABA                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  3908  00EABA  C039  F029         	movff	xtoa@n,??_xtoa
  3909  00EABE  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  3910  00EAC2  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  3911  00EAC6  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  3912  00EACA  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  3913  00EACE  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  3914  00EAD2  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  3915  00EAD6  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  3916  00EADA  0E05               	movlw	5
  3917  00EADC  EF79  F075         	goto	u2120
  3918  00EAE0                     u2125:
  3919  00EAE0  90D8               	bcf	status,0,c
  3920  00EAE2  3230               	rrcf	(??_xtoa+7)^0,f,c
  3921  00EAE4  322F               	rrcf	(??_xtoa+6)^0,f,c
  3922  00EAE6  322E               	rrcf	(??_xtoa+5)^0,f,c
  3923  00EAE8  322D               	rrcf	(??_xtoa+4)^0,f,c
  3924  00EAEA  322C               	rrcf	(??_xtoa+3)^0,f,c
  3925  00EAEC  322B               	rrcf	(??_xtoa+2)^0,f,c
  3926  00EAEE  322A               	rrcf	(??_xtoa+1)^0,f,c
  3927  00EAF0  3229               	rrcf	??_xtoa^0,f,c
  3928  00EAF2                     u2120:
  3929  00EAF2  2EE8               	decfsz	wreg,f,c
  3930  00EAF4  EF70  F075         	goto	u2125
  3931  00EAF8  C029  F039         	movff	??_xtoa,xtoa@n
  3932  00EAFC  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  3933  00EB00  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  3934  00EB04  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  3935  00EB08  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  3936  00EB0C  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  3937  00EB10  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  3938  00EB14  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  3939  00EB18                     l2565:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3942  00EB18  BE42               	btfsc	(xtoa@i+1)^0,7,c
  3943  00EB1A  EF98  F075         	goto	u2131
  3944  00EB1E  5042               	movf	(xtoa@i+1)^0,w,c
  3945  00EB20  E109               	bnz	u2130
  3946  00EB22  0E02               	movlw	2
  3947  00EB24  5C41               	subwf	xtoa@i^0,w,c
  3948  00EB26  A0D8               	btfss	status,0,c
  3949  00EB28  EF98  F075         	goto	u2131
  3950  00EB2C  EF9A  F075         	goto	u2130
  3951  00EB30                     u2131:
  3952  00EB30  EFCB  F075         	goto	l1089
  3953  00EB34                     u2130:
  3954  00EB34  5039               	movf	xtoa@n^0,w,c
  3955  00EB36  103A               	iorwf	(xtoa@n+1)^0,w,c
  3956  00EB38  103B               	iorwf	(xtoa@n+2)^0,w,c
  3957  00EB3A  103C               	iorwf	(xtoa@n+3)^0,w,c
  3958  00EB3C  103D               	iorwf	(xtoa@n+4)^0,w,c
  3959  00EB3E  103E               	iorwf	(xtoa@n+5)^0,w,c
  3960  00EB40  103F               	iorwf	(xtoa@n+6)^0,w,c
  3961  00EB42  1040               	iorwf	(xtoa@n+7)^0,w,c
  3962  00EB44  A4D8               	btfss	status,2,c
  3963  00EB46  EFA7  F075         	goto	u2141
  3964  00EB4A  EFA9  F075         	goto	u2140
  3965  00EB4E                     u2141:
  3966  00EB4E  EFD9  F074         	goto	l2535
  3967  00EB52                     u2140:
  3968  00EB52  BE36               	btfsc	(xtoa@p+1)^0,7,c
  3969  00EB54  EFB6  F075         	goto	u2150
  3970  00EB58  5036               	movf	(xtoa@p+1)^0,w,c
  3971  00EB5A  E106               	bnz	u2151
  3972  00EB5C  0435               	decf	xtoa@p^0,w,c
  3973  00EB5E  B0D8               	btfsc	status,0,c
  3974  00EB60  EFB4  F075         	goto	u2151
  3975  00EB64  EFB6  F075         	goto	u2150
  3976  00EB68                     u2151:
  3977  00EB68  EFD9  F074         	goto	l2535
  3978  00EB6C                     u2150:
  3979  00EB6C  BE38               	btfsc	(xtoa@w+1)^0,7,c
  3980  00EB6E  EFC1  F075         	goto	u2161
  3981  00EB72  5038               	movf	(xtoa@w+1)^0,w,c
  3982  00EB74  E108               	bnz	u2160
  3983  00EB76  0437               	decf	xtoa@w^0,w,c
  3984  00EB78  A0D8               	btfss	status,0,c
  3985  00EB7A  EFC1  F075         	goto	u2161
  3986  00EB7E  EFC3  F075         	goto	u2160
  3987  00EB82                     u2161:
  3988  00EB82  EFCB  F075         	goto	l1089
  3989  00EB86                     u2160:
  3990  00EB86  0100               	movlb	0	; () banked
  3991  00EB88  B398               	btfsc	_flags& (0+255),1,b
  3992  00EB8A  EFC9  F075         	goto	u2171
  3993  00EB8E  EFCB  F075         	goto	u2170
  3994  00EB92                     u2171:
  3995  00EB92  EFD9  F074         	goto	l2535
  3996  00EB96                     u2170:
  3997  00EB96                     l1089:
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4000  00EB96  0100               	movlb	0	; () banked
  4001  00EB98  A998               	btfss	_flags& (0+255),4,b
  4002  00EB9A  EFD1  F075         	goto	u2181
  4003  00EB9E  EFD3  F075         	goto	u2180
  4004  00EBA2                     u2181:
  4005  00EBA2  EFE9  F075         	goto	l2581
  4006  00EBA6                     u2180:
  4007  00EBA6                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  4010  00EBA6  0641               	decf	xtoa@i^0,f,c
  4011  00EBA8  A0D8               	btfss	status,0,c
  4012  00EBAA  0642               	decf	(xtoa@i+1)^0,f,c
  4013  00EBAC                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  4016  00EBAC  0EA2               	movlw	low _dbuf
  4017  00EBAE  2441               	addwf	xtoa@i^0,w,c
  4018  00EBB0  6ED9               	movwf	fsr2l,c
  4019  00EBB2  0E00               	movlw	high _dbuf
  4020  00EBB4  2042               	addwfc	(xtoa@i+1)^0,w,c
  4021  00EBB6  6EDA               	movwf	fsr2h,c
  4022  00EBB8  C028  FFDF         	movff	xtoa@x,indf2
  4023  00EBBC                     
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  4026  00EBBC  0641               	decf	xtoa@i^0,f,c
  4027  00EBBE  A0D8               	btfss	status,0,c
  4028  00EBC0  0642               	decf	(xtoa@i+1)^0,f,c
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  4031  00EBC2  0EA2               	movlw	low _dbuf
  4032  00EBC4  2441               	addwf	xtoa@i^0,w,c
  4033  00EBC6  6ED9               	movwf	fsr2l,c
  4034  00EBC8  0E00               	movlw	high _dbuf
  4035  00EBCA  2042               	addwfc	(xtoa@i+1)^0,w,c
  4036  00EBCC  6EDA               	movwf	fsr2h,c
  4037  00EBCE  0E30               	movlw	48
  4038  00EBD0  6EDF               	movwf	indf2,c
  4039  00EBD2                     l2581:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  4043  00EBD2  C01E  F013         	movff	xtoa@fp,pad@fp
  4044  00EBD6  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  4045  00EBDA  0EA2               	movlw	low _dbuf
  4046  00EBDC  2441               	addwf	xtoa@i^0,w,c
  4047  00EBDE  6E15               	movwf	pad@buf^0,c
  4048  00EBE0  0E00               	movlw	high _dbuf
  4049  00EBE2  2042               	addwfc	(xtoa@i+1)^0,w,c
  4050  00EBE4  6E16               	movwf	(pad@buf+1)^0,c
  4051  00EBE6  C037  F017         	movff	xtoa@w,pad@p
  4052  00EBEA  C038  F018         	movff	xtoa@w+1,pad@p+1
  4053  00EBEE  EC96  F06F         	call	_pad	;wreg free
  4054  00EBF2  C013  F01E         	movff	?_pad,?_xtoa
  4055  00EBF6  C014  F01F         	movff	?_pad+1,?_xtoa+1
  4056  00EBFA  0012               	return		;funcret
  4057  00EBFC                     __end_of_xtoa:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _toupper *****************
  4061 ;; Defined at:
  4062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  c               2    6[COMRAM] int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    6[COMRAM] int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;Total ram usage:        8 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    1
  4083 ;; This function calls:
  4084 ;;		_islower
  4085 ;; This function is called by:
  4086 ;;		_xtoa
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text5
  4091  00DDD4                     __ptext5:
  4092                           	callstack 0
  4093  00DDD4                     _toupper:
  4094                           	callstack 25
  4095  00DDD4  0E9F               	movlw	159
  4096  00DDD6  6E09               	movwf	??_toupper^0,c
  4097  00DDD8  0EFF               	movlw	255
  4098  00DDDA  6E0A               	movwf	(??_toupper+1)^0,c
  4099  00DDDC  C007  F00B         	movff	toupper@c,??_toupper+2
  4100  00DDE0  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4101  00DDE4  5009               	movf	??_toupper^0,w,c
  4102  00DDE6  260B               	addwf	(??_toupper+2)^0,f,c
  4103  00DDE8  500A               	movf	(??_toupper+1)^0,w,c
  4104  00DDEA  220C               	addwfc	(??_toupper+3)^0,f,c
  4105  00DDEC  500C               	movf	(??_toupper+3)^0,w,c
  4106  00DDEE  E10A               	bnz	u1720
  4107  00DDF0  0E1A               	movlw	26
  4108  00DDF2  5C0B               	subwf	(??_toupper+2)^0,w,c
  4109  00DDF4  A0D8               	btfss	status,0,c
  4110  00DDF6  EFFF  F06E         	goto	u1721
  4111  00DDFA  EF02  F06F         	goto	u1720
  4112  00DDFE                     u1721:
  4113  00DDFE  0E01               	movlw	1
  4114  00DE00  EF03  F06F         	goto	u1730
  4115  00DE04                     u1720:
  4116  00DE04  0E00               	movlw	0
  4117  00DE06                     u1730:
  4118  00DE06  6E0D               	movwf	_toupper$1414^0,c
  4119  00DE08  6A0E               	clrf	(_toupper$1414+1)^0,c
  4120  00DE0A  500D               	movf	_toupper$1414^0,w,c
  4121  00DE0C  100E               	iorwf	(_toupper$1414+1)^0,w,c
  4122  00DE0E  B4D8               	btfsc	status,2,c
  4123  00DE10  EF0C  F06F         	goto	u1741
  4124  00DE14  EF0E  F06F         	goto	u1740
  4125  00DE18                     u1741:
  4126  00DE18  EF14  F06F         	goto	l1243
  4127  00DE1C                     u1740:
  4128  00DE1C  0E5F               	movlw	95
  4129  00DE1E  1407               	andwf	toupper@c^0,w,c
  4130  00DE20  6E07               	movwf	?_toupper^0,c
  4131  00DE22  6A08               	clrf	(?_toupper+1)^0,c
  4132  00DE24  EF18  F06F         	goto	l1248
  4133  00DE28                     l1243:
  4134  00DE28  C007  F007         	movff	toupper@c,?_toupper
  4135  00DE2C  C008  F008         	movff	toupper@c+1,?_toupper+1
  4136  00DE30                     l1248:
  4137  00DE30  0012               	return		;funcret
  4138  00DE32                     __end_of_toupper:
  4139                           	callstack 0
  4140                           
  4141 ;; *************** function _islower *****************
  4142 ;; Defined at:
  4143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  c               2    0[COMRAM] int 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[COMRAM] int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_toupper
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text6
  4171  00DBF2                     __ptext6:
  4172                           	callstack 0
  4173  00DBF2                     _islower:
  4174                           	callstack 25
  4175  00DBF2  0E9F               	movlw	159
  4176  00DBF4  6E03               	movwf	??_islower^0,c
  4177  00DBF6  0EFF               	movlw	255
  4178  00DBF8  6E04               	movwf	(??_islower+1)^0,c
  4179  00DBFA  C001  F005         	movff	islower@c,??_islower+2
  4180  00DBFE  C002  F006         	movff	islower@c+1,??_islower+3
  4181  00DC02  5003               	movf	??_islower^0,w,c
  4182  00DC04  2605               	addwf	(??_islower+2)^0,f,c
  4183  00DC06  5004               	movf	(??_islower+1)^0,w,c
  4184  00DC08  2206               	addwfc	(??_islower+3)^0,f,c
  4185  00DC0A  5006               	movf	(??_islower+3)^0,w,c
  4186  00DC0C  E10A               	bnz	u1410
  4187  00DC0E  0E1A               	movlw	26
  4188  00DC10  5C05               	subwf	(??_islower+2)^0,w,c
  4189  00DC12  A0D8               	btfss	status,0,c
  4190  00DC14  EF0E  F06E         	goto	u1411
  4191  00DC18  EF11  F06E         	goto	u1410
  4192  00DC1C                     u1411:
  4193  00DC1C  0E01               	movlw	1
  4194  00DC1E  EF12  F06E         	goto	u1420
  4195  00DC22                     u1410:
  4196  00DC22  0E00               	movlw	0
  4197  00DC24                     u1420:
  4198  00DC24  6E01               	movwf	?_islower^0,c
  4199  00DC26  6A02               	clrf	(?_islower+1)^0,c
  4200  00DC28  0012               	return		;funcret
  4201  00DC2A                     __end_of_islower:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function _isupper *****************
  4205 ;; Defined at:
  4206 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  c               2    0[COMRAM] int 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  2    0[COMRAM] int 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;Total ram usage:        6 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_xtoa
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text7
  4234  00DBBA                     __ptext7:
  4235                           	callstack 0
  4236  00DBBA                     _isupper:
  4237                           	callstack 26
  4238  00DBBA  0EBF               	movlw	191
  4239  00DBBC  6E03               	movwf	??_isupper^0,c
  4240  00DBBE  0EFF               	movlw	255
  4241  00DBC0  6E04               	movwf	(??_isupper+1)^0,c
  4242  00DBC2  C001  F005         	movff	isupper@c,??_isupper+2
  4243  00DBC6  C002  F006         	movff	isupper@c+1,??_isupper+3
  4244  00DBCA  5003               	movf	??_isupper^0,w,c
  4245  00DBCC  2605               	addwf	(??_isupper+2)^0,f,c
  4246  00DBCE  5004               	movf	(??_isupper+1)^0,w,c
  4247  00DBD0  2206               	addwfc	(??_isupper+3)^0,f,c
  4248  00DBD2  5006               	movf	(??_isupper+3)^0,w,c
  4249  00DBD4  E10A               	bnz	u1680
  4250  00DBD6  0E1A               	movlw	26
  4251  00DBD8  5C05               	subwf	(??_isupper+2)^0,w,c
  4252  00DBDA  A0D8               	btfss	status,0,c
  4253  00DBDC  EFF2  F06D         	goto	u1681
  4254  00DBE0  EFF5  F06D         	goto	u1680
  4255  00DBE4                     u1681:
  4256  00DBE4  0E01               	movlw	1
  4257  00DBE6  EFF6  F06D         	goto	u1690
  4258  00DBEA                     u1680:
  4259  00DBEA  0E00               	movlw	0
  4260  00DBEC                     u1690:
  4261  00DBEC  6E01               	movwf	?_isupper^0,c
  4262  00DBEE  6A02               	clrf	(?_isupper+1)^0,c
  4263  00DBF0  0012               	return		;funcret
  4264  00DBF2                     __end_of_isupper:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _isalpha *****************
  4268 ;; Defined at:
  4269 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  c               2    0[COMRAM] int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2    0[COMRAM] int 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:        6 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_xtoa
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text8
  4297  00DC2A                     __ptext8:
  4298                           	callstack 0
  4299  00DC2A                     _isalpha:
  4300                           	callstack 26
  4301  00DC2A  0E9F               	movlw	159
  4302  00DC2C  6E03               	movwf	??_isalpha^0,c
  4303  00DC2E  0EFF               	movlw	255
  4304  00DC30  6E04               	movwf	(??_isalpha+1)^0,c
  4305  00DC32  0E20               	movlw	32
  4306  00DC34  1001               	iorwf	isalpha@c^0,w,c
  4307  00DC36  6E05               	movwf	(??_isalpha+2)^0,c
  4308  00DC38  0E00               	movlw	0
  4309  00DC3A  1002               	iorwf	(isalpha@c+1)^0,w,c
  4310  00DC3C  6E06               	movwf	(??_isalpha+3)^0,c
  4311  00DC3E  5003               	movf	??_isalpha^0,w,c
  4312  00DC40  2605               	addwf	(??_isalpha+2)^0,f,c
  4313  00DC42  5004               	movf	(??_isalpha+1)^0,w,c
  4314  00DC44  2206               	addwfc	(??_isalpha+3)^0,f,c
  4315  00DC46  5006               	movf	(??_isalpha+3)^0,w,c
  4316  00DC48  E10A               	bnz	u1700
  4317  00DC4A  0E1A               	movlw	26
  4318  00DC4C  5C05               	subwf	(??_isalpha+2)^0,w,c
  4319  00DC4E  A0D8               	btfss	status,0,c
  4320  00DC50  EF2C  F06E         	goto	u1701
  4321  00DC54  EF2F  F06E         	goto	u1700
  4322  00DC58                     u1701:
  4323  00DC58  0E01               	movlw	1
  4324  00DC5A  EF30  F06E         	goto	u1710
  4325  00DC5E                     u1700:
  4326  00DC5E  0E00               	movlw	0
  4327  00DC60                     u1710:
  4328  00DC60  6E01               	movwf	?_isalpha^0,c
  4329  00DC62  6A02               	clrf	(?_isalpha+1)^0,c
  4330  00DC64  0012               	return		;funcret
  4331  00DC66                     __end_of_isalpha:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _utoa *****************
  4335 ;; Defined at:
  4336 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4339 ;;		 -> NULL(0), 
  4340 ;;  d               8   31[COMRAM] unsigned long long 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  n               8   51[COMRAM] unsigned long long 
  4343 ;;  i               2   59[COMRAM] int 
  4344 ;;  w               2   49[COMRAM] int 
  4345 ;;  p               2   47[COMRAM] int 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2   29[COMRAM] int 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:       32 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    5
  4362 ;; This function calls:
  4363 ;;		___lodiv
  4364 ;;		___lomod
  4365 ;;		_pad
  4366 ;; This function is called by:
  4367 ;;		_vfpfcnvrt
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text9
  4372  00E722                     __ptext9:
  4373                           	callstack 0
  4374  00E722                     _utoa:
  4375                           	callstack 22
  4376  00E722                     
  4377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4378  00E722  0100               	movlb	0	; () banked
  4379  00E724  BF97               	btfsc	(_prec+1)& (0+255),7,b
  4380  00E726  EF97  F073         	goto	u1951
  4381  00E72A  EF99  F073         	goto	u1950
  4382  00E72E                     u1951:
  4383  00E72E  EF9A  F073         	goto	l2487
  4384  00E732                     u1950:
  4385  00E732                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  4388  00E732  9398               	bcf	_flags& (0+255),1,b
  4389  00E734                     l2487:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  4393  00E734  BF97               	btfsc	(_prec+1)& (0+255),7,b
  4394  00E736  EFA7  F073         	goto	u1960
  4395  00E73A  5197               	movf	(_prec+1)& (0+255),w,b
  4396  00E73C  E106               	bnz	u1961
  4397  00E73E  0596               	decf	_prec& (0+255),w,b
  4398  00E740  B0D8               	btfsc	status,0,c
  4399  00E742  EFA5  F073         	goto	u1961
  4400  00E746  EFA7  F073         	goto	u1960
  4401  00E74A                     u1961:
  4402  00E74A  EFAD  F073         	goto	l1051
  4403  00E74E                     u1960:
  4404  00E74E                     
  4405                           ; BSR set to: 0
  4406  00E74E  0E00               	movlw	0
  4407  00E750  6E31               	movwf	(utoa@p+1)^0,c
  4408  00E752  0E01               	movlw	1
  4409  00E754  6E30               	movwf	utoa@p^0,c
  4410  00E756  EFB1  F073         	goto	l1053
  4411  00E75A                     l1051:
  4412                           
  4413                           ; BSR set to: 0
  4414  00E75A  C096  F030         	movff	_prec,utoa@p
  4415  00E75E  C097  F031         	movff	_prec+1,utoa@p+1
  4416  00E762                     l1053:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  4420  00E762  C094  F032         	movff	_width,utoa@w
  4421  00E766  C095  F033         	movff	_width+1,utoa@w+1
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  4424  00E76A  C020  F034         	movff	utoa@d,utoa@n
  4425  00E76E  C021  F035         	movff	utoa@d+1,utoa@n+1
  4426  00E772  C022  F036         	movff	utoa@d+2,utoa@n+2
  4427  00E776  C023  F037         	movff	utoa@d+3,utoa@n+3
  4428  00E77A  C024  F038         	movff	utoa@d+4,utoa@n+4
  4429  00E77E  C025  F039         	movff	utoa@d+5,utoa@n+5
  4430  00E782  C026  F03A         	movff	utoa@d+6,utoa@n+6
  4431  00E786  C027  F03B         	movff	utoa@d+7,utoa@n+7
  4432  00E78A                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  4435  00E78A  0E00               	movlw	0
  4436  00E78C  6E3D               	movwf	(utoa@i+1)^0,c
  4437  00E78E  0E1F               	movlw	31
  4438  00E790  6E3C               	movwf	utoa@i^0,c
  4439  00E792                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  4442  00E792  0E00               	movlw	0
  4443  00E794  6FC1               	movwf	(_dbuf+31)& (0+255),b
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4446  00E796  EF43  F074         	goto	l2505
  4447  00E79A                     l2495:
  4448                           
  4449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  4450  00E79A  063C               	decf	utoa@i^0,f,c
  4451  00E79C  A0D8               	btfss	status,0,c
  4452  00E79E  063D               	decf	(utoa@i+1)^0,f,c
  4453  00E7A0                     
  4454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  4455  00E7A0  0EA2               	movlw	low _dbuf
  4456  00E7A2  243C               	addwf	utoa@i^0,w,c
  4457  00E7A4  6ED9               	movwf	fsr2l,c
  4458  00E7A6  0E00               	movlw	high _dbuf
  4459  00E7A8  203D               	addwfc	(utoa@i+1)^0,w,c
  4460  00E7AA  6EDA               	movwf	fsr2h,c
  4461  00E7AC  C034  F001         	movff	utoa@n,___lomod@dividend
  4462  00E7B0  C035  F002         	movff	utoa@n+1,___lomod@dividend+1
  4463  00E7B4  C036  F003         	movff	utoa@n+2,___lomod@dividend+2
  4464  00E7B8  C037  F004         	movff	utoa@n+3,___lomod@dividend+3
  4465  00E7BC  C038  F005         	movff	utoa@n+4,___lomod@dividend+4
  4466  00E7C0  C039  F006         	movff	utoa@n+5,___lomod@dividend+5
  4467  00E7C4  C03A  F007         	movff	utoa@n+6,___lomod@dividend+6
  4468  00E7C8  C03B  F008         	movff	utoa@n+7,___lomod@dividend+7
  4469  00E7CC  0E0A               	movlw	10
  4470  00E7CE  6E09               	movwf	___lomod@divisor^0,c
  4471  00E7D0  0E00               	movlw	0
  4472  00E7D2  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4473  00E7D4  0E00               	movlw	0
  4474  00E7D6  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4475  00E7D8  0E00               	movlw	0
  4476  00E7DA  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4477  00E7DC  0E00               	movlw	0
  4478  00E7DE  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4479  00E7E0  0E00               	movlw	0
  4480  00E7E2  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4481  00E7E4  0E00               	movlw	0
  4482  00E7E6  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4483  00E7E8  0E00               	movlw	0
  4484  00E7EA  6E10               	movwf	(___lomod@divisor+7)^0,c
  4485  00E7EC  ECF9  F06F         	call	___lomod	;wreg free
  4486  00E7F0  C001  F028         	movff	?___lomod,??_utoa
  4487  00E7F4  C002  F029         	movff	?___lomod+1,??_utoa+1
  4488  00E7F8  C003  F02A         	movff	?___lomod+2,??_utoa+2
  4489  00E7FC  C004  F02B         	movff	?___lomod+3,??_utoa+3
  4490  00E800  C005  F02C         	movff	?___lomod+4,??_utoa+4
  4491  00E804  C006  F02D         	movff	?___lomod+5,??_utoa+5
  4492  00E808  C007  F02E         	movff	?___lomod+6,??_utoa+6
  4493  00E80C  C008  F02F         	movff	?___lomod+7,??_utoa+7
  4494  00E810  5028               	movf	??_utoa^0,w,c
  4495  00E812  0F30               	addlw	48
  4496  00E814  6EDF               	movwf	indf2,c
  4497  00E816                     
  4498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  4499  00E816  0630               	decf	utoa@p^0,f,c
  4500  00E818  A0D8               	btfss	status,0,c
  4501  00E81A  0631               	decf	(utoa@p+1)^0,f,c
  4502  00E81C                     
  4503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  4504  00E81C  0632               	decf	utoa@w^0,f,c
  4505  00E81E  A0D8               	btfss	status,0,c
  4506  00E820  0633               	decf	(utoa@w+1)^0,f,c
  4507  00E822                     
  4508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  4509  00E822  C034  F001         	movff	utoa@n,___lodiv@dividend
  4510  00E826  C035  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4511  00E82A  C036  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4512  00E82E  C037  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4513  00E832  C038  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4514  00E836  C039  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4515  00E83A  C03A  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4516  00E83E  C03B  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4517  00E842  0E0A               	movlw	10
  4518  00E844  6E09               	movwf	___lodiv@divisor^0,c
  4519  00E846  0E00               	movlw	0
  4520  00E848  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4521  00E84A  0E00               	movlw	0
  4522  00E84C  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4523  00E84E  0E00               	movlw	0
  4524  00E850  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4525  00E852  0E00               	movlw	0
  4526  00E854  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4527  00E856  0E00               	movlw	0
  4528  00E858  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4529  00E85A  0E00               	movlw	0
  4530  00E85C  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4531  00E85E  0E00               	movlw	0
  4532  00E860  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4533  00E862  ECD6  F070         	call	___lodiv	;wreg free
  4534  00E866  C001  F034         	movff	?___lodiv,utoa@n
  4535  00E86A  C002  F035         	movff	?___lodiv+1,utoa@n+1
  4536  00E86E  C003  F036         	movff	?___lodiv+2,utoa@n+2
  4537  00E872  C004  F037         	movff	?___lodiv+3,utoa@n+3
  4538  00E876  C005  F038         	movff	?___lodiv+4,utoa@n+4
  4539  00E87A  C006  F039         	movff	?___lodiv+5,utoa@n+5
  4540  00E87E  C007  F03A         	movff	?___lodiv+6,utoa@n+6
  4541  00E882  C008  F03B         	movff	?___lodiv+7,utoa@n+7
  4542  00E886                     l2505:
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4545  00E886  503C               	movf	utoa@i^0,w,c
  4546  00E888  103D               	iorwf	(utoa@i+1)^0,w,c
  4547  00E88A  B4D8               	btfsc	status,2,c
  4548  00E88C  EF4A  F074         	goto	u1971
  4549  00E890  EF4C  F074         	goto	u1970
  4550  00E894                     u1971:
  4551  00E894  EF7D  F074         	goto	l2515
  4552  00E898                     u1970:
  4553  00E898  5034               	movf	utoa@n^0,w,c
  4554  00E89A  1035               	iorwf	(utoa@n+1)^0,w,c
  4555  00E89C  1036               	iorwf	(utoa@n+2)^0,w,c
  4556  00E89E  1037               	iorwf	(utoa@n+3)^0,w,c
  4557  00E8A0  1038               	iorwf	(utoa@n+4)^0,w,c
  4558  00E8A2  1039               	iorwf	(utoa@n+5)^0,w,c
  4559  00E8A4  103A               	iorwf	(utoa@n+6)^0,w,c
  4560  00E8A6  103B               	iorwf	(utoa@n+7)^0,w,c
  4561  00E8A8  A4D8               	btfss	status,2,c
  4562  00E8AA  EF59  F074         	goto	u1981
  4563  00E8AE  EF5B  F074         	goto	u1980
  4564  00E8B2                     u1981:
  4565  00E8B2  EFCD  F073         	goto	l2495
  4566  00E8B6                     u1980:
  4567  00E8B6  BE31               	btfsc	(utoa@p+1)^0,7,c
  4568  00E8B8  EF68  F074         	goto	u1990
  4569  00E8BC  5031               	movf	(utoa@p+1)^0,w,c
  4570  00E8BE  E106               	bnz	u1991
  4571  00E8C0  0430               	decf	utoa@p^0,w,c
  4572  00E8C2  B0D8               	btfsc	status,0,c
  4573  00E8C4  EF66  F074         	goto	u1991
  4574  00E8C8  EF68  F074         	goto	u1990
  4575  00E8CC                     u1991:
  4576  00E8CC  EFCD  F073         	goto	l2495
  4577  00E8D0                     u1990:
  4578  00E8D0  BE33               	btfsc	(utoa@w+1)^0,7,c
  4579  00E8D2  EF73  F074         	goto	u2001
  4580  00E8D6  5033               	movf	(utoa@w+1)^0,w,c
  4581  00E8D8  E108               	bnz	u2000
  4582  00E8DA  0432               	decf	utoa@w^0,w,c
  4583  00E8DC  A0D8               	btfss	status,0,c
  4584  00E8DE  EF73  F074         	goto	u2001
  4585  00E8E2  EF75  F074         	goto	u2000
  4586  00E8E6                     u2001:
  4587  00E8E6  EF7D  F074         	goto	l2515
  4588  00E8EA                     u2000:
  4589  00E8EA  0100               	movlb	0	; () banked
  4590  00E8EC  B398               	btfsc	_flags& (0+255),1,b
  4591  00E8EE  EF7B  F074         	goto	u2011
  4592  00E8F2  EF7D  F074         	goto	u2010
  4593  00E8F6                     u2011:
  4594  00E8F6  EFCD  F073         	goto	l2495
  4595  00E8FA                     u2010:
  4596  00E8FA                     l2515:
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  4599  00E8FA  C01E  F013         	movff	utoa@fp,pad@fp
  4600  00E8FE  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  4601  00E902  0EA2               	movlw	low _dbuf
  4602  00E904  243C               	addwf	utoa@i^0,w,c
  4603  00E906  6E15               	movwf	pad@buf^0,c
  4604  00E908  0E00               	movlw	high _dbuf
  4605  00E90A  203D               	addwfc	(utoa@i+1)^0,w,c
  4606  00E90C  6E16               	movwf	(pad@buf+1)^0,c
  4607  00E90E  C032  F017         	movff	utoa@w,pad@p
  4608  00E912  C033  F018         	movff	utoa@w+1,pad@p+1
  4609  00E916  EC96  F06F         	call	_pad	;wreg free
  4610  00E91A  C013  F01E         	movff	?_pad,?_utoa
  4611  00E91E  C014  F01F         	movff	?_pad+1,?_utoa+1
  4612  00E922  0012               	return		;funcret
  4613  00E924                     __end_of_utoa:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function ___lomod *****************
  4617 ;; Defined at:
  4618 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  dividend        8    0[COMRAM] unsigned long long 
  4621 ;;  divisor         8    8[COMRAM] unsigned long long 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  counter         1   16[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  8    0[COMRAM] unsigned long long 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:       17 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_utoa
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text10
  4647  00DFF2                     __ptext10:
  4648                           	callstack 0
  4649  00DFF2                     ___lomod:
  4650                           	callstack 26
  4651  00DFF2  5009               	movf	___lomod@divisor^0,w,c
  4652  00DFF4  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4653  00DFF6  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4654  00DFF8  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4655  00DFFA  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4656  00DFFC  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4657  00DFFE  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4658  00E000  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4659  00E002  B4D8               	btfsc	status,2,c
  4660  00E004  EF06  F070         	goto	u1601
  4661  00E008  EF08  F070         	goto	u1600
  4662  00E00C                     u1601:
  4663  00E00C  EF50  F070         	goto	l739
  4664  00E010                     u1600:
  4665  00E010  0E01               	movlw	1
  4666  00E012  6E11               	movwf	___lomod@counter^0,c
  4667  00E014  EF16  F070         	goto	l2337
  4668  00E018                     l2335:
  4669  00E018  90D8               	bcf	status,0,c
  4670  00E01A  3609               	rlcf	___lomod@divisor^0,f,c
  4671  00E01C  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4672  00E01E  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4673  00E020  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4674  00E022  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4675  00E024  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4676  00E026  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4677  00E028  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4678  00E02A  2A11               	incf	___lomod@counter^0,f,c
  4679  00E02C                     l2337:
  4680  00E02C  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4681  00E02E  EF1B  F070         	goto	u1611
  4682  00E032  EF1D  F070         	goto	u1610
  4683  00E036                     u1611:
  4684  00E036  EF0C  F070         	goto	l2335
  4685  00E03A                     u1610:
  4686  00E03A                     l2339:
  4687  00E03A  5009               	movf	___lomod@divisor^0,w,c
  4688  00E03C  5C01               	subwf	___lomod@dividend^0,w,c
  4689  00E03E  500A               	movf	(___lomod@divisor+1)^0,w,c
  4690  00E040  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4691  00E042  500B               	movf	(___lomod@divisor+2)^0,w,c
  4692  00E044  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4693  00E046  500C               	movf	(___lomod@divisor+3)^0,w,c
  4694  00E048  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4695  00E04A  500D               	movf	(___lomod@divisor+4)^0,w,c
  4696  00E04C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4697  00E04E  500E               	movf	(___lomod@divisor+5)^0,w,c
  4698  00E050  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4699  00E052  500F               	movf	(___lomod@divisor+6)^0,w,c
  4700  00E054  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4701  00E056  5010               	movf	(___lomod@divisor+7)^0,w,c
  4702  00E058  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4703  00E05A  A0D8               	btfss	status,0,c
  4704  00E05C  EF32  F070         	goto	u1621
  4705  00E060  EF34  F070         	goto	u1620
  4706  00E064                     u1621:
  4707  00E064  EF44  F070         	goto	l2343
  4708  00E068                     u1620:
  4709  00E068  5009               	movf	___lomod@divisor^0,w,c
  4710  00E06A  5E01               	subwf	___lomod@dividend^0,f,c
  4711  00E06C  500A               	movf	(___lomod@divisor+1)^0,w,c
  4712  00E06E  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4713  00E070  500B               	movf	(___lomod@divisor+2)^0,w,c
  4714  00E072  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4715  00E074  500C               	movf	(___lomod@divisor+3)^0,w,c
  4716  00E076  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4717  00E078  500D               	movf	(___lomod@divisor+4)^0,w,c
  4718  00E07A  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4719  00E07C  500E               	movf	(___lomod@divisor+5)^0,w,c
  4720  00E07E  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4721  00E080  500F               	movf	(___lomod@divisor+6)^0,w,c
  4722  00E082  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4723  00E084  5010               	movf	(___lomod@divisor+7)^0,w,c
  4724  00E086  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4725  00E088                     l2343:
  4726  00E088  90D8               	bcf	status,0,c
  4727  00E08A  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4728  00E08C  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4729  00E08E  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4730  00E090  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4731  00E092  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4732  00E094  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4733  00E096  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4734  00E098  3209               	rrcf	___lomod@divisor^0,f,c
  4735  00E09A  2E11               	decfsz	___lomod@counter^0,f,c
  4736  00E09C  EF1D  F070         	goto	l2339
  4737  00E0A0                     l739:
  4738  00E0A0  C001  F001         	movff	___lomod@dividend,?___lomod
  4739  00E0A4  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4740  00E0A8  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4741  00E0AC  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4742  00E0B0  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4743  00E0B4  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4744  00E0B8  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4745  00E0BC  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4746  00E0C0  0012               	return		;funcret
  4747  00E0C2                     __end_of___lomod:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function ___lodiv *****************
  4751 ;; Defined at:
  4752 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  dividend        8    0[COMRAM] unsigned long long 
  4755 ;;  divisor         8    8[COMRAM] unsigned long long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quotient        8   16[COMRAM] unsigned long long 
  4758 ;;  counter         1   24[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  8    0[COMRAM] unsigned long long 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:       25 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_utoa
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text11
  4782  00E1AC                     __ptext11:
  4783                           	callstack 0
  4784  00E1AC                     ___lodiv:
  4785                           	callstack 26
  4786  00E1AC  EE20  F011         	lfsr	2,___lodiv@quotient
  4787  00E1B0  0E07               	movlw	7
  4788  00E1B2                     u1561:
  4789  00E1B2  6ADE               	clrf	postinc2,c
  4790  00E1B4  06E8               	decf	wreg,f,c
  4791  00E1B6  E2FD               	bc	u1561
  4792  00E1B8  5009               	movf	___lodiv@divisor^0,w,c
  4793  00E1BA  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4794  00E1BC  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4795  00E1BE  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4796  00E1C0  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4797  00E1C2  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4798  00E1C4  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4799  00E1C6  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4800  00E1C8  B4D8               	btfsc	status,2,c
  4801  00E1CA  EFE9  F070         	goto	u1571
  4802  00E1CE  EFEB  F070         	goto	u1570
  4803  00E1D2                     u1571:
  4804  00E1D2  EF3D  F071         	goto	l729
  4805  00E1D6                     u1570:
  4806  00E1D6  0E01               	movlw	1
  4807  00E1D8  6E19               	movwf	___lodiv@counter^0,c
  4808  00E1DA  EFF9  F070         	goto	l2317
  4809  00E1DE                     l2315:
  4810  00E1DE  90D8               	bcf	status,0,c
  4811  00E1E0  3609               	rlcf	___lodiv@divisor^0,f,c
  4812  00E1E2  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4813  00E1E4  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4814  00E1E6  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4815  00E1E8  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4816  00E1EA  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4817  00E1EC  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4818  00E1EE  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4819  00E1F0  2A19               	incf	___lodiv@counter^0,f,c
  4820  00E1F2                     l2317:
  4821  00E1F2  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4822  00E1F4  EFFE  F070         	goto	u1581
  4823  00E1F8  EF00  F071         	goto	u1580
  4824  00E1FC                     u1581:
  4825  00E1FC  EFEF  F070         	goto	l2315
  4826  00E200                     u1580:
  4827  00E200                     l2319:
  4828  00E200  90D8               	bcf	status,0,c
  4829  00E202  3611               	rlcf	___lodiv@quotient^0,f,c
  4830  00E204  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4831  00E206  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4832  00E208  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4833  00E20A  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4834  00E20C  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4835  00E20E  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4836  00E210  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4837  00E212  5009               	movf	___lodiv@divisor^0,w,c
  4838  00E214  5C01               	subwf	___lodiv@dividend^0,w,c
  4839  00E216  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4840  00E218  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4841  00E21A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4842  00E21C  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4843  00E21E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4844  00E220  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4845  00E222  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4846  00E224  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4847  00E226  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4848  00E228  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4849  00E22A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4850  00E22C  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4851  00E22E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4852  00E230  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4853  00E232  A0D8               	btfss	status,0,c
  4854  00E234  EF1E  F071         	goto	u1591
  4855  00E238  EF20  F071         	goto	u1590
  4856  00E23C                     u1591:
  4857  00E23C  EF31  F071         	goto	l2327
  4858  00E240                     u1590:
  4859  00E240  5009               	movf	___lodiv@divisor^0,w,c
  4860  00E242  5E01               	subwf	___lodiv@dividend^0,f,c
  4861  00E244  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4862  00E246  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4863  00E248  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4864  00E24A  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4865  00E24C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4866  00E24E  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4867  00E250  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4868  00E252  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4869  00E254  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4870  00E256  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4871  00E258  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4872  00E25A  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4873  00E25C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4874  00E25E  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4875  00E260  8011               	bsf	___lodiv@quotient^0,0,c
  4876  00E262                     l2327:
  4877  00E262  90D8               	bcf	status,0,c
  4878  00E264  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4879  00E266  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4880  00E268  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4881  00E26A  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4882  00E26C  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4883  00E26E  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4884  00E270  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4885  00E272  3209               	rrcf	___lodiv@divisor^0,f,c
  4886  00E274  2E19               	decfsz	___lodiv@counter^0,f,c
  4887  00E276  EF00  F071         	goto	l2319
  4888  00E27A                     l729:
  4889  00E27A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4890  00E27E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4891  00E282  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4892  00E286  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4893  00E28A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4894  00E28E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4895  00E292  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4896  00E296  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4897  00E29A  0012               	return		;funcret
  4898  00E29C                     __end_of___lodiv:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function _strncmp *****************
  4902 ;; Defined at:
  4903 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4906 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  4907 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  4908 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  4909 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  4910 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  4911 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  4912 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  4913 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  4914 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  4915 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  4916 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  4917 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  4918 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  4919 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4920 ;;		 -> STR_72(3), STR_68(3), STR_63(3), STR_58(3), 
  4921 ;;		 -> STR_54(3), 
  4922 ;;  n               2    4[COMRAM] unsigned int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4925 ;;		 -> STR_72(3), STR_68(3), STR_63(3), STR_58(3), 
  4926 ;;		 -> STR_54(3), 
  4927 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4928 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  4929 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  4930 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  4931 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  4932 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  4933 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  4934 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  4935 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  4936 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  4937 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  4938 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  4939 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  4940 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2    0[COMRAM] int 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:       11 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_vfpfcnvrt
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text12
  4964  00E0C2                     __ptext12:
  4965                           	callstack 0
  4966  00E0C2                     _strncmp:
  4967                           	callstack 27
  4968  00E0C2  C001  F008         	movff	strncmp@_l,strncmp@l
  4969  00E0C6  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4970  00E0CA  C003  F00A         	movff	strncmp@_r,strncmp@r
  4971  00E0CE  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4972  00E0D2  0605               	decf	strncmp@n^0,f,c
  4973  00E0D4  A0D8               	btfss	status,0,c
  4974  00E0D6  0606               	decf	(strncmp@n+1)^0,f,c
  4975  00E0D8  2805               	incf	strncmp@n^0,w,c
  4976  00E0DA  E106               	bnz	u2261
  4977  00E0DC  2806               	incf	(strncmp@n+1)^0,w,c
  4978  00E0DE  A4D8               	btfss	status,2,c
  4979  00E0E0  EF74  F070         	goto	u2261
  4980  00E0E4  EF76  F070         	goto	u2260
  4981  00E0E8                     u2261:
  4982  00E0E8  EF83  F070         	goto	l2635
  4983  00E0EC                     u2260:
  4984  00E0EC  0E00               	movlw	0
  4985  00E0EE  6E02               	movwf	(?_strncmp+1)^0,c
  4986  00E0F0  0E00               	movlw	0
  4987  00E0F2  6E01               	movwf	?_strncmp^0,c
  4988  00E0F4  EFD5  F070         	goto	l1233
  4989  00E0F8                     l2633:
  4990  00E0F8  4A08               	infsnz	strncmp@l^0,f,c
  4991  00E0FA  2A09               	incf	(strncmp@l+1)^0,f,c
  4992  00E0FC  4A0A               	infsnz	strncmp@r^0,f,c
  4993  00E0FE  2A0B               	incf	(strncmp@r+1)^0,f,c
  4994  00E100  0605               	decf	strncmp@n^0,f,c
  4995  00E102  A0D8               	btfss	status,0,c
  4996  00E104  0606               	decf	(strncmp@n+1)^0,f,c
  4997  00E106                     l2635:
  4998  00E106  C008  FFF6         	movff	strncmp@l,tblptrl
  4999  00E10A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5000  00E10E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5001  00E10E  6AF8               	clrf	tblptru,c
  5002  00E110                     	endif
  5003  00E110                     	if	0	;tblptru may be non-zero
  5004  00E110                     	endif
  5005  00E110  0008               	tblrd		*
  5006  00E112  50F5               	movf	tablat,w,c
  5007  00E114  0900               	iorlw	0
  5008  00E116  B4D8               	btfsc	status,2,c
  5009  00E118  EF90  F070         	goto	u2271
  5010  00E11C  EF92  F070         	goto	u2270
  5011  00E120                     u2271:
  5012  00E120  EFC1  F070         	goto	l2643
  5013  00E124                     u2270:
  5014  00E124  C00A  FFF6         	movff	strncmp@r,tblptrl
  5015  00E128  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5016  00E12C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5017  00E12C  6AF8               	clrf	tblptru,c
  5018  00E12E                     	endif
  5019  00E12E                     	if	0	;tblptru may be non-zero
  5020  00E12E                     	endif
  5021  00E12E  0008               	tblrd		*
  5022  00E130  50F5               	movf	tablat,w,c
  5023  00E132  0900               	iorlw	0
  5024  00E134  B4D8               	btfsc	status,2,c
  5025  00E136  EF9F  F070         	goto	u2281
  5026  00E13A  EFA1  F070         	goto	u2280
  5027  00E13E                     u2281:
  5028  00E13E  EFC1  F070         	goto	l2643
  5029  00E142                     u2280:
  5030  00E142  5005               	movf	strncmp@n^0,w,c
  5031  00E144  1006               	iorwf	(strncmp@n+1)^0,w,c
  5032  00E146  B4D8               	btfsc	status,2,c
  5033  00E148  EFA8  F070         	goto	u2291
  5034  00E14C  EFAA  F070         	goto	u2290
  5035  00E150                     u2291:
  5036  00E150  EFC1  F070         	goto	l2643
  5037  00E154                     u2290:
  5038  00E154  C008  FFF6         	movff	strncmp@l,tblptrl
  5039  00E158  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5040  00E15C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5041  00E15C  6AF8               	clrf	tblptru,c
  5042  00E15E                     	endif
  5043  00E15E                     	if	0	;tblptru may be non-zero
  5044  00E15E                     	endif
  5045  00E15E  0008               	tblrd		*
  5046  00E160  CFF5 F007          	movff	tablat,??_strncmp
  5047  00E164  C00A  FFF6         	movff	strncmp@r,tblptrl
  5048  00E168  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5049  00E16C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5050  00E16C  6AF8               	clrf	tblptru,c
  5051  00E16E                     	endif
  5052  00E16E                     	if	0	;tblptru may be non-zero
  5053  00E16E                     	endif
  5054  00E16E  0008               	tblrd		*
  5055  00E170  50F5               	movf	tablat,w,c
  5056  00E172  1807               	xorwf	??_strncmp^0,w,c
  5057  00E174  B4D8               	btfsc	status,2,c
  5058  00E176  EFBF  F070         	goto	u2301
  5059  00E17A  EFC1  F070         	goto	u2300
  5060  00E17E                     u2301:
  5061  00E17E  EF7C  F070         	goto	l2633
  5062  00E182                     u2300:
  5063  00E182                     l2643:
  5064  00E182  C008  FFF6         	movff	strncmp@l,tblptrl
  5065  00E186  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5066  00E18A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5067  00E18A  6AF8               	clrf	tblptru,c
  5068  00E18C                     	endif
  5069  00E18C                     	if	0	;tblptru may be non-zero
  5070  00E18C                     	endif
  5071  00E18C  0008               	tblrd		*
  5072  00E18E  CFF5 F007          	movff	tablat,??_strncmp
  5073  00E192  C00A  FFF6         	movff	strncmp@r,tblptrl
  5074  00E196  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5075  00E19A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5076  00E19A  6AF8               	clrf	tblptru,c
  5077  00E19C                     	endif
  5078  00E19C                     	if	0	;tblptru may be non-zero
  5079  00E19C                     	endif
  5080  00E19C  0008               	tblrd		*
  5081  00E19E  50F5               	movf	tablat,w,c
  5082  00E1A0  5C07               	subwf	??_strncmp^0,w,c
  5083  00E1A2  6E01               	movwf	?_strncmp^0,c
  5084  00E1A4  6A02               	clrf	(?_strncmp+1)^0,c
  5085  00E1A6  A0D8               	btfss	status,0,c
  5086  00E1A8  0602               	decf	(?_strncmp+1)^0,f,c
  5087  00E1AA                     l1233:
  5088  00E1AA  0012               	return		;funcret
  5089  00E1AC                     __end_of_strncmp:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _dtoa *****************
  5093 ;; Defined at:
  5094 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5097 ;;		 -> NULL(0), 
  5098 ;;  d               8   31[COMRAM] long long 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  n               8   55[COMRAM] long long 
  5101 ;;  i               2   63[COMRAM] int 
  5102 ;;  s               2   53[COMRAM] int 
  5103 ;;  w               2   51[COMRAM] int 
  5104 ;;  p               2   49[COMRAM] int 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  2   29[COMRAM] int 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5114 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;Total ram usage:       36 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    5
  5121 ;; This function calls:
  5122 ;;		___aodiv
  5123 ;;		___aomod
  5124 ;;		_abs
  5125 ;;		_pad
  5126 ;; This function is called by:
  5127 ;;		_vfpfcnvrt
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text13
  5132  00EBFC                     __ptext13:
  5133                           	callstack 0
  5134  00EBFC                     _dtoa:
  5135                           	callstack 22
  5136  00EBFC                     
  5137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  5138  00EBFC  C020  F038         	movff	dtoa@d,dtoa@n
  5139  00EC00  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  5140  00EC04  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  5141  00EC08  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  5142  00EC0C  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  5143  00EC10  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  5144  00EC14  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  5145  00EC18  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  5146  00EC1C                     
  5147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  5148  00EC1C  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5149  00EC1E  EF13  F076         	goto	u1801
  5150  00EC22  EF16  F076         	goto	u1800
  5151  00EC26                     u1801:
  5152  00EC26  0E01               	movlw	1
  5153  00EC28  EF17  F076         	goto	u1810
  5154  00EC2C                     u1800:
  5155  00EC2C  0E00               	movlw	0
  5156  00EC2E                     u1810:
  5157  00EC2E  6E36               	movwf	dtoa@s^0,c
  5158  00EC30  6A37               	clrf	(dtoa@s+1)^0,c
  5159                           
  5160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  5161  00EC32  5036               	movf	dtoa@s^0,w,c
  5162  00EC34  1037               	iorwf	(dtoa@s+1)^0,w,c
  5163  00EC36  B4D8               	btfsc	status,2,c
  5164  00EC38  EF20  F076         	goto	u1821
  5165  00EC3C  EF22  F076         	goto	u1820
  5166  00EC40                     u1821:
  5167  00EC40  EF32  F076         	goto	l2427
  5168  00EC44                     u1820:
  5169  00EC44                     
  5170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  5171  00EC44  1E3F               	comf	(dtoa@n+7)^0,f,c
  5172  00EC46  1E3E               	comf	(dtoa@n+6)^0,f,c
  5173  00EC48  1E3D               	comf	(dtoa@n+5)^0,f,c
  5174  00EC4A  1E3C               	comf	(dtoa@n+4)^0,f,c
  5175  00EC4C  1E3B               	comf	(dtoa@n+3)^0,f,c
  5176  00EC4E  1E3A               	comf	(dtoa@n+2)^0,f,c
  5177  00EC50  1E39               	comf	(dtoa@n+1)^0,f,c
  5178  00EC52  6C38               	negf	dtoa@n^0,c
  5179  00EC54  0E00               	movlw	0
  5180  00EC56  2239               	addwfc	(dtoa@n+1)^0,f,c
  5181  00EC58  223A               	addwfc	(dtoa@n+2)^0,f,c
  5182  00EC5A  223B               	addwfc	(dtoa@n+3)^0,f,c
  5183  00EC5C  223C               	addwfc	(dtoa@n+4)^0,f,c
  5184  00EC5E  223D               	addwfc	(dtoa@n+5)^0,f,c
  5185  00EC60  223E               	addwfc	(dtoa@n+6)^0,f,c
  5186  00EC62  223F               	addwfc	(dtoa@n+7)^0,f,c
  5187  00EC64                     l2427:
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  5190  00EC64  0100               	movlb	0	; () banked
  5191  00EC66  BF97               	btfsc	(_prec+1)& (0+255),7,b
  5192  00EC68  EF38  F076         	goto	u1831
  5193  00EC6C  EF3A  F076         	goto	u1830
  5194  00EC70                     u1831:
  5195  00EC70  EF3B  F076         	goto	l2431
  5196  00EC74                     u1830:
  5197  00EC74                     
  5198                           ; BSR set to: 0
  5199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  5200  00EC74  9398               	bcf	_flags& (0+255),1,b
  5201  00EC76                     l2431:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  5205  00EC76  BF97               	btfsc	(_prec+1)& (0+255),7,b
  5206  00EC78  EF48  F076         	goto	u1840
  5207  00EC7C  5197               	movf	(_prec+1)& (0+255),w,b
  5208  00EC7E  E106               	bnz	u1841
  5209  00EC80  0596               	decf	_prec& (0+255),w,b
  5210  00EC82  B0D8               	btfsc	status,0,c
  5211  00EC84  EF46  F076         	goto	u1841
  5212  00EC88  EF48  F076         	goto	u1840
  5213  00EC8C                     u1841:
  5214  00EC8C  EF4E  F076         	goto	l1026
  5215  00EC90                     u1840:
  5216  00EC90                     
  5217                           ; BSR set to: 0
  5218  00EC90  0E00               	movlw	0
  5219  00EC92  6E33               	movwf	(dtoa@p+1)^0,c
  5220  00EC94  0E01               	movlw	1
  5221  00EC96  6E32               	movwf	dtoa@p^0,c
  5222  00EC98  EF52  F076         	goto	l1028
  5223  00EC9C                     l1026:
  5224                           
  5225                           ; BSR set to: 0
  5226  00EC9C  C096  F032         	movff	_prec,dtoa@p
  5227  00ECA0  C097  F033         	movff	_prec+1,dtoa@p+1
  5228  00ECA4                     l1028:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  5232  00ECA4  C094  F034         	movff	_width,dtoa@w
  5233  00ECA8  C095  F035         	movff	_width+1,dtoa@w+1
  5234  00ECAC                     
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  5237  00ECAC  5036               	movf	dtoa@s^0,w,c
  5238  00ECAE  1037               	iorwf	(dtoa@s+1)^0,w,c
  5239  00ECB0  A4D8               	btfss	status,2,c
  5240  00ECB2  EF5D  F076         	goto	u1851
  5241  00ECB6  EF5F  F076         	goto	u1850
  5242  00ECBA                     u1851:
  5243  00ECBA  EF66  F076         	goto	l2439
  5244  00ECBE                     u1850:
  5245  00ECBE                     
  5246                           ; BSR set to: 0
  5247  00ECBE  A598               	btfss	_flags& (0+255),2,b
  5248  00ECC0  EF64  F076         	goto	u1861
  5249  00ECC4  EF66  F076         	goto	u1860
  5250  00ECC8                     u1861:
  5251  00ECC8  EF69  F076         	goto	l2441
  5252  00ECCC                     u1860:
  5253  00ECCC                     l2439:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  5257  00ECCC  0634               	decf	dtoa@w^0,f,c
  5258  00ECCE  A0D8               	btfss	status,0,c
  5259  00ECD0  0635               	decf	(dtoa@w+1)^0,f,c
  5260  00ECD2                     l2441:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  5264  00ECD2  0E00               	movlw	0
  5265  00ECD4  6E41               	movwf	(dtoa@i+1)^0,c
  5266  00ECD6  0E1F               	movlw	31
  5267  00ECD8  6E40               	movwf	dtoa@i^0,c
  5268  00ECDA                     
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  5271  00ECDA  0E00               	movlw	0
  5272  00ECDC  6FC1               	movwf	(_dbuf+31)& (0+255),b
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5275  00ECDE  EFED  F076         	goto	l2455
  5276  00ECE2                     l2445:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  5279  00ECE2  0640               	decf	dtoa@i^0,f,c
  5280  00ECE4  A0D8               	btfss	status,0,c
  5281  00ECE6  0641               	decf	(dtoa@i+1)^0,f,c
  5282  00ECE8                     
  5283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  5284  00ECE8  0EA2               	movlw	low _dbuf
  5285  00ECEA  2440               	addwf	dtoa@i^0,w,c
  5286  00ECEC  6ED9               	movwf	fsr2l,c
  5287  00ECEE  0E00               	movlw	high _dbuf
  5288  00ECF0  2041               	addwfc	(dtoa@i+1)^0,w,c
  5289  00ECF2  6EDA               	movwf	fsr2h,c
  5290  00ECF4  C038  F001         	movff	dtoa@n,___aomod@dividend
  5291  00ECF8  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5292  00ECFC  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5293  00ED00  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5294  00ED04  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5295  00ED08  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5296  00ED0C  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5297  00ED10  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5298  00ED14  0E0A               	movlw	10
  5299  00ED16  6E09               	movwf	___aomod@divisor^0,c
  5300  00ED18  0E00               	movlw	0
  5301  00ED1A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5302  00ED1C  0E00               	movlw	0
  5303  00ED1E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5304  00ED20  0E00               	movlw	0
  5305  00ED22  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5306  00ED24  0E00               	movlw	0
  5307  00ED26  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5308  00ED28  0E00               	movlw	0
  5309  00ED2A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5310  00ED2C  0E00               	movlw	0
  5311  00ED2E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5312  00ED30  0E00               	movlw	0
  5313  00ED32  6E10               	movwf	(___aomod@divisor+7)^0,c
  5314  00ED34  EC4E  F071         	call	___aomod	;wreg free
  5315  00ED38  C001  F028         	movff	?___aomod,??_dtoa
  5316  00ED3C  C002  F029         	movff	?___aomod+1,??_dtoa+1
  5317  00ED40  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  5318  00ED44  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  5319  00ED48  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  5320  00ED4C  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  5321  00ED50  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  5322  00ED54  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  5323  00ED58  C028  F013         	movff	??_dtoa,abs@a
  5324  00ED5C  C02A  F014         	movff	??_dtoa+2,abs@a+1
  5325  00ED60  EC52  F06E         	call	_abs	;wreg free
  5326  00ED64  5013               	movf	?_abs^0,w,c
  5327  00ED66  0F30               	addlw	48
  5328  00ED68  6EDF               	movwf	indf2,c
  5329  00ED6A                     
  5330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  5331  00ED6A  0632               	decf	dtoa@p^0,f,c
  5332  00ED6C  A0D8               	btfss	status,0,c
  5333  00ED6E  0633               	decf	(dtoa@p+1)^0,f,c
  5334  00ED70                     
  5335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  5336  00ED70  0634               	decf	dtoa@w^0,f,c
  5337  00ED72  A0D8               	btfss	status,0,c
  5338  00ED74  0635               	decf	(dtoa@w+1)^0,f,c
  5339  00ED76                     
  5340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  5341  00ED76  C038  F001         	movff	dtoa@n,___aodiv@dividend
  5342  00ED7A  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5343  00ED7E  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5344  00ED82  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5345  00ED86  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5346  00ED8A  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5347  00ED8E  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5348  00ED92  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5349  00ED96  0E0A               	movlw	10
  5350  00ED98  6E09               	movwf	___aodiv@divisor^0,c
  5351  00ED9A  0E00               	movlw	0
  5352  00ED9C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5353  00ED9E  0E00               	movlw	0
  5354  00EDA0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5355  00EDA2  0E00               	movlw	0
  5356  00EDA4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5357  00EDA6  0E00               	movlw	0
  5358  00EDA8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5359  00EDAA  0E00               	movlw	0
  5360  00EDAC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5361  00EDAE  0E00               	movlw	0
  5362  00EDB0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5363  00EDB2  0E00               	movlw	0
  5364  00EDB4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5365  00EDB6  EC00  F072         	call	___aodiv	;wreg free
  5366  00EDBA  C001  F038         	movff	?___aodiv,dtoa@n
  5367  00EDBE  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  5368  00EDC2  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  5369  00EDC6  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  5370  00EDCA  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  5371  00EDCE  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  5372  00EDD2  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  5373  00EDD6  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  5374  00EDDA                     l2455:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5377  00EDDA  BE41               	btfsc	(dtoa@i+1)^0,7,c
  5378  00EDDC  EFF8  F076         	goto	u1871
  5379  00EDE0  5041               	movf	(dtoa@i+1)^0,w,c
  5380  00EDE2  E108               	bnz	u1870
  5381  00EDE4  0440               	decf	dtoa@i^0,w,c
  5382  00EDE6  A0D8               	btfss	status,0,c
  5383  00EDE8  EFF8  F076         	goto	u1871
  5384  00EDEC  EFFA  F076         	goto	u1870
  5385  00EDF0                     u1871:
  5386  00EDF0  EF2B  F077         	goto	l2465
  5387  00EDF4                     u1870:
  5388  00EDF4  5038               	movf	dtoa@n^0,w,c
  5389  00EDF6  1039               	iorwf	(dtoa@n+1)^0,w,c
  5390  00EDF8  103A               	iorwf	(dtoa@n+2)^0,w,c
  5391  00EDFA  103B               	iorwf	(dtoa@n+3)^0,w,c
  5392  00EDFC  103C               	iorwf	(dtoa@n+4)^0,w,c
  5393  00EDFE  103D               	iorwf	(dtoa@n+5)^0,w,c
  5394  00EE00  103E               	iorwf	(dtoa@n+6)^0,w,c
  5395  00EE02  103F               	iorwf	(dtoa@n+7)^0,w,c
  5396  00EE04  A4D8               	btfss	status,2,c
  5397  00EE06  EF07  F077         	goto	u1881
  5398  00EE0A  EF09  F077         	goto	u1880
  5399  00EE0E                     u1881:
  5400  00EE0E  EF71  F076         	goto	l2445
  5401  00EE12                     u1880:
  5402  00EE12  BE33               	btfsc	(dtoa@p+1)^0,7,c
  5403  00EE14  EF16  F077         	goto	u1890
  5404  00EE18  5033               	movf	(dtoa@p+1)^0,w,c
  5405  00EE1A  E106               	bnz	u1891
  5406  00EE1C  0432               	decf	dtoa@p^0,w,c
  5407  00EE1E  B0D8               	btfsc	status,0,c
  5408  00EE20  EF14  F077         	goto	u1891
  5409  00EE24  EF16  F077         	goto	u1890
  5410  00EE28                     u1891:
  5411  00EE28  EF71  F076         	goto	l2445
  5412  00EE2C                     u1890:
  5413  00EE2C  BE35               	btfsc	(dtoa@w+1)^0,7,c
  5414  00EE2E  EF21  F077         	goto	u1901
  5415  00EE32  5035               	movf	(dtoa@w+1)^0,w,c
  5416  00EE34  E108               	bnz	u1900
  5417  00EE36  0434               	decf	dtoa@w^0,w,c
  5418  00EE38  A0D8               	btfss	status,0,c
  5419  00EE3A  EF21  F077         	goto	u1901
  5420  00EE3E  EF23  F077         	goto	u1900
  5421  00EE42                     u1901:
  5422  00EE42  EF2B  F077         	goto	l2465
  5423  00EE46                     u1900:
  5424  00EE46  0100               	movlb	0	; () banked
  5425  00EE48  B398               	btfsc	_flags& (0+255),1,b
  5426  00EE4A  EF29  F077         	goto	u1911
  5427  00EE4E  EF2B  F077         	goto	u1910
  5428  00EE52                     u1911:
  5429  00EE52  EF71  F076         	goto	l2445
  5430  00EE56                     u1910:
  5431  00EE56                     l2465:
  5432                           
  5433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  5434  00EE56  5036               	movf	dtoa@s^0,w,c
  5435  00EE58  1037               	iorwf	(dtoa@s+1)^0,w,c
  5436  00EE5A  A4D8               	btfss	status,2,c
  5437  00EE5C  EF32  F077         	goto	u1921
  5438  00EE60  EF34  F077         	goto	u1920
  5439  00EE64                     u1921:
  5440  00EE64  EF3C  F077         	goto	l2469
  5441  00EE68                     u1920:
  5442  00EE68  0100               	movlb	0	; () banked
  5443  00EE6A  A598               	btfss	_flags& (0+255),2,b
  5444  00EE6C  EF3A  F077         	goto	u1931
  5445  00EE70  EF3C  F077         	goto	u1930
  5446  00EE74                     u1931:
  5447  00EE74  EF5A  F077         	goto	l2479
  5448  00EE78                     u1930:
  5449  00EE78                     l2469:
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  5452  00EE78  0640               	decf	dtoa@i^0,f,c
  5453  00EE7A  A0D8               	btfss	status,0,c
  5454  00EE7C  0641               	decf	(dtoa@i+1)^0,f,c
  5455  00EE7E                     
  5456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  5457  00EE7E  5036               	movf	dtoa@s^0,w,c
  5458  00EE80  1037               	iorwf	(dtoa@s+1)^0,w,c
  5459  00EE82  A4D8               	btfss	status,2,c
  5460  00EE84  EF46  F077         	goto	u1941
  5461  00EE88  EF48  F077         	goto	u1940
  5462  00EE8C                     u1941:
  5463  00EE8C  EF4E  F077         	goto	l2475
  5464  00EE90                     u1940:
  5465  00EE90  0E00               	movlw	0
  5466  00EE92  6E31               	movwf	(_dtoa$1254+1)^0,c
  5467  00EE94  0E2B               	movlw	43
  5468  00EE96  6E30               	movwf	_dtoa$1254^0,c
  5469  00EE98  EF52  F077         	goto	l2477
  5470  00EE9C                     l2475:
  5471  00EE9C  0E00               	movlw	0
  5472  00EE9E  6E31               	movwf	(_dtoa$1254+1)^0,c
  5473  00EEA0  0E2D               	movlw	45
  5474  00EEA2  6E30               	movwf	_dtoa$1254^0,c
  5475  00EEA4                     l2477:
  5476  00EEA4  0EA2               	movlw	low _dbuf
  5477  00EEA6  2440               	addwf	dtoa@i^0,w,c
  5478  00EEA8  6ED9               	movwf	fsr2l,c
  5479  00EEAA  0E00               	movlw	high _dbuf
  5480  00EEAC  2041               	addwfc	(dtoa@i+1)^0,w,c
  5481  00EEAE  6EDA               	movwf	fsr2h,c
  5482  00EEB0  C030  FFDF         	movff	_dtoa$1254,indf2
  5483  00EEB4                     l2479:
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  5486  00EEB4  C01E  F013         	movff	dtoa@fp,pad@fp
  5487  00EEB8  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5488  00EEBC  0EA2               	movlw	low _dbuf
  5489  00EEBE  2440               	addwf	dtoa@i^0,w,c
  5490  00EEC0  6E15               	movwf	pad@buf^0,c
  5491  00EEC2  0E00               	movlw	high _dbuf
  5492  00EEC4  2041               	addwfc	(dtoa@i+1)^0,w,c
  5493  00EEC6  6E16               	movwf	(pad@buf+1)^0,c
  5494  00EEC8  C034  F017         	movff	dtoa@w,pad@p
  5495  00EECC  C035  F018         	movff	dtoa@w+1,pad@p+1
  5496  00EED0  EC96  F06F         	call	_pad	;wreg free
  5497  00EED4  C013  F01E         	movff	?_pad,?_dtoa
  5498  00EED8  C014  F01F         	movff	?_pad+1,?_dtoa+1
  5499  00EEDC  0012               	return		;funcret
  5500  00EEDE                     __end_of_dtoa:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function _abs *****************
  5504 ;; Defined at:
  5505 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  a               2   18[COMRAM] int 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  2   18[COMRAM] int 
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		_dtoa
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text14
  5533  00DCA4                     __ptext14:
  5534                           	callstack 0
  5535  00DCA4                     _abs:
  5536                           	callstack 26
  5537  00DCA4  BE14               	btfsc	(abs@a+1)^0,7,c
  5538  00DCA6  EF5F  F06E         	goto	u1670
  5539  00DCAA  5014               	movf	(abs@a+1)^0,w,c
  5540  00DCAC  E106               	bnz	u1671
  5541  00DCAE  0413               	decf	abs@a^0,w,c
  5542  00DCB0  B0D8               	btfsc	status,0,c
  5543  00DCB2  EF5D  F06E         	goto	u1671
  5544  00DCB6  EF5F  F06E         	goto	u1670
  5545  00DCBA                     u1671:
  5546  00DCBA  EF6D  F06E         	goto	l1143
  5547  00DCBE                     u1670:
  5548  00DCBE  C013  F015         	movff	abs@a,??_abs
  5549  00DCC2  C014  F016         	movff	abs@a+1,??_abs+1
  5550  00DCC6  1E15               	comf	??_abs^0,f,c
  5551  00DCC8  1E16               	comf	(??_abs+1)^0,f,c
  5552  00DCCA  4A15               	infsnz	??_abs^0,f,c
  5553  00DCCC  2A16               	incf	(??_abs+1)^0,f,c
  5554  00DCCE  C015  F013         	movff	??_abs,?_abs
  5555  00DCD2  C016  F014         	movff	??_abs+1,?_abs+1
  5556  00DCD6  EF71  F06E         	goto	l1146
  5557  00DCDA                     l1143:
  5558  00DCDA  C013  F013         	movff	abs@a,?_abs
  5559  00DCDE  C014  F014         	movff	abs@a+1,?_abs+1
  5560  00DCE2                     l1146:
  5561  00DCE2  0012               	return		;funcret
  5562  00DCE4                     __end_of_abs:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function ___aomod *****************
  5566 ;; Defined at:
  5567 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  dividend        8    0[COMRAM] long long 
  5570 ;;  divisor         8    8[COMRAM] long long 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  sign            1   17[COMRAM] unsigned char 
  5573 ;;  counter         1   16[COMRAM] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  8    0[COMRAM] long long 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5583 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;Total ram usage:       18 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_dtoa
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text15
  5597  00E29C                     __ptext15:
  5598                           	callstack 0
  5599  00E29C                     ___aomod:
  5600                           	callstack 26
  5601  00E29C  0E00               	movlw	0
  5602  00E29E  6E12               	movwf	___aomod@sign^0,c
  5603  00E2A0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5604  00E2A2  EF57  F071         	goto	u1500
  5605  00E2A6  EF55  F071         	goto	u1501
  5606  00E2AA                     u1501:
  5607  00E2AA  EF69  F071         	goto	l2281
  5608  00E2AE                     u1500:
  5609  00E2AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5610  00E2B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5611  00E2B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5612  00E2B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5613  00E2B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5614  00E2B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5615  00E2BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5616  00E2BC  6C01               	negf	___aomod@dividend^0,c
  5617  00E2BE  0E00               	movlw	0
  5618  00E2C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5619  00E2C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5620  00E2C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5621  00E2C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5622  00E2C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5623  00E2CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5624  00E2CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5625  00E2CE  0E01               	movlw	1
  5626  00E2D0  6E12               	movwf	___aomod@sign^0,c
  5627  00E2D2                     l2281:
  5628  00E2D2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5629  00E2D4  EF70  F071         	goto	u1510
  5630  00E2D8  EF6E  F071         	goto	u1511
  5631  00E2DC                     u1511:
  5632  00E2DC  EF80  F071         	goto	l2285
  5633  00E2E0                     u1510:
  5634  00E2E0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5635  00E2E2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5636  00E2E4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5637  00E2E6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5638  00E2E8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5639  00E2EA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5640  00E2EC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5641  00E2EE  6C09               	negf	___aomod@divisor^0,c
  5642  00E2F0  0E00               	movlw	0
  5643  00E2F2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5644  00E2F4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5645  00E2F6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5646  00E2F8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5647  00E2FA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5648  00E2FC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5649  00E2FE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5650  00E300                     l2285:
  5651  00E300  5009               	movf	___aomod@divisor^0,w,c
  5652  00E302  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5653  00E304  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5654  00E306  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5655  00E308  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5656  00E30A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5657  00E30C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5658  00E30E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5659  00E310  B4D8               	btfsc	status,2,c
  5660  00E312  EF8D  F071         	goto	u1521
  5661  00E316  EF8F  F071         	goto	u1520
  5662  00E31A                     u1521:
  5663  00E31A  EFD7  F071         	goto	l2301
  5664  00E31E                     u1520:
  5665  00E31E  0E01               	movlw	1
  5666  00E320  6E11               	movwf	___aomod@counter^0,c
  5667  00E322  EF9D  F071         	goto	l2291
  5668  00E326                     l2289:
  5669  00E326  90D8               	bcf	status,0,c
  5670  00E328  3609               	rlcf	___aomod@divisor^0,f,c
  5671  00E32A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5672  00E32C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5673  00E32E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5674  00E330  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5675  00E332  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5676  00E334  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5677  00E336  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5678  00E338  2A11               	incf	___aomod@counter^0,f,c
  5679  00E33A                     l2291:
  5680  00E33A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5681  00E33C  EFA2  F071         	goto	u1531
  5682  00E340  EFA4  F071         	goto	u1530
  5683  00E344                     u1531:
  5684  00E344  EF93  F071         	goto	l2289
  5685  00E348                     u1530:
  5686  00E348                     l2293:
  5687  00E348  5009               	movf	___aomod@divisor^0,w,c
  5688  00E34A  5C01               	subwf	___aomod@dividend^0,w,c
  5689  00E34C  500A               	movf	(___aomod@divisor+1)^0,w,c
  5690  00E34E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5691  00E350  500B               	movf	(___aomod@divisor+2)^0,w,c
  5692  00E352  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5693  00E354  500C               	movf	(___aomod@divisor+3)^0,w,c
  5694  00E356  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5695  00E358  500D               	movf	(___aomod@divisor+4)^0,w,c
  5696  00E35A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5697  00E35C  500E               	movf	(___aomod@divisor+5)^0,w,c
  5698  00E35E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5699  00E360  500F               	movf	(___aomod@divisor+6)^0,w,c
  5700  00E362  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5701  00E364  5010               	movf	(___aomod@divisor+7)^0,w,c
  5702  00E366  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5703  00E368  A0D8               	btfss	status,0,c
  5704  00E36A  EFB9  F071         	goto	u1541
  5705  00E36E  EFBB  F071         	goto	u1540
  5706  00E372                     u1541:
  5707  00E372  EFCB  F071         	goto	l2297
  5708  00E376                     u1540:
  5709  00E376  5009               	movf	___aomod@divisor^0,w,c
  5710  00E378  5E01               	subwf	___aomod@dividend^0,f,c
  5711  00E37A  500A               	movf	(___aomod@divisor+1)^0,w,c
  5712  00E37C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5713  00E37E  500B               	movf	(___aomod@divisor+2)^0,w,c
  5714  00E380  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5715  00E382  500C               	movf	(___aomod@divisor+3)^0,w,c
  5716  00E384  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5717  00E386  500D               	movf	(___aomod@divisor+4)^0,w,c
  5718  00E388  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5719  00E38A  500E               	movf	(___aomod@divisor+5)^0,w,c
  5720  00E38C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5721  00E38E  500F               	movf	(___aomod@divisor+6)^0,w,c
  5722  00E390  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5723  00E392  5010               	movf	(___aomod@divisor+7)^0,w,c
  5724  00E394  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5725  00E396                     l2297:
  5726  00E396  90D8               	bcf	status,0,c
  5727  00E398  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5728  00E39A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5729  00E39C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5730  00E39E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5731  00E3A0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5732  00E3A2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5733  00E3A4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5734  00E3A6  3209               	rrcf	___aomod@divisor^0,f,c
  5735  00E3A8  2E11               	decfsz	___aomod@counter^0,f,c
  5736  00E3AA  EFA4  F071         	goto	l2293
  5737  00E3AE                     l2301:
  5738  00E3AE  5012               	movf	___aomod@sign^0,w,c
  5739  00E3B0  B4D8               	btfsc	status,2,c
  5740  00E3B2  EFDD  F071         	goto	u1551
  5741  00E3B6  EFDF  F071         	goto	u1550
  5742  00E3BA                     u1551:
  5743  00E3BA  EFEF  F071         	goto	l2305
  5744  00E3BE                     u1550:
  5745  00E3BE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5746  00E3C0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5747  00E3C2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5748  00E3C4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5749  00E3C6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5750  00E3C8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5751  00E3CA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5752  00E3CC  6C01               	negf	___aomod@dividend^0,c
  5753  00E3CE  0E00               	movlw	0
  5754  00E3D0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5755  00E3D2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5756  00E3D4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5757  00E3D6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5758  00E3D8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5759  00E3DA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5760  00E3DC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5761  00E3DE                     l2305:
  5762  00E3DE  C001  F001         	movff	___aomod@dividend,?___aomod
  5763  00E3E2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5764  00E3E6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5765  00E3EA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5766  00E3EE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5767  00E3F2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5768  00E3F6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5769  00E3FA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5770  00E3FE  0012               	return		;funcret
  5771  00E400                     __end_of___aomod:
  5772                           	callstack 0
  5773                           
  5774 ;; *************** function ___aodiv *****************
  5775 ;; Defined at:
  5776 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  dividend        8    0[COMRAM] long long 
  5779 ;;  divisor         8    8[COMRAM] long long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  quotient        8   18[COMRAM] long long 
  5782 ;;  sign            1   17[COMRAM] unsigned char 
  5783 ;;  counter         1   16[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  8    0[COMRAM] long long 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5793 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;Total ram usage:       26 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_dtoa
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text16
  5807  00E400                     __ptext16:
  5808                           	callstack 0
  5809  00E400                     ___aodiv:
  5810                           	callstack 26
  5811  00E400  0E00               	movlw	0
  5812  00E402  6E12               	movwf	___aodiv@sign^0,c
  5813  00E404  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5814  00E406  EF09  F072         	goto	u1430
  5815  00E40A  EF07  F072         	goto	u1431
  5816  00E40E                     u1431:
  5817  00E40E  EF1B  F072         	goto	l2237
  5818  00E412                     u1430:
  5819  00E412  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5820  00E414  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5821  00E416  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5822  00E418  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5823  00E41A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5824  00E41C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5825  00E41E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5826  00E420  6C09               	negf	___aodiv@divisor^0,c
  5827  00E422  0E00               	movlw	0
  5828  00E424  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5829  00E426  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5830  00E428  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5831  00E42A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5832  00E42C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5833  00E42E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5834  00E430  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5835  00E432  0E01               	movlw	1
  5836  00E434  6E12               	movwf	___aodiv@sign^0,c
  5837  00E436                     l2237:
  5838  00E436  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5839  00E438  EF22  F072         	goto	u1440
  5840  00E43C  EF20  F072         	goto	u1441
  5841  00E440                     u1441:
  5842  00E440  EF34  F072         	goto	l2243
  5843  00E444                     u1440:
  5844  00E444  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5845  00E446  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5846  00E448  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5847  00E44A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5848  00E44C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5849  00E44E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5850  00E450  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5851  00E452  6C01               	negf	___aodiv@dividend^0,c
  5852  00E454  0E00               	movlw	0
  5853  00E456  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5854  00E458  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5855  00E45A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5856  00E45C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5857  00E45E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5858  00E460  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5859  00E462  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5860  00E464  0E01               	movlw	1
  5861  00E466  1A12               	xorwf	___aodiv@sign^0,f,c
  5862  00E468                     l2243:
  5863  00E468  EE20  F013         	lfsr	2,___aodiv@quotient
  5864  00E46C  0E07               	movlw	7
  5865  00E46E                     u1451:
  5866  00E46E  6ADE               	clrf	postinc2,c
  5867  00E470  06E8               	decf	wreg,f,c
  5868  00E472  E2FD               	bc	u1451
  5869  00E474  5009               	movf	___aodiv@divisor^0,w,c
  5870  00E476  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5871  00E478  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5872  00E47A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5873  00E47C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5874  00E47E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5875  00E480  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5876  00E482  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5877  00E484  B4D8               	btfsc	status,2,c
  5878  00E486  EF47  F072         	goto	u1461
  5879  00E48A  EF49  F072         	goto	u1460
  5880  00E48E                     u1461:
  5881  00E48E  EF9B  F072         	goto	l2265
  5882  00E492                     u1460:
  5883  00E492  0E01               	movlw	1
  5884  00E494  6E11               	movwf	___aodiv@counter^0,c
  5885  00E496  EF57  F072         	goto	l2251
  5886  00E49A                     l2249:
  5887  00E49A  90D8               	bcf	status,0,c
  5888  00E49C  3609               	rlcf	___aodiv@divisor^0,f,c
  5889  00E49E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5890  00E4A0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5891  00E4A2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5892  00E4A4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5893  00E4A6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5894  00E4A8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5895  00E4AA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5896  00E4AC  2A11               	incf	___aodiv@counter^0,f,c
  5897  00E4AE                     l2251:
  5898  00E4AE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5899  00E4B0  EF5C  F072         	goto	u1471
  5900  00E4B4  EF5E  F072         	goto	u1470
  5901  00E4B8                     u1471:
  5902  00E4B8  EF4D  F072         	goto	l2249
  5903  00E4BC                     u1470:
  5904  00E4BC                     l2253:
  5905  00E4BC  90D8               	bcf	status,0,c
  5906  00E4BE  3613               	rlcf	___aodiv@quotient^0,f,c
  5907  00E4C0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5908  00E4C2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5909  00E4C4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5910  00E4C6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5911  00E4C8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5912  00E4CA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5913  00E4CC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5914  00E4CE  5009               	movf	___aodiv@divisor^0,w,c
  5915  00E4D0  5C01               	subwf	___aodiv@dividend^0,w,c
  5916  00E4D2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5917  00E4D4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5918  00E4D6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5919  00E4D8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5920  00E4DA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5921  00E4DC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5922  00E4DE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5923  00E4E0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5924  00E4E2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5925  00E4E4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5926  00E4E6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5927  00E4E8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5928  00E4EA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5929  00E4EC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5930  00E4EE  A0D8               	btfss	status,0,c
  5931  00E4F0  EF7C  F072         	goto	u1481
  5932  00E4F4  EF7E  F072         	goto	u1480
  5933  00E4F8                     u1481:
  5934  00E4F8  EF8F  F072         	goto	l2261
  5935  00E4FC                     u1480:
  5936  00E4FC  5009               	movf	___aodiv@divisor^0,w,c
  5937  00E4FE  5E01               	subwf	___aodiv@dividend^0,f,c
  5938  00E500  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5939  00E502  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5940  00E504  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5941  00E506  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5942  00E508  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5943  00E50A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5944  00E50C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5945  00E50E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5946  00E510  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5947  00E512  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5948  00E514  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5949  00E516  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5950  00E518  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5951  00E51A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5952  00E51C  8013               	bsf	___aodiv@quotient^0,0,c
  5953  00E51E                     l2261:
  5954  00E51E  90D8               	bcf	status,0,c
  5955  00E520  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5956  00E522  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5957  00E524  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5958  00E526  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5959  00E528  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5960  00E52A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5961  00E52C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5962  00E52E  3209               	rrcf	___aodiv@divisor^0,f,c
  5963  00E530  2E11               	decfsz	___aodiv@counter^0,f,c
  5964  00E532  EF5E  F072         	goto	l2253
  5965  00E536                     l2265:
  5966  00E536  5012               	movf	___aodiv@sign^0,w,c
  5967  00E538  B4D8               	btfsc	status,2,c
  5968  00E53A  EFA1  F072         	goto	u1491
  5969  00E53E  EFA3  F072         	goto	u1490
  5970  00E542                     u1491:
  5971  00E542  EFB3  F072         	goto	l2269
  5972  00E546                     u1490:
  5973  00E546  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5974  00E548  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5975  00E54A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5976  00E54C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5977  00E54E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5978  00E550  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5979  00E552  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5980  00E554  6C13               	negf	___aodiv@quotient^0,c
  5981  00E556  0E00               	movlw	0
  5982  00E558  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5983  00E55A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5984  00E55C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5985  00E55E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5986  00E560  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5987  00E562  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5988  00E564  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5989  00E566                     l2269:
  5990  00E566  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5991  00E56A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5992  00E56E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5993  00E572  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5994  00E576  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5995  00E57A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5996  00E57E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5997  00E582  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5998  00E586  0012               	return		;funcret
  5999  00E588                     __end_of___aodiv:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _ctoa *****************
  6003 ;; Defined at:
  6004 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6007 ;;		 -> NULL(0), 
  6008 ;;  c               1   31[COMRAM] unsigned char 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  w               2   32[COMRAM] int 
  6011 ;;  l               2    0        int 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  2   29[COMRAM] int 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6021 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;Total ram usage:        5 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    5
  6028 ;; This function calls:
  6029 ;;		_pad
  6030 ;; This function is called by:
  6031 ;;		_vfpfcnvrt
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text17
  6036  00DD7A                     __ptext17:
  6037                           	callstack 0
  6038  00DD7A                     _ctoa:
  6039                           	callstack 22
  6040  00DD7A                     
  6041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6042  00DD7A  0100               	movlb	0	; () banked
  6043  00DD7C  5194               	movf	_width& (0+255),w,b
  6044  00DD7E  1195               	iorwf	(_width+1)& (0+255),w,b
  6045  00DD80  A4D8               	btfss	status,2,c
  6046  00DD82  EFC5  F06E         	goto	u1791
  6047  00DD86  EFC7  F06E         	goto	u1790
  6048  00DD8A                     u1791:
  6049  00DD8A  EFCD  F06E         	goto	l2411
  6050  00DD8E                     u1790:
  6051  00DD8E                     
  6052                           ; BSR set to: 0
  6053  00DD8E  C094  F021         	movff	_width,ctoa@w
  6054  00DD92  C095  F022         	movff	_width+1,ctoa@w+1
  6055  00DD96  EFD3  F06E         	goto	l2413
  6056  00DD9A                     l2411:
  6057                           
  6058                           ; BSR set to: 0
  6059  00DD9A  0EFF               	movlw	255
  6060  00DD9C  2594               	addwf	_width& (0+255),w,b
  6061  00DD9E  6E21               	movwf	ctoa@w^0,c
  6062  00DDA0  0EFF               	movlw	255
  6063  00DDA2  2195               	addwfc	(_width+1)& (0+255),w,b
  6064  00DDA4  6E22               	movwf	(ctoa@w+1)^0,c
  6065  00DDA6                     l2413:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  6069  00DDA6  C020  F0A2         	movff	ctoa@c,_dbuf
  6070  00DDAA                     
  6071                           ; BSR set to: 0
  6072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  6073  00DDAA  0E00               	movlw	0
  6074  00DDAC  6FA3               	movwf	(_dbuf+1)& (0+255),b
  6075  00DDAE                     
  6076                           ; BSR set to: 0
  6077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  6078  00DDAE  C01E  F013         	movff	ctoa@fp,pad@fp
  6079  00DDB2  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
  6080  00DDB6  0EA2               	movlw	low _dbuf
  6081  00DDB8  6E15               	movwf	pad@buf^0,c
  6082  00DDBA  0E00               	movlw	high _dbuf
  6083  00DDBC  6E16               	movwf	(pad@buf+1)^0,c
  6084  00DDBE  C021  F017         	movff	ctoa@w,pad@p
  6085  00DDC2  C022  F018         	movff	ctoa@w+1,pad@p+1
  6086  00DDC6  EC96  F06F         	call	_pad	;wreg free
  6087  00DDCA  C013  F01E         	movff	?_pad,?_ctoa
  6088  00DDCE  C014  F01F         	movff	?_pad+1,?_ctoa+1
  6089  00DDD2  0012               	return		;funcret
  6090  00DDD4                     __end_of_ctoa:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function _pad *****************
  6094 ;; Defined at:
  6095 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6098 ;;		 -> NULL(0), 
  6099 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6100 ;;		 -> dbuf(32), 
  6101 ;;  p               2   22[COMRAM] int 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  w               2   27[COMRAM] int 
  6104 ;;  i               2   25[COMRAM] int 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  2   18[COMRAM] int 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:       11 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    4
  6121 ;; This function calls:
  6122 ;;		_fputc
  6123 ;;		_fputs
  6124 ;;		_strlen
  6125 ;; This function is called by:
  6126 ;;		_ctoa
  6127 ;;		_dtoa
  6128 ;;		_utoa
  6129 ;;		_xtoa
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text18
  6134  00DF2C                     __ptext18:
  6135                           	callstack 0
  6136  00DF2C                     _pad:
  6137                           	callstack 22
  6138  00DF2C                     
  6139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6140  00DF2C  0100               	movlb	0	; () banked
  6141  00DF2E  A198               	btfss	_flags& (0+255),0,b
  6142  00DF30  EF9C  F06F         	goto	u1631
  6143  00DF34  EF9E  F06F         	goto	u1630
  6144  00DF38                     u1631:
  6145  00DF38  EFA8  F06F         	goto	l2351
  6146  00DF3C                     u1630:
  6147  00DF3C                     
  6148                           ; BSR set to: 0
  6149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6150  00DF3C  C015  F00C         	movff	pad@buf,fputs@s
  6151  00DF40  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6152  00DF44  C013  F00E         	movff	pad@fp,fputs@fp
  6153  00DF48  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6154  00DF4C  EC72  F06E         	call	_fputs	;wreg free
  6155  00DF50                     l2351:
  6156                           
  6157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6158  00DF50  BE18               	btfsc	(pad@p+1)^0,7,c
  6159  00DF52  EFAD  F06F         	goto	u1641
  6160  00DF56  EFAF  F06F         	goto	u1640
  6161  00DF5A                     u1641:
  6162  00DF5A  EFB5  F06F         	goto	l2355
  6163  00DF5E                     u1640:
  6164  00DF5E  C017  F01C         	movff	pad@p,pad@w
  6165  00DF62  C018  F01D         	movff	pad@p+1,pad@w+1
  6166  00DF66  EFB9  F06F         	goto	l1008
  6167  00DF6A                     l2355:
  6168  00DF6A  0E00               	movlw	0
  6169  00DF6C  6E1D               	movwf	(pad@w+1)^0,c
  6170  00DF6E  0E00               	movlw	0
  6171  00DF70  6E1C               	movwf	pad@w^0,c
  6172  00DF72                     l1008:
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6175  00DF72  0E00               	movlw	0
  6176  00DF74  6E1B               	movwf	(pad@i+1)^0,c
  6177  00DF76  0E00               	movlw	0
  6178  00DF78  6E1A               	movwf	pad@i^0,c
  6179                           
  6180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6181  00DF7A  EFCB  F06F         	goto	l2361
  6182  00DF7E                     l2357:
  6183                           
  6184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6185  00DF7E  0E00               	movlw	0
  6186  00DF80  6E04               	movwf	(fputc@c+1)^0,c
  6187  00DF82  0E20               	movlw	32
  6188  00DF84  6E03               	movwf	fputc@c^0,c
  6189  00DF86  C013  F005         	movff	pad@fp,fputc@fp
  6190  00DF8A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6191  00DF8E  EC4B  F06F         	call	_fputc	;wreg free
  6192  00DF92                     
  6193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6194  00DF92  4A1A               	infsnz	pad@i^0,f,c
  6195  00DF94  2A1B               	incf	(pad@i+1)^0,f,c
  6196  00DF96                     l2361:
  6197                           
  6198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6199  00DF96  501C               	movf	pad@w^0,w,c
  6200  00DF98  5C1A               	subwf	pad@i^0,w,c
  6201  00DF9A  501B               	movf	(pad@i+1)^0,w,c
  6202  00DF9C  0A80               	xorlw	128
  6203  00DF9E  6E19               	movwf	??_pad^0,c
  6204  00DFA0  501D               	movf	(pad@w+1)^0,w,c
  6205  00DFA2  0A80               	xorlw	128
  6206  00DFA4  5819               	subwfb	??_pad^0,w,c
  6207  00DFA6  A0D8               	btfss	status,0,c
  6208  00DFA8  EFD8  F06F         	goto	u1651
  6209  00DFAC  EFDA  F06F         	goto	u1650
  6210  00DFB0                     u1651:
  6211  00DFB0  EFBF  F06F         	goto	l2357
  6212  00DFB4                     u1650:
  6213  00DFB4                     
  6214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6215  00DFB4  0100               	movlb	0	; () banked
  6216  00DFB6  B198               	btfsc	_flags& (0+255),0,b
  6217  00DFB8  EFE0  F06F         	goto	u1661
  6218  00DFBC  EFE2  F06F         	goto	u1660
  6219  00DFC0                     u1661:
  6220  00DFC0  EFEC  F06F         	goto	l2365
  6221  00DFC4                     u1660:
  6222  00DFC4                     
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6225  00DFC4  C015  F00C         	movff	pad@buf,fputs@s
  6226  00DFC8  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6227  00DFCC  C013  F00E         	movff	pad@fp,fputs@fp
  6228  00DFD0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6229  00DFD4  EC72  F06E         	call	_fputs	;wreg free
  6230  00DFD8                     l2365:
  6231                           
  6232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  6233  00DFD8  C015  F001         	movff	pad@buf,strlen@s
  6234  00DFDC  C016  F002         	movff	pad@buf+1,strlen@s+1
  6235  00DFE0  ECA6  F06D         	call	_strlen	;wreg free
  6236  00DFE4  501C               	movf	pad@w^0,w,c
  6237  00DFE6  2401               	addwf	?_strlen^0,w,c
  6238  00DFE8  6E13               	movwf	?_pad^0,c
  6239  00DFEA  501D               	movf	(pad@w+1)^0,w,c
  6240  00DFEC  2002               	addwfc	(?_strlen+1)^0,w,c
  6241  00DFEE  6E14               	movwf	(?_pad+1)^0,c
  6242  00DFF0  0012               	return		;funcret
  6243  00DFF2                     __end_of_pad:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _strlen *****************
  6247 ;; Defined at:
  6248 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6251 ;;		 -> dbuf(32), 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6254 ;;		 -> dbuf(32), 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    0[COMRAM] unsigned int 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        4 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_pad
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text19
  6278  00DB4C                     __ptext19:
  6279                           	callstack 0
  6280  00DB4C                     _strlen:
  6281                           	callstack 25
  6282  00DB4C  C001  F003         	movff	strlen@s,strlen@a
  6283  00DB50  C002  F004         	movff	strlen@s+1,strlen@a+1
  6284  00DB54  EFAE  F06D         	goto	l2213
  6285  00DB58                     l2211:
  6286  00DB58  4A01               	infsnz	strlen@s^0,f,c
  6287  00DB5A  2A02               	incf	(strlen@s+1)^0,f,c
  6288  00DB5C                     l2213:
  6289  00DB5C  C001  FFD9         	movff	strlen@s,fsr2l
  6290  00DB60  C002  FFDA         	movff	strlen@s+1,fsr2h
  6291  00DB64  50DF               	movf	indf2,w,c
  6292  00DB66  A4D8               	btfss	status,2,c
  6293  00DB68  EFB8  F06D         	goto	u1401
  6294  00DB6C  EFBA  F06D         	goto	u1400
  6295  00DB70                     u1401:
  6296  00DB70  EFAC  F06D         	goto	l2211
  6297  00DB74                     u1400:
  6298  00DB74  5003               	movf	strlen@a^0,w,c
  6299  00DB76  5C01               	subwf	strlen@s^0,w,c
  6300  00DB78  6E01               	movwf	?_strlen^0,c
  6301  00DB7A  5004               	movf	(strlen@a+1)^0,w,c
  6302  00DB7C  5802               	subwfb	(strlen@s+1)^0,w,c
  6303  00DB7E  6E02               	movwf	(?_strlen+1)^0,c
  6304  00DB80  0012               	return		;funcret
  6305  00DB82                     __end_of_strlen:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function _fputs *****************
  6309 ;; Defined at:
  6310 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6313 ;;		 -> dbuf(32), 
  6314 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6315 ;;		 -> NULL(0), 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  i               2   16[COMRAM] int 
  6318 ;;  c               1   15[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2   11[COMRAM] int 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        7 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		_fputc
  6337 ;; This function is called by:
  6338 ;;		_pad
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text20
  6343  00DCE4                     __ptext20:
  6344                           	callstack 0
  6345  00DCE4                     _fputs:
  6346                           	callstack 22
  6347  00DCE4  0E00               	movlw	0
  6348  00DCE6  6E12               	movwf	(fputs@i+1)^0,c
  6349  00DCE8  0E00               	movlw	0
  6350  00DCEA  6E11               	movwf	fputs@i^0,c
  6351  00DCEC  EF83  F06E         	goto	l2207
  6352  00DCF0                     l2203:
  6353  00DCF0  C010  F003         	movff	fputs@c,fputc@c
  6354  00DCF4  6A04               	clrf	(fputc@c+1)^0,c
  6355  00DCF6  C00E  F005         	movff	fputs@fp,fputc@fp
  6356  00DCFA  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6357  00DCFE  EC4B  F06F         	call	_fputc	;wreg free
  6358  00DD02  4A11               	infsnz	fputs@i^0,f,c
  6359  00DD04  2A12               	incf	(fputs@i+1)^0,f,c
  6360  00DD06                     l2207:
  6361  00DD06  5011               	movf	fputs@i^0,w,c
  6362  00DD08  240C               	addwf	fputs@s^0,w,c
  6363  00DD0A  6ED9               	movwf	fsr2l,c
  6364  00DD0C  5012               	movf	(fputs@i+1)^0,w,c
  6365  00DD0E  200D               	addwfc	(fputs@s+1)^0,w,c
  6366  00DD10  6EDA               	movwf	fsr2h,c
  6367  00DD12  50DF               	movf	indf2,w,c
  6368  00DD14  6E10               	movwf	fputs@c^0,c
  6369  00DD16  5010               	movf	fputs@c^0,w,c
  6370  00DD18  A4D8               	btfss	status,2,c
  6371  00DD1A  EF91  F06E         	goto	u1391
  6372  00DD1E  EF93  F06E         	goto	u1390
  6373  00DD22                     u1391:
  6374  00DD22  EF78  F06E         	goto	l2203
  6375  00DD26                     u1390:
  6376  00DD26  0012               	return		;funcret
  6377  00DD28                     __end_of_fputs:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _fputc *****************
  6381 ;; Defined at:
  6382 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  c               2    2[COMRAM] int 
  6385 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6386 ;;		 -> NULL(0), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    2[COMRAM] int 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;Total ram usage:        9 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    2
  6405 ;; This function calls:
  6406 ;;		_putch
  6407 ;; This function is called by:
  6408 ;;		_pad
  6409 ;;		_vfpfcnvrt
  6410 ;;		_fputs
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text21
  6415  00DE96                     __ptext21:
  6416                           	callstack 0
  6417  00DE96                     _fputc:
  6418                           	callstack 22
  6419  00DE96  5005               	movf	fputc@fp^0,w,c
  6420  00DE98  1006               	iorwf	(fputc@fp+1)^0,w,c
  6421  00DE9A  B4D8               	btfsc	status,2,c
  6422  00DE9C  EF52  F06F         	goto	u1351
  6423  00DEA0  EF54  F06F         	goto	u1350
  6424  00DEA4                     u1351:
  6425  00DEA4  EF5D  F06F         	goto	l2191
  6426  00DEA8                     u1350:
  6427  00DEA8  5005               	movf	fputc@fp^0,w,c
  6428  00DEAA  1006               	iorwf	(fputc@fp+1)^0,w,c
  6429  00DEAC  A4D8               	btfss	status,2,c
  6430  00DEAE  EF5B  F06F         	goto	u1361
  6431  00DEB2  EF5D  F06F         	goto	u1360
  6432  00DEB6                     u1361:
  6433  00DEB6  EF62  F06F         	goto	l2193
  6434  00DEBA                     u1360:
  6435  00DEBA                     l2191:
  6436  00DEBA  5003               	movf	fputc@c^0,w,c
  6437  00DEBC  ECBA  F06C         	call	_putch
  6438  00DEC0  EF95  F06F         	goto	l1215
  6439  00DEC4                     l2193:
  6440  00DEC4  EE20 F004          	lfsr	2,4
  6441  00DEC8  5005               	movf	fputc@fp^0,w,c
  6442  00DECA  26D9               	addwf	fsr2l,f,c
  6443  00DECC  5006               	movf	(fputc@fp+1)^0,w,c
  6444  00DECE  22DA               	addwfc	fsr2h,f,c
  6445  00DED0  50DE               	movf	postinc2,w,c
  6446  00DED2  10DE               	iorwf	postinc2,w,c
  6447  00DED4  B4D8               	btfsc	status,2,c
  6448  00DED6  EF6F  F06F         	goto	u1371
  6449  00DEDA  EF71  F06F         	goto	u1370
  6450  00DEDE                     u1371:
  6451  00DEDE  EF8C  F06F         	goto	l2197
  6452  00DEE2                     u1370:
  6453  00DEE2  EE20 F004          	lfsr	2,4
  6454  00DEE6  5005               	movf	fputc@fp^0,w,c
  6455  00DEE8  26D9               	addwf	fsr2l,f,c
  6456  00DEEA  5006               	movf	(fputc@fp+1)^0,w,c
  6457  00DEEC  22DA               	addwfc	fsr2h,f,c
  6458  00DEEE  EE10 F002          	lfsr	1,2
  6459  00DEF2  5005               	movf	fputc@fp^0,w,c
  6460  00DEF4  26E1               	addwf	fsr1l,f,c
  6461  00DEF6  5006               	movf	(fputc@fp+1)^0,w,c
  6462  00DEF8  22E2               	addwfc	fsr1h,f,c
  6463  00DEFA  50DE               	movf	postinc2,w,c
  6464  00DEFC  5CE6               	subwf	postinc1,w,c
  6465  00DEFE  50E6               	movf	postinc1,w,c
  6466  00DF00  0A80               	xorlw	128
  6467  00DF02  6E0B               	movwf	(??_fputc+4)^0,c
  6468  00DF04  50DE               	movf	postinc2,w,c
  6469  00DF06  0A80               	xorlw	128
  6470  00DF08  580B               	subwfb	(??_fputc+4)^0,w,c
  6471  00DF0A  B0D8               	btfsc	status,0,c
  6472  00DF0C  EF8A  F06F         	goto	u1381
  6473  00DF10  EF8C  F06F         	goto	u1380
  6474  00DF14                     u1381:
  6475  00DF14  EF95  F06F         	goto	l1215
  6476  00DF18                     u1380:
  6477  00DF18                     l2197:
  6478  00DF18  EE20 F002          	lfsr	2,2
  6479  00DF1C  5005               	movf	fputc@fp^0,w,c
  6480  00DF1E  26D9               	addwf	fsr2l,f,c
  6481  00DF20  5006               	movf	(fputc@fp+1)^0,w,c
  6482  00DF22  22DA               	addwfc	fsr2h,f,c
  6483  00DF24  2ADE               	incf	postinc2,f,c
  6484  00DF26  0E00               	movlw	0
  6485  00DF28  22DD               	addwfc	postdec2,f,c
  6486  00DF2A                     l1215:
  6487  00DF2A  0012               	return		;funcret
  6488  00DF2C                     __end_of_fputc:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function _putch *****************
  6492 ;; Defined at:
  6493 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  txData          1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  txData          1    1[COMRAM] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        1 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    1
  6514 ;; This function calls:
  6515 ;;		_EUSART1_Write
  6516 ;; This function is called by:
  6517 ;;		_fputc
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text22
  6522  00D974                     __ptext22:
  6523                           	callstack 0
  6524  00D974                     _putch:
  6525                           	callstack 22
  6526                           
  6527                           ;incstack = 0
  6528                           ;putch@txData stored from wreg
  6529  00D974  6E02               	movwf	putch@txData^0,c
  6530  00D976                     
  6531                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6532  00D976  5002               	movf	putch@txData^0,w,c
  6533  00D978  ECE5  F06C         	call	_EUSART1_Write
  6534  00D97C  0012               	return		;funcret
  6535  00D97E                     __end_of_putch:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function _EUSART1_Write *****************
  6539 ;; Defined at:
  6540 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  txData          1    wreg     unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  txData          1    0[COMRAM] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;Total ram usage:        1 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_putch
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text23
  6568  00D9CA                     __ptext23:
  6569                           	callstack 0
  6570  00D9CA                     _EUSART1_Write:
  6571                           	callstack 22
  6572                           
  6573                           ;incstack = 0
  6574                           ;EUSART1_Write@txData stored from wreg
  6575  00D9CA  6E01               	movwf	EUSART1_Write@txData^0,c
  6576  00D9CC                     l211:
  6577                           
  6578                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6579  00D9CC  A89E               	btfss	158,4,c	;volatile
  6580  00D9CE  EFEB  F06C         	goto	u1341
  6581  00D9D2  EFED  F06C         	goto	u1340
  6582  00D9D6                     u1341:
  6583  00D9D6  EFE6  F06C         	goto	l211
  6584  00D9DA                     u1340:
  6585  00D9DA                     
  6586                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6587  00D9DA  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6588  00D9DE  0012               	return		;funcret
  6589  00D9E0                     __end_of_EUSART1_Write:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _atoi *****************
  6593 ;; Defined at:
  6594 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6597 ;;		 -> STR_51(17), STR_50(2), STR_49(2), STR_48(71), 
  6598 ;;		 -> STR_47(71), STR_46(14), STR_45(14), STR_44(5), 
  6599 ;;		 -> STR_43(34), STR_42(38), STR_41(9), STR_40(34), 
  6600 ;;		 -> STR_39(28), STR_38(40), STR_37(38), STR_36(36), 
  6601 ;;		 -> STR_35(8), STR_34(7), STR_33(6), STR_32(9), 
  6602 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(15), 
  6603 ;;		 -> STR_27(9), STR_26(9), STR_25(9), STR_24(9), 
  6604 ;;		 -> STR_23(15), STR_22(9), STR_21(9), STR_20(9), 
  6605 ;;		 -> STR_19(9), STR_18(33), STR_17(40), STR_16(26), 
  6606 ;;		 -> STR_15(26), STR_14(39), STR_13(7), STR_12(5), 
  6607 ;;		 -> STR_11(44), STR_10(24), STR_9(21), STR_8(7), 
  6608 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(16), 
  6609 ;;		 -> STR_3(22), STR_2(13), STR_1(11), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  n               2   20[COMRAM] int 
  6612 ;;  neg             2   13[COMRAM] int 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2    7[COMRAM] int 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;Total ram usage:       15 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    1
  6629 ;; This function calls:
  6630 ;;		___wmul
  6631 ;;		_isdigit
  6632 ;;		_isspace
  6633 ;; This function is called by:
  6634 ;;		_vfpfcnvrt
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text24
  6639  00E588                     __ptext24:
  6640                           	callstack 0
  6641  00E588                     _atoi:
  6642                           	callstack 26
  6643  00E588  0E00               	movlw	0
  6644  00E58A  6E16               	movwf	(atoi@n+1)^0,c
  6645  00E58C  0E00               	movlw	0
  6646  00E58E  6E15               	movwf	atoi@n^0,c
  6647  00E590  0E00               	movlw	0
  6648  00E592  6E0F               	movwf	(atoi@neg+1)^0,c
  6649  00E594  0E00               	movlw	0
  6650  00E596  6E0E               	movwf	atoi@neg^0,c
  6651  00E598  EFD0  F072         	goto	l2589
  6652  00E59C                     l2587:
  6653  00E59C  4A08               	infsnz	atoi@s^0,f,c
  6654  00E59E  2A09               	incf	(atoi@s+1)^0,f,c
  6655  00E5A0                     l2589:
  6656  00E5A0  0E01               	movlw	1
  6657  00E5A2  6E14               	movwf	_atoi$1333^0,c
  6658  00E5A4  C008  FFF6         	movff	atoi@s,tblptrl
  6659  00E5A8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6660  00E5AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6661  00E5AC  6AF8               	clrf	tblptru,c
  6662  00E5AE                     	endif
  6663  00E5AE                     	if	0	;tblptru may be non-zero
  6664  00E5AE                     	endif
  6665  00E5AE  0008               	tblrd		*
  6666  00E5B0  50F5               	movf	tablat,w,c
  6667  00E5B2  0A20               	xorlw	32
  6668  00E5B4  B4D8               	btfsc	status,2,c
  6669  00E5B6  EFDF  F072         	goto	u2191
  6670  00E5BA  EFE1  F072         	goto	u2190
  6671  00E5BE                     u2191:
  6672  00E5BE  EFFF  F072         	goto	l2597
  6673  00E5C2                     u2190:
  6674  00E5C2  0EF7               	movlw	247
  6675  00E5C4  6E0A               	movwf	??_atoi^0,c
  6676  00E5C6  0EFF               	movlw	255
  6677  00E5C8  6E0B               	movwf	(??_atoi+1)^0,c
  6678  00E5CA  C008  FFF6         	movff	atoi@s,tblptrl
  6679  00E5CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6680  00E5D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6681  00E5D2  6AF8               	clrf	tblptru,c
  6682  00E5D4                     	endif
  6683  00E5D4                     	if	0	;tblptru may be non-zero
  6684  00E5D4                     	endif
  6685  00E5D4  0008               	tblrd		*
  6686  00E5D6  50F5               	movf	tablat,w,c
  6687  00E5D8  6E0C               	movwf	(??_atoi+2)^0,c
  6688  00E5DA  6A0D               	clrf	(??_atoi+3)^0,c
  6689  00E5DC  500A               	movf	??_atoi^0,w,c
  6690  00E5DE  260C               	addwf	(??_atoi+2)^0,f,c
  6691  00E5E0  500B               	movf	(??_atoi+1)^0,w,c
  6692  00E5E2  220D               	addwfc	(??_atoi+3)^0,f,c
  6693  00E5E4  500D               	movf	(??_atoi+3)^0,w,c
  6694  00E5E6  E109               	bnz	u2200
  6695  00E5E8  0E05               	movlw	5
  6696  00E5EA  5C0C               	subwf	(??_atoi+2)^0,w,c
  6697  00E5EC  A0D8               	btfss	status,0,c
  6698  00E5EE  EFFB  F072         	goto	u2201
  6699  00E5F2  EFFD  F072         	goto	u2200
  6700  00E5F6                     u2201:
  6701  00E5F6  EFFF  F072         	goto	l2597
  6702  00E5FA                     u2200:
  6703  00E5FA  0E00               	movlw	0
  6704  00E5FC  6E14               	movwf	_atoi$1333^0,c
  6705  00E5FE                     l2597:
  6706  00E5FE  C014  F010         	movff	_atoi$1333,_atoi$1332
  6707  00E602  6A11               	clrf	(_atoi$1332+1)^0,c
  6708  00E604  5010               	movf	_atoi$1332^0,w,c
  6709  00E606  1011               	iorwf	(_atoi$1332+1)^0,w,c
  6710  00E608  A4D8               	btfss	status,2,c
  6711  00E60A  EF09  F073         	goto	u2211
  6712  00E60E  EF0B  F073         	goto	u2210
  6713  00E612                     u2211:
  6714  00E612  EFCE  F072         	goto	l2587
  6715  00E616                     u2210:
  6716  00E616  EF15  F073         	goto	l2607
  6717  00E61A                     l2603:
  6718  00E61A  0E00               	movlw	0
  6719  00E61C  6E0F               	movwf	(atoi@neg+1)^0,c
  6720  00E61E  0E01               	movlw	1
  6721  00E620  6E0E               	movwf	atoi@neg^0,c
  6722  00E622                     l2605:
  6723  00E622  4A08               	infsnz	atoi@s^0,f,c
  6724  00E624  2A09               	incf	(atoi@s+1)^0,f,c
  6725  00E626  EF4C  F073         	goto	l2613
  6726  00E62A                     l2607:
  6727  00E62A  C008  FFF6         	movff	atoi@s,tblptrl
  6728  00E62E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6729  00E632                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6730  00E632  6AF8               	clrf	tblptru,c
  6731  00E634                     	endif
  6732  00E634                     	if	0	;tblptru may be non-zero
  6733  00E634                     	endif
  6734  00E634  0008               	tblrd		*
  6735  00E636  50F5               	movf	tablat,w,c
  6736  00E638  6E0A               	movwf	??_atoi^0,c
  6737  00E63A  6A0B               	clrf	(??_atoi+1)^0,c
  6738                           
  6739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 1, Range of values is 0 to 0
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  00E63C  500B               	movf	(??_atoi+1)^0,w,c
  6747  00E63E  0A00               	xorlw	0	; case 0
  6748  00E640  B4D8               	btfsc	status,2,c
  6749  00E642  EF25  F073         	goto	l3087
  6750  00E646  EF4C  F073         	goto	l2613
  6751  00E64A                     l3087:
  6752                           
  6753                           ; Switch size 1, requested type "simple"
  6754                           ; Number of cases is 2, Range of values is 43 to 45
  6755                           ; switch strategies available:
  6756                           ; Name         Instructions Cycles
  6757                           ; simple_byte            7     4 (average)
  6758                           ;	Chosen strategy is simple_byte
  6759  00E64A  500A               	movf	??_atoi^0,w,c
  6760  00E64C  0A2B               	xorlw	43	; case 43
  6761  00E64E  B4D8               	btfsc	status,2,c
  6762  00E650  EF11  F073         	goto	l2605
  6763  00E654  0A06               	xorlw	6	; case 45
  6764  00E656  B4D8               	btfsc	status,2,c
  6765  00E658  EF0D  F073         	goto	l2603
  6766  00E65C  EF4C  F073         	goto	l2613
  6767  00E660                     l2609:
  6768  00E660  C015  F001         	movff	atoi@n,___wmul@multiplier
  6769  00E664  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6770  00E668  0E00               	movlw	0
  6771  00E66A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6772  00E66C  0E0A               	movlw	10
  6773  00E66E  6E03               	movwf	___wmul@multiplicand^0,c
  6774  00E670  EC2A  F06D         	call	___wmul	;wreg free
  6775  00E674  C008  FFF6         	movff	atoi@s,tblptrl
  6776  00E678  C009  FFF7         	movff	atoi@s+1,tblptrh
  6777  00E67C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6778  00E67C  6AF8               	clrf	tblptru,c
  6779  00E67E                     	endif
  6780  00E67E                     	if	0	;tblptru may be non-zero
  6781  00E67E                     	endif
  6782  00E67E  0008               	tblrd		*
  6783  00E680  50F5               	movf	tablat,w,c
  6784  00E682  5E01               	subwf	?___wmul^0,f,c
  6785  00E684  0E00               	movlw	0
  6786  00E686  5A02               	subwfb	(?___wmul+1)^0,f,c
  6787  00E688  0E30               	movlw	48
  6788  00E68A  2401               	addwf	?___wmul^0,w,c
  6789  00E68C  6E15               	movwf	atoi@n^0,c
  6790  00E68E  0E00               	movlw	0
  6791  00E690  2002               	addwfc	(?___wmul+1)^0,w,c
  6792  00E692  6E16               	movwf	(atoi@n+1)^0,c
  6793  00E694  EF11  F073         	goto	l2605
  6794  00E698                     l2613:
  6795  00E698  0ED0               	movlw	208
  6796  00E69A  6E0A               	movwf	??_atoi^0,c
  6797  00E69C  0EFF               	movlw	255
  6798  00E69E  6E0B               	movwf	(??_atoi+1)^0,c
  6799  00E6A0  C008  FFF6         	movff	atoi@s,tblptrl
  6800  00E6A4  C009  FFF7         	movff	atoi@s+1,tblptrh
  6801  00E6A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6802  00E6A8  6AF8               	clrf	tblptru,c
  6803  00E6AA                     	endif
  6804  00E6AA                     	if	0	;tblptru may be non-zero
  6805  00E6AA                     	endif
  6806  00E6AA  0008               	tblrd		*
  6807  00E6AC  50F5               	movf	tablat,w,c
  6808  00E6AE  6E0C               	movwf	(??_atoi+2)^0,c
  6809  00E6B0  6A0D               	clrf	(??_atoi+3)^0,c
  6810  00E6B2  500A               	movf	??_atoi^0,w,c
  6811  00E6B4  260C               	addwf	(??_atoi+2)^0,f,c
  6812  00E6B6  500B               	movf	(??_atoi+1)^0,w,c
  6813  00E6B8  220D               	addwfc	(??_atoi+3)^0,f,c
  6814  00E6BA  500D               	movf	(??_atoi+3)^0,w,c
  6815  00E6BC  E10A               	bnz	u2220
  6816  00E6BE  0E0A               	movlw	10
  6817  00E6C0  5C0C               	subwf	(??_atoi+2)^0,w,c
  6818  00E6C2  A0D8               	btfss	status,0,c
  6819  00E6C4  EF66  F073         	goto	u2221
  6820  00E6C8  EF69  F073         	goto	u2220
  6821  00E6CC                     u2221:
  6822  00E6CC  0E01               	movlw	1
  6823  00E6CE  EF6A  F073         	goto	u2230
  6824  00E6D2                     u2220:
  6825  00E6D2  0E00               	movlw	0
  6826  00E6D4                     u2230:
  6827  00E6D4  6E12               	movwf	_atoi$1334^0,c
  6828  00E6D6  6A13               	clrf	(_atoi$1334+1)^0,c
  6829  00E6D8  5012               	movf	_atoi$1334^0,w,c
  6830  00E6DA  1013               	iorwf	(_atoi$1334+1)^0,w,c
  6831  00E6DC  A4D8               	btfss	status,2,c
  6832  00E6DE  EF73  F073         	goto	u2241
  6833  00E6E2  EF75  F073         	goto	u2240
  6834  00E6E6                     u2241:
  6835  00E6E6  EF30  F073         	goto	l2609
  6836  00E6EA                     u2240:
  6837  00E6EA  500E               	movf	atoi@neg^0,w,c
  6838  00E6EC  100F               	iorwf	(atoi@neg+1)^0,w,c
  6839  00E6EE  A4D8               	btfss	status,2,c
  6840  00E6F0  EF7C  F073         	goto	u2251
  6841  00E6F4  EF7E  F073         	goto	u2250
  6842  00E6F8                     u2251:
  6843  00E6F8  EF8C  F073         	goto	l1174
  6844  00E6FC                     u2250:
  6845  00E6FC  C015  F00A         	movff	atoi@n,??_atoi
  6846  00E700  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6847  00E704  1E0A               	comf	??_atoi^0,f,c
  6848  00E706  1E0B               	comf	(??_atoi+1)^0,f,c
  6849  00E708  4A0A               	infsnz	??_atoi^0,f,c
  6850  00E70A  2A0B               	incf	(??_atoi+1)^0,f,c
  6851  00E70C  C00A  F008         	movff	??_atoi,?_atoi
  6852  00E710  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6853  00E714  EF90  F073         	goto	l1177
  6854  00E718                     l1174:
  6855  00E718  C015  F008         	movff	atoi@n,?_atoi
  6856  00E71C  C016  F009         	movff	atoi@n+1,?_atoi+1
  6857  00E720                     l1177:
  6858  00E720  0012               	return		;funcret
  6859  00E722                     __end_of_atoi:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _isspace *****************
  6863 ;; Defined at:
  6864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  c               2    0[COMRAM] int 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  2    0[COMRAM] int 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;Total ram usage:        7 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_atoi
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text25
  6892  00DD28                     __ptext25:
  6893                           	callstack 0
  6894  00DD28                     _isspace:
  6895                           	callstack 26
  6896  00DD28  0E01               	movlw	1
  6897  00DD2A  6E07               	movwf	_isspace$1359^0,c
  6898  00DD2C  0E20               	movlw	32
  6899  00DD2E  1801               	xorwf	isspace@c^0,w,c
  6900  00DD30  1002               	iorwf	(isspace@c+1)^0,w,c
  6901  00DD32  B4D8               	btfsc	status,2,c
  6902  00DD34  EF9E  F06E         	goto	u1771
  6903  00DD38  EFA0  F06E         	goto	u1770
  6904  00DD3C                     u1771:
  6905  00DD3C  EFB9  F06E         	goto	l2403
  6906  00DD40                     u1770:
  6907  00DD40  0EF7               	movlw	247
  6908  00DD42  6E03               	movwf	??_isspace^0,c
  6909  00DD44  0EFF               	movlw	255
  6910  00DD46  6E04               	movwf	(??_isspace+1)^0,c
  6911  00DD48  C001  F005         	movff	isspace@c,??_isspace+2
  6912  00DD4C  C002  F006         	movff	isspace@c+1,??_isspace+3
  6913  00DD50  5003               	movf	??_isspace^0,w,c
  6914  00DD52  2605               	addwf	(??_isspace+2)^0,f,c
  6915  00DD54  5004               	movf	(??_isspace+1)^0,w,c
  6916  00DD56  2206               	addwfc	(??_isspace+3)^0,f,c
  6917  00DD58  5006               	movf	(??_isspace+3)^0,w,c
  6918  00DD5A  E109               	bnz	u1780
  6919  00DD5C  0E05               	movlw	5
  6920  00DD5E  5C05               	subwf	(??_isspace+2)^0,w,c
  6921  00DD60  A0D8               	btfss	status,0,c
  6922  00DD62  EFB5  F06E         	goto	u1781
  6923  00DD66  EFB7  F06E         	goto	u1780
  6924  00DD6A                     u1781:
  6925  00DD6A  EFB9  F06E         	goto	l2403
  6926  00DD6E                     u1780:
  6927  00DD6E  0E00               	movlw	0
  6928  00DD70  6E07               	movwf	_isspace$1359^0,c
  6929  00DD72                     l2403:
  6930  00DD72  C007  F001         	movff	_isspace$1359,?_isspace
  6931  00DD76  6A02               	clrf	(?_isspace+1)^0,c
  6932  00DD78  0012               	return		;funcret
  6933  00DD7A                     __end_of_isspace:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function _isdigit *****************
  6937 ;; Defined at:
  6938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  c               2    0[COMRAM] int 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  2    0[COMRAM] int 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        6 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_vfpfcnvrt
  6962 ;;		_atoi
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text26
  6967  00DB82                     __ptext26:
  6968                           	callstack 0
  6969  00DB82                     _isdigit:
  6970                           	callstack 27
  6971  00DB82  0ED0               	movlw	208
  6972  00DB84  6E03               	movwf	??_isdigit^0,c
  6973  00DB86  0EFF               	movlw	255
  6974  00DB88  6E04               	movwf	(??_isdigit+1)^0,c
  6975  00DB8A  C001  F005         	movff	isdigit@c,??_isdigit+2
  6976  00DB8E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6977  00DB92  5003               	movf	??_isdigit^0,w,c
  6978  00DB94  2605               	addwf	(??_isdigit+2)^0,f,c
  6979  00DB96  5004               	movf	(??_isdigit+1)^0,w,c
  6980  00DB98  2206               	addwfc	(??_isdigit+3)^0,f,c
  6981  00DB9A  5006               	movf	(??_isdigit+3)^0,w,c
  6982  00DB9C  E10A               	bnz	u1750
  6983  00DB9E  0E0A               	movlw	10
  6984  00DBA0  5C05               	subwf	(??_isdigit+2)^0,w,c
  6985  00DBA2  A0D8               	btfss	status,0,c
  6986  00DBA4  EFD6  F06D         	goto	u1751
  6987  00DBA8  EFD9  F06D         	goto	u1750
  6988  00DBAC                     u1751:
  6989  00DBAC  0E01               	movlw	1
  6990  00DBAE  EFDA  F06D         	goto	u1760
  6991  00DBB2                     u1750:
  6992  00DBB2  0E00               	movlw	0
  6993  00DBB4                     u1760:
  6994  00DBB4  6E01               	movwf	?_isdigit^0,c
  6995  00DBB6  6A02               	clrf	(?_isdigit+1)^0,c
  6996  00DBB8  0012               	return		;funcret
  6997  00DBBA                     __end_of_isdigit:
  6998                           	callstack 0
  6999                           
  7000 ;; *************** function ___wmul *****************
  7001 ;; Defined at:
  7002 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  multiplier      2    0[COMRAM] unsigned int 
  7005 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  product         2    4[COMRAM] unsigned int 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  2    0[COMRAM] unsigned int 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, prodl, prodh
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;Total ram usage:        6 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_atoi
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text27
  7031  00DA54                     __ptext27:
  7032                           	callstack 0
  7033  00DA54                     ___wmul:
  7034                           	callstack 26
  7035  00DA54  5001               	movf	___wmul@multiplier^0,w,c
  7036  00DA56  0203               	mulwf	___wmul@multiplicand^0,c
  7037  00DA58  CFF3 F005          	movff	prodl,___wmul@product
  7038  00DA5C  CFF4 F006          	movff	prodh,___wmul@product+1
  7039  00DA60  5001               	movf	___wmul@multiplier^0,w,c
  7040  00DA62  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7041  00DA64  50F3               	movf	243,w,c
  7042  00DA66  2606               	addwf	(___wmul@product+1)^0,f,c
  7043  00DA68  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7044  00DA6A  0203               	mulwf	___wmul@multiplicand^0,c
  7045  00DA6C  50F3               	movf	243,w,c
  7046  00DA6E  2606               	addwf	(___wmul@product+1)^0,f,c
  7047  00DA70  C005  F001         	movff	___wmul@product,?___wmul
  7048  00DA74  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7049  00DA78  0012               	return		;funcret
  7050  00DA7A                     __end_of___wmul:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _TMR2_ReadTimer *****************
  7054 ;; Defined at:
  7055 ;;		line 91 in file "mcc_generated_files/tmr2.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  readVal         1    0[COMRAM] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      unsigned char 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;Total ram usage:        1 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	text28
  7083  00D944                     __ptext28:
  7084                           	callstack 0
  7085  00D944                     _TMR2_ReadTimer:
  7086                           	callstack 30
  7087  00D944                     
  7088                           ;mcc_generated_files/tmr2.c: 93:     uint8_t readVal;;mcc_generated_files/tmr2.c: 95:   
      +                            readVal = TMR2;
  7089  00D944  CFBC F001          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  7090  00D948                     
  7091                           ;mcc_generated_files/tmr2.c: 97:     return readVal;
  7092  00D948  5001               	movf	TMR2_ReadTimer@readVal^0,w,c
  7093  00D94A  0012               	return		;funcret
  7094  00D94C                     __end_of_TMR2_ReadTimer:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _TMR0_WriteTimer *****************
  7098 ;; Defined at:
  7099 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  timerVal        2    0[COMRAM] unsigned short 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;Total ram usage:        2 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text29
  7127  00D96A                     __ptext29:
  7128                           	callstack 0
  7129  00D96A                     _TMR0_WriteTimer:
  7130                           	callstack 30
  7131  00D96A                     
  7132                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  7133  00D96A  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7134  00D96C  6ED7               	movwf	215,c	;volatile
  7135  00D96E                     
  7136                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  7137  00D96E  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7138  00D972  0012               	return		;funcret
  7139  00D974                     __end_of_TMR0_WriteTimer:
  7140                           	callstack 0
  7141                           
  7142 ;; *************** function _TMR0_ReadTimer *****************
  7143 ;; Defined at:
  7144 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  readVal         2    4[COMRAM] unsigned short 
  7149 ;;  readValHigh     1    7[COMRAM] unsigned char 
  7150 ;;  readValLow      1    6[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  2    0[COMRAM] unsigned short 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;Total ram usage:        8 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_main
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text30
  7174  00DA16                     __ptext30:
  7175                           	callstack 0
  7176  00DA16                     _TMR0_ReadTimer:
  7177                           	callstack 30
  7178  00DA16                     
  7179                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
  7180  00DA16  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  7181                           
  7182                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
  7183  00DA1A  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  7184  00DA1E                     
  7185                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  7186  00DA1E  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  7187  00DA20  6E03               	movwf	??_TMR0_ReadTimer^0,c
  7188  00DA22  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  7189  00DA24  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  7190  00DA26  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  7191  00DA2A                     
  7192                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
  7193  00DA2A  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  7194  00DA2E  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  7195  00DA32  0012               	return		;funcret
  7196  00DA34                     __end_of_TMR0_ReadTimer:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _TMR0_HasOverflowOccured *****************
  7200 ;; Defined at:
  7201 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      _Bool 
  7208 ;; Registers used:
  7209 ;;		wreg
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_main
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text31
  7229  00D9A2                     __ptext31:
  7230                           	callstack 0
  7231  00D9A2                     _TMR0_HasOverflowOccured:
  7232                           	callstack 30
  7233  00D9A2                     
  7234                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
  7235  00D9A2  B4F2               	btfsc	242,2,c	;volatile
  7236  00D9A4  EFD6  F06C         	goto	u2531
  7237  00D9A8  EFD9  F06C         	goto	u2530
  7238  00D9AC                     u2531:
  7239  00D9AC  0E01               	movlw	1
  7240  00D9AE  EFDA  F06C         	goto	u2536
  7241  00D9B2                     u2530:
  7242  00D9B2  0E00               	movlw	0
  7243  00D9B4                     u2536:
  7244  00D9B4  0012               	return		;funcret
  7245  00D9B6                     __end_of_TMR0_HasOverflowOccured:
  7246                           	callstack 0
  7247                           
  7248 ;; *************** function _SYSTEM_Initialize *****************
  7249 ;; Defined at:
  7250 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    2
  7271 ;; This function calls:
  7272 ;;		_EPWM1_Initialize
  7273 ;;		_EUSART1_Initialize
  7274 ;;		_OSCILLATOR_Initialize
  7275 ;;		_PIN_MANAGER_Initialize
  7276 ;;		_TMR0_Initialize
  7277 ;;		_TMR2_Initialize
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text32
  7284  00D9E0                     __ptext32:
  7285                           	callstack 0
  7286  00D9E0                     _SYSTEM_Initialize:
  7287                           	callstack 28
  7288  00D9E0                     
  7289                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7290  00D9E0  EC79  F06D         	call	_PIN_MANAGER_Initialize	;wreg free
  7291                           
  7292                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7293  00D9E4  ECFD  F06C         	call	_OSCILLATOR_Initialize	;wreg free
  7294                           
  7295                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  7296  00D9E8  EC1A  F06D         	call	_EPWM1_Initialize	;wreg free
  7297                           
  7298                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  7299  00D9EC  ECBF  F06C         	call	_TMR2_Initialize	;wreg free
  7300  00D9F0                     
  7301                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7302  00D9F0  EC51  F06D         	call	_TMR0_Initialize	;wreg free
  7303  00D9F4                     
  7304                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7305  00D9F4  EC33  F06E         	call	_EUSART1_Initialize	;wreg free
  7306  00D9F8  0012               	return		;funcret
  7307  00D9FA                     __end_of_SYSTEM_Initialize:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _TMR2_Initialize *****************
  7311 ;; Defined at:
  7312 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        0 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_SYSTEM_Initialize
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text33
  7340  00D97E                     __ptext33:
  7341                           	callstack 0
  7342  00D97E                     _TMR2_Initialize:
  7343                           	callstack 29
  7344  00D97E                     
  7345                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  7346  00D97E  0E3F               	movlw	63
  7347  00D980  6EBB               	movwf	187,c	;volatile
  7348                           
  7349                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7350  00D982  0E00               	movlw	0
  7351  00D984  6EBC               	movwf	188,c	;volatile
  7352  00D986                     
  7353                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7354  00D986  929E               	bcf	158,1,c	;volatile
  7355                           
  7356                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  7357  00D988  0E06               	movlw	6
  7358  00D98A  6EBA               	movwf	186,c	;volatile
  7359  00D98C  0012               	return		;funcret
  7360  00D98E                     __end_of_TMR2_Initialize:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function _TMR0_Initialize *****************
  7364 ;; Defined at:
  7365 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;Total ram usage:        2 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_SYSTEM_Initialize
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text34
  7393  00DAA2                     __ptext34:
  7394                           	callstack 0
  7395  00DAA2                     _TMR0_Initialize:
  7396                           	callstack 29
  7397  00DAA2                     
  7398                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
  7399  00DAA2  9CD5               	bcf	213,6,c	;volatile
  7400  00DAA4                     
  7401                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xF5;
  7402  00DAA4  0EF5               	movlw	245
  7403  00DAA6  6ED7               	movwf	215,c	;volatile
  7404  00DAA8                     
  7405                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xFF;
  7406  00DAA8  68D6               	setf	214,c	;volatile
  7407  00DAAA                     
  7408                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7409  00DAAA  50D6               	movf	214,w,c	;volatile
  7410  00DAAC  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  7411  00DAB0  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  7412  00DAB2  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7413  00DAB6  6A01               	clrf	??_TMR0_Initialize^0,c
  7414  00DAB8  1001               	iorwf	??_TMR0_Initialize^0,w,c
  7415  00DABA  0100               	movlb	0	; () banked
  7416  00DABC  6FA0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7417  00DABE  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  7418  00DAC0  6FA1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  7419  00DAC2                     
  7420                           ; BSR set to: 0
  7421                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  7422  00DAC2  94F2               	bcf	242,2,c	;volatile
  7423  00DAC4                     
  7424                           ; BSR set to: 0
  7425                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x93;
  7426  00DAC4  0E93               	movlw	147
  7427  00DAC6  6ED5               	movwf	213,c	;volatile
  7428  00DAC8                     
  7429                           ; BSR set to: 0
  7430  00DAC8  0012               	return		;funcret
  7431  00DACA                     __end_of_TMR0_Initialize:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _PIN_MANAGER_Initialize *****************
  7435 ;; Defined at:
  7436 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;		None
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;		None
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;Total ram usage:        0 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_SYSTEM_Initialize
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text35
  7464  00DAF2                     __ptext35:
  7465                           	callstack 0
  7466  00DAF2                     _PIN_MANAGER_Initialize:
  7467                           	callstack 29
  7468  00DAF2                     
  7469                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7470  00DAF2  0E00               	movlw	0
  7471  00DAF4  6E89               	movwf	137,c	;volatile
  7472                           
  7473                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7474  00DAF6  0E00               	movlw	0
  7475  00DAF8  6E8A               	movwf	138,c	;volatile
  7476                           
  7477                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7478  00DAFA  0E00               	movlw	0
  7479  00DAFC  6E8B               	movwf	139,c	;volatile
  7480  00DAFE                     
  7481                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7482  00DAFE  6892               	setf	146,c	;volatile
  7483  00DB00                     
  7484                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7485  00DB00  6893               	setf	147,c	;volatile
  7486                           
  7487                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  7488  00DB02  0EBB               	movlw	187
  7489  00DB04  6E94               	movwf	148,c	;volatile
  7490                           
  7491                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7492  00DB06  0E3C               	movlw	60
  7493  00DB08  010F               	movlb	15	; () banked
  7494  00DB0A  6F3A               	movwf	58,b	;volatile
  7495                           
  7496                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7497  00DB0C  0E3F               	movlw	63
  7498  00DB0E  6F39               	movwf	57,b	;volatile
  7499                           
  7500                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  7501  00DB10  0E2F               	movlw	47
  7502  00DB12  6F38               	movwf	56,b	;volatile
  7503                           
  7504                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7505  00DB14  0E00               	movlw	0
  7506  00DB16  6E61               	movwf	97,c	;volatile
  7507  00DB18                     
  7508                           ; BSR set to: 15
  7509                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7510  00DB18  8EF1               	bsf	241,7,c	;volatile
  7511  00DB1A                     
  7512                           ; BSR set to: 15
  7513  00DB1A  0012               	return		;funcret
  7514  00DB1C                     __end_of_PIN_MANAGER_Initialize:
  7515                           	callstack 0
  7516                           
  7517 ;; *************** function _OSCILLATOR_Initialize *****************
  7518 ;; Defined at:
  7519 ;;		line 61 in file "mcc_generated_files/mcc.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_SYSTEM_Initialize
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text36
  7547  00D9FA                     __ptext36:
  7548                           	callstack 0
  7549  00D9FA                     _OSCILLATOR_Initialize:
  7550                           	callstack 29
  7551  00D9FA                     
  7552                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  7553  00D9FA  0E70               	movlw	112
  7554  00D9FC  6ED3               	movwf	211,c	;volatile
  7555                           
  7556                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  7557  00D9FE  0E04               	movlw	4
  7558  00DA00  6ED2               	movwf	210,c	;volatile
  7559                           
  7560                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  7561  00DA02  0E40               	movlw	64
  7562  00DA04  6E9B               	movwf	155,c	;volatile
  7563  00DA06                     l141:
  7564                           
  7565                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  7566  00DA06  AED2               	btfss	4050,7,c	;volatile
  7567  00DA08  EF08  F06D         	goto	u2511
  7568  00DA0C  EF0A  F06D         	goto	u2510
  7569  00DA10                     u2511:
  7570  00DA10  EF03  F06D         	goto	l141
  7571  00DA14                     u2510:
  7572  00DA14  0012               	return		;funcret
  7573  00DA16                     __end_of_OSCILLATOR_Initialize:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function _EUSART1_Initialize *****************
  7577 ;; Defined at:
  7578 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;Total ram usage:        0 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    1
  7599 ;; This function calls:
  7600 ;;		_EUSART1_SetErrorHandler
  7601 ;;		_EUSART1_SetFramingErrorHandler
  7602 ;;		_EUSART1_SetOverrunErrorHandler
  7603 ;; This function is called by:
  7604 ;;		_SYSTEM_Initialize
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text37
  7609  00DC66                     __ptext37:
  7610                           	callstack 0
  7611  00DC66                     _EUSART1_Initialize:
  7612                           	callstack 28
  7613  00DC66                     
  7614                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  7615  00DC66  0E08               	movlw	8
  7616  00DC68  6EB8               	movwf	184,c	;volatile
  7617                           
  7618                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  7619  00DC6A  0E90               	movlw	144
  7620  00DC6C  6EAB               	movwf	171,c	;volatile
  7621                           
  7622                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  7623  00DC6E  0E24               	movlw	36
  7624  00DC70  6EAC               	movwf	172,c	;volatile
  7625                           
  7626                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  7627  00DC72  0E82               	movlw	130
  7628  00DC74  6EAF               	movwf	175,c	;volatile
  7629                           
  7630                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  7631  00DC76  0E06               	movlw	6
  7632  00DC78  6EB0               	movwf	176,c	;volatile
  7633  00DC7A                     
  7634                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7635  00DC7A  0E00               	movlw	0
  7636  00DC7C  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7637  00DC7E  0E00               	movlw	0
  7638  00DC80  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7639  00DC82  ECAB  F06C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7640  00DC86                     
  7641                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7642  00DC86  0E00               	movlw	0
  7643  00DC88  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7644  00DC8A  0E00               	movlw	0
  7645  00DC8C  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7646  00DC8E  ECB0  F06C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7647  00DC92                     
  7648                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7649  00DC92  0E00               	movlw	0
  7650  00DC94  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7651  00DC96  0E00               	movlw	0
  7652  00DC98  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7653  00DC9A  ECA6  F06C         	call	_EUSART1_SetErrorHandler	;wreg free
  7654  00DC9E                     
  7655                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7656  00DC9E  0E00               	movlw	0
  7657  00DCA0  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7658  00DCA2  0012               	return		;funcret
  7659  00DCA4                     __end_of_EUSART1_Initialize:
  7660                           	callstack 0
  7661                           
  7662 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7663 ;; Defined at:
  7664 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7667 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;Total ram usage:        2 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_EUSART1_Initialize
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text38
  7693  00D960                     __ptext38:
  7694                           	callstack 0
  7695  00D960                     _EUSART1_SetOverrunErrorHandler:
  7696                           	callstack 28
  7697  00D960                     
  7698                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  7699  00D960  C001  F09C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7700  00D964  C002  F09D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7701  00D968  0012               	return		;funcret
  7702  00D96A                     __end_of_EUSART1_SetOverrunErrorHandler:
  7703                           	callstack 0
  7704                           
  7705 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7706 ;; Defined at:
  7707 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7710 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;Total ram usage:        2 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_EUSART1_Initialize
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text39
  7736  00D956                     __ptext39:
  7737                           	callstack 0
  7738  00D956                     _EUSART1_SetFramingErrorHandler:
  7739                           	callstack 28
  7740  00D956                     
  7741                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  7742  00D956  C001  F09E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7743  00D95A  C002  F09F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7744  00D95E  0012               	return		;funcret
  7745  00D960                     __end_of_EUSART1_SetFramingErrorHandler:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _EUSART1_SetErrorHandler *****************
  7749 ;; Defined at:
  7750 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7753 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;Total ram usage:        2 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_EUSART1_Initialize
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text40
  7779  00D94C                     __ptext40:
  7780                           	callstack 0
  7781  00D94C                     _EUSART1_SetErrorHandler:
  7782                           	callstack 28
  7783  00D94C                     
  7784                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7785  00D94C  C001  F09A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7786  00D950  C002  F09B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7787  00D954  0012               	return		;funcret
  7788  00D956                     __end_of_EUSART1_SetErrorHandler:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function _EPWM1_Initialize *****************
  7792 ;; Defined at:
  7793 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_SYSTEM_Initialize
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text41
  7821  00DA34                     __ptext41:
  7822                           	callstack 0
  7823  00DA34                     _EPWM1_Initialize:
  7824                           	callstack 29
  7825  00DA34                     
  7826                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7827  00DA34  0E3C               	movlw	60
  7828  00DA36  6EBD               	movwf	189,c	;volatile
  7829                           
  7830                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7831  00DA38  0E00               	movlw	0
  7832  00DA3A  6EB6               	movwf	182,c	;volatile
  7833                           
  7834                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7835  00DA3C  0E80               	movlw	128
  7836  00DA3E  6EB7               	movwf	183,c	;volatile
  7837                           
  7838                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7839  00DA40  0E01               	movlw	1
  7840  00DA42  6EB9               	movwf	185,c	;volatile
  7841                           
  7842                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7843  00DA44  0E00               	movlw	0
  7844  00DA46  6EBF               	movwf	191,c	;volatile
  7845                           
  7846                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  7847  00DA48  0E1F               	movlw	31
  7848  00DA4A  6EBE               	movwf	190,c	;volatile
  7849                           
  7850                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7851  00DA4C  0EFC               	movlw	-4
  7852  00DA4E  010F               	movlb	15	; () banked
  7853  00DA50  1749               	andwf	73,f,b	;volatile
  7854  00DA52                     
  7855                           ; BSR set to: 15
  7856  00DA52  0012               	return		;funcret
  7857  00DA54                     __end_of_EPWM1_Initialize:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _EUSART1_is_rx_ready *****************
  7861 ;; Defined at:
  7862 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      _Bool 
  7869 ;; Registers used:
  7870 ;;		wreg
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text42
  7890  00D98E                     __ptext42:
  7891                           	callstack 0
  7892  00D98E                     _EUSART1_is_rx_ready:
  7893                           	callstack 30
  7894  00D98E                     
  7895                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7896  00D98E  BA9E               	btfsc	158,5,c	;volatile
  7897  00D990  EFCC  F06C         	goto	u2541
  7898  00D994  EFCF  F06C         	goto	u2540
  7899  00D998                     u2541:
  7900  00D998  0E01               	movlw	1
  7901  00D99A  EFD0  F06C         	goto	u2546
  7902  00D99E                     u2540:
  7903  00D99E  0E00               	movlw	0
  7904  00D9A0                     u2546:
  7905  00D9A0  0012               	return		;funcret
  7906  00D9A2                     __end_of_EUSART1_is_rx_ready:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function _EUSART1_Read *****************
  7910 ;; Defined at:
  7911 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_main
  7935 ;;		_getch
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text43
  7940  00DA7A                     __ptext43:
  7941                           	callstack 0
  7942  00DA7A                     _EUSART1_Read:
  7943                           	callstack 30
  7944  00DA7A                     l204:
  7945                           
  7946                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7947  00DA7A  AA9E               	btfss	158,5,c	;volatile
  7948  00DA7C  EF42  F06D         	goto	u2551
  7949  00DA80  EF44  F06D         	goto	u2550
  7950  00DA84                     u2551:
  7951  00DA84  EF3D  F06D         	goto	l204
  7952  00DA88                     u2550:
  7953  00DA88                     
  7954                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7955  00DA88  0E00               	movlw	0
  7956  00DA8A  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7957  00DA8C                     
  7958                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7959  00DA8C  A2AB               	btfss	171,1,c	;volatile
  7960  00DA8E  EF4B  F06D         	goto	u2561
  7961  00DA92  EF4D  F06D         	goto	u2560
  7962  00DA96                     u2561:
  7963  00DA96  EF4F  F06D         	goto	l2901
  7964  00DA9A                     u2560:
  7965  00DA9A                     
  7966                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7967  00DA9A  98AB               	bcf	171,4,c	;volatile
  7968                           
  7969                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7970  00DA9C  88AB               	bsf	171,4,c	;volatile
  7971  00DA9E                     l2901:
  7972                           
  7973                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7974  00DA9E  50AE               	movf	174,w,c	;volatile
  7975  00DAA0  0012               	return		;funcret
  7976  00DAA2                     __end_of_EUSART1_Read:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _EPWM1_LoadDutyValue *****************
  7980 ;; Defined at:
  7981 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  dutyValue       2    0[COMRAM] unsigned short 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;Total ram usage:        4 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_main
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text44
  8009  00DB1C                     __ptext44:
  8010                           	callstack 0
  8011  00DB1C                     _EPWM1_LoadDutyValue:
  8012                           	callstack 30
  8013  00DB1C                     
  8014                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  8015  00DB1C  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  8016  00DB20  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  8017  00DB24  90D8               	bcf	status,0,c
  8018  00DB26  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  8019  00DB28  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  8020  00DB2A  90D8               	bcf	status,0,c
  8021  00DB2C  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  8022  00DB2E  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  8023  00DB30  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
  8024  00DB32  6EBE               	movwf	190,c	;volatile
  8025                           
  8026                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  8027  00DB34  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  8028  00DB38  0E03               	movlw	3
  8029  00DB3A  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  8030  00DB3C  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  8031  00DB3E  0EF0               	movlw	240
  8032  00DB40  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  8033  00DB42  50BD               	movf	189,w,c	;volatile
  8034  00DB44  0BCF               	andlw	207
  8035  00DB46  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  8036  00DB48  6EBD               	movwf	189,c	;volatile
  8037  00DB4A  0012               	return		;funcret
  8038  00DB4C                     __end_of_EPWM1_LoadDutyValue:
  8039                           	callstack 0
  8040                           
  8041                           	psect	rparam
  8042  0000                     
  8043                           	psect	idloc
  8044                           
  8045                           ;Config register IDLOC0 @ 0x200000
  8046                           ;	unspecified, using default values
  8047  200000                     	org	2097152
  8048  200000  FF                 	db	255
  8049                           
  8050                           ;Config register IDLOC1 @ 0x200001
  8051                           ;	unspecified, using default values
  8052  200001                     	org	2097153
  8053  200001  FF                 	db	255
  8054                           
  8055                           ;Config register IDLOC2 @ 0x200002
  8056                           ;	unspecified, using default values
  8057  200002                     	org	2097154
  8058  200002  FF                 	db	255
  8059                           
  8060                           ;Config register IDLOC3 @ 0x200003
  8061                           ;	unspecified, using default values
  8062  200003                     	org	2097155
  8063  200003  FF                 	db	255
  8064                           
  8065                           ;Config register IDLOC4 @ 0x200004
  8066                           ;	unspecified, using default values
  8067  200004                     	org	2097156
  8068  200004  FF                 	db	255
  8069                           
  8070                           ;Config register IDLOC5 @ 0x200005
  8071                           ;	unspecified, using default values
  8072  200005                     	org	2097157
  8073  200005  FF                 	db	255
  8074                           
  8075                           ;Config register IDLOC6 @ 0x200006
  8076                           ;	unspecified, using default values
  8077  200006                     	org	2097158
  8078  200006  FF                 	db	255
  8079                           
  8080                           ;Config register IDLOC7 @ 0x200007
  8081                           ;	unspecified, using default values
  8082  200007                     	org	2097159
  8083  200007  FF                 	db	255
  8084                           
  8085                           	psect	config
  8086                           
  8087                           ; Padding undefined space
  8088  300000                     	org	3145728
  8089  300000  FF                 	db	255
  8090                           
  8091                           ;Config register CONFIG1H @ 0x300001
  8092                           ;	Oscillator Selection bits
  8093                           ;	FOSC = INTIO67, Internal oscillator block
  8094                           ;	4X PLL Enable
  8095                           ;	PLLCFG = OFF, Oscillator used directly
  8096                           ;	Primary clock enable bit
  8097                           ;	PRICLKEN = ON, Primary clock enabled
  8098                           ;	Fail-Safe Clock Monitor Enable bit
  8099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8100                           ;	Internal/External Oscillator Switchover bit
  8101                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8102  300001                     	org	3145729
  8103  300001  28                 	db	40
  8104                           
  8105                           ;Config register CONFIG2L @ 0x300002
  8106                           ;	Power-up Timer Enable bit
  8107                           ;	PWRTEN = OFF, Power up timer disabled
  8108                           ;	Brown-out Reset Enable bits
  8109                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8110                           ;	Brown Out Reset Voltage bits
  8111                           ;	BORV = 190, VBOR set to 1.90 V nominal
  8112  300002                     	org	3145730
  8113  300002  1F                 	db	31
  8114                           
  8115                           ;Config register CONFIG2H @ 0x300003
  8116                           ;	Watchdog Timer Enable bits
  8117                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8118                           ;	Watchdog Timer Postscale Select bits
  8119                           ;	WDTPS = 32768, 1:32768
  8120  300003                     	org	3145731
  8121  300003  3C                 	db	60
  8122                           
  8123                           ; Padding undefined space
  8124  300004                     	org	3145732
  8125  300004  FF                 	db	255
  8126                           
  8127                           ;Config register CONFIG3H @ 0x300005
  8128                           ;	CCP2 MUX bit
  8129                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  8130                           ;	PORTB A/D Enable bit
  8131                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8132                           ;	P3A/CCP3 Mux bit
  8133                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  8134                           ;	HFINTOSC Fast Start-up
  8135                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  8136                           ;	Timer3 Clock input mux bit
  8137                           ;	T3CMX = PORTC0, T3CKI is on RC0
  8138                           ;	ECCP2 B output mux bit
  8139                           ;	P2BMX = PORTB5, P2B is on RB5
  8140                           ;	MCLR Pin Enable bit
  8141                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  8142  300005                     	org	3145733
  8143  300005  BF                 	db	191
  8144                           
  8145                           ;Config register CONFIG4L @ 0x300006
  8146                           ;	Stack Full/Underflow Reset Enable bit
  8147                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8148                           ;	Single-Supply ICSP Enable bit
  8149                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  8150                           ;	Extended Instruction Set Enable bit
  8151                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8152                           ;	Background Debug
  8153                           ;	DEBUG = OFF, Disabled
  8154  300006                     	org	3145734
  8155  300006  85                 	db	133
  8156                           
  8157                           ; Padding undefined space
  8158  300007                     	org	3145735
  8159  300007  FF                 	db	255
  8160                           
  8161                           ;Config register CONFIG5L @ 0x300008
  8162                           ;	Code Protection Block 0
  8163                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8164                           ;	Code Protection Block 1
  8165                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8166                           ;	Code Protection Block 2
  8167                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8168                           ;	Code Protection Block 3
  8169                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8170  300008                     	org	3145736
  8171  300008  0F                 	db	15
  8172                           
  8173                           ;Config register CONFIG5H @ 0x300009
  8174                           ;	Boot Block Code Protection bit
  8175                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8176                           ;	Data EEPROM Code Protection bit
  8177                           ;	CPD = OFF, Data EEPROM not code-protected
  8178  300009                     	org	3145737
  8179  300009  C0                 	db	192
  8180                           
  8181                           ;Config register CONFIG6L @ 0x30000A
  8182                           ;	Write Protection Block 0
  8183                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8184                           ;	Write Protection Block 1
  8185                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8186                           ;	Write Protection Block 2
  8187                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8188                           ;	Write Protection Block 3
  8189                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8190  30000A                     	org	3145738
  8191  30000A  0F                 	db	15
  8192                           
  8193                           ;Config register CONFIG6H @ 0x30000B
  8194                           ;	Configuration Register Write Protection bit
  8195                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8196                           ;	Boot Block Write Protection bit
  8197                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8198                           ;	Data EEPROM Write Protection bit
  8199                           ;	WRTD = OFF, Data EEPROM not write-protected
  8200  30000B                     	org	3145739
  8201  30000B  E0                 	db	224
  8202                           
  8203                           ;Config register CONFIG7L @ 0x30000C
  8204                           ;	Table Read Protection Block 0
  8205                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8206                           ;	Table Read Protection Block 1
  8207                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8208                           ;	Table Read Protection Block 2
  8209                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8210                           ;	Table Read Protection Block 3
  8211                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8212  30000C                     	org	3145740
  8213  30000C  0F                 	db	15
  8214                           
  8215                           ;Config register CONFIG7H @ 0x30000D
  8216                           ;	Boot Block Table Read Protection bit
  8217                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8218  30000D                     	org	3145741
  8219  30000D  40                 	db	64
  8220                           tosu	equ	0xFFF
  8221                           tosh	equ	0xFFE
  8222                           tosl	equ	0xFFD
  8223                           stkptr	equ	0xFFC
  8224                           pclatu	equ	0xFFB
  8225                           pclath	equ	0xFFA
  8226                           pcl	equ	0xFF9
  8227                           tblptru	equ	0xFF8
  8228                           tblptrh	equ	0xFF7
  8229                           tblptrl	equ	0xFF6
  8230                           tablat	equ	0xFF5
  8231                           prodh	equ	0xFF4
  8232                           prodl	equ	0xFF3
  8233                           indf0	equ	0xFEF
  8234                           postinc0	equ	0xFEE
  8235                           postdec0	equ	0xFED
  8236                           preinc0	equ	0xFEC
  8237                           plusw0	equ	0xFEB
  8238                           fsr0h	equ	0xFEA
  8239                           fsr0l	equ	0xFE9
  8240                           wreg	equ	0xFE8
  8241                           indf1	equ	0xFE7
  8242                           postinc1	equ	0xFE6
  8243                           postdec1	equ	0xFE5
  8244                           preinc1	equ	0xFE4
  8245                           plusw1	equ	0xFE3
  8246                           fsr1h	equ	0xFE2
  8247                           fsr1l	equ	0xFE1
  8248                           bsr	equ	0xFE0
  8249                           indf2	equ	0xFDF
  8250                           postinc2	equ	0xFDE
  8251                           postdec2	equ	0xFDD
  8252                           preinc2	equ	0xFDC
  8253                           plusw2	equ	0xFDB
  8254                           fsr2h	equ	0xFDA
  8255                           fsr2l	equ	0xFD9
  8256                           status	equ	0xFD8

Data Sizes:
    Strings     807
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     50      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_72(CODE[3]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_72(CODE[3]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1152_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_51(CODE[17]), STR_50(CODE[2]), STR_49(CODE[2]), STR_48(CODE[71]), 
		 -> STR_47(CODE[71]), STR_46(CODE[14]), STR_45(CODE[14]), STR_44(CODE[5]), 
		 -> STR_43(CODE[34]), STR_42(CODE[38]), STR_41(CODE[9]), STR_40(CODE[34]), 
		 -> STR_39(CODE[28]), STR_38(CODE[40]), STR_37(CODE[38]), STR_36(CODE[36]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[15]), 
		 -> STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), STR_24(CODE[9]), 
		 -> STR_23(CODE[15]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[33]), STR_17(CODE[40]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[39]), STR_13(CODE[7]), STR_12(CODE[5]), 
		 -> STR_11(CODE[44]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[16]), 
		 -> STR_3(CODE[22]), STR_2(CODE[13]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   29694
                                             33 BANK0     17    17      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                     _TMR2_ReadTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   28298
                                             23 BANK0     10     4      6
                     _TMR0_ReadTimer (ARG)
                     _TMR2_ReadTimer (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24354
                                             88 COMRAM     6     0      6
                                             21 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           56    50      6   23958
                                             68 COMRAM    20    14      6
                                              0 BANK0     21    21      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5131
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4551
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1365
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5150
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3569
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3349
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1428
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_ReadTimer                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_WriteTimer
   _TMR2_ReadTimer
   _printf
     _TMR0_ReadTimer (ARG)
     _TMR2_ReadTimer (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      62       5       61.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      12        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Sep 24 18:35:02 2020

               __end_of_TMR0_HasOverflowOccured D9B6                                              l20 DB4A  
                                            l17 DA52                                              l33 D98C  
                                            l42 D94A                                              l67 DAC8  
                                            l76 DA32                                              l85 D9B4  
                                            l79 D972                             ___wmul@multiplicand 0003  
                               _timer0ReloadVal 00A0                                             l112 DB1A  
                                           l211 D9CC                                             l204 DA7A  
                                           l220 D97C                                             l141 DA06  
                                           l214 D9DE                                             l208 DAA0  
                                           l232 D95E                                             l144 DA14  
                                           l138 D9F8                                             l235 D968  
                                           l405 E586                                             l238 D954  
                                           l418 E3FE                                             l282 F386  
                                           l195 D9A0                                             l187 DCA2  
                                           l291 DA78                                             l736 E29A  
                                           l729 E27A                                             l746 E0C0  
                                           l739 E0A0                                             l969 DAF0  
                                           _PR2 000FBB                                             _abs DCA4  
                                           _pad DF2C                                 _TMR2_Initialize D97E  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1011 DFB4                                            l1020 DDD2  
                                          l1013 DFF0                                            l1008 DF72  
                                          l1200 DBF0                                            l1105 F52E  
                                          l1026 EC9C                                            l1051 E75A  
                                          ?_abs 0013                                            l1028 ECA4  
                                          l1061 E922                                            l1053 E762  
                                          l1046 EEDC                                            l1118 FCD4  
                                          l1215 DF2A                                            l1223 DD26  
                                          l1143 DCDA                                            l2201 DCE4  
                                          l1233 E1AA                                            l3001 F3A0  
                                          l1146 DCE2                                            l1066 E95C  
                                          l1138 DE8C                                            l2203 DCF0  
                                          l2211 DB58                                            l1243 DE28  
                                          l1091 EBFA                                            l1075 E9F8  
                                          l1139 DE94                                            l3003 F3B4  
                                          l1180 DC64                                            l1068 E964  
                                          l2205 DD02                                            l1229 DB80  
                                          l2213 DB5C                                            l2301 E3AE  
                                          l1174 E718                                            l1254 DC28  
                                          l2223 DA54                                            l2207 DD06  
                                          l2215 DB74                                            l2231 E404  
                                          l2303 E3BE                                            l2311 E1B8  
                                          l3007 F3CA                                            l1248 DE30  
                                          l2225 DA70                                            l2401 DD6E  
                                          l1177 E720                                            l2209 DB4C  
                                          l2241 E464                                            l2233 E412  
                                          l2305 E3DE                                            l2321 E212  
                                          l2313 E1D6                                            l1089 EB96  
                                          l1186 DBB8                                            l1194 DD78  
                                          l2403 DD72                                            l2411 DD9A  
                                          l2251 E4AE                                            l2243 E468  
                                          l2235 E432                                            l2323 E240  
                                          l2315 E1DE                                            l2331 DFF2  
                                          l2219 DBF2                                            l2181 D9CC  
                                          l2413 DDA6                                            l2261 E51E  
                                          l2253 E4BC                                            l2245 E474  
                                          l2237 E436                                            l2229 E400  
                                          l2421 EBFC                                            l2325 E260  
                                          l2317 E1F2                                            l2309 E1AC  
                                          l2341 E068                                            l2333 E010  
                                          l2501 E81C                                            l2183 D9DA  
                                          l2191 DEBA                                            l2351 DF50  
                                          l2415 DDAA                                            l2407 DD7A  
                                          l2263 E530                                            l2255 E4CE  
                                          l2247 E492                                            l2239 E444  
                                          l2431 EC76                                            l2423 EC1C  
                                          l2327 E262                                            l2319 E200  
                                          l2343 E088                                            l2335 E018  
                                          l2511 E8D0                                            l2503 E822  
                                          l2601 E604                                            l2185 D976  
                                          l2193 DEC4                                            l2361 DF96  
                                          l2353 DF5E                                            l2417 DDAE  
                                          l2409 DD8E                                            l2257 E4FC  
                                          l2249 E49A                                            l2265 E536  
                                          l2281 E2D2                                            l2273 E29C  
                                          l2441 ECD2                                            l2433 EC90  
                                          l2425 EC44                                            l2329 E274  
                                          l2345 E09A                                            l2337 E02C  
                                          l2513 E8EA                                            l2505 E886  
                                          l2521 E934                                            l2603 E61A  
                                          l2195 DEE2                                            l2187 DE96  
                                          l2363 DFC4                                            l2355 DF6A  
                                          l2347 DF2C                                            l2267 E546  
                                          l2259 E51C                                            l2291 E33A  
                                          l2283 E2E0                                            l2275 E2A0  
                                          l2371 DCBE                                            l2451 ED70  
                                          l2443 ECDA                                            l2435 ECAC  
                                          l2427 EC64                                            l2339 E03A  
                                          l2507 E898                                            l2515 E8FA  
                                          l2531 E9A2                                            l2523 E936  
                                          l3083 F3DE                                            l2621 E6FC  
                                          l2613 E698                                            l2605 E622  
                                          l2197 DF18                                            l2189 DEA8  
                                          l2365 DFD8                                            l2357 DF7E  
                                          l2349 DF3C                                            l2269 E566  
                                          l2293 E348                                            l2285 E300  
                                          l2277 E2AE                                            l2461 EE2C  
                                          l2453 ED76                                            l2445 ECE2  
                                          l2437 ECBE                                            l2429 EC74  
                                          l2509 E8B6                                            l2373 DBBA  
                                          l2381 DDD4                                            l2541 E9DC  
                                          l2533 E9AA                                            l2525 E950  
                                          l2701 F5B6                                            l3085 F4EE  
                                          l2391 DB82                                            l3087 E64A  
                                          l2607 E62A                                            l2359 DF92  
                                          l2295 E376                                            l2287 E31E  
                                          l2279 E2CE                                            l2471 EE7E  
                                          l2463 EE46                                            l2447 ECE8  
                                          l2455 EDDA                                            l2439 ECCC  
                                          l2543 E9EC                                            l2535 E9B2  
                                          l2527 E97A                                            l2519 E924  
                                          l2703 F5D6                                            l2711 F640  
                                          l2617 E6D8                                            l2609 E660  
                                          l2297 E396                                            l2289 E326  
                                          l2369 DCA4                                            l2473 EE90  
                                          l2457 EDF4                                            l2465 EE56  
                                          l2449 ED6A                                            l2641 E154  
                                          l2633 E0F8                                            l2377 DC2A  
                                          l2385 DE0A                                            l2561 EAB4  
                                          l2553 EA78                                            l2537 E9B8  
                                          l2529 E982                                            l2801 FCC2  
                                          l2721 F6DA                                            l2713 F666  
                                          l2705 F5E4                                            l2651 D94C  
                                          l2395 DD28                                            l2619 E6EA  
                                          l2299 E3A8                                            l2475 EE9C  
                                          l2467 EE68                                            l2459 EE12  
                                          l2643 E182                                            l2635 E106  
                                          l2627 E0C2                                            l2491 E78A  
                                          l2483 E722                                            l2387 DE1C  
                                          l2571 EB6C                                            l2563 EABA  
                                          l2555 EA8A                                            l2547 EA2C  
                                          l2539 E9C0                                            l2731 F7B6  
                                          l2723 F700                                            l2715 F698  
                                          l2901 DA9E                                            l2813 DA34  
                                          l2821 DAA4                                            l2397 DD2C  
                                          l2477 EEA4                                            l2469 EE78  
                                          l2637 E124                                            l2629 E0EC  
                                          l2493 E792                                            l2485 E732  
                                          l2581 EBD2                                            l2573 EB86  
                                          l2549 EA3E                                            l2557 EA9E  
                                          l2565 EB18                                            l2741 F8CC  
                                          l2733 F7EC                                            l2725 F748  
                                          l2709 F62E                                            l2661 F482  
                                          l2653 F438                                            l2647 D956  
                                          l2831 DAF2                                            l2823 DAA8  
                                          l2815 D97E                                            l2399 DD40  
                                          l2591 E5A4                                            l2479 EEB4  
                                          l2639 E142                                            l2495 E79A  
                                          l2487 E734                                            l2575 EBA6  
                                          l2567 EB34                                            l2559 EAAE  
                                          l2751 F9E0                                            l2743 F918  
                                          l2735 F86E                                            l2719 F6B4  
                                          l2671 F4A8                                            l2663 F48E  
                                          l2655 F45E                                            l2649 D960  
                                          l2841 DC66                                            l2833 DAFE  
                                          l2825 DAAA                                            l2817 D986  
                                          l2593 E5C2                                            l2585 E588  
                                          l2497 E7A0                                            l2489 E74E  
                                          l2577 EBAC                                            l2569 EB52  
                                          l2761 FA7C                                            l2729 F780  
                                          l2665 F490                                            l2657 F46C  
                                          l2905 DACA                                            l2921 EEF4  
                                          l2843 DC7A                                            l2835 DB00  
                                          l2827 DAC2                                            l2819 DAA2  
                                          l2595 E5FA                                            l2587 E59C  
                                          l2499 E816                                            l2579 EBBC  
                                          l2771 FB3A                                            l2763 FA8A  
                                          l2755 FA18                                            l2747 F950  
                                          l2739 F8A6                                            l2691 F53C  
                                          l2683 F4BA                                            l2675 F4AE  
                                          l2667 F4A2                                            l2659 F47E  
                                          l2851 DE32                                            l2907 DAD4  
                                          l2931 EF60                                            l2923 EEF8  
                                          l2845 DC86                                            l2837 DB18  
                                          l2829 DAC4                                            l2861 D944  
                                          l2597 E5FE                                            l2589 E5A0  
                                          l2773 FB70                                            l2765 FAC8  
                                          l2757 FA3E                                            l2749 F986  
                                          l2693 F53E                                            l2853 DE3A  
                                          l2941 F000                                            l2933 EF74  
                                          l2925 EF04                                            ?_pad 0013  
                                          l2847 DC92                                            l2839 D9FA  
                                          l2871 DA2A                                            l2863 D948  
                                          l2775 FB98                                            l2783 FC2E  
                                          l2759 FA64                                            l2695 F564  
                                          l2687 F4C6                                            l2679 F4B4  
                                          l2855 DE48                                            l2951 F056  
                                          l2943 F01E                                            l2935 EF80  
                                          l2927 EF06                                            l2919 EEDE  
                                          l2849 DC9E                                            l2785 FC54  
                                          l2793 FC82                                            l2777 FBA8  
                                          l2769 FB04                                            l2697 F59A  
                                          l2689 F51C                                            l2857 DE6E  
                                          l2961 F2B2                                            l2953 F068  
                                          l2945 F02C                                            l2937 EFD2  
                                          l2929 EF1A                                            l2859 DB1C  
                                          l2883 D9E0                                            l2867 DA16  
                                          l2875 D96A                                            l2795 FC90  
                                          l2787 FC62                                            l2779 FBF2  
                                          l2699 F5A8                                            l2971 F318  
                                          l2963 F2CE                                            l2955 F212  
                                          l2947 F03A                                            l2939 EFE4  
                                          l2893 DA7A                                            l2885 D9F0  
                                          l2869 DA1E                                            l2877 D96E  
                                          l2789 FC76                                            l2973 F32E  
                                          l2965 F2E4                                            l2957 F284  
                                          l2949 F048                                            l2895 DA88  
                                          l2887 D9F4                                            l2879 D9A2  
                                          l2799 FC9C                                            l2991 F38C  
                                          l2975 F336                                            l2967 F2EC  
                                          l2959 F294                                            l2897 DA8C  
                                          l2889 D98E                                            l2985 F366  
                                          l2977 F342                                            l2969 F2F8  
                                          l2899 DA9A                                            l2987 F372  
                                          l2979 F362                                            l2997 F390  
                                          l2989 F376                                            l2999 F39C  
                                          STR_1 FF91                                            STR_2 FF84  
                                          STR_3 FEFE                                            STR_4 FF3A  
                                          STR_5 FFE5                                            STR_6 FE75  
                                          STR_7 FF59                                            STR_8 FFD1  
                                          STR_9 FF14                                            u2000 E8EA  
                                          u2001 E8E6                                            u2010 E8FA  
                                          u2011 E8F6                                            u2100 EA74  
                                          u2020 E934                                            u2021 E930  
                                          u2110 EA8A                                            u2030 E950  
                                          u2111 EA86                                            u2031 E94C  
                                          u2200 E5FA                                            u1400 DB74  
                                          u2120 EAF2                                            u2040 E97A  
                                          u2201 E5F6                                            u1401 DB70  
                                          u2041 E976                                            u2210 E616  
                                          u1410 DC22                                            u2130 EB34  
                                          u2050 E9DC                                            u2211 E612  
                                          u1411 DC1C                                            u2131 EB30  
                                          u2051 E9D8                                            u2220 E6D2  
                                          u1340 D9DA                                            u1500 E2AE  
                                          u2300 E182                                            u1420 DC24  
                                          u2140 EB52                                            u2060 EA26  
                                          u2221 E6CC                                            u1341 D9D6  
                                          u1501 E2AA                                            u2301 E17E  
                                          u2141 EB4E                                            u2125 EAE0  
                                          u2061 EA20                                            _LATA 000F89  
                                          u2230 E6D4                                            u1350 DEA8  
                                          u1430 E412                                            u1510 E2E0  
                                          u2150 EB6C                                            u2070 EA28  
                                          u2310 F45E                                            _LATB 000F8A  
                                          u1351 DEA4                                            u1431 E40E  
                                          u1511 E2DC                                            u2151 EB68  
                                          u2311 F45A                                            _LATC 000F8B  
                                          u2240 E6EA                                            u1360 DEBA  
                                          u1440 E444                                            u1520 E31E  
                                          u1600 E010                                            u2160 EB86  
                                          u2080 EA3E                                            u2400 F6DA  
                                          u2320 F52E                                            u2241 E6E6  
                                          u1361 DEB6                                            u1441 E440  
                                          u1521 E31A                                            u1601 E00C  
                                          u2161 EB82                                            u2081 EA3A  
                                          u2401 F6D6                                            u2321 F52A  
                                          u2250 E6FC                                            u1370 DEE2  
                                          u1530 E348                                            u1610 E03A  
                                          u2170 EB96                                            u2090 EA72  
                                          u2410 F700                                            u2330 F53C  
                                          u2251 E6F8                                            u1371 DEDE  
                                          u1451 E46E                                            u1531 E344  
                                          u1611 E036                                            u2171 EB92  
                                          u2091 EA6C                                            u2411 F6FC  
                                          u2331 F538                                            u1380 DF18  
                                          u1460 E492                                            u1540 E376  
                                          u2260 E0EC                                            u1620 E068  
                                          u1700 DC5E                                            u2180 EBA6  
                                          u2500 FC54                                            u2420 F7B6  
                                          u2340 F564                                            u1381 DF14  
                                          u1461 E48E                                            u1541 E372  
                                          u2261 E0E8                                            u1621 E064  
                                          u1701 DC58                                            u2181 EBA2  
                                          u2501 FC50                                            u2421 F7B2  
                                          u2341 F560                                            u2510 DA14  
                                          u2190 E5C2                                            u1390 DD26  
                                          u1630 DF3C                                            u1470 E4BC  
                                          u1550 E3BE                                            u2270 E124  
                                          u1710 DC60                                            u2430 F7EC  
                                          u2350 F5A8                                            u2511 DA10  
                                          u2191 E5BE                                            u1391 DD22  
                                          u1631 DF38                                            u1471 E4B8  
                                          u1551 E3BA                                            u2271 E120  
                                          u2431 F7E8                                            u2351 F5A4  
                                          u1640 DF5E                                            u1480 E4FC  
                                          u1800 EC2C                                            u2280 E142  
                                          u1720 DE04                                            u2440 F8CC  
                                          u2360 F626                                            u2520 DE8C  
                                          u2600 F32E                                            u1641 DF5A  
                                          u1481 E4F8                                            u1801 EC26  
                                          u2281 E13E                                            u1561 E1B2  
                                          u1721 DDFE                                            u2441 F8C8  
                                          u2361 F620                                            u2521 DE88  
                                          u2601 F32A                                            u2530 D9B2  
                                          u1650 DFB4                                            u1490 E546  
                                          u1810 EC2E                                            u2290 E154  
                                          u1570 E1D6                                            u1730 DE06  
                                          u2450 F986                                            u2370 F628  
                                          u2610 F386                                            u2531 D9AC  
                                          u1651 DFB0                                            u1491 E542  
                                          u2291 E150                                            u1571 E1D2  
                                          u2451 F982                                            u2611 F382  
                                          u2540 D99E                                            u1660 DFC4  
                                          u1900 EE46                                            u1820 EC44  
                                          u1580 E200                                            u1740 DE1C  
                                          u2460 FA3E                                            u2380 F640  
                                          u2620 F3B0                                            u2541 D998  
                                          u1661 DFC0                                            u1901 EE42  
                                          u1821 EC40                                            u1581 E1FC  
                                          u1741 DE18                                            u2461 FA3A  
                                          u2381 F63C                                            u2621 F3AC  
                                          u2550 DA88                                            u1750 DBB2  
                                          u1670 DCBE                                            u1910 EE56  
                                          u1830 EC74                                            u1590 E240  
                                          u2470 FA64                                            u2390 F666  
                                          u2551 DA84                                            u1751 DBAC  
                                          u1671 DCBA                                            u1911 EE52  
                                          u1831 EC70                                            u1591 E23C  
                                          u2471 FA60                                            u2391 F662  
                                          u2560 DA9A                                            u2536 D9B4  
                                          u1760 DBB4                                            u1920 EE68  
                                          u1840 EC90                                            u1680 DBEA  
                                          u2480 FB3A                                            u2561 DA96  
                                          u1921 EE64                                            u1841 EC8C  
                                          u1681 DBE4                                            u2481 FB36  
                                          u2546 D9A0                                            u1770 DD40  
                                          u1930 EE78                                            u1850 ECBE  
                                          u1690 DBEC                                            u2490 FB70  
                                          u2570 EF1A                                            u1771 DD3C  
                                          u1931 EE74                                            u1851 ECBA  
                                          u2491 FB6C                                            u2571 EF16  
                                          u1780 DD6E                                            u1940 EE90  
                                          u1860 ECCC                                            u2580 EF74  
                                          u1781 DD6A                                            u1941 EE8C  
                                          u1861 ECC8                                            u2581 EF70  
                                          u1790 DD8E                                            u1870 EDF4  
                                          u1950 E732                                            u2590 F2E4  
                                          u1791 DD8A                                            u1871 EDF0  
                                          u1951 E72E                                            u2591 F2E0  
                                          u1880 EE12                                            u1960 E74E  
                                          u1881 EE0E                                            u1961 E74A  
                                          u1890 EE2C                                            u1970 E898  
                                          u1891 EE28                                            u1971 E894  
                                          u1980 E8B6                                            u1981 E8B2  
                                          u1990 E8D0                                            u1991 E8CC  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write D9CA                                            abs@a 0013  
                                          _dbuf 00A2                                            _atoi E588  
                                          _ctoa DD7A                                            _main EEDE  
                                          _dtoa EBFC                                   ?_EUSART1_Read 0001  
                                          _prec 0096                                            _nout 0092  
                                          pad@i 001A                                            pad@p 0017  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001C                                            fsr2l 000FD9  
                                          _utoa E722                                            _xtoa E924  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                           ??_EPWM1_LoadDutyValue 0003  
                                  ___param_bank 000000                                           ??_abs 0015  
                                         ??_pad 0019                         __end_of_TMR0_Initialize DACA  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize DA16  
                               __end_of___aodiv E588                                           ?_atoi 0008  
                                         ?_ctoa 001E                                           ?_main 0001  
                                         ?_dtoa 001E                                 __end_of___aomod E400  
                                         STR_10 FEE6                                           STR_11 FD1E  
                                         STR_12 FFEA                                           STR_20 FFB7  
                                         STR_13 FFD8                                           STR_21 FFAE  
                                         STR_30 FFB7                                           STR_22 FFC0  
                                         STR_14 FD9A                                           STR_31 FFAE  
                                         STR_23 FF4A                                           STR_15 FECC  
                                         STR_24 FFA5                                           STR_32 FFC0  
                                         STR_16 FEB2                                           STR_40 FE53  
                                         STR_25 FFB7                                           STR_33 FFDF  
                                         STR_41 FF9C                                           STR_17 FD72  
                                         STR_50 FF57                                           STR_18 FE75  
                                         STR_26 FFAE                                           STR_34 FFD8  
                                         STR_42 FDE7                                           STR_27 FFC0  
                                         STR_35 FFC9                                           STR_19 FFA5  
                                         STR_51 FF29                                           STR_43 FE31  
                                         STR_28 FF4A                                           STR_44 FFD3  
                                         STR_52 FFF2                                           STR_36 FE0D  
                                         STR_29 FFA5                                           STR_61 FFF8  
                                         STR_45 FF76                                           STR_37 FDC1  
                                         STR_54 FFF2                                           STR_70 FFEF  
                                         STR_46 FF68                                           STR_38 FD4A  
                                         STR_63 FFF8                                           STR_39 FE96  
                                         STR_47 FCD7                                           STR_48 FCD7  
                                         STR_72 FFEF                                           STR_56 FFF5  
                                         STR_49 FF57                                           STR_58 FFF5  
                                         STR_66 FFFB                                           STR_68 FFFB  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 001E  
                                         _T0CON 000FD5                                 __end_of___lodiv E29C  
                                         ?_xtoa 001E                                           _T2CON 000FBA  
                               __end_of___lomod E0C2                                 _TMR0_WriteTimer D96A  
                                  vfpfcnvrt@fmt 0047                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 006D                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _flags 0098  
                                         _fputc DE96                                 __end_of_isalpha DC66  
                                         _fputs DCE4                                 __end_of_isdigit DBBA  
                                         atoi@n 0015                                           pad@fp 0013  
                                         atoi@s 0008                                           _width 0094  
                                         ctoa@c 0020                                           _putch D974  
                                         ctoa@w 0021                                           main@i 008A  
                                         dtoa@d 0020                                           dtoa@i 0040  
                                         dtoa@n 0038                                           dtoa@p 0032  
                                         dtoa@s 0036                                           dtoa@w 0034  
                               __end_of_islower DC2A                                 __end_of_isspace DD7A  
                                ?_EUSART1_Write 0001                                 __end_of_isupper DBF2  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         utoa@d 0020                                           utoa@i 003C  
                                         utoa@n 0034                                           utoa@p 0030  
                                         utoa@w 0032                                           status 000FD8  
                                         xtoa@c 0043                                           xtoa@d 0020  
                                         xtoa@i 0041                                           xtoa@n 0039  
                                         xtoa@p 0035                                           xtoa@w 0037  
                                         xtoa@x 0028                                 __end_of_strncmp E1AC  
                               __end_of_toupper DE32                                ___lodiv@dividend 0001  
            _EUSART1_DefaultFramingErrorHandler 000000                                    _toupper$1414 000D  
                               __initialization D9B6                           TMR2_ReadTimer@readVal 0001  
                                  __end_of_atoi E722                                    __end_of_ctoa DDD4  
                    __end_of_EUSART1_Initialize DCA4                                    __end_of_main F438  
                                  __end_of_dtoa EEDE                                    __end_of_utoa E924  
                                  __end_of_xtoa EBFC                         __end_of_TMR2_Initialize D98E  
                                        ??_atoi 000A                                          ??_ctoa 0021  
                                        ??_main 0081                                          ??_dtoa 0028  
                                        ??_utoa 0028                                          ??_xtoa 0029  
                                 __activetblptr 000003                                ___lodiv@quotient 0011  
                                 main@var32_667 008E                                          ?_fputc 0003  
                                        ?_fputs 000C                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0060                __size_of_TMR0_HasOverflowOccured 0014  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 0075                                       ??___aodiv 0011  
                                     ??___aomod 0011                                          ___wmul DA54  
                       __end_of_TMR0_WriteTimer D974                                       ??___lodiv 0011  
                                     ??___lomod 0011                        ?_EUSART1_SetErrorHandler 0001  
                              ?_TMR0_Initialize 0001                                          clear_0 D9BC  
                                        _printf DACA                                          pad@buf 0015  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        ctoa@fp 001E                                          dtoa@fp 001E  
                                        _strlen DB4C                                          fputc@c 0003  
                                        fputs@c 0010                                          fputs@i 0011  
                                        fputs@s 000C                                       ??_isalpha 0003  
                                     ??_isdigit 0003                                       ??_islower 0003  
                                  __mediumconst FCD6                                       ??_isspace 0003  
                                        tblptrh 000FF7                                       ??_isupper 0003  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf DE96                                 ??_EUSART1_Write 0001  
                                        utoa@fp 001E                                          xtoa@fp 001E  
                                     ??_strncmp 0007                                       ??_toupper 0009  
                             _SYSTEM_Initialize D9E0                                      __accesstop 0060  
                       __end_of__initialization D9C4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0003  
                            ??_EPWM1_Initialize 0001                                   __end_of_fputc DF2C  
                                 __end_of_fputs DD28                                   __end_of_putch D97E  
                       __size_of_TMR0_ReadTimer 001E                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read DAA2                                         ??_fputc 0007  
                     __end_of_SYSTEM_Initialize D9FA                                         ??_fputs 0010  
                                       ??_putch 0002                                      __pbssBANK0 0092  
                       __size_of_TMR2_ReadTimer 0008                 __end_of_EUSART1_SetErrorHandler D956  
                                       ?___wmul 0001                                ?_TMR0_WriteTimer 0001  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 0077                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler D960         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler D956                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 089E                                         _OSCTUNE 000F9B  
                                       _PWM1CON 000FB7                                         _SPBRGH1 000FB0  
                              ___lomod@dividend 0001                         _TMR0_HasOverflowOccured D9A2  
                   __end_of_EPWM1_LoadDutyValue DB4C                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv E400  
                                       ___aomod E29C                                 __size_of___wmul 0026  
                                       ___lodiv E1AC                                         ___lomod DFF2  
                                     ?_vfprintf 0059                             _EUSART1_is_rx_ready D98E  
                                       __pcinit D9B6                                         __ramtop 1000  
                                       __ptext0 EEDE                                         __ptext1 DACA  
                                       __ptext2 DE32                                         __ptext3 F438  
                                       __ptext4 E924                                         __ptext5 DDD4  
                                       __ptext6 DBF2                                         __ptext7 DBBA  
                                       __ptext8 DC2A                                         __ptext9 E722  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize D9FA  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C6                                         _isalpha DC2A  
                                       _isdigit DB82                              _EUSART1_Initialize DC66  
                                       _islower DBF2                        ??_PIN_MANAGER_Initialize 0001  
                                       _isspace DD28                                         _isupper DBBA  
                                       atoi@neg 000E                                         main@cmd 0087  
                    __size_of_SYSTEM_Initialize 001A                                         _strncmp E0C2  
                                       _toupper DDD4                            end_of_initialization D9C4  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0005                     _EUSART1_OverrunErrorHandler 009C  
                                       fputs@fp 000E                               __end_of_vfpfcnvrt FCD6  
                         TMR0_ReadTimer@readVal 0005                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 005F                                  _TMR0_ReadTimer DA16  
                          ??_EUSART1_Initialize 0003                                         strlen@a 0003  
                                       strlen@s 0001                       ??_TMR0_HasOverflowOccured 0001  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                         ??_EUSART1_is_rx_ready 0001                                  _TMR2_ReadTimer D944  
                                  _EUSART1_Read DA7A                          __end_of_TMR0_ReadTimer DA34  
                                   vfpfcnvrt@ap 0049                                     vfpfcnvrt@fp 0045  
                                   vfpfcnvrt@ll 0064                                  __end_of___wmul DA7A  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf DAF2  
                                __end_of_strlen DB82                             start_initialization D9B6  
                               ___lodiv@divisor 0009                       __size_of_EPWM1_Initialize 0020  
                               ___lodiv@counter 0019                        __size_of_TMR0_Initialize 0028  
               __size_of_PIN_MANAGER_Initialize 002A                                     __end_of_abs DCE4  
                                   __end_of_pad DFF2                          __end_of_TMR2_ReadTimer D94C  
                                   putch@txData 0002                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write D9E0                                     vfprintf@fmt 005B  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0005  
                                      ??_printf 005F                                        ??_strlen 0003  
                                   __pbssCOMRAM 005F                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 0001                        __size_of_TMR2_Initialize 0010  
                               ?_TMR2_ReadTimer 0001                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                                       _atoi$1332 0010  
                                     _atoi$1333 0014                                       _atoi$1334 0012  
                        _PIN_MANAGER_Initialize DAF2                                       _dtoa$1254 0030  
                                 __pmediumconst FCD6                                        ?___aodiv 0001  
                                      ?___aomod 0001                                ___aodiv@quotient 0013  
                                      ?___lodiv 0001                                        ?___lomod 0001  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 0009  
                               ___lomod@counter 0011                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0001  
                                      ?_isdigit 0001                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 009A                                        ?_islower 0001  
                                      ?_isspace 0001                                        ?_isupper 0001  
                       _EUSART1_SetErrorHandler D94C                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_strncmp 0001  
                                      ?_toupper 0007                                  __size_of_putch 000A  
                             ??_TMR0_Initialize 0001                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _PIR1bits 000F9E  
                  __size_of_EPWM1_LoadDutyValue 0030                                        _PSTR1CON 000FB9  
                                     _vfpfcnvrt F438                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$1271 0031                                       _xtoa$1272 0033  
                             ___wmul@multiplier 0001                                       main@var16 0088  
                              _EPWM1_Initialize DA34                                    _isspace$1359 0007  
                                    vfpfcnvrt@c 006C                                     _INTCON2bits 000FF1  
                             ??_TMR2_Initialize 0001                                        __Hrparam 0000  
                                    vfprintf@ap 005D                                        __Lrparam 0000  
                                    vfprintf@fp 0059                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 0045  
                               ___aodiv@divisor 0009                                 ___aodiv@counter 0011  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready D9A2                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 DFF2  
                                      __ptext11 E1AC                                        __ptext20 DCE4  
                                      __ptext12 E0C2                                        __ptext21 DE96  
                                      __ptext13 EBFC                                        __ptext30 DA16  
                                      __ptext22 D974                                        __ptext14 DCA4  
                                      __ptext31 D9A2                                        __ptext23 D9CA  
                                      __ptext15 E29C                                        __ptext40 D94C  
                                      __ptext32 D9E0                                        __ptext24 E588  
                                      __ptext16 E400                                        __ptext41 DA34  
                                      __ptext33 D97E                                        __ptext25 DD28  
                                      __ptext17 DD7A                                        __ptext42 D98E  
                                      __ptext34 DAA2                                        __ptext26 DB82  
                                      __ptext18 DF2C                                        __ptext43 DA7A  
                                      __ptext35 DAF2                                        __ptext27 DA54  
                                      __ptext19 DB4C                                        __ptext44 DB1C  
                                      __ptext36 D9FA                                        __ptext28 D944  
                                      __ptext37 DC66                                        __ptext29 D96A  
                                      __ptext38 D960                                        __ptext39 D956  
                              __size_of_isupper 0038                         TMR0_WriteTimer@timerVal 0001  
                             ??_TMR0_WriteTimer 0003                                __size_of_strncmp 00EA  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 005A                                   __size_of_main 055A  
                                 __size_of_dtoa 02E2                                   __size_of_utoa 0202  
                              ??_TMR0_ReadTimer 0003                                   __size_of_xtoa 02D8  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                        _vfprintf DE32  
                                     printf@fmt 0077                                        main@var8 008B  
                                      main@duty 008C                     _EUSART1_FramingErrorHandler 009E  
                              ___aomod@dividend 0001                        ?_TMR0_HasOverflowOccured 0001  
                              ??_TMR2_ReadTimer 0001                                  _vfpfcnvrt$1286 0062  
                                    _INTCONbits 000FF2                                        isalpha@c 0001  
                                      isdigit@c 0001                                        islower@c 0001  
                                      isspace@c 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler D96A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler D960                                      _RCSTA1bits 000FAB  
                                      isupper@c 0001                                       strncmp@_l 0001  
                                     strncmp@_r 0003                                        printf@ap 007F  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                                 ___aomod@divisor 0009  
                                   ??_vfpfcnvrt 004B                                 ___aomod@counter 0011  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 005F  
                               _TMR0_Initialize DAA2                                        strncmp@l 0008  
                                      strncmp@n 0005                                        strncmp@r 000A  
                                      toupper@c 0007                             _EPWM1_LoadDutyValue DB1C  
                                  ___aodiv@sign 0012                  __end_of_PIN_MANAGER_Initialize DB1C  
                                  ___aomod@sign 0012                        __end_of_EPWM1_Initialize DA54  
                          ?_EPWM1_LoadDutyValue 0001  
