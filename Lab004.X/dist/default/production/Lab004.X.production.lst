

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Sep 24 17:39:54 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 09/04/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F26K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    95  0000                     
    96 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    97  0000                     
    98 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    99  0000                     
   100                           	psect	idataBANK0
   101  000C56                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _scale
   105  000C56  4706               	dw	18182
   106  000C58  430F               	dw	17167
   107  000C5A  3F42               	dw	16194
   108  000C5C  3BC0               	dw	15296
   109  000C5E  3868               	dw	14440
   110  000C60  353D               	dw	13629
   111  000C62  323E               	dw	12862
   112  000C64  2F6C               	dw	12140
   113  000C66  2CC5               	dw	11461
   114  000C68  2A3B               	dw	10811
   115  000C6A  27DC               	dw	10204
   116  000C6C  259B               	dw	9627
   117  000C6E  2383               	dw	9091
   118  000C70  2188               	dw	8584
   119  000C72  1FA9               	dw	8105
   120  000C74  1DE0               	dw	7648
   121  000C76  1C34               	dw	7220
   122  000C78  1A9E               	dw	6814
   123  000C7A  191F               	dw	6431
   124  000C7C  17B6               	dw	6070
   125  000C7E  1663               	dw	5731
   126  000C80  1521               	dw	5409
   127  000C82  13F1               	dw	5105
   128  000C84  12D3               	dw	4819
   129                           
   130                           ;initializer for _songLength
   131  000C86  15                 	db	21
   132  000C87  03                 	db	3
   133  000C88  08                 	db	8
   134  000C89  08                 	db	8
   135                           
   136                           	psect	idataBANK1
   137  00080C                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _duration
   141  00080C  7A12               	dw	31250
   142  00080E  5B8D               	dw	23437
   143  000810  1E84               	dw	7812
   144  000812  B71B               	dw	46875
   145  000814  3D09               	dw	15625
   146  000816  3D09               	dw	15625
   147  000818  3D09               	dw	15625
   148  00081A  3D09               	dw	15625
   149  00081C  3D09               	dw	15625
   150  00081E  B71B               	dw	46875
   151  000820  3D09               	dw	15625
   152  000822  7A12               	dw	31250
   153  000824  5B8D               	dw	23437
   154  000826  1E84               	dw	7812
   155  000828  B71B               	dw	46875
   156  00082A  3D09               	dw	15625
   157  00082C  3D09               	dw	15625
   158  00082E  3D09               	dw	15625
   159  000830  3D09               	dw	15625
   160  000832  3D09               	dw	15625
   161  000834  B71B               	dw	46875
   162  000836  3D09               	dw	15625
   163  000838  3D09               	dw	15625
   164  00083A  3D09               	dw	15625
   165  00083C  00                 	db	0
   166  00083D  00                 	db	0
   167  00083E  00                 	db	0
   168  00083F  00                 	db	0
   169  000840  00                 	db	0
   170  000841  00                 	db	0
   171  000842  00                 	db	0
   172  000843  00                 	db	0
   173  000844  00                 	db	0
   174  000845  00                 	db	0
   175  000846  00                 	db	0
   176  000847  00                 	db	0
   177  000848  00                 	db	0
   178  000849  00                 	db	0
   179  00084A  00                 	db	0
   180  00084B  00                 	db	0
   181  00084C  00                 	db	0
   182  00084D  00                 	db	0
   183  00084E  00                 	db	0
   184  00084F  00                 	db	0
   185  000850  00                 	db	0
   186  000851  00                 	db	0
   187  000852  00                 	db	0
   188  000853  00                 	db	0
   189  000854  00                 	db	0
   190  000855  00                 	db	0
   191  000856  00                 	db	0
   192  000857  00                 	db	0
   193  000858  00                 	db	0
   194  000859  00                 	db	0
   195  00085A  00                 	db	0
   196  00085B  00                 	db	0
   197  00085C  00                 	db	0
   198  00085D  00                 	db	0
   199  00085E  00                 	db	0
   200  00085F  00                 	db	0
   201  000860  3D09               	dw	15625
   202  000862  3D09               	dw	15625
   203  000864  3D09               	dw	15625
   204  000866  3D09               	dw	15625
   205  000868  3D09               	dw	15625
   206  00086A  3D09               	dw	15625
   207  00086C  3D09               	dw	15625
   208  00086E  00                 	db	0
   209  00086F  00                 	db	0
   210  000870  00                 	db	0
   211  000871  00                 	db	0
   212  000872  00                 	db	0
   213  000873  00                 	db	0
   214  000874  00                 	db	0
   215  000875  00                 	db	0
   216  000876  00                 	db	0
   217  000877  00                 	db	0
   218  000878  00                 	db	0
   219  000879  00                 	db	0
   220  00087A  00                 	db	0
   221  00087B  00                 	db	0
   222  00087C  00                 	db	0
   223  00087D  00                 	db	0
   224  00087E  00                 	db	0
   225  00087F  00                 	db	0
   226  000880  00                 	db	0
   227  000881  00                 	db	0
   228  000882  00                 	db	0
   229  000883  00                 	db	0
   230  000884  00                 	db	0
   231  000885  00                 	db	0
   232  000886  00                 	db	0
   233  000887  00                 	db	0
   234  000888  00                 	db	0
   235  000889  00                 	db	0
   236  00088A  7A12               	dw	31250
   237  00088C  7A12               	dw	31250
   238  00088E  7A12               	dw	31250
   239  000890  7A12               	dw	31250
   240  000892  7A12               	dw	31250
   241  000894  7A12               	dw	31250
   242  000896  7A12               	dw	31250
   243  000898  00                 	db	0
   244  000899  00                 	db	0
   245  00089A  00                 	db	0
   246  00089B  00                 	db	0
   247  00089C  00                 	db	0
   248  00089D  00                 	db	0
   249  00089E  00                 	db	0
   250  00089F  00                 	db	0
   251  0008A0  00                 	db	0
   252  0008A1  00                 	db	0
   253  0008A2  00                 	db	0
   254  0008A3  00                 	db	0
   255  0008A4  00                 	db	0
   256  0008A5  00                 	db	0
   257  0008A6  00                 	db	0
   258  0008A7  00                 	db	0
   259  0008A8  00                 	db	0
   260  0008A9  00                 	db	0
   261  0008AA  00                 	db	0
   262  0008AB  00                 	db	0
   263  0008AC  00                 	db	0
   264  0008AD  00                 	db	0
   265  0008AE  00                 	db	0
   266  0008AF  00                 	db	0
   267  0008B0  00                 	db	0
   268  0008B1  00                 	db	0
   269  0008B2  00                 	db	0
   270  0008B3  00                 	db	0
   271                           
   272                           	psect	idataBANK2
   273  0008B4                     __pidataBANK2:
   274                           	callstack 0
   275                           
   276                           ;initializer for _notes
   277  0008B4  000C               	dw	12
   278  0008B6  000F               	dw	15
   279  0008B8  000F               	dw	15
   280  0008BA  0008               	dw	8
   281  0008BC  000A               	dw	10
   282  0008BE  000C               	dw	12
   283  0008C0  000D               	dw	13
   284  0008C2  000F               	dw	15
   285  0008C4  0011               	dw	17
   286  0008C6  000A               	dw	10
   287  0008C8  000C               	dw	12
   288  0008CA  0018               	dw	24
   289  0008CC  000E               	dw	14
   290  0008CE  000E               	dw	14
   291  0008D0  000F               	dw	15
   292  0008D2  0011               	dw	17
   293  0008D4  0013               	dw	19
   294  0008D6  0013               	dw	19
   295  0008D8  0011               	dw	17
   296  0008DA  0011               	dw	17
   297  0008DC  000F               	dw	15
   298  0008DE  0005               	dw	5
   299  0008E0  0008               	dw	8
   300  0008E2  0011               	dw	17
   301  0008E4  00                 	db	0
   302  0008E5  00                 	db	0
   303  0008E6  00                 	db	0
   304  0008E7  00                 	db	0
   305  0008E8  00                 	db	0
   306  0008E9  00                 	db	0
   307  0008EA  00                 	db	0
   308  0008EB  00                 	db	0
   309  0008EC  00                 	db	0
   310  0008ED  00                 	db	0
   311  0008EE  00                 	db	0
   312  0008EF  00                 	db	0
   313  0008F0  00                 	db	0
   314  0008F1  00                 	db	0
   315  0008F2  00                 	db	0
   316  0008F3  00                 	db	0
   317  0008F4  00                 	db	0
   318  0008F5  00                 	db	0
   319  0008F6  00                 	db	0
   320  0008F7  00                 	db	0
   321  0008F8  00                 	db	0
   322  0008F9  00                 	db	0
   323  0008FA  00                 	db	0
   324  0008FB  00                 	db	0
   325  0008FC  00                 	db	0
   326  0008FD  00                 	db	0
   327  0008FE  00                 	db	0
   328  0008FF  00                 	db	0
   329  000900  00                 	db	0
   330  000901  00                 	db	0
   331  000902  00                 	db	0
   332  000903  00                 	db	0
   333  000904  00                 	db	0
   334  000905  00                 	db	0
   335  000906  00                 	db	0
   336  000907  00                 	db	0
   337  000908  0013               	dw	19
   338  00090A  0014               	dw	20
   339  00090C  0013               	dw	19
   340  00090E  0014               	dw	20
   341  000910  0013               	dw	19
   342  000912  000F               	dw	15
   343  000914  0000               	dw	0
   344  000916  0000               	dw	0
   345  000918  00                 	db	0
   346  000919  00                 	db	0
   347  00091A  00                 	db	0
   348  00091B  00                 	db	0
   349  00091C  00                 	db	0
   350  00091D  00                 	db	0
   351  00091E  00                 	db	0
   352  00091F  00                 	db	0
   353  000920  00                 	db	0
   354  000921  00                 	db	0
   355  000922  00                 	db	0
   356  000923  00                 	db	0
   357  000924  00                 	db	0
   358  000925  00                 	db	0
   359  000926  00                 	db	0
   360  000927  00                 	db	0
   361  000928  00                 	db	0
   362  000929  00                 	db	0
   363  00092A  00                 	db	0
   364  00092B  00                 	db	0
   365  00092C  00                 	db	0
   366  00092D  00                 	db	0
   367  00092E  00                 	db	0
   368  00092F  00                 	db	0
   369  000930  00                 	db	0
   370  000931  00                 	db	0
   371  000932  0013               	dw	19
   372  000934  0014               	dw	20
   373  000936  0013               	dw	19
   374  000938  0014               	dw	20
   375  00093A  0013               	dw	19
   376  00093C  000F               	dw	15
   377  00093E  000C               	dw	12
   378  000940  0018               	dw	24
   379  000942  00                 	db	0
   380  000943  00                 	db	0
   381  000944  00                 	db	0
   382  000945  00                 	db	0
   383  000946  00                 	db	0
   384  000947  00                 	db	0
   385  000948  00                 	db	0
   386  000949  00                 	db	0
   387  00094A  00                 	db	0
   388  00094B  00                 	db	0
   389  00094C  00                 	db	0
   390  00094D  00                 	db	0
   391  00094E  00                 	db	0
   392  00094F  00                 	db	0
   393  000950  00                 	db	0
   394  000951  00                 	db	0
   395  000952  00                 	db	0
   396  000953  00                 	db	0
   397  000954  00                 	db	0
   398  000955  00                 	db	0
   399  000956  00                 	db	0
   400  000957  00                 	db	0
   401  000958  00                 	db	0
   402  000959  00                 	db	0
   403  00095A  00                 	db	0
   404  00095B  00                 	db	0
   405  0000                     _ANSELA	set	3896
   406  0000                     _ANSELB	set	3897
   407  0000                     _ANSELC	set	3898
   408  0000                     _TMR1	set	4046
   409  0000                     _LATBbits	set	3978
   410  0000                     _PORTAbits	set	3968
   411  0000                     _TXREG1	set	4013
   412  0000                     _RCREG1	set	4014
   413  0000                     _RCSTA1bits	set	4011
   414  0000                     _TXSTA1bits	set	4012
   415  0000                     _SPBRGH1	set	4016
   416  0000                     _SPBRG1	set	4015
   417  0000                     _TXSTA1	set	4012
   418  0000                     _RCSTA1	set	4011
   419  0000                     _BAUDCON1	set	4024
   420  0000                     _INTCON2bits	set	4081
   421  0000                     _WPUB	set	3937
   422  0000                     _TRISC	set	3988
   423  0000                     _TRISB	set	3987
   424  0000                     _TRISA	set	3986
   425  0000                     _LATC	set	3979
   426  0000                     _LATB	set	3978
   427  0000                     _LATA	set	3977
   428  0000                     _OSCTUNE	set	3995
   429  0000                     _OSCCON2	set	4050
   430  0000                     _OSCCON	set	4051
   431  0000                     _T1GCONbits	set	4044
   432  0000                     _T1CONbits	set	4045
   433  0000                     _T1CON	set	4045
   434  0000                     _TMR1L	set	4046
   435  0000                     _TMR1H	set	4047
   436  0000                     _T1GCON	set	4044
   437  0000                     _T0CON	set	4053
   438  0000                     _TMR0L	set	4054
   439  0000                     _TMR0H	set	4055
   440  0000                     _T0CONbits	set	4053
   441  0000                     _PIR1bits	set	3998
   442  0000                     _PIE1bits	set	3997
   443  0000                     _INTCONbits	set	4082
   444  0000                     _RCONbits	set	4048
   445  0000                     _PLLRDY	set	32407
   446                           
   447                           	psect	mediumconst
   448  00FE74                     __pmediumconst:
   449                           	callstack 0
   450  00FE74  00                 	db	0
   451  00FE75                     STR_18:
   452  00FE75  55                 	db	85	;'U'
   453  00FE76  73                 	db	115	;'s'
   454  00FE77  65                 	db	101	;'e'
   455  00FE78  20                 	db	32
   456  00FE79  74                 	db	116	;'t'
   457  00FE7A  68                 	db	104	;'h'
   458  00FE7B  65                 	db	101	;'e'
   459  00FE7C  20                 	db	32
   460  00FE7D  75                 	db	117	;'u'
   461  00FE7E  70                 	db	112	;'p'
   462  00FE7F  70                 	db	112	;'p'
   463  00FE80  65                 	db	101	;'e'
   464  00FE81  72                 	db	114	;'r'
   465  00FE82  20                 	db	32
   466  00FE83  62                 	db	98	;'b'
   467  00FE84  75                 	db	117	;'u'
   468  00FE85  74                 	db	116	;'t'
   469  00FE86  74                 	db	116	;'t'
   470  00FE87  6F                 	db	111	;'o'
   471  00FE88  6E                 	db	110	;'n'
   472  00FE89  20                 	db	32
   473  00FE8A  74                 	db	116	;'t'
   474  00FE8B  6F                 	db	111	;'o'
   475  00FE8C  20                 	db	32
   476  00FE8D  72                 	db	114	;'r'
   477  00FE8E  65                 	db	101	;'e'
   478  00FE8F  70                 	db	112	;'p'
   479  00FE90  72                 	db	114	;'r'
   480  00FE91  6F                 	db	111	;'o'
   481  00FE92  64                 	db	100	;'d'
   482  00FE93  75                 	db	117	;'u'
   483  00FE94  63                 	db	99	;'c'
   484  00FE95  65                 	db	101	;'e'
   485  00FE96  20                 	db	32
   486  00FE97  74                 	db	116	;'t'
   487  00FE98  68                 	db	104	;'h'
   488  00FE99  69                 	db	105	;'i'
   489  00FE9A  73                 	db	115	;'s'
   490  00FE9B  20                 	db	32
   491  00FE9C  70                 	db	112	;'p'
   492  00FE9D  61                 	db	97	;'a'
   493  00FE9E  74                 	db	116	;'t'
   494  00FE9F  74                 	db	116	;'t'
   495  00FEA0  65                 	db	101	;'e'
   496  00FEA1  72                 	db	114	;'r'
   497  00FEA2  6E                 	db	110	;'n'
   498  00FEA3  0D                 	db	13
   499  00FEA4  0A                 	db	10
   500  00FEA5  00                 	db	0
   501  00FEA6                     STR_5:
   502  00FEA6  52                 	db	82	;'R'
   503  00FEA7  42                 	db	66	;'B'
   504  00FEA8  35                 	db	53	;'5'
   505  00FEA9  20                 	db	32
   506  00FEAA  2D                 	db	45
   507  00FEAB  3E                 	db	62	;'>'
   508  00FEAC  20                 	db	32
   509  00FEAD  4C                 	db	76	;'L'
   510  00FEAE  50                 	db	80	;'P'
   511  00FEAF  46                 	db	70	;'F'
   512  00FEB0  69                 	db	105	;'i'
   513  00FEB1  6E                 	db	110	;'n'
   514  00FEB2  20                 	db	32
   515  00FEB3  61                 	db	97	;'a'
   516  00FEB4  6E                 	db	110	;'n'
   517  00FEB5  64                 	db	100	;'d'
   518  00FEB6  20                 	db	32
   519  00FEB7  69                 	db	105	;'i'
   520  00FEB8  6E                 	db	110	;'n'
   521  00FEB9  73                 	db	115	;'s'
   522  00FEBA  74                 	db	116	;'t'
   523  00FEBB  61                 	db	97	;'a'
   524  00FEBC  6C                 	db	108	;'l'
   525  00FEBD  6C                 	db	108	;'l'
   526  00FEBE  20                 	db	32
   527  00FEBF  4C                 	db	76	;'L'
   528  00FEC0  50                 	db	80	;'P'
   529  00FEC1  46                 	db	70	;'F'
   530  00FEC2  6F                 	db	111	;'o'
   531  00FEC3  75                 	db	117	;'u'
   532  00FEC4  74                 	db	116	;'t'
   533  00FEC5  2F                 	db	47
   534  00FEC6  41                 	db	65	;'A'
   535  00FEC7  4D                 	db	77	;'M'
   536  00FEC8  50                 	db	80	;'P'
   537  00FEC9  69                 	db	105	;'i'
   538  00FECA  6E                 	db	110	;'n'
   539  00FECB  20                 	db	32
   540  00FECC  6A                 	db	106	;'j'
   541  00FECD  75                 	db	117	;'u'
   542  00FECE  6D                 	db	109	;'m'
   543  00FECF  70                 	db	112	;'p'
   544  00FED0  65                 	db	101	;'e'
   545  00FED1  72                 	db	114	;'r'
   546  00FED2  00                 	db	0
   547  00FED3                     STR_7:
   548  00FED3  2D                 	db	45
   549  00FED4  2D                 	db	45
   550  00FED5  2D                 	db	45
   551  00FED6  2D                 	db	45
   552  00FED7  2D                 	db	45
   553  00FED8  2D                 	db	45
   554  00FED9  2D                 	db	45
   555  00FEDA  2D                 	db	45
   556  00FEDB  2D                 	db	45
   557  00FEDC  2D                 	db	45
   558  00FEDD  2D                 	db	45
   559  00FEDE  2D                 	db	45
   560  00FEDF  2D                 	db	45
   561  00FEE0  2D                 	db	45
   562  00FEE1  2D                 	db	45
   563  00FEE2  2D                 	db	45
   564  00FEE3  2D                 	db	45
   565  00FEE4  2D                 	db	45
   566  00FEE5  2D                 	db	45
   567  00FEE6  2D                 	db	45
   568  00FEE7  2D                 	db	45
   569  00FEE8  2D                 	db	45
   570  00FEE9  2D                 	db	45
   571  00FEEA  2D                 	db	45
   572  00FEEB  2D                 	db	45
   573  00FEEC  2D                 	db	45
   574  00FEED  2D                 	db	45
   575  00FEEE  2D                 	db	45
   576  00FEEF  2D                 	db	45
   577  00FEF0  2D                 	db	45
   578  00FEF1  0D                 	db	13
   579  00FEF2  0A                 	db	10
   580  00FEF3  00                 	db	0
   581  00FEF4                     STR_17:
   582  00FEF4  4C                 	db	76	;'L'
   583  00FEF5  69                 	db	105	;'i'
   584  00FEF6  73                 	db	115	;'s'
   585  00FEF7  74                 	db	116	;'t'
   586  00FEF8  65                 	db	101	;'e'
   587  00FEF9  6E                 	db	110	;'n'
   588  00FEFA  20                 	db	32
   589  00FEFB  74                 	db	116	;'t'
   590  00FEFC  6F                 	db	111	;'o'
   591  00FEFD  20                 	db	32
   592  00FEFE  74                 	db	116	;'t'
   593  00FEFF  68                 	db	104	;'h'
   594  00FF00  65                 	db	101	;'e'
   595  00FF01  20                 	db	32
   596  00FF02  62                 	db	98	;'b'
   597  00FF03  65                 	db	101	;'e'
   598  00FF04  61                 	db	97	;'a'
   599  00FF05  74                 	db	116	;'t'
   600  00FF06  20                 	db	32
   601  00FF07  70                 	db	112	;'p'
   602  00FF08  61                 	db	97	;'a'
   603  00FF09  74                 	db	116	;'t'
   604  00FF0A  74                 	db	116	;'t'
   605  00FF0B  65                 	db	101	;'e'
   606  00FF0C  72                 	db	114	;'r'
   607  00FF0D  6E                 	db	110	;'n'
   608  00FF0E  2E                 	db	46
   609  00FF0F  0D                 	db	13
   610  00FF10  0A                 	db	10
   611  00FF11  00                 	db	0
   612  00FF12                     STR_11:
   613  00FF12  7A                 	db	122	;'z'
   614  00FF13  3A                 	db	58	;':'
   615  00FF14  20                 	db	32
   616  00FF15  43                 	db	67	;'C'
   617  00FF16  6C                 	db	108	;'l'
   618  00FF17  65                 	db	101	;'e'
   619  00FF18  61                 	db	97	;'a'
   620  00FF19  72                 	db	114	;'r'
   621  00FF1A  20                 	db	32
   622  00FF1B  74                 	db	116	;'t'
   623  00FF1C  68                 	db	104	;'h'
   624  00FF1D  65                 	db	101	;'e'
   625  00FF1E  20                 	db	32
   626  00FF1F  74                 	db	116	;'t'
   627  00FF20  65                 	db	101	;'e'
   628  00FF21  72                 	db	114	;'r'
   629  00FF22  6D                 	db	109	;'m'
   630  00FF23  69                 	db	105	;'i'
   631  00FF24  6E                 	db	110	;'n'
   632  00FF25  61                 	db	97	;'a'
   633  00FF26  6C                 	db	108	;'l'
   634  00FF27  0D                 	db	13
   635  00FF28  0A                 	db	10
   636  00FF29  00                 	db	0
   637  00FF2A                     STR_15:
   638  00FF2A  53                 	db	83	;'S'
   639  00FF2B  74                 	db	116	;'t'
   640  00FF2C  61                 	db	97	;'a'
   641  00FF2D  72                 	db	114	;'r'
   642  00FF2E  74                 	db	116	;'t'
   643  00FF2F  20                 	db	32
   644  00FF30  70                 	db	112	;'p'
   645  00FF31  6C                 	db	108	;'l'
   646  00FF32  61                 	db	97	;'a'
   647  00FF33  79                 	db	121	;'y'
   648  00FF34  69                 	db	105	;'i'
   649  00FF35  6E                 	db	110	;'n'
   650  00FF36  67                 	db	103	;'g'
   651  00FF37  20                 	db	32
   652  00FF38  73                 	db	115	;'s'
   653  00FF39  6F                 	db	111	;'o'
   654  00FF3A  6E                 	db	110	;'n'
   655  00FF3B  67                 	db	103	;'g'
   656  00FF3C  2E                 	db	46
   657  00FF3D  0D                 	db	13
   658  00FF3E  0A                 	db	10
   659  00FF3F  00                 	db	0
   660  00FF40                     STR_2:
   661  00FF40  49                 	db	73	;'I'
   662  00FF41  6E                 	db	110	;'n'
   663  00FF42  74                 	db	116	;'t'
   664  00FF43  65                 	db	101	;'e'
   665  00FF44  72                 	db	114	;'r'
   666  00FF45  72                 	db	114	;'r'
   667  00FF46  75                 	db	117	;'u'
   668  00FF47  70                 	db	112	;'p'
   669  00FF48  74                 	db	116	;'t'
   670  00FF49  20                 	db	32
   671  00FF4A  4D                 	db	77	;'M'
   672  00FF4B  75                 	db	117	;'u'
   673  00FF4C  73                 	db	115	;'s'
   674  00FF4D  69                 	db	105	;'i'
   675  00FF4E  63                 	db	99	;'c'
   676  00FF4F  20                 	db	32
   677  00FF50  42                 	db	66	;'B'
   678  00FF51  6F                 	db	111	;'o'
   679  00FF52  78                 	db	120	;'x'
   680  00FF53  0D                 	db	13
   681  00FF54  0A                 	db	10
   682  00FF55  00                 	db	0
   683  00FF56                     STR_13:
   684  00FF56  72                 	db	114	;'r'
   685  00FF57  3A                 	db	58	;':'
   686  00FF58  20                 	db	32
   687  00FF59  52                 	db	82	;'R'
   688  00FF5A  68                 	db	104	;'h'
   689  00FF5B  79                 	db	121	;'y'
   690  00FF5C  74                 	db	116	;'t'
   691  00FF5D  68                 	db	104	;'h'
   692  00FF5E  6D                 	db	109	;'m'
   693  00FF5F  20                 	db	32
   694  00FF60  70                 	db	112	;'p'
   695  00FF61  72                 	db	114	;'r'
   696  00FF62  61                 	db	97	;'a'
   697  00FF63  63                 	db	99	;'c'
   698  00FF64  74                 	db	116	;'t'
   699  00FF65  69                 	db	105	;'i'
   700  00FF66  63                 	db	99	;'c'
   701  00FF67  65                 	db	101	;'e'
   702  00FF68  0D                 	db	13
   703  00FF69  0A                 	db	10
   704  00FF6A  00                 	db	0
   705  00FF6B                     STR_10:
   706  00FF6B  5A                 	db	90	;'Z'
   707  00FF6C  3A                 	db	58	;':'
   708  00FF6D  20                 	db	32
   709  00FF6E  52                 	db	82	;'R'
   710  00FF6F  65                 	db	101	;'e'
   711  00FF70  73                 	db	115	;'s'
   712  00FF71  65                 	db	101	;'e'
   713  00FF72  74                 	db	116	;'t'
   714  00FF73  20                 	db	32
   715  00FF74  70                 	db	112	;'p'
   716  00FF75  72                 	db	114	;'r'
   717  00FF76  6F                 	db	111	;'o'
   718  00FF77  63                 	db	99	;'c'
   719  00FF78  65                 	db	101	;'e'
   720  00FF79  73                 	db	115	;'s'
   721  00FF7A  73                 	db	115	;'s'
   722  00FF7B  6F                 	db	111	;'o'
   723  00FF7C  72                 	db	114	;'r'
   724  00FF7D  0D                 	db	13
   725  00FF7E  0A                 	db	10
   726  00FF7F  00                 	db	0
   727  00FF80                     STR_12:
   728  00FF80  70                 	db	112	;'p'
   729  00FF81  3A                 	db	58	;':'
   730  00FF82  20                 	db	32
   731  00FF83  50                 	db	80	;'P'
   732  00FF84  6C                 	db	108	;'l'
   733  00FF85  61                 	db	97	;'a'
   734  00FF86  79                 	db	121	;'y'
   735  00FF87  20                 	db	32
   736  00FF88  73                 	db	115	;'s'
   737  00FF89  6F                 	db	111	;'o'
   738  00FF8A  6E                 	db	110	;'n'
   739  00FF8B  67                 	db	103	;'g'
   740  00FF8C  20                 	db	32
   741  00FF8D  6F                 	db	111	;'o'
   742  00FF8E  6E                 	db	110	;'n'
   743  00FF8F  63                 	db	99	;'c'
   744  00FF90  65                 	db	101	;'e'
   745  00FF91  0D                 	db	13
   746  00FF92  0A                 	db	10
   747  00FF93  00                 	db	0
   748  00FF94                     STR_23:
   749  00FF94  55                 	db	85	;'U'
   750  00FF95  6E                 	db	110	;'n'
   751  00FF96  6B                 	db	107	;'k'
   752  00FF97  6E                 	db	110	;'n'
   753  00FF98  6F                 	db	111	;'o'
   754  00FF99  77                 	db	119	;'w'
   755  00FF9A  6E                 	db	110	;'n'
   756  00FF9B  20                 	db	32
   757  00FF9C  6B                 	db	107	;'k'
   758  00FF9D  65                 	db	101	;'e'
   759  00FF9E  79                 	db	121	;'y'
   760  00FF9F  20                 	db	32
   761  00FFA0  25                 	db	37
   762  00FFA1  63                 	db	99	;'c'
   763  00FFA2  0D                 	db	13
   764  00FFA3  0A                 	db	10
   765  00FFA4  00                 	db	0
   766  00FFA5                     STR_4:
   767  00FFA5  42                 	db	66	;'B'
   768  00FFA6  6F                 	db	111	;'o'
   769  00FFA7  61                 	db	97	;'a'
   770  00FFA8  72                 	db	114	;'r'
   771  00FFA9  64                 	db	100	;'d'
   772  00FFAA  20                 	db	32
   773  00FFAB  77                 	db	119	;'w'
   774  00FFAC  69                 	db	105	;'i'
   775  00FFAD  72                 	db	114	;'r'
   776  00FFAE  69                 	db	105	;'i'
   777  00FFAF  6E                 	db	110	;'n'
   778  00FFB0  67                 	db	103	;'g'
   779  00FFB1  0D                 	db	13
   780  00FFB2  0A                 	db	10
   781  00FFB3  00                 	db	0
   782  00FFB4                     STR_8:
   783  00FFB4  3F                 	db	63	;'?'
   784  00FFB5  3A                 	db	58	;':'
   785  00FFB6  20                 	db	32
   786  00FFB7  48                 	db	72	;'H'
   787  00FFB8  65                 	db	101	;'e'
   788  00FFB9  6C                 	db	108	;'l'
   789  00FFBA  70                 	db	112	;'p'
   790  00FFBB  20                 	db	32
   791  00FFBC  6D                 	db	109	;'m'
   792  00FFBD  65                 	db	101	;'e'
   793  00FFBE  6E                 	db	110	;'n'
   794  00FFBF  75                 	db	117	;'u'
   795  00FFC0  0D                 	db	13
   796  00FFC1  0A                 	db	10
   797  00FFC2  00                 	db	0
   798  00FFC3                     STR_19:
   799  00FFC3  59                 	db	89	;'Y'
   800  00FFC4  6F                 	db	111	;'o'
   801  00FFC5  75                 	db	117	;'u'
   802  00FFC6  20                 	db	32
   803  00FFC7  4C                 	db	76	;'L'
   804  00FFC8  6F                 	db	111	;'o'
   805  00FFC9  73                 	db	115	;'s'
   806  00FFCA  65                 	db	101	;'e'
   807  00FFCB  21                 	db	33
   808  00FFCC  0D                 	db	13
   809  00FFCD  0A                 	db	10
   810  00FFCE  00                 	db	0
   811  00FFCF                     STR_20:
   812  00FFCF  59                 	db	89	;'Y'
   813  00FFD0  6F                 	db	111	;'o'
   814  00FFD1  75                 	db	117	;'u'
   815  00FFD2  20                 	db	32
   816  00FFD3  57                 	db	87	;'W'
   817  00FFD4  69                 	db	105	;'i'
   818  00FFD5  6E                 	db	110	;'n'
   819  00FFD6  21                 	db	33
   820  00FFD7  0D                 	db	13
   821  00FFD8  0A                 	db	10
   822  00FFD9  00                 	db	0
   823  00FFDA                     STR_1:
   824  00FFDA  69                 	db	105	;'i'
   825  00FFDB  6E                 	db	110	;'n'
   826  00FFDC  4C                 	db	76	;'L'
   827  00FFDD  61                 	db	97	;'a'
   828  00FFDE  62                 	db	98	;'b'
   829  00FFDF  20                 	db	32
   830  00FFE0  30                 	db	48	;'0'
   831  00FFE1  34                 	db	52	;'4'
   832  00FFE2  0D                 	db	13
   833  00FFE3  0A                 	db	10
   834  00FFE4  00                 	db	0
   835  00FFE5                     STR_3:
   836  00FFE5  44                 	db	68	;'D'
   837  00FFE6  65                 	db	101	;'e'
   838  00FFE7  76                 	db	118	;'v'
   839  00FFE8  27                 	db	39
   840  00FFE9  32                 	db	50	;'2'
   841  00FFEA  31                 	db	49	;'1'
   842  00FFEB  0D                 	db	13
   843  00FFEC  0A                 	db	10
   844  00FFED  00                 	db	0
   845  00FFEE                     STR_9:
   846  00FFEE  6F                 	db	111	;'o'
   847  00FFEF  3A                 	db	58	;':'
   848  00FFF0  20                 	db	32
   849  00FFF1  6B                 	db	107	;'k'
   850  00FFF2  0D                 	db	13
   851  00FFF3  0A                 	db	10
   852  00FFF4  00                 	db	0
   853  00FFF5                     STR_16:
   854  00FFF5  6B                 	db	107	;'k'
   855  00FFF6  2E                 	db	46
   856  00FFF7  0D                 	db	13
   857  00FFF8  0A                 	db	10
   858  00FFF9  00                 	db	0
   859  00FFFA                     STR_6:
   860  00FFFA  0D                 	db	13
   861  00FFFB  0A                 	db	10
   862  00FFFC  3E                 	db	62	;'>'
   863  00FFFD  20                 	db	32
   864  00FFFE  00                 	db	0
   865  00FFFF  00                 	db	0	; dummy byte at the end
   866  0000                     
   867                           ; #config settings
   868                           
   869                           	psect	cinit
   870  0009F2                     __pcinit:
   871                           	callstack 0
   872  0009F2                     start_initialization:
   873                           	callstack 0
   874  0009F2                     __initialization:
   875                           	callstack 0
   876                           
   877                           ; Initialize objects allocated to BANK2 (168 bytes)
   878                           ; load TBLPTR registers with __pidataBANK2
   879  0009F2  0EB4               	movlw	low __pidataBANK2
   880  0009F4  6EF6               	movwf	tblptrl,c
   881  0009F6  0E08               	movlw	high __pidataBANK2
   882  0009F8  6EF7               	movwf	tblptrh,c
   883  0009FA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   884  0009FC  6EF8               	movwf	tblptru,c
   885  0009FE  EE02  F000         	lfsr	0,__pdataBANK2
   886  000A02  EE10 F0A8          	lfsr	1,168
   887  000A06                     copy_data0:
   888  000A06  0009               	tblrd		*+
   889  000A08  CFF5 FFEE          	movff	tablat,postinc0
   890  000A0C  50E5               	movf	postdec1,w,c
   891  000A0E  50E1               	movf	fsr1l,w,c
   892  000A10  E1FA               	bnz	copy_data0
   893                           
   894                           ; Initialize objects allocated to BANK1 (168 bytes)
   895                           ; load TBLPTR registers with __pidataBANK1
   896  000A12  0E0C               	movlw	low __pidataBANK1
   897  000A14  6EF6               	movwf	tblptrl,c
   898  000A16  0E08               	movlw	high __pidataBANK1
   899  000A18  6EF7               	movwf	tblptrh,c
   900  000A1A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   901  000A1C  6EF8               	movwf	tblptru,c
   902  000A1E  EE01  F000         	lfsr	0,__pdataBANK1
   903  000A22  EE10 F0A8          	lfsr	1,168
   904  000A26                     copy_data1:
   905  000A26  0009               	tblrd		*+
   906  000A28  CFF5 FFEE          	movff	tablat,postinc0
   907  000A2C  50E5               	movf	postdec1,w,c
   908  000A2E  50E1               	movf	fsr1l,w,c
   909  000A30  E1FA               	bnz	copy_data1
   910                           
   911                           ; Initialize objects allocated to BANK0 (52 bytes)
   912                           ; load TBLPTR registers with __pidataBANK0
   913  000A32  0E56               	movlw	low __pidataBANK0
   914  000A34  6EF6               	movwf	tblptrl,c
   915  000A36  0E0C               	movlw	high __pidataBANK0
   916  000A38  6EF7               	movwf	tblptrh,c
   917  000A3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   918  000A3C  6EF8               	movwf	tblptru,c
   919  000A3E  EE00  F060         	lfsr	0,__pdataBANK0
   920  000A42  EE10 F034          	lfsr	1,52
   921  000A46                     copy_data2:
   922  000A46  0009               	tblrd		*+
   923  000A48  CFF5 FFEE          	movff	tablat,postinc0
   924  000A4C  50E5               	movf	postdec1,w,c
   925  000A4E  50E1               	movf	fsr1l,w,c
   926  000A50  E1FA               	bnz	copy_data2
   927                           
   928                           ; Clear objects allocated to BANK0 (43 bytes)
   929  000A52  EE00  F094         	lfsr	0,__pbssBANK0
   930  000A56  0E2B               	movlw	43
   931  000A58                     clear_0:
   932  000A58  6AEE               	clrf	postinc0,c
   933  000A5A  06E8               	decf	wreg,f,c
   934  000A5C  E1FD               	bnz	clear_0
   935                           
   936                           ; Clear objects allocated to COMRAM (18 bytes)
   937  000A5E  EE00  F03C         	lfsr	0,__pbssCOMRAM
   938  000A62  0E12               	movlw	18
   939  000A64                     clear_1:
   940  000A64  6AEE               	clrf	postinc0,c
   941  000A66  06E8               	decf	wreg,f,c
   942  000A68  E1FD               	bnz	clear_1
   943  000A6A                     end_of_initialization:
   944                           	callstack 0
   945  000A6A                     __end_of__initialization:
   946                           	callstack 0
   947  000A6A  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   948  000A6C  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   949  000A6E  0100               	movlb	0
   950  000A70  EF4C  F000         	goto	_main	;jump to C main() function
   951                           
   952                           	psect	bssCOMRAM
   953  00003C                     __pbssCOMRAM:
   954                           	callstack 0
   955  00003C                     _nout:
   956                           	callstack 0
   957  00003C                     	ds	2
   958  00003E                     _width:
   959                           	callstack 0
   960  00003E                     	ds	2
   961  000040                     _flags:
   962                           	callstack 0
   963  000040                     	ds	2
   964  000042                     _TMR1_InterruptHandler:
   965                           	callstack 0
   966  000042                     	ds	2
   967  000044                     _timer1ReloadVal:
   968                           	callstack 0
   969  000044                     	ds	2
   970  000046                     _timer0ReloadVal:
   971                           	callstack 0
   972  000046                     	ds	2
   973  000048                     _TMR0_InterruptHandler:
   974                           	callstack 0
   975  000048                     	ds	2
   976  00004A                     myTMR0ISR@tmr0_state:
   977                           	callstack 0
   978  00004A                     	ds	1
   979  00004B                     	ds	1
   980  00004C                     _playNote:
   981                           	callstack 0
   982  00004C                     	ds	1
   983  00004D                     _eusart1RxLastError:
   984                           	callstack 0
   985  00004D                     	ds	1
   986                           
   987                           	psect	bssBANK0
   988  000094                     __pbssBANK0:
   989                           	callstack 0
   990  000094                     _prec:
   991                           	callstack 0
   992  000094                     	ds	2
   993  000096                     _EUSART1_ErrorHandler:
   994                           	callstack 0
   995  000096                     	ds	2
   996  000098                     _EUSART1_OverrunErrorHandler:
   997                           	callstack 0
   998  000098                     	ds	2
   999  00009A                     _EUSART1_FramingErrorHandler:
  1000                           	callstack 0
  1001  00009A                     	ds	2
  1002  00009C                     _songIndex:
  1003                           	callstack 0
  1004  00009C                     	ds	1
  1005  00009D                     _noteIndex:
  1006                           	callstack 0
  1007  00009D                     	ds	1
  1008  00009E                     _playSong:
  1009                           	callstack 0
  1010  00009E                     	ds	1
  1011  00009F                     _dbuf:
  1012                           	callstack 0
  1013  00009F                     	ds	32
  1014                           
  1015                           	psect	dataBANK0
  1016  000060                     __pdataBANK0:
  1017                           	callstack 0
  1018  000060                     _scale:
  1019                           	callstack 0
  1020  000060                     	ds	48
  1021  000090                     _songLength:
  1022                           	callstack 0
  1023  000090                     	ds	4
  1024                           
  1025                           	psect	dataBANK1
  1026  000100                     __pdataBANK1:
  1027                           	callstack 0
  1028  000100                     _duration:
  1029                           	callstack 0
  1030  000100                     	ds	168
  1031                           
  1032                           	psect	dataBANK2
  1033  000200                     __pdataBANK2:
  1034                           	callstack 0
  1035  000200                     _notes:
  1036                           	callstack 0
  1037  000200                     	ds	168
  1038                           
  1039                           	psect	cstackBANK0
  1040  0000BF                     __pcstackBANK0:
  1041                           	callstack 0
  1042  0000BF                     ?_vfprintf:
  1043                           	callstack 0
  1044  0000BF                     vfprintf@fp:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x0
  1048  0000BF                     	ds	2
  1049  0000C1                     vfprintf@fmt:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x2
  1053  0000C1                     	ds	2
  1054  0000C3                     vfprintf@ap:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x4
  1058  0000C3                     	ds	2
  1059  0000C5                     vfprintf@cfmt:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x6
  1063  0000C5                     	ds	2
  1064  0000C7                     ?_printf:
  1065                           	callstack 0
  1066  0000C7                     printf@fmt:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x8
  1070  0000C7                     	ds	6
  1071  0000CD                     printf@ap:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xE
  1075  0000CD                     	ds	2
  1076  0000CF                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0x10
  1079  0000CF                     	ds	4
  1080  0000D3                     main@initial:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x14
  1084  0000D3                     	ds	2
  1085  0000D5                     main@final:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x16
  1089  0000D5                     	ds	2
  1090  0000D7                     main@success:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x18
  1094  0000D7                     	ds	1
  1095  0000D8                     main@cmd:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x19
  1099  0000D8                     	ds	1
  1100  0000D9                     main@sum:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x1A
  1104  0000D9                     	ds	2
  1105  0000DB                     main@i:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x1C
  1109  0000DB                     	ds	1
  1110                           
  1111                           	psect	cstackCOMRAM
  1112  000001                     __pcstackCOMRAM:
  1113                           	callstack 0
  1114  000001                     TMR0_WriteTimer@timerVal:
  1115                           	callstack 0
  1116  000001                     TMR1_WriteTimer@timerVal:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x0
  1120  000001                     	ds	2
  1121  000003                     ??_myTMR1ISR:
  1122  000003                     ??_myTMR0ISR:
  1123  000003                     
  1124                           ; 1 bytes @ 0x2
  1125  000003                     	ds	6
  1126  000009                     
  1127                           ; 1 bytes @ 0x8
  1128  000009                     	ds	2
  1129  00000B                     ??_INTERRUPT_InterruptManager:
  1130                           
  1131                           ; 1 bytes @ 0xA
  1132  00000B                     	ds	6
  1133  000011                     ?_strlen:
  1134                           	callstack 0
  1135  000011                     ?_TMR0_ReadTimer:
  1136                           	callstack 0
  1137  000011                     EUSART1_Write@txData:
  1138                           	callstack 0
  1139  000011                     TMR0_SetInterruptHandler@InterruptHandler:
  1140                           	callstack 0
  1141  000011                     TMR1_SetInterruptHandler@InterruptHandler:
  1142                           	callstack 0
  1143  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1144                           	callstack 0
  1145  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1146                           	callstack 0
  1147  000011                     EUSART1_SetErrorHandler@interruptHandler:
  1148                           	callstack 0
  1149  000011                     strlen@s:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x10
  1153  000011                     	ds	1
  1154  000012                     putch@txData:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x11
  1158  000012                     	ds	1
  1159  000013                     ??_TMR0_Initialize:
  1160  000013                     ??_TMR0_ReadTimer:
  1161  000013                     fputc@c:
  1162                           	callstack 0
  1163  000013                     strlen@a:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x12
  1167  000013                     	ds	2
  1168  000015                     TMR0_ReadTimer@readVal:
  1169                           	callstack 0
  1170  000015                     fputc@fp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x14
  1174  000015                     	ds	2
  1175  000017                     ??_fputc:
  1176  000017                     TMR0_ReadTimer@readValLow:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x16
  1180  000017                     	ds	1
  1181  000018                     TMR0_ReadTimer@readValHigh:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x17
  1185  000018                     	ds	4
  1186  00001C                     fputs@s:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x1B
  1190  00001C                     	ds	2
  1191  00001E                     fputs@fp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x1D
  1195  00001E                     	ds	2
  1196  000020                     fputs@c:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200  000020                     	ds	1
  1201  000021                     fputs@i:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x20
  1205  000021                     	ds	2
  1206  000023                     ?_pad:
  1207                           	callstack 0
  1208  000023                     pad@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x22
  1212  000023                     	ds	2
  1213  000025                     pad@buf:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x24
  1217  000025                     	ds	2
  1218  000027                     pad@p:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x26
  1222  000027                     	ds	2
  1223  000029                     ??_pad:
  1224                           
  1225                           ; 1 bytes @ 0x28
  1226  000029                     	ds	1
  1227  00002A                     pad@i:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x29
  1231  00002A                     	ds	2
  1232  00002C                     pad@w:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x2B
  1236  00002C                     	ds	2
  1237  00002E                     ?_ctoa:
  1238                           	callstack 0
  1239  00002E                     ctoa@fp:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x2D
  1243  00002E                     	ds	2
  1244  000030                     ctoa@c:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x2F
  1248  000030                     	ds	1
  1249  000031                     ctoa@w:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x30
  1253  000031                     	ds	2
  1254  000033                     ?_vfpfcnvrt:
  1255                           	callstack 0
  1256  000033                     vfpfcnvrt@fp:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x32
  1260  000033                     	ds	2
  1261  000035                     vfpfcnvrt@fmt:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x34
  1265  000035                     	ds	2
  1266  000037                     vfpfcnvrt@ap:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x36
  1270  000037                     	ds	2
  1271  000039                     ??_vfpfcnvrt:
  1272                           
  1273                           ; 1 bytes @ 0x38
  1274  000039                     	ds	2
  1275  00003B                     vfpfcnvrt@c:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x3A
  1279  00003B                     	ds	1
  1280  00003C                     
  1281                           ; 1 bytes @ 0x3B
  1282 ;;
  1283 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1284 ;;
  1285 ;; *************** function _main *****************
  1286 ;; Defined at:
  1287 ;;		line 108 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  sum             2   26[BANK0 ] unsigned short 
  1292 ;;  final           2   22[BANK0 ] unsigned short 
  1293 ;;  initial         2   20[BANK0 ] unsigned short 
  1294 ;;  success         1   24[BANK0 ] unsigned char 
  1295 ;;  i               1   28[BANK0 ] unsigned char 
  1296 ;;  cmd             1   25[BANK0 ] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:       13 bytes
  1311 ;; Hardware stack levels required when called:   13
  1312 ;; This function calls:
  1313 ;;		_EUSART1_Read
  1314 ;;		_EUSART1_is_rx_ready
  1315 ;;		_SYSTEM_Initialize
  1316 ;;		_TMR0_ReadTimer
  1317 ;;		_TMR0_SetInterruptHandler
  1318 ;;		_TMR1_SetInterruptHandler
  1319 ;;		_printf
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text0
  1326  000098                     __ptext0:
  1327                           	callstack 0
  1328  000098                     _main:
  1329                           	callstack 18
  1330  000098                     
  1331                           ;main.c: 110:  uint8_t i;;main.c: 111:  char cmd;;main.c: 112:     songIndex = 0;
  1332  000098  0E00               	movlw	0
  1333  00009A  0100               	movlb	0	; () banked
  1334  00009C  6F9C               	movwf	_songIndex& (0+255),b
  1335                           
  1336                           ;main.c: 113:     noteIndex = 0;
  1337  00009E  0E00               	movlw	0
  1338  0000A0  6F9D               	movwf	_noteIndex& (0+255),b
  1339  0000A2                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 114:  SYSTEM_Initialize();
  1342  0000A2  ECE3  F006         	call	_SYSTEM_Initialize	;wreg free
  1343  0000A6                     
  1344                           ;main.c: 116:  (INTCONbits.GIE = 1);
  1345  0000A6  8EF2               	bsf	242,7,c	;volatile
  1346  0000A8                     
  1347                           ;main.c: 117:  (INTCONbits.PEIE = 1);
  1348  0000A8  8CF2               	bsf	242,6,c	;volatile
  1349  0000AA                     
  1350                           ;main.c: 119:  TMR1_SetInterruptHandler(myTMR1ISR);
  1351  0000AA  0E6E               	movlw	low _myTMR1ISR
  1352  0000AC  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1353  0000AE  0E06               	movlw	high _myTMR1ISR
  1354  0000B0  6E12               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1355  0000B2  EC0A  F007         	call	_TMR1_SetInterruptHandler	;wreg free
  1356  0000B6                     
  1357                           ;main.c: 120:  TMR0_SetInterruptHandler(myTMR0ISR);
  1358  0000B6  0E7A               	movlw	low _myTMR0ISR
  1359  0000B8  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1360  0000BA  0E05               	movlw	high _myTMR0ISR
  1361  0000BC  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1362  0000BE  EC0F  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  1363  0000C2                     
  1364                           ;main.c: 122:  printf("inLab 04\r\n");
  1365  0000C2  0EDA               	movlw	low STR_1
  1366  0000C4  0100               	movlb	0	; () banked
  1367  0000C6  6FC7               	movwf	printf@fmt& (0+255),b
  1368  0000C8  0EFF               	movlw	high STR_1
  1369  0000CA  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1370  0000CC  EC8A  F006         	call	_printf	;wreg free
  1371  0000D0                     
  1372                           ;main.c: 123:  printf("Interrupt Music Box\r\n");
  1373  0000D0  0E40               	movlw	low STR_2
  1374  0000D2  0100               	movlb	0	; () banked
  1375  0000D4  6FC7               	movwf	printf@fmt& (0+255),b
  1376  0000D6  0EFF               	movlw	high STR_2
  1377  0000D8  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1378  0000DA  EC8A  F006         	call	_printf	;wreg free
  1379  0000DE                     
  1380                           ;main.c: 124:  printf("Dev'21\r\n");
  1381  0000DE  0EE5               	movlw	low STR_3
  1382  0000E0  0100               	movlb	0	; () banked
  1383  0000E2  6FC7               	movwf	printf@fmt& (0+255),b
  1384  0000E4  0EFF               	movlw	high STR_3
  1385  0000E6  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1386  0000E8  EC8A  F006         	call	_printf	;wreg free
  1387  0000EC                     
  1388                           ;main.c: 125:  printf("Board wiring\r\n");
  1389  0000EC  0EA5               	movlw	low STR_4
  1390  0000EE  0100               	movlb	0	; () banked
  1391  0000F0  6FC7               	movwf	printf@fmt& (0+255),b
  1392  0000F2  0EFF               	movlw	high STR_4
  1393  0000F4  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1394  0000F6  EC8A  F006         	call	_printf	;wreg free
  1395  0000FA                     
  1396                           ;main.c: 126:  printf("RB5 -> LPFin and install LPFout/AMPin jumper");
  1397  0000FA  0EA6               	movlw	low STR_5
  1398  0000FC  0100               	movlb	0	; () banked
  1399  0000FE  6FC7               	movwf	printf@fmt& (0+255),b
  1400  000100  0EFE               	movlw	high STR_5
  1401  000102  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1402  000104  EC8A  F006         	call	_printf	;wreg free
  1403  000108                     
  1404                           ;main.c: 127:  printf("\r\n> ");
  1405  000108  0EFA               	movlw	low STR_6
  1406  00010A  0100               	movlb	0	; () banked
  1407  00010C  6FC7               	movwf	printf@fmt& (0+255),b
  1408  00010E  0EFF               	movlw	high STR_6
  1409  000110  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1410  000112  EC8A  F006         	call	_printf	;wreg free
  1411  000116                     l2375:
  1412                           
  1413                           ;main.c: 131:      if ((EUSART1_is_rx_ready())) {
  1414  000116  ECFB  F006         	call	_EUSART1_is_rx_ready	;wreg free
  1415  00011A  0900               	iorlw	0
  1416  00011C  B4D8               	btfsc	status,2,c
  1417  00011E  EF93  F000         	goto	u1091
  1418  000122  EF95  F000         	goto	u1090
  1419  000126                     u1091:
  1420  000126  EF8B  F000         	goto	l2375
  1421  00012A                     u1090:
  1422  00012A                     
  1423                           ;main.c: 132:          cmd = EUSART1_Read();
  1424  00012A  EC9E  F006         	call	_EUSART1_Read	;wreg free
  1425  00012E  0100               	movlb	0	; () banked
  1426  000130  6FD8               	movwf	main@cmd& (0+255),b
  1427                           
  1428                           ;main.c: 133:          switch (cmd) {
  1429  000132  EFE3  F001         	goto	l2473
  1430  000136                     l2379:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;main.c: 135:                  printf("------------------------------\r\n");
  1434  000136  0ED3               	movlw	low STR_7
  1435  000138  6FC7               	movwf	printf@fmt& (0+255),b
  1436  00013A  0EFE               	movlw	high STR_7
  1437  00013C  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1438  00013E  EC8A  F006         	call	_printf	;wreg free
  1439                           
  1440                           ;main.c: 136:                  printf("?: Help menu\r\n");
  1441  000142  0EB4               	movlw	low STR_8
  1442  000144  0100               	movlb	0	; () banked
  1443  000146  6FC7               	movwf	printf@fmt& (0+255),b
  1444  000148  0EFF               	movlw	high STR_8
  1445  00014A  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1446  00014C  EC8A  F006         	call	_printf	;wreg free
  1447                           
  1448                           ;main.c: 137:                  printf("o: k\r\n");
  1449  000150  0EEE               	movlw	low STR_9
  1450  000152  0100               	movlb	0	; () banked
  1451  000154  6FC7               	movwf	printf@fmt& (0+255),b
  1452  000156  0EFF               	movlw	high STR_9
  1453  000158  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1454  00015A  EC8A  F006         	call	_printf	;wreg free
  1455                           
  1456                           ;main.c: 138:                  printf("Z: Reset processor\r\n");
  1457  00015E  0E6B               	movlw	low STR_10
  1458  000160  0100               	movlb	0	; () banked
  1459  000162  6FC7               	movwf	printf@fmt& (0+255),b
  1460  000164  0EFF               	movlw	high STR_10
  1461  000166  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1462  000168  EC8A  F006         	call	_printf	;wreg free
  1463                           
  1464                           ;main.c: 139:                  printf("z: Clear the terminal\r\n");
  1465  00016C  0E12               	movlw	low STR_11
  1466  00016E  0100               	movlb	0	; () banked
  1467  000170  6FC7               	movwf	printf@fmt& (0+255),b
  1468  000172  0EFF               	movlw	high STR_11
  1469  000174  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1470  000176  EC8A  F006         	call	_printf	;wreg free
  1471                           
  1472                           ;main.c: 140:                  printf("p: Play song once\r\n");
  1473  00017A  0E80               	movlw	low STR_12
  1474  00017C  0100               	movlb	0	; () banked
  1475  00017E  6FC7               	movwf	printf@fmt& (0+255),b
  1476  000180  0EFF               	movlw	high STR_12
  1477  000182  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1478  000184  EC8A  F006         	call	_printf	;wreg free
  1479                           
  1480                           ;main.c: 141:                  printf("r: Rhythm practice\r\n");
  1481  000188  0E56               	movlw	low STR_13
  1482  00018A  0100               	movlb	0	; () banked
  1483  00018C  6FC7               	movwf	printf@fmt& (0+255),b
  1484  00018E  0EFF               	movlw	high STR_13
  1485  000190  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1486  000192  EC8A  F006         	call	_printf	;wreg free
  1487                           
  1488                           ;main.c: 142:                  printf("------------------------------\r\n");
  1489  000196  0ED3               	movlw	low STR_7
  1490  000198  0100               	movlb	0	; () banked
  1491  00019A  6FC7               	movwf	printf@fmt& (0+255),b
  1492  00019C  0EFE               	movlw	high STR_7
  1493  00019E  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1494  0001A0  EC8A  F006         	call	_printf	;wreg free
  1495                           
  1496                           ;main.c: 143:                  break;
  1497  0001A4  EF8B  F000         	goto	l2375
  1498  0001A8                     l2381:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 148:                  printf("Start playing song.\r\n");
  1502  0001A8  0E2A               	movlw	low STR_15
  1503  0001AA  6FC7               	movwf	printf@fmt& (0+255),b
  1504  0001AC  0EFF               	movlw	high STR_15
  1505  0001AE  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1506  0001B0  EC8A  F006         	call	_printf	;wreg free
  1507  0001B4                     
  1508                           ;main.c: 149:                     songIndex = 0;
  1509  0001B4  0E00               	movlw	0
  1510  0001B6  0100               	movlb	0	; () banked
  1511  0001B8  6F9C               	movwf	_songIndex& (0+255),b
  1512  0001BA                     
  1513                           ; BSR set to: 0
  1514                           ;main.c: 150:                  playSong = 1;
  1515  0001BA  0E01               	movlw	1
  1516  0001BC  6F9E               	movwf	_playSong& (0+255),b
  1517                           
  1518                           ;main.c: 151:                  break;
  1519  0001BE  EF8B  F000         	goto	l2375
  1520  0001C2                     l2387:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 162:                  printf("k.\r\n");
  1524  0001C2  0EF5               	movlw	low STR_16
  1525  0001C4  6FC7               	movwf	printf@fmt& (0+255),b
  1526  0001C6  0EFF               	movlw	high STR_16
  1527  0001C8  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1528  0001CA  EC8A  F006         	call	_printf	;wreg free
  1529                           
  1530                           ;main.c: 163:                  break;
  1531  0001CE  EF8B  F000         	goto	l2375
  1532  0001D2                     l2389:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;main.c: 169:                  printf("Listen to the beat pattern.\r\n");
  1536  0001D2  0EF4               	movlw	low STR_17
  1537  0001D4  6FC7               	movwf	printf@fmt& (0+255),b
  1538  0001D6  0EFE               	movlw	high STR_17
  1539  0001D8  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1540  0001DA  EC8A  F006         	call	_printf	;wreg free
  1541  0001DE                     
  1542                           ;main.c: 170:                  songIndex = 1;
  1543  0001DE  0E01               	movlw	1
  1544  0001E0  0100               	movlb	0	; () banked
  1545  0001E2  6F9C               	movwf	_songIndex& (0+255),b
  1546  0001E4                     
  1547                           ; BSR set to: 0
  1548                           ;main.c: 171:                     playSong = 1;
  1549  0001E4  0E01               	movlw	1
  1550  0001E6  6F9E               	movwf	_playSong& (0+255),b
  1551  0001E8                     l2395:
  1552                           
  1553                           ; BSR set to: 0
  1554  0001E8  059E               	decf	_playSong& (0+255),w,b
  1555  0001EA  B4D8               	btfsc	status,2,c
  1556  0001EC  EFFA  F000         	goto	u1101
  1557  0001F0  EFFC  F000         	goto	u1100
  1558  0001F4                     u1101:
  1559  0001F4  EFF4  F000         	goto	l2395
  1560  0001F8                     u1100:
  1561  0001F8                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 173:                  printf("Use the upper button to reproduce this pattern\r\
      +                          n");
  1564  0001F8  0E75               	movlw	low STR_18
  1565  0001FA  6FC7               	movwf	printf@fmt& (0+255),b
  1566  0001FC  0EFE               	movlw	high STR_18
  1567  0001FE  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1568  000200  EC8A  F006         	call	_printf	;wreg free
  1569  000204                     
  1570                           ;main.c: 174:                  INTCONbits.TMR0IE = 0;
  1571  000204  9AF2               	bcf	242,5,c	;volatile
  1572  000206                     
  1573                           ;main.c: 175:                  uint8_t success = 1;
  1574  000206  0E01               	movlw	1
  1575  000208  0100               	movlb	0	; () banked
  1576  00020A  6FD7               	movwf	main@success& (0+255),b
  1577  00020C                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 177:                  for(noteIndex = 0; noteIndex < songLength[songIndex]; ++n
      +                          oteIndex) {
  1580  00020C  0E00               	movlw	0
  1581  00020E  6F9D               	movwf	_noteIndex& (0+255),b
  1582  000210  EF6C  F001         	goto	l2425
  1583  000214                     l351:
  1584  000214  B480               	btfsc	128,2,c	;volatile
  1585  000216  EF0F  F001         	goto	u1111
  1586  00021A  EF11  F001         	goto	u1110
  1587  00021E                     u1111:
  1588  00021E  EF0A  F001         	goto	l351
  1589  000222                     u1110:
  1590  000222                     
  1591                           ;main.c: 179:                         initial = TMR0_ReadTimer();
  1592  000222  ECC6  F006         	call	_TMR0_ReadTimer	;wreg free
  1593  000226  C011  F0D3         	movff	?_TMR0_ReadTimer,main@initial
  1594  00022A  C012  F0D4         	movff	?_TMR0_ReadTimer+1,main@initial+1
  1595  00022E                     
  1596                           ;main.c: 180:                         playNote = 1;
  1597  00022E  0E01               	movlw	1
  1598  000230  6E4C               	movwf	_playNote^0,c
  1599  000232                     l354:
  1600  000232  A480               	btfss	128,2,c	;volatile
  1601  000234  EF1E  F001         	goto	u1121
  1602  000238  EF20  F001         	goto	u1120
  1603  00023C                     u1121:
  1604  00023C  EF19  F001         	goto	l354
  1605  000240                     u1120:
  1606  000240                     
  1607                           ;main.c: 183:                      final = TMR0_ReadTimer();
  1608  000240  ECC6  F006         	call	_TMR0_ReadTimer	;wreg free
  1609  000244  C011  F0D5         	movff	?_TMR0_ReadTimer,main@final
  1610  000248  C012  F0D6         	movff	?_TMR0_ReadTimer+1,main@final+1
  1611  00024C                     
  1612                           ;main.c: 184:                      playNote = 0;
  1613  00024C  0E00               	movlw	0
  1614  00024E  6E4C               	movwf	_playNote^0,c
  1615  000250                     
  1616                           ;main.c: 186:                      sum = final - initial;
  1617  000250  0100               	movlb	0	; () banked
  1618  000252  51D3               	movf	main@initial& (0+255),w,b
  1619  000254  5DD5               	subwf	main@final& (0+255),w,b
  1620  000256  6FD9               	movwf	main@sum& (0+255),b
  1621  000258  51D4               	movf	(main@initial+1)& (0+255),w,b
  1622  00025A  59D6               	subwfb	(main@final+1)& (0+255),w,b
  1623  00025C  6FDA               	movwf	(main@sum+1)& (0+255),b
  1624  00025E                     
  1625                           ; BSR set to: 0
  1626                           ;main.c: 187:                      if ( (sum < (duration[noteIndex] + (15625 / 8) - ((15
      +                          625 * 2)))) || (sum < (duration[noteIndex] + (15625 / 8) - ((15625 * 2))))) {
  1627  00025E  519D               	movf	_noteIndex& (0+255),w,b
  1628  000260  0D2A               	mullw	42
  1629  000262  0E1E               	movlw	30
  1630  000264  6FCF               	movwf	??_main& (0+255),b
  1631  000266  0E1B               	movlw	27
  1632  000268  6FD0               	movwf	(??_main+1)& (0+255),b
  1633  00026A  0E00               	movlw	low _duration
  1634  00026C  6FD1               	movwf	(??_main+2)& (0+255),b
  1635  00026E  0E01               	movlw	high _duration
  1636  000270  6FD2               	movwf	(??_main+3)& (0+255),b
  1637  000272  51CF               	movf	??_main& (0+255),w,b
  1638  000274  27D1               	addwf	(??_main+2)& (0+255),f,b
  1639  000276  51D0               	movf	(??_main+1)& (0+255),w,b
  1640  000278  23D2               	addwfc	(??_main+3)& (0+255),f,b
  1641  00027A  50F3               	movf	243,w,c
  1642  00027C  27D1               	addwf	(??_main+2)& (0+255),f,b
  1643  00027E  50F4               	movf	244,w,c
  1644  000280  23D2               	addwfc	(??_main+3)& (0+255),f,b
  1645  000282  51D1               	movf	(??_main+2)& (0+255),w,b
  1646  000284  5DD9               	subwf	main@sum& (0+255),w,b
  1647  000286  51D2               	movf	(??_main+3)& (0+255),w,b
  1648  000288  59DA               	subwfb	(main@sum+1)& (0+255),w,b
  1649  00028A  A0D8               	btfss	status,0,c
  1650  00028C  EF4A  F001         	goto	u1131
  1651  000290  EF4C  F001         	goto	u1130
  1652  000294                     u1131:
  1653  000294  EF69  F001         	goto	l2421
  1654  000298                     u1130:
  1655  000298                     
  1656                           ; BSR set to: 0
  1657  000298  519D               	movf	_noteIndex& (0+255),w,b
  1658  00029A  0D2A               	mullw	42
  1659  00029C  0E1E               	movlw	30
  1660  00029E  6FCF               	movwf	??_main& (0+255),b
  1661  0002A0  0E1B               	movlw	27
  1662  0002A2  6FD0               	movwf	(??_main+1)& (0+255),b
  1663  0002A4  0E00               	movlw	low _duration
  1664  0002A6  6FD1               	movwf	(??_main+2)& (0+255),b
  1665  0002A8  0E01               	movlw	high _duration
  1666  0002AA  6FD2               	movwf	(??_main+3)& (0+255),b
  1667  0002AC  51CF               	movf	??_main& (0+255),w,b
  1668  0002AE  27D1               	addwf	(??_main+2)& (0+255),f,b
  1669  0002B0  51D0               	movf	(??_main+1)& (0+255),w,b
  1670  0002B2  23D2               	addwfc	(??_main+3)& (0+255),f,b
  1671  0002B4  50F3               	movf	243,w,c
  1672  0002B6  27D1               	addwf	(??_main+2)& (0+255),f,b
  1673  0002B8  50F4               	movf	244,w,c
  1674  0002BA  23D2               	addwfc	(??_main+3)& (0+255),f,b
  1675  0002BC  51D1               	movf	(??_main+2)& (0+255),w,b
  1676  0002BE  5DD9               	subwf	main@sum& (0+255),w,b
  1677  0002C0  51D2               	movf	(??_main+3)& (0+255),w,b
  1678  0002C2  59DA               	subwfb	(main@sum+1)& (0+255),w,b
  1679  0002C4  B0D8               	btfsc	status,0,c
  1680  0002C6  EF67  F001         	goto	u1141
  1681  0002CA  EF69  F001         	goto	u1140
  1682  0002CE                     u1141:
  1683  0002CE  EF6B  F001         	goto	l2423
  1684  0002D2                     u1140:
  1685  0002D2                     l2421:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 188:                          success = 0;
  1689  0002D2  0E00               	movlw	0
  1690  0002D4  6FD7               	movwf	main@success& (0+255),b
  1691  0002D6                     l2423:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;main.c: 190:                  }
  1695  0002D6  2B9D               	incf	_noteIndex& (0+255),f,b
  1696  0002D8                     l2425:
  1697                           
  1698                           ; BSR set to: 0
  1699  0002D8  0E90               	movlw	low _songLength
  1700  0002DA  259C               	addwf	_songIndex& (0+255),w,b
  1701  0002DC  6ED9               	movwf	fsr2l,c
  1702  0002DE  6ADA               	clrf	fsr2h,c
  1703  0002E0  0E00               	movlw	high _songLength
  1704  0002E2  22DA               	addwfc	fsr2h,f,c
  1705  0002E4  50DE               	movf	postinc2,w,c
  1706  0002E6  5D9D               	subwf	_noteIndex& (0+255),w,b
  1707  0002E8  A0D8               	btfss	status,0,c
  1708  0002EA  EF79  F001         	goto	u1151
  1709  0002EE  EF7B  F001         	goto	u1150
  1710  0002F2                     u1151:
  1711  0002F2  EF0A  F001         	goto	l351
  1712  0002F6                     u1150:
  1713  0002F6  EF95  F001         	goto	l2441
  1714  0002FA                     l2427:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;main.c: 193:                             printf("You Lose!\r\n");
  1718  0002FA  0EC3               	movlw	low STR_19
  1719  0002FC  6FC7               	movwf	printf@fmt& (0+255),b
  1720  0002FE  0EFF               	movlw	high STR_19
  1721  000300  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1722  000302  EC8A  F006         	call	_printf	;wreg free
  1723  000306                     
  1724                           ;main.c: 194:                             songIndex = 2;
  1725  000306  0E02               	movlw	2
  1726  000308  0100               	movlb	0	; () banked
  1727  00030A  6F9C               	movwf	_songIndex& (0+255),b
  1728  00030C                     l2431:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 195:                             playSong = 1;
  1732  00030C  0E01               	movlw	1
  1733  00030E  6F9E               	movwf	_playSong& (0+255),b
  1734                           
  1735                           ;main.c: 196:                             break;
  1736  000310  EFAA  F001         	goto	l363
  1737  000314                     l2433:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 199:                             printf("You Win!\r\n");
  1741  000314  0ECF               	movlw	low STR_20
  1742  000316  6FC7               	movwf	printf@fmt& (0+255),b
  1743  000318  0EFF               	movlw	high STR_20
  1744  00031A  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1745  00031C  EC8A  F006         	call	_printf	;wreg free
  1746  000320                     
  1747                           ;main.c: 200:                             songIndex = 3;
  1748  000320  0E03               	movlw	3
  1749  000322  0100               	movlb	0	; () banked
  1750  000324  6F9C               	movwf	_songIndex& (0+255),b
  1751  000326  EF86  F001         	goto	l2431
  1752  00032A                     l2441:
  1753                           
  1754                           ; BSR set to: 0
  1755  00032A  51D7               	movf	main@success& (0+255),w,b
  1756  00032C  6FCF               	movwf	??_main& (0+255),b
  1757  00032E  6BD0               	clrf	(??_main+1)& (0+255),b
  1758                           
  1759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1760                           ; Switch size 1, requested type "simple"
  1761                           ; Number of cases is 1, Range of values is 0 to 0
  1762                           ; switch strategies available:
  1763                           ; Name         Instructions Cycles
  1764                           ; simple_byte            4     3 (average)
  1765                           ;	Chosen strategy is simple_byte
  1766  000330  51D0               	movf	(??_main+1)& (0+255),w,b
  1767  000332  0A00               	xorlw	0	; case 0
  1768  000334  B4D8               	btfsc	status,2,c
  1769  000336  EF9F  F001         	goto	l2553
  1770  00033A  EFAA  F001         	goto	l363
  1771  00033E                     l2553:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 2, Range of values is 0 to 1
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte            7     4 (average)
  1779                           ;	Chosen strategy is simple_byte
  1780  00033E  51CF               	movf	??_main& (0+255),w,b
  1781  000340  0A00               	xorlw	0	; case 0
  1782  000342  B4D8               	btfsc	status,2,c
  1783  000344  EF7D  F001         	goto	l2427
  1784  000348  0A01               	xorlw	1	; case 1
  1785  00034A  B4D8               	btfsc	status,2,c
  1786  00034C  EF8A  F001         	goto	l2433
  1787  000350  EFAA  F001         	goto	l363
  1788  000354                     l363:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 205:                  INTCONbits.TMR0IE = 1;
  1792  000354  8AF2               	bsf	242,5,c	;volatile
  1793  000356                     
  1794                           ; BSR set to: 0
  1795                           ;main.c: 206:                     noteIndex = 0;
  1796  000356  0E00               	movlw	0
  1797  000358  6F9D               	movwf	_noteIndex& (0+255),b
  1798                           
  1799                           ;main.c: 207:                  break;
  1800  00035A  EF8B  F000         	goto	l2375
  1801  00035E                     l2445:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 213:                  for (i = 0; i < 40; i++) printf("\r\n");
  1805  00035E  0E00               	movlw	0
  1806  000360  6FDB               	movwf	main@i& (0+255),b
  1807  000362                     l2451:
  1808                           
  1809                           ; BSR set to: 0
  1810  000362  0ECC               	movlw	low (STR_19+9)
  1811  000364  6FC7               	movwf	printf@fmt& (0+255),b
  1812  000366  0EFF               	movlw	high (STR_19+9)
  1813  000368  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1814  00036A  EC8A  F006         	call	_printf	;wreg free
  1815  00036E  0100               	movlb	0	; () banked
  1816  000370  2BDB               	incf	main@i& (0+255),f,b
  1817  000372                     
  1818                           ; BSR set to: 0
  1819  000372  0E27               	movlw	39
  1820  000374  65DB               	cpfsgt	main@i& (0+255),b
  1821  000376  EFBF  F001         	goto	u1161
  1822  00037A  EFC1  F001         	goto	u1160
  1823  00037E                     u1161:
  1824  00037E  EFB1  F001         	goto	l2451
  1825  000382                     u1160:
  1826  000382                     
  1827                           ; BSR set to: 0
  1828  000382  00FF               	reset		;# 
  1829                           
  1830                           ;main.c: 215:                  break;
  1831  000384  EF8B  F000         	goto	l2375
  1832  000388                     l2457:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 221:                  for (i = 0; i < 40; i++) printf("\r\n");
  1836  000388  0E00               	movlw	0
  1837  00038A  6FDB               	movwf	main@i& (0+255),b
  1838  00038C                     l2463:
  1839                           
  1840                           ; BSR set to: 0
  1841  00038C  0ECC               	movlw	low (STR_19+9)
  1842  00038E  6FC7               	movwf	printf@fmt& (0+255),b
  1843  000390  0EFF               	movlw	high (STR_19+9)
  1844  000392  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1845  000394  EC8A  F006         	call	_printf	;wreg free
  1846  000398  0100               	movlb	0	; () banked
  1847  00039A  2BDB               	incf	main@i& (0+255),f,b
  1848  00039C                     
  1849                           ; BSR set to: 0
  1850  00039C  0E27               	movlw	39
  1851  00039E  65DB               	cpfsgt	main@i& (0+255),b
  1852  0003A0  EFD4  F001         	goto	u1171
  1853  0003A4  EFD6  F001         	goto	u1170
  1854  0003A8                     u1171:
  1855  0003A8  EFC6  F001         	goto	l2463
  1856  0003AC                     u1170:
  1857  0003AC  EF8B  F000         	goto	l2375
  1858  0003B0                     l2469:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 228:                  printf("Unknown key %c\r\n", cmd);
  1862  0003B0  0E94               	movlw	low STR_23
  1863  0003B2  6FC7               	movwf	printf@fmt& (0+255),b
  1864  0003B4  0EFF               	movlw	high STR_23
  1865  0003B6  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1866  0003B8  C0D8  F0C9         	movff	main@cmd,?_printf+2
  1867  0003BC  6BCA               	clrf	(?_printf+3)& (0+255),b
  1868  0003BE  EC8A  F006         	call	_printf	;wreg free
  1869                           
  1870                           ;main.c: 229:                  break;
  1871  0003C2  EF8B  F000         	goto	l2375
  1872  0003C6                     l2473:
  1873                           
  1874                           ; BSR set to: 0
  1875  0003C6  51D8               	movf	main@cmd& (0+255),w,b
  1876  0003C8  6FCF               	movwf	??_main& (0+255),b
  1877  0003CA  6BD0               	clrf	(??_main+1)& (0+255),b
  1878                           
  1879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 1, Range of values is 0 to 0
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            4     3 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886  0003CC  51D0               	movf	(??_main+1)& (0+255),w,b
  1887  0003CE  0A00               	xorlw	0	; case 0
  1888  0003D0  B4D8               	btfsc	status,2,c
  1889  0003D2  EFED  F001         	goto	l2555
  1890  0003D6  EFD8  F001         	goto	l2469
  1891  0003DA                     l2555:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 6, Range of values is 63 to 122
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           19    10 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900  0003DA  51CF               	movf	??_main& (0+255),w,b
  1901  0003DC  0A3F               	xorlw	63	; case 63
  1902  0003DE  B4D8               	btfsc	status,2,c
  1903  0003E0  EF9B  F000         	goto	l2379
  1904  0003E4  0A65               	xorlw	101	; case 90
  1905  0003E6  B4D8               	btfsc	status,2,c
  1906  0003E8  EFAF  F001         	goto	l2445
  1907  0003EC  0A35               	xorlw	53	; case 111
  1908  0003EE  B4D8               	btfsc	status,2,c
  1909  0003F0  EFE1  F000         	goto	l2387
  1910  0003F4  0A1F               	xorlw	31	; case 112
  1911  0003F6  B4D8               	btfsc	status,2,c
  1912  0003F8  EFD4  F000         	goto	l2381
  1913  0003FC  0A02               	xorlw	2	; case 114
  1914  0003FE  B4D8               	btfsc	status,2,c
  1915  000400  EFE9  F000         	goto	l2389
  1916  000404  0A08               	xorlw	8	; case 122
  1917  000406  B4D8               	btfsc	status,2,c
  1918  000408  EFC4  F001         	goto	l2457
  1919  00040C  EFD8  F001         	goto	l2469
  1920  000410  EF4A  F000         	goto	start
  1921  000414                     __end_of_main:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function _printf *****************
  1925 ;; Defined at:
  1926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1929 ;;		 -> STR_23(17), STR_22(3), STR_21(3), STR_20(11), 
  1930 ;;		 -> STR_19(12), STR_18(49), STR_17(30), STR_16(5), 
  1931 ;;		 -> STR_15(22), STR_14(33), STR_13(21), STR_12(20), 
  1932 ;;		 -> STR_11(24), STR_10(21), STR_9(7), STR_8(15), 
  1933 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  1934 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  ap              2   14[BANK0 ] PTR void [1]
  1937 ;;		 -> ?_printf(2), 
  1938 ;;  ret             2    0        int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2    8[BANK0 ] int 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;Total ram usage:        8 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:   12
  1955 ;; This function calls:
  1956 ;;		_vfprintf
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text1
  1963  000D14                     __ptext1:
  1964                           	callstack 0
  1965  000D14                     _printf:
  1966                           	callstack 18
  1967  000D14  0EC9               	movlw	low (?_printf+2)
  1968  000D16  0100               	movlb	0	; () banked
  1969  000D18  6FCD               	movwf	printf@ap& (0+255),b
  1970  000D1A  0E00               	movlw	high (?_printf+2)
  1971  000D1C  6FCE               	movwf	(printf@ap+1)& (0+255),b
  1972  000D1E                     
  1973                           ; BSR set to: 0
  1974  000D1E  0E00               	movlw	0
  1975  000D20  6FBF               	movwf	vfprintf@fp& (0+255),b
  1976  000D22  0E00               	movlw	0
  1977  000D24  6FC0               	movwf	(vfprintf@fp+1)& (0+255),b
  1978  000D26  C0C7  F0C1         	movff	printf@fmt,vfprintf@fmt
  1979  000D2A  C0C8  F0C2         	movff	printf@fmt+1,vfprintf@fmt+1
  1980  000D2E  0ECD               	movlw	low printf@ap
  1981  000D30  6FC3               	movwf	vfprintf@ap& (0+255),b
  1982  000D32  0E00               	movlw	high printf@ap
  1983  000D34  6FC4               	movwf	(vfprintf@ap+1)& (0+255),b
  1984  000D36  EC3A  F005         	call	_vfprintf	;wreg free
  1985  000D3A  0012               	return		;funcret
  1986  000D3C                     __end_of_printf:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _vfprintf *****************
  1990 ;; Defined at:
  1991 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1994 ;;		 -> NULL(0), 
  1995 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1996 ;;		 -> STR_23(17), STR_22(3), STR_21(3), STR_20(11), 
  1997 ;;		 -> STR_19(12), STR_18(49), STR_17(30), STR_16(5), 
  1998 ;;		 -> STR_15(22), STR_14(33), STR_13(21), STR_12(20), 
  1999 ;;		 -> STR_11(24), STR_10(21), STR_9(7), STR_8(15), 
  2000 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2001 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2002 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2003 ;;		 -> printf@ap(2), 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  2006 ;;		 -> STR_23(17), STR_22(3), STR_21(3), STR_20(11), 
  2007 ;;		 -> STR_19(12), STR_18(49), STR_17(30), STR_16(5), 
  2008 ;;		 -> STR_15(22), STR_14(33), STR_13(21), STR_12(20), 
  2009 ;;		 -> STR_11(24), STR_10(21), STR_9(7), STR_8(15), 
  2010 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2011 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    0[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        8 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:   11
  2028 ;; This function calls:
  2029 ;;		_vfpfcnvrt
  2030 ;; This function is called by:
  2031 ;;		_printf
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text2
  2036  000A74                     __ptext2:
  2037                           	callstack 0
  2038  000A74                     _vfprintf:
  2039                           	callstack 18
  2040  000A74                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2042  000A74  C0C1  F0C5         	movff	vfprintf@fmt,vfprintf@cfmt
  2043  000A78  C0C2  F0C6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2044  000A7C                     
  2045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2046  000A7C  0E00               	movlw	0
  2047  000A7E  6E3D               	movwf	(_nout+1)^0,c
  2048  000A80  0E00               	movlw	0
  2049  000A82  6E3C               	movwf	_nout^0,c
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2052  000A84  EF56  F005         	goto	l2343
  2053  000A88                     l2341:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2056  000A88  C0BF  F033         	movff	vfprintf@fp,vfpfcnvrt@fp
  2057  000A8C  C0C0  F034         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2058  000A90  0EC5               	movlw	low vfprintf@cfmt
  2059  000A92  6E35               	movwf	vfpfcnvrt@fmt^0,c
  2060  000A94  0E00               	movlw	high vfprintf@cfmt
  2061  000A96  6E36               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2062  000A98  C0C3  F037         	movff	vfprintf@ap,vfpfcnvrt@ap
  2063  000A9C  C0C4  F038         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2064  000AA0  EC0A  F002         	call	_vfpfcnvrt	;wreg free
  2065  000AA4  5033               	movf	?_vfpfcnvrt^0,w,c
  2066  000AA6  263C               	addwf	_nout^0,f,c
  2067  000AA8  5034               	movf	(?_vfpfcnvrt+1)^0,w,c
  2068  000AAA  223D               	addwfc	(_nout+1)^0,f,c
  2069  000AAC                     l2343:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2072  000AAC  C0C5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2073  000AB0  C0C6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2074  000AB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2075  000AB4  6AF8               	clrf	tblptru,c
  2076  000AB6                     	endif
  2077  000AB6                     	if	0	;tblptru may be non-zero
  2078  000AB6                     	endif
  2079  000AB6  0008               	tblrd		*
  2080  000AB8  50F5               	movf	tablat,w,c
  2081  000ABA  0900               	iorlw	0
  2082  000ABC  A4D8               	btfss	status,2,c
  2083  000ABE  EF63  F005         	goto	u1081
  2084  000AC2  EF65  F005         	goto	u1080
  2085  000AC6                     u1081:
  2086  000AC6  EF44  F005         	goto	l2341
  2087  000ACA                     u1080:
  2088  000ACA                     
  2089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2090  000ACA  C03C  F0BF         	movff	_nout,?_vfprintf
  2091  000ACE  C03D  F0C0         	movff	_nout+1,?_vfprintf+1
  2092  000AD2  0012               	return		;funcret
  2093  000AD4                     __end_of_vfprintf:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _vfpfcnvrt *****************
  2097 ;; Defined at:
  2098 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  fp              2   50[COMRAM] PTR struct _IO_FILE
  2101 ;;		 -> NULL(0), 
  2102 ;;  fmt             2   52[COMRAM] PTR PTR unsigned char 
  2103 ;;		 -> vfprintf@cfmt(2), 
  2104 ;;  ap              2   54[COMRAM] PTR PTR void 
  2105 ;;		 -> printf@ap(2), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  llu             8    0        unsigned long long 
  2108 ;;  ll              8    0        long long 
  2109 ;;  f               4    0        long long 
  2110 ;;  vp              3    0        PTR void 
  2111 ;;  ct              3    0        unsigned char [3]
  2112 ;;  cp              3    0        PTR unsigned char 
  2113 ;;  i               2    0        int 
  2114 ;;  done            2    0        int 
  2115 ;;  c               1   58[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2   50[COMRAM] int 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;Total ram usage:        9 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:   10
  2132 ;; This function calls:
  2133 ;;		_ctoa
  2134 ;;		_fputc
  2135 ;; This function is called by:
  2136 ;;		_vfprintf
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text3
  2141  000414                     __ptext3:
  2142                           	callstack 0
  2143  000414                     _vfpfcnvrt:
  2144                           	callstack 18
  2145  000414                     
  2146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2147  000414  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  000418  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  00041C  CFDE FFF6          	movff	postinc2,tblptrl
  2150  000420  CFDD FFF7          	movff	postdec2,tblptrh
  2151  000424                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2152  000424  6AF8               	clrf	tblptru,c
  2153  000426                     	endif
  2154  000426                     	if	0	;tblptru may be non-zero
  2155  000426                     	endif
  2156  000426  0008               	tblrd		*
  2157  000428  50F5               	movf	tablat,w,c
  2158  00042A  0A25               	xorlw	37
  2159  00042C  A4D8               	btfss	status,2,c
  2160  00042E  EF1B  F002         	goto	u1051
  2161  000432  EF1D  F002         	goto	u1050
  2162  000436                     u1051:
  2163  000436  EFA0  F002         	goto	l2329
  2164  00043A                     u1050:
  2165  00043A                     
  2166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2167  00043A  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2168  00043E  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2169  000442  2ADE               	incf	postinc2,f,c
  2170  000444  0E00               	movlw	0
  2171  000446  22DD               	addwfc	postdec2,f,c
  2172  000448                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2174  000448  0E00               	movlw	0
  2175  00044A  6E3F               	movwf	(_width+1)^0,c
  2176  00044C  0E00               	movlw	0
  2177  00044E  6E3E               	movwf	_width^0,c
  2178  000450  C03E  F040         	movff	_width,_flags
  2179  000454  C03F  F041         	movff	_width+1,_flags+1
  2180  000458                     
  2181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2182  000458  0100               	movlb	0	; () banked
  2183  00045A  6994               	setf	_prec& (0+255),b
  2184  00045C  6995               	setf	(_prec+1)& (0+255),b
  2185  00045E                     
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2188  00045E  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  000462  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  000466  CFDE FFF6          	movff	postinc2,tblptrl
  2191  00046A  CFDD FFF7          	movff	postdec2,tblptrh
  2192  00046E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2193  00046E  6AF8               	clrf	tblptru,c
  2194  000470                     	endif
  2195  000470                     	if	0	;tblptru may be non-zero
  2196  000470                     	endif
  2197  000470  0008               	tblrd		*
  2198  000472  50F5               	movf	tablat,w,c
  2199  000474  0A63               	xorlw	99
  2200  000476  A4D8               	btfss	status,2,c
  2201  000478  EF40  F002         	goto	u1061
  2202  00047C  EF42  F002         	goto	u1060
  2203  000480                     u1061:
  2204  000480  EF69  F002         	goto	l2313
  2205  000484                     u1060:
  2206  000484                     
  2207                           ; BSR set to: 0
  2208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2209  000484  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210  000488  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211  00048C  2ADE               	incf	postinc2,f,c
  2212  00048E  0E00               	movlw	0
  2213  000490  22DD               	addwfc	postdec2,f,c
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2216  000492  C037  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2217  000496  C038  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2218  00049A  CFDF F039          	movff	indf2,??_vfpfcnvrt
  2219  00049E  0E02               	movlw	2
  2220  0004A0  26DE               	addwf	postinc2,f,c
  2221  0004A2  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  2222  0004A6  0E00               	movlw	0
  2223  0004A8  22DD               	addwfc	postdec2,f,c
  2224  0004AA  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2225  0004AE  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2226  0004B2  50DF               	movf	indf2,w,c
  2227  0004B4  6E3B               	movwf	vfpfcnvrt@c^0,c
  2228  0004B6                     
  2229                           ; BSR set to: 0
  2230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2231  0004B6  C033  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  2232  0004BA  C034  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2233  0004BE  C03B  F030         	movff	vfpfcnvrt@c,ctoa@c
  2234  0004C2  EC6A  F005         	call	_ctoa	;wreg free
  2235  0004C6  C02E  F033         	movff	?_ctoa,?_vfpfcnvrt
  2236  0004CA  C02F  F034         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2237  0004CE  EFBC  F002         	goto	l1120
  2238  0004D2                     l2313:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2242  0004D2  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2243  0004D6  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2244  0004DA  CFDE FFF6          	movff	postinc2,tblptrl
  2245  0004DE  CFDD FFF7          	movff	postdec2,tblptrh
  2246  0004E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2247  0004E2  6AF8               	clrf	tblptru,c
  2248  0004E4                     	endif
  2249  0004E4                     	if	0	;tblptru may be non-zero
  2250  0004E4                     	endif
  2251  0004E4  0008               	tblrd		*
  2252  0004E6  50F5               	movf	tablat,w,c
  2253  0004E8  0A25               	xorlw	37
  2254  0004EA  A4D8               	btfss	status,2,c
  2255  0004EC  EF7A  F002         	goto	u1071
  2256  0004F0  EF7C  F002         	goto	u1070
  2257  0004F4                     u1071:
  2258  0004F4  EF93  F002         	goto	l2323
  2259  0004F8                     u1070:
  2260  0004F8                     
  2261                           ; BSR set to: 0
  2262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2263  0004F8  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2264  0004FC  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2265  000500  2ADE               	incf	postinc2,f,c
  2266  000502  0E00               	movlw	0
  2267  000504  22DD               	addwfc	postdec2,f,c
  2268  000506                     
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2271  000506  0E00               	movlw	0
  2272  000508  6E14               	movwf	(fputc@c+1)^0,c
  2273  00050A  0E25               	movlw	37
  2274  00050C  6E13               	movwf	fputc@c^0,c
  2275  00050E  C033  F015         	movff	vfpfcnvrt@fp,fputc@fp
  2276  000512  C034  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2277  000516  ECAE  F004         	call	_fputc	;wreg free
  2278  00051A                     l2319:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2281  00051A  0E00               	movlw	0
  2282  00051C  6E34               	movwf	(?_vfpfcnvrt+1)^0,c
  2283  00051E  0E01               	movlw	1
  2284  000520  6E33               	movwf	?_vfpfcnvrt^0,c
  2285  000522  EFBC  F002         	goto	l1120
  2286  000526                     l2323:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2290  000526  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2291  00052A  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2292  00052E  2ADE               	incf	postinc2,f,c
  2293  000530  0E00               	movlw	0
  2294  000532  22DD               	addwfc	postdec2,f,c
  2295  000534                     
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2298  000534  0E00               	movlw	0
  2299  000536  6E34               	movwf	(?_vfpfcnvrt+1)^0,c
  2300  000538  0E00               	movlw	0
  2301  00053A  6E33               	movwf	?_vfpfcnvrt^0,c
  2302  00053C  EFBC  F002         	goto	l1120
  2303  000540                     l2329:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2306  000540  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  000544  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  000548  CFDE FFF6          	movff	postinc2,tblptrl
  2309  00054C  CFDD FFF7          	movff	postdec2,tblptrh
  2310  000550                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2311  000550  6AF8               	clrf	tblptru,c
  2312  000552                     	endif
  2313  000552                     	if	0	;tblptru may be non-zero
  2314  000552                     	endif
  2315  000552  0008               	tblrd		*
  2316  000554  50F5               	movf	tablat,w,c
  2317  000556  6E13               	movwf	fputc@c^0,c
  2318  000558  6A14               	clrf	(fputc@c+1)^0,c
  2319  00055A  C033  F015         	movff	vfpfcnvrt@fp,fputc@fp
  2320  00055E  C034  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2321  000562  ECAE  F004         	call	_fputc	;wreg free
  2322  000566                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2324  000566  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2325  00056A  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2326  00056E  2ADE               	incf	postinc2,f,c
  2327  000570  0E00               	movlw	0
  2328  000572  22DD               	addwfc	postdec2,f,c
  2329  000574  EF8D  F002         	goto	l2319
  2330  000578                     l1120:
  2331  000578  0012               	return		;funcret
  2332  00057A                     __end_of_vfpfcnvrt:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _ctoa *****************
  2336 ;; Defined at:
  2337 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2340 ;;		 -> NULL(0), 
  2341 ;;  c               1   47[COMRAM] unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  w               2   48[COMRAM] int 
  2344 ;;  l               2    0        int 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   45[COMRAM] int 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        5 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    9
  2361 ;; This function calls:
  2362 ;;		_pad
  2363 ;; This function is called by:
  2364 ;;		_vfpfcnvrt
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text4
  2369  000AD4                     __ptext4:
  2370                           	callstack 0
  2371  000AD4                     _ctoa:
  2372                           	callstack 18
  2373  000AD4                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  2375  000AD4  503E               	movf	_width^0,w,c
  2376  000AD6  103F               	iorwf	(_width+1)^0,w,c
  2377  000AD8  A4D8               	btfss	status,2,c
  2378  000ADA  EF71  F005         	goto	u1041
  2379  000ADE  EF73  F005         	goto	u1040
  2380  000AE2                     u1041:
  2381  000AE2  EF79  F005         	goto	l2287
  2382  000AE6                     u1040:
  2383  000AE6  C03E  F031         	movff	_width,ctoa@w
  2384  000AEA  C03F  F032         	movff	_width+1,ctoa@w+1
  2385  000AEE  EF7F  F005         	goto	l2289
  2386  000AF2                     l2287:
  2387  000AF2  0EFF               	movlw	255
  2388  000AF4  243E               	addwf	_width^0,w,c
  2389  000AF6  6E31               	movwf	ctoa@w^0,c
  2390  000AF8  0EFF               	movlw	255
  2391  000AFA  203F               	addwfc	(_width+1)^0,w,c
  2392  000AFC  6E32               	movwf	(ctoa@w+1)^0,c
  2393  000AFE                     l2289:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  2396  000AFE  C030  F09F         	movff	ctoa@c,_dbuf
  2397  000B02                     
  2398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  2399  000B02  0E00               	movlw	0
  2400  000B04  0100               	movlb	0	; () banked
  2401  000B06  6FA0               	movwf	(_dbuf+1)& (0+255),b
  2402  000B08                     
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  2405  000B08  C02E  F023         	movff	ctoa@fp,pad@fp
  2406  000B0C  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  2407  000B10  0E9F               	movlw	low _dbuf
  2408  000B12  6E25               	movwf	pad@buf^0,c
  2409  000B14  0E00               	movlw	high _dbuf
  2410  000B16  6E26               	movwf	(pad@buf+1)^0,c
  2411  000B18  C031  F027         	movff	ctoa@w,pad@p
  2412  000B1C  C032  F028         	movff	ctoa@w+1,pad@p+1
  2413  000B20  ECA5  F003         	call	_pad	;wreg free
  2414  000B24  C023  F02E         	movff	?_pad,?_ctoa
  2415  000B28  C024  F02F         	movff	?_pad+1,?_ctoa+1
  2416  000B2C  0012               	return		;funcret
  2417  000B2E                     __end_of_ctoa:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _pad *****************
  2421 ;; Defined at:
  2422 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  2425 ;;		 -> NULL(0), 
  2426 ;;  buf             2   36[COMRAM] PTR unsigned char 
  2427 ;;		 -> dbuf(32), 
  2428 ;;  p               2   38[COMRAM] int 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  w               2   43[COMRAM] int 
  2431 ;;  i               2   41[COMRAM] int 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  2   34[COMRAM] int 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2441 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;Total ram usage:       11 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    8
  2448 ;; This function calls:
  2449 ;;		_fputc
  2450 ;;		_fputs
  2451 ;;		_strlen
  2452 ;; This function is called by:
  2453 ;;		_ctoa
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text5
  2458  00074A                     __ptext5:
  2459                           	callstack 0
  2460  00074A                     _pad:
  2461                           	callstack 18
  2462  00074A                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2464  00074A  A040               	btfss	_flags^0,0,c
  2465  00074C  EFAA  F003         	goto	u1001
  2466  000750  EFAC  F003         	goto	u1000
  2467  000754                     u1001:
  2468  000754  EFB6  F003         	goto	l2265
  2469  000758                     u1000:
  2470  000758                     
  2471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2472  000758  C025  F01C         	movff	pad@buf,fputs@s
  2473  00075C  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2474  000760  C023  F01E         	movff	pad@fp,fputs@fp
  2475  000764  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2476  000768  EC97  F005         	call	_fputs	;wreg free
  2477  00076C                     l2265:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2480  00076C  BE28               	btfsc	(pad@p+1)^0,7,c
  2481  00076E  EFBB  F003         	goto	u1011
  2482  000772  EFBD  F003         	goto	u1010
  2483  000776                     u1011:
  2484  000776  EFC3  F003         	goto	l2269
  2485  00077A                     u1010:
  2486  00077A  C027  F02C         	movff	pad@p,pad@w
  2487  00077E  C028  F02D         	movff	pad@p+1,pad@w+1
  2488  000782  EFC7  F003         	goto	l1103
  2489  000786                     l2269:
  2490  000786  0E00               	movlw	0
  2491  000788  6E2D               	movwf	(pad@w+1)^0,c
  2492  00078A  0E00               	movlw	0
  2493  00078C  6E2C               	movwf	pad@w^0,c
  2494  00078E                     l1103:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2497  00078E  0E00               	movlw	0
  2498  000790  6E2B               	movwf	(pad@i+1)^0,c
  2499  000792  0E00               	movlw	0
  2500  000794  6E2A               	movwf	pad@i^0,c
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2503  000796  EFD9  F003         	goto	l2275
  2504  00079A                     l2271:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2507  00079A  0E00               	movlw	0
  2508  00079C  6E14               	movwf	(fputc@c+1)^0,c
  2509  00079E  0E20               	movlw	32
  2510  0007A0  6E13               	movwf	fputc@c^0,c
  2511  0007A2  C023  F015         	movff	pad@fp,fputc@fp
  2512  0007A6  C024  F016         	movff	pad@fp+1,fputc@fp+1
  2513  0007AA  ECAE  F004         	call	_fputc	;wreg free
  2514  0007AE                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2516  0007AE  4A2A               	infsnz	pad@i^0,f,c
  2517  0007B0  2A2B               	incf	(pad@i+1)^0,f,c
  2518  0007B2                     l2275:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2521  0007B2  502C               	movf	pad@w^0,w,c
  2522  0007B4  5C2A               	subwf	pad@i^0,w,c
  2523  0007B6  502B               	movf	(pad@i+1)^0,w,c
  2524  0007B8  0A80               	xorlw	128
  2525  0007BA  6E29               	movwf	??_pad^0,c
  2526  0007BC  502D               	movf	(pad@w+1)^0,w,c
  2527  0007BE  0A80               	xorlw	128
  2528  0007C0  5829               	subwfb	??_pad^0,w,c
  2529  0007C2  A0D8               	btfss	status,0,c
  2530  0007C4  EFE6  F003         	goto	u1021
  2531  0007C8  EFE8  F003         	goto	u1020
  2532  0007CC                     u1021:
  2533  0007CC  EFCD  F003         	goto	l2271
  2534  0007D0                     u1020:
  2535  0007D0                     
  2536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2537  0007D0  B040               	btfsc	_flags^0,0,c
  2538  0007D2  EFED  F003         	goto	u1031
  2539  0007D6  EFEF  F003         	goto	u1030
  2540  0007DA                     u1031:
  2541  0007DA  EFF9  F003         	goto	l2279
  2542  0007DE                     u1030:
  2543  0007DE                     
  2544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2545  0007DE  C025  F01C         	movff	pad@buf,fputs@s
  2546  0007E2  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2547  0007E6  C023  F01E         	movff	pad@fp,fputs@fp
  2548  0007EA  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2549  0007EE  EC97  F005         	call	_fputs	;wreg free
  2550  0007F2                     l2279:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2553  0007F2  C025  F011         	movff	pad@buf,strlen@s
  2554  0007F6  C026  F012         	movff	pad@buf+1,strlen@s+1
  2555  0007FA  ECF5  F005         	call	_strlen	;wreg free
  2556  0007FE  502C               	movf	pad@w^0,w,c
  2557  000800  2411               	addwf	?_strlen^0,w,c
  2558  000802  6E23               	movwf	?_pad^0,c
  2559  000804  502D               	movf	(pad@w+1)^0,w,c
  2560  000806  2012               	addwfc	(?_strlen+1)^0,w,c
  2561  000808  6E24               	movwf	(?_pad+1)^0,c
  2562  00080A  0012               	return		;funcret
  2563  00080C                     __end_of_pad:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _strlen *****************
  2567 ;; Defined at:
  2568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2571 ;;		 -> dbuf(32), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2574 ;;		 -> dbuf(32), 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2   16[COMRAM] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        4 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    4
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_pad
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text6
  2599  000BEA                     __ptext6:
  2600                           	callstack 0
  2601  000BEA                     _strlen:
  2602                           	callstack 21
  2603  000BEA  C011  F013         	movff	strlen@s,strlen@a
  2604  000BEE  C012  F014         	movff	strlen@s+1,strlen@a+1
  2605  000BF2  EFFD  F005         	goto	l2255
  2606  000BF6                     l2253:
  2607  000BF6  4A11               	infsnz	strlen@s^0,f,c
  2608  000BF8  2A12               	incf	(strlen@s+1)^0,f,c
  2609  000BFA                     l2255:
  2610  000BFA  C011  FFD9         	movff	strlen@s,fsr2l
  2611  000BFE  C012  FFDA         	movff	strlen@s+1,fsr2h
  2612  000C02  50DF               	movf	indf2,w,c
  2613  000C04  A4D8               	btfss	status,2,c
  2614  000C06  EF07  F006         	goto	u991
  2615  000C0A  EF09  F006         	goto	u990
  2616  000C0E                     u991:
  2617  000C0E  EFFB  F005         	goto	l2253
  2618  000C12                     u990:
  2619  000C12  5013               	movf	strlen@a^0,w,c
  2620  000C14  5C11               	subwf	strlen@s^0,w,c
  2621  000C16  6E11               	movwf	?_strlen^0,c
  2622  000C18  5014               	movf	(strlen@a+1)^0,w,c
  2623  000C1A  5812               	subwfb	(strlen@s+1)^0,w,c
  2624  000C1C  6E12               	movwf	(?_strlen+1)^0,c
  2625  000C1E  0012               	return		;funcret
  2626  000C20                     __end_of_strlen:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _fputs *****************
  2630 ;; Defined at:
  2631 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  s               2   27[COMRAM] PTR const unsigned char 
  2634 ;;		 -> dbuf(32), 
  2635 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2636 ;;		 -> NULL(0), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  i               2   32[COMRAM] int 
  2639 ;;  c               1   31[COMRAM] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2   27[COMRAM] int 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        7 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    7
  2656 ;; This function calls:
  2657 ;;		_fputc
  2658 ;; This function is called by:
  2659 ;;		_pad
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text7
  2664  000B2E                     __ptext7:
  2665                           	callstack 0
  2666  000B2E                     _fputs:
  2667                           	callstack 18
  2668  000B2E  0E00               	movlw	0
  2669  000B30  6E22               	movwf	(fputs@i+1)^0,c
  2670  000B32  0E00               	movlw	0
  2671  000B34  6E21               	movwf	fputs@i^0,c
  2672  000B36  EFA8  F005         	goto	l2249
  2673  000B3A                     l2245:
  2674  000B3A  C020  F013         	movff	fputs@c,fputc@c
  2675  000B3E  6A14               	clrf	(fputc@c+1)^0,c
  2676  000B40  C01E  F015         	movff	fputs@fp,fputc@fp
  2677  000B44  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  2678  000B48  ECAE  F004         	call	_fputc	;wreg free
  2679  000B4C  4A21               	infsnz	fputs@i^0,f,c
  2680  000B4E  2A22               	incf	(fputs@i+1)^0,f,c
  2681  000B50                     l2249:
  2682  000B50  5021               	movf	fputs@i^0,w,c
  2683  000B52  241C               	addwf	fputs@s^0,w,c
  2684  000B54  6ED9               	movwf	fsr2l,c
  2685  000B56  5022               	movf	(fputs@i+1)^0,w,c
  2686  000B58  201D               	addwfc	(fputs@s+1)^0,w,c
  2687  000B5A  6EDA               	movwf	fsr2h,c
  2688  000B5C  50DF               	movf	indf2,w,c
  2689  000B5E  6E20               	movwf	fputs@c^0,c
  2690  000B60  5020               	movf	fputs@c^0,w,c
  2691  000B62  A4D8               	btfss	status,2,c
  2692  000B64  EFB6  F005         	goto	u981
  2693  000B68  EFB8  F005         	goto	u980
  2694  000B6C                     u981:
  2695  000B6C  EF9D  F005         	goto	l2245
  2696  000B70                     u980:
  2697  000B70  0012               	return		;funcret
  2698  000B72                     __end_of_fputs:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _fputc *****************
  2702 ;; Defined at:
  2703 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  c               2   18[COMRAM] int 
  2706 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2707 ;;		 -> NULL(0), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2   18[COMRAM] int 
  2712 ;; Registers used:
  2713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;Total ram usage:        9 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    6
  2726 ;; This function calls:
  2727 ;;		_putch
  2728 ;; This function is called by:
  2729 ;;		_pad
  2730 ;;		_vfpfcnvrt
  2731 ;;		_fputs
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text8
  2736  00095C                     __ptext8:
  2737                           	callstack 0
  2738  00095C                     _fputc:
  2739                           	callstack 21
  2740  00095C  5015               	movf	fputc@fp^0,w,c
  2741  00095E  1016               	iorwf	(fputc@fp+1)^0,w,c
  2742  000960  B4D8               	btfsc	status,2,c
  2743  000962  EFB5  F004         	goto	u941
  2744  000966  EFB7  F004         	goto	u940
  2745  00096A                     u941:
  2746  00096A  EFC0  F004         	goto	l2233
  2747  00096E                     u940:
  2748  00096E  5015               	movf	fputc@fp^0,w,c
  2749  000970  1016               	iorwf	(fputc@fp+1)^0,w,c
  2750  000972  A4D8               	btfss	status,2,c
  2751  000974  EFBE  F004         	goto	u951
  2752  000978  EFC0  F004         	goto	u950
  2753  00097C                     u951:
  2754  00097C  EFC5  F004         	goto	l2235
  2755  000980                     u950:
  2756  000980                     l2233:
  2757  000980  5013               	movf	fputc@c^0,w,c
  2758  000982  EC05  F007         	call	_putch
  2759  000986  EFF8  F004         	goto	l1139
  2760  00098A                     l2235:
  2761  00098A  EE20 F004          	lfsr	2,4
  2762  00098E  5015               	movf	fputc@fp^0,w,c
  2763  000990  26D9               	addwf	fsr2l,f,c
  2764  000992  5016               	movf	(fputc@fp+1)^0,w,c
  2765  000994  22DA               	addwfc	fsr2h,f,c
  2766  000996  50DE               	movf	postinc2,w,c
  2767  000998  10DE               	iorwf	postinc2,w,c
  2768  00099A  B4D8               	btfsc	status,2,c
  2769  00099C  EFD2  F004         	goto	u961
  2770  0009A0  EFD4  F004         	goto	u960
  2771  0009A4                     u961:
  2772  0009A4  EFEF  F004         	goto	l2239
  2773  0009A8                     u960:
  2774  0009A8  EE20 F004          	lfsr	2,4
  2775  0009AC  5015               	movf	fputc@fp^0,w,c
  2776  0009AE  26D9               	addwf	fsr2l,f,c
  2777  0009B0  5016               	movf	(fputc@fp+1)^0,w,c
  2778  0009B2  22DA               	addwfc	fsr2h,f,c
  2779  0009B4  EE10 F002          	lfsr	1,2
  2780  0009B8  5015               	movf	fputc@fp^0,w,c
  2781  0009BA  26E1               	addwf	fsr1l,f,c
  2782  0009BC  5016               	movf	(fputc@fp+1)^0,w,c
  2783  0009BE  22E2               	addwfc	fsr1h,f,c
  2784  0009C0  50DE               	movf	postinc2,w,c
  2785  0009C2  5CE6               	subwf	postinc1,w,c
  2786  0009C4  50E6               	movf	postinc1,w,c
  2787  0009C6  0A80               	xorlw	128
  2788  0009C8  6E1B               	movwf	(??_fputc+4)^0,c
  2789  0009CA  50DE               	movf	postinc2,w,c
  2790  0009CC  0A80               	xorlw	128
  2791  0009CE  581B               	subwfb	(??_fputc+4)^0,w,c
  2792  0009D0  B0D8               	btfsc	status,0,c
  2793  0009D2  EFED  F004         	goto	u971
  2794  0009D6  EFEF  F004         	goto	u970
  2795  0009DA                     u971:
  2796  0009DA  EFF8  F004         	goto	l1139
  2797  0009DE                     u970:
  2798  0009DE                     l2239:
  2799  0009DE  EE20 F002          	lfsr	2,2
  2800  0009E2  5015               	movf	fputc@fp^0,w,c
  2801  0009E4  26D9               	addwf	fsr2l,f,c
  2802  0009E6  5016               	movf	(fputc@fp+1)^0,w,c
  2803  0009E8  22DA               	addwfc	fsr2h,f,c
  2804  0009EA  2ADE               	incf	postinc2,f,c
  2805  0009EC  0E00               	movlw	0
  2806  0009EE  22DD               	addwfc	postdec2,f,c
  2807  0009F0                     l1139:
  2808  0009F0  0012               	return		;funcret
  2809  0009F2                     __end_of_fputc:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _putch *****************
  2813 ;; Defined at:
  2814 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  txData          1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  txData          1   17[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    5
  2835 ;; This function calls:
  2836 ;;		_EUSART1_Write
  2837 ;; This function is called by:
  2838 ;;		_fputc
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text9
  2843  000E0A                     __ptext9:
  2844                           	callstack 0
  2845  000E0A                     _putch:
  2846                           	callstack 21
  2847                           
  2848                           ;incstack = 0
  2849                           ;putch@txData stored from wreg
  2850  000E0A  6E12               	movwf	putch@txData^0,c
  2851  000E0C                     
  2852                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  2853  000E0C  5012               	movf	putch@txData^0,w,c
  2854  000E0E  ECF0  F006         	call	_EUSART1_Write
  2855  000E12  0012               	return		;funcret
  2856  000E14                     __end_of_putch:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _EUSART1_Write *****************
  2860 ;; Defined at:
  2861 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  txData          1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  txData          1   16[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        1 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_putch
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text10
  2890  000DE0                     __ptext10:
  2891                           	callstack 0
  2892  000DE0                     _EUSART1_Write:
  2893                           	callstack 21
  2894                           
  2895                           ;incstack = 0
  2896                           ;EUSART1_Write@txData stored from wreg
  2897  000DE0  6E11               	movwf	EUSART1_Write@txData^0,c
  2898  000DE2                     l260:
  2899                           
  2900                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  2901  000DE2  A89E               	btfss	158,4,c	;volatile
  2902  000DE4  EFF6  F006         	goto	u931
  2903  000DE8  EFF8  F006         	goto	u930
  2904  000DEC                     u931:
  2905  000DEC  EFF1  F006         	goto	l260
  2906  000DF0                     u930:
  2907  000DF0                     
  2908                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  2909  000DF0  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2910  000DF4  0012               	return		;funcret
  2911  000DF6                     __end_of_EUSART1_Write:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _TMR0_ReadTimer *****************
  2915 ;; Defined at:
  2916 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  readVal         2   20[COMRAM] unsigned short 
  2921 ;;  readValHigh     1   23[COMRAM] unsigned char 
  2922 ;;  readValLow      1   22[COMRAM] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2   16[COMRAM] unsigned short 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;Total ram usage:        8 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    4
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text11
  2947  000D8C                     __ptext11:
  2948                           	callstack 0
  2949  000D8C                     _TMR0_ReadTimer:
  2950                           	callstack 26
  2951  000D8C                     
  2952                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  2953  000D8C  CFD6 F017          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  2954                           
  2955                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  2956  000D90  CFD7 F018          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  2957  000D94                     
  2958                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  2959  000D94  5018               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  2960  000D96  6E13               	movwf	??_TMR0_ReadTimer^0,c
  2961  000D98  5017               	movf	TMR0_ReadTimer@readValLow^0,w,c
  2962  000D9A  6E15               	movwf	TMR0_ReadTimer@readVal^0,c
  2963  000D9C  C013  F016         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  2964  000DA0                     
  2965                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  2966  000DA0  C015  F011         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  2967  000DA4  C016  F012         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  2968  000DA8  0012               	return		;funcret
  2969  000DAA                     __end_of_TMR0_ReadTimer:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _SYSTEM_Initialize *****************
  2973 ;; Defined at:
  2974 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    6
  2995 ;; This function calls:
  2996 ;;		_EUSART1_Initialize
  2997 ;;		_INTERRUPT_Initialize
  2998 ;;		_OSCILLATOR_Initialize
  2999 ;;		_PIN_MANAGER_Initialize
  3000 ;;		_TMR0_Initialize
  3001 ;;		_TMR1_Initialize
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text12
  3008  000DC6                     __ptext12:
  3009                           	callstack 0
  3010  000DC6                     _SYSTEM_Initialize:
  3011                           	callstack 24
  3012  000DC6                     
  3013                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3014  000DC6  EC28  F007         	call	_INTERRUPT_Initialize	;wreg free
  3015  000DCA                     
  3016                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3017  000DCA  EC5F  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3018  000DCE                     
  3019                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3020  000DCE  ECD5  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3021  000DD2                     
  3022                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  3023  000DD2  EC75  F006         	call	_TMR1_Initialize	;wreg free
  3024  000DD6                     
  3025                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3026  000DD6  EC45  F006         	call	_TMR0_Initialize	;wreg free
  3027  000DDA                     
  3028                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3029  000DDA  ECB9  F005         	call	_EUSART1_Initialize	;wreg free
  3030  000DDE  0012               	return		;funcret
  3031  000DE0                     __end_of_SYSTEM_Initialize:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _TMR1_Initialize *****************
  3035 ;; Defined at:
  3036 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    5
  3057 ;; This function calls:
  3058 ;;		_TMR1_SetInterruptHandler
  3059 ;; This function is called by:
  3060 ;;		_SYSTEM_Initialize
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text13
  3065  000CEA                     __ptext13:
  3066                           	callstack 0
  3067  000CEA                     _TMR1_Initialize:
  3068                           	callstack 24
  3069  000CEA                     
  3070                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3071  000CEA  0E00               	movlw	0
  3072  000CEC  6ECC               	movwf	204,c	;volatile
  3073                           
  3074                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  3075  000CEE  0E00               	movlw	0
  3076  000CF0  6ECF               	movwf	207,c	;volatile
  3077                           
  3078                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  3079  000CF2  0E00               	movlw	0
  3080  000CF4  6ECE               	movwf	206,c	;volatile
  3081  000CF6                     
  3082                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  3083  000CF6  CFCE F044          	movff	4046,_timer1ReloadVal	;volatile
  3084  000CFA  CFCF F045          	movff	4047,_timer1ReloadVal+1	;volatile
  3085  000CFE                     
  3086                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  3087  000CFE  909E               	bcf	158,0,c	;volatile
  3088  000D00                     
  3089                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3090  000D00  809D               	bsf	157,0,c	;volatile
  3091  000D02                     
  3092                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3093  000D02  0E54               	movlw	low _TMR1_DefaultInterruptHandler
  3094  000D04  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  3095  000D06  0E0E               	movlw	high _TMR1_DefaultInterruptHandler
  3096  000D08  6E12               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  3097  000D0A  EC0A  F007         	call	_TMR1_SetInterruptHandler	;wreg free
  3098  000D0E                     
  3099                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  3100  000D0E  0E01               	movlw	1
  3101  000D10  6ECD               	movwf	205,c	;volatile
  3102  000D12  0012               	return		;funcret
  3103  000D14                     __end_of_TMR1_Initialize:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _TMR1_SetInterruptHandler *****************
  3107 ;; Defined at:
  3108 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  3111 ;;		 -> myTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    4
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_TMR1_Initialize
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text14
  3139  000E14                     __ptext14:
  3140                           	callstack 0
  3141  000E14                     _TMR1_SetInterruptHandler:
  3142                           	callstack 26
  3143  000E14                     
  3144                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  3145  000E14  C011  F042         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3146  000E18  C012  F043         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3147  000E1C  0012               	return		;funcret
  3148  000E1E                     __end_of_TMR1_SetInterruptHandler:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _TMR0_Initialize *****************
  3152 ;; Defined at:
  3153 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        2 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    5
  3174 ;; This function calls:
  3175 ;;		_TMR0_SetInterruptHandler
  3176 ;; This function is called by:
  3177 ;;		_SYSTEM_Initialize
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text15
  3182  000C8A                     __ptext15:
  3183                           	callstack 0
  3184  000C8A                     _TMR0_Initialize:
  3185                           	callstack 24
  3186  000C8A                     
  3187                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3188  000C8A  9CD5               	bcf	213,6,c	;volatile
  3189                           
  3190                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  3191  000C8C  68D7               	setf	215,c	;volatile
  3192  000C8E                     
  3193                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x5F;
  3194  000C8E  0E5F               	movlw	95
  3195  000C90  6ED6               	movwf	214,c	;volatile
  3196  000C92                     
  3197                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3198  000C92  50D6               	movf	214,w,c	;volatile
  3199  000C94  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
  3200  000C98  6A14               	clrf	(??_TMR0_Initialize+1)^0,c
  3201  000C9A  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3202  000C9E  6A13               	clrf	??_TMR0_Initialize^0,c
  3203  000CA0  1013               	iorwf	??_TMR0_Initialize^0,w,c
  3204  000CA2  6E46               	movwf	_timer0ReloadVal^0,c	;volatile
  3205  000CA4  5014               	movf	(??_TMR0_Initialize+1)^0,w,c
  3206  000CA6  6E47               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3207  000CA8                     
  3208                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3209  000CA8  94F2               	bcf	242,2,c	;volatile
  3210  000CAA                     
  3211                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3212  000CAA  8AF2               	bsf	242,5,c	;volatile
  3213  000CAC                     
  3214                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3215  000CAC  0E56               	movlw	low _TMR0_DefaultInterruptHandler
  3216  000CAE  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3217  000CB0  0E0E               	movlw	high _TMR0_DefaultInterruptHandler
  3218  000CB2  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3219  000CB4  EC0F  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  3220  000CB8                     
  3221                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
  3222  000CB8  0E97               	movlw	151
  3223  000CBA  6ED5               	movwf	213,c	;volatile
  3224  000CBC  0012               	return		;funcret
  3225  000CBE                     __end_of_TMR0_Initialize:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _TMR0_SetInterruptHandler *****************
  3229 ;; Defined at:
  3230 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  3233 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    4
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_TMR0_Initialize
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text16
  3261  000E1E                     __ptext16:
  3262                           	callstack 0
  3263  000E1E                     _TMR0_SetInterruptHandler:
  3264                           	callstack 26
  3265  000E1E                     
  3266                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3267  000E1E  C011  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3268  000E22  C012  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3269  000E26  0012               	return		;funcret
  3270  000E28                     __end_of_TMR0_SetInterruptHandler:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _PIN_MANAGER_Initialize *****************
  3274 ;; Defined at:
  3275 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    4
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_SYSTEM_Initialize
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text17
  3304  000CBE                     __ptext17:
  3305                           	callstack 0
  3306  000CBE                     _PIN_MANAGER_Initialize:
  3307                           	callstack 25
  3308  000CBE                     
  3309                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3310  000CBE  0E00               	movlw	0
  3311  000CC0  6E89               	movwf	137,c	;volatile
  3312                           
  3313                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3314  000CC2  0E00               	movlw	0
  3315  000CC4  6E8A               	movwf	138,c	;volatile
  3316                           
  3317                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3318  000CC6  0E00               	movlw	0
  3319  000CC8  6E8B               	movwf	139,c	;volatile
  3320  000CCA                     
  3321                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3322  000CCA  6892               	setf	146,c	;volatile
  3323                           
  3324                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  3325  000CCC  0EDF               	movlw	223
  3326  000CCE  6E93               	movwf	147,c	;volatile
  3327                           
  3328                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3329  000CD0  0EBF               	movlw	191
  3330  000CD2  6E94               	movwf	148,c	;volatile
  3331                           
  3332                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3333  000CD4  0E3C               	movlw	60
  3334  000CD6  010F               	movlb	15	; () banked
  3335  000CD8  6F3A               	movwf	58,b	;volatile
  3336                           
  3337                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  3338  000CDA  0E1F               	movlw	31
  3339  000CDC  6F39               	movwf	57,b	;volatile
  3340                           
  3341                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2B;
  3342  000CDE  0E2B               	movlw	43
  3343  000CE0  6F38               	movwf	56,b	;volatile
  3344                           
  3345                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3346  000CE2  0E00               	movlw	0
  3347  000CE4  6E61               	movwf	97,c	;volatile
  3348  000CE6                     
  3349                           ; BSR set to: 15
  3350                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3351  000CE6  8EF1               	bsf	241,7,c	;volatile
  3352  000CE8                     
  3353                           ; BSR set to: 15
  3354  000CE8  0012               	return		;funcret
  3355  000CEA                     __end_of_PIN_MANAGER_Initialize:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _OSCILLATOR_Initialize *****************
  3359 ;; Defined at:
  3360 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    4
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_SYSTEM_Initialize
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text18
  3389  000DAA                     __ptext18:
  3390                           	callstack 0
  3391  000DAA                     _OSCILLATOR_Initialize:
  3392                           	callstack 25
  3393  000DAA                     
  3394                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3395  000DAA  0E70               	movlw	112
  3396  000DAC  6ED3               	movwf	211,c	;volatile
  3397                           
  3398                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3399  000DAE  0E04               	movlw	4
  3400  000DB0  6ED2               	movwf	210,c	;volatile
  3401                           
  3402                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3403  000DB2  0E40               	movlw	64
  3404  000DB4  6E9B               	movwf	155,c	;volatile
  3405  000DB6                     l160:
  3406                           
  3407                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3408  000DB6  AED2               	btfss	4050,7,c	;volatile
  3409  000DB8  EFE0  F006         	goto	u641
  3410  000DBC  EFE2  F006         	goto	u640
  3411  000DC0                     u641:
  3412  000DC0  EFDB  F006         	goto	l160
  3413  000DC4                     u640:
  3414  000DC4  0012               	return		;funcret
  3415  000DC6                     __end_of_OSCILLATOR_Initialize:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _INTERRUPT_Initialize *****************
  3419 ;; Defined at:
  3420 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		None
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;Total ram usage:        0 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    4
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_SYSTEM_Initialize
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text19
  3449  000E50                     __ptext19:
  3450                           	callstack 0
  3451  000E50                     _INTERRUPT_Initialize:
  3452                           	callstack 25
  3453  000E50                     
  3454                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3455  000E50  9ED0               	bcf	208,7,c	;volatile
  3456  000E52  0012               	return		;funcret
  3457  000E54                     __end_of_INTERRUPT_Initialize:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _EUSART1_Initialize *****************
  3461 ;; Defined at:
  3462 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    5
  3483 ;; This function calls:
  3484 ;;		_EUSART1_SetErrorHandler
  3485 ;;		_EUSART1_SetFramingErrorHandler
  3486 ;;		_EUSART1_SetOverrunErrorHandler
  3487 ;; This function is called by:
  3488 ;;		_SYSTEM_Initialize
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text20
  3493  000B72                     __ptext20:
  3494                           	callstack 0
  3495  000B72                     _EUSART1_Initialize:
  3496                           	callstack 24
  3497  000B72                     
  3498                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3499  000B72  0E08               	movlw	8
  3500  000B74  6EB8               	movwf	184,c	;volatile
  3501                           
  3502                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3503  000B76  0E90               	movlw	144
  3504  000B78  6EAB               	movwf	171,c	;volatile
  3505                           
  3506                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3507  000B7A  0E24               	movlw	36
  3508  000B7C  6EAC               	movwf	172,c	;volatile
  3509                           
  3510                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3511  000B7E  0E82               	movlw	130
  3512  000B80  6EAF               	movwf	175,c	;volatile
  3513                           
  3514                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3515  000B82  0E06               	movlw	6
  3516  000B84  6EB0               	movwf	176,c	;volatile
  3517  000B86                     
  3518                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3519  000B86  0E00               	movlw	0
  3520  000B88  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3521  000B8A  0E00               	movlw	0
  3522  000B8C  6E12               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3523  000B8E  EC19  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3524  000B92                     
  3525                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3526  000B92  0E00               	movlw	0
  3527  000B94  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3528  000B96  0E00               	movlw	0
  3529  000B98  6E12               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3530  000B9A  EC14  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3531  000B9E                     
  3532                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3533  000B9E  0E00               	movlw	0
  3534  000BA0  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3535  000BA2  0E00               	movlw	0
  3536  000BA4  6E12               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3537  000BA6  EC1E  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3538  000BAA                     
  3539                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3540  000BAA  0E00               	movlw	0
  3541  000BAC  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  3542  000BAE  0012               	return		;funcret
  3543  000BB0                     __end_of_EUSART1_Initialize:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3547 ;; Defined at:
  3548 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3551 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:        2 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    4
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_EUSART1_Initialize
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text21
  3578  000E28                     __ptext21:
  3579                           	callstack 0
  3580  000E28                     _EUSART1_SetOverrunErrorHandler:
  3581                           	callstack 24
  3582  000E28                     
  3583                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3584  000E28  C011  F098         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3585  000E2C  C012  F099         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3586  000E30  0012               	return		;funcret
  3587  000E32                     __end_of_EUSART1_SetOverrunErrorHandler:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3591 ;; Defined at:
  3592 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3595 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        2 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    4
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_EUSART1_Initialize
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text22
  3622  000E32                     __ptext22:
  3623                           	callstack 0
  3624  000E32                     _EUSART1_SetFramingErrorHandler:
  3625                           	callstack 24
  3626  000E32                     
  3627                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3628  000E32  C011  F09A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3629  000E36  C012  F09B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3630  000E3A  0012               	return		;funcret
  3631  000E3C                     __end_of_EUSART1_SetFramingErrorHandler:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _EUSART1_SetErrorHandler *****************
  3635 ;; Defined at:
  3636 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3639 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    4
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_EUSART1_Initialize
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text23
  3666  000E3C                     __ptext23:
  3667                           	callstack 0
  3668  000E3C                     _EUSART1_SetErrorHandler:
  3669                           	callstack 24
  3670  000E3C                     
  3671                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3672  000E3C  C011  F096         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3673  000E40  C012  F097         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3674  000E44  0012               	return		;funcret
  3675  000E46                     __end_of_EUSART1_SetErrorHandler:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function _EUSART1_is_rx_ready *****************
  3679 ;; Defined at:
  3680 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      _Bool 
  3687 ;; Registers used:
  3688 ;;		wreg
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    4
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text24
  3709  000DF6                     __ptext24:
  3710                           	callstack 0
  3711  000DF6                     _EUSART1_is_rx_ready:
  3712                           	callstack 26
  3713  000DF6                     
  3714                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  3715  000DF6  BA9E               	btfsc	158,5,c	;volatile
  3716  000DF8  EF00  F007         	goto	u761
  3717  000DFC  EF03  F007         	goto	u760
  3718  000E00                     u761:
  3719  000E00  0E01               	movlw	1
  3720  000E02  EF04  F007         	goto	u766
  3721  000E06                     u760:
  3722  000E06  0E00               	movlw	0
  3723  000E08                     u766:
  3724  000E08  0012               	return		;funcret
  3725  000E0A                     __end_of_EUSART1_is_rx_ready:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _EUSART1_Read *****************
  3729 ;; Defined at:
  3730 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      unsigned char 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;;		_getch
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text25
  3760  000D3C                     __ptext25:
  3761                           	callstack 0
  3762  000D3C                     _EUSART1_Read:
  3763                           	callstack 26
  3764  000D3C                     l253:
  3765                           
  3766                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  3767  000D3C  AA9E               	btfss	158,5,c	;volatile
  3768  000D3E  EFA3  F006         	goto	u771
  3769  000D42  EFA5  F006         	goto	u770
  3770  000D46                     u771:
  3771  000D46  EF9E  F006         	goto	l253
  3772  000D4A                     u770:
  3773  000D4A                     
  3774                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3775  000D4A  0E00               	movlw	0
  3776  000D4C  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  3777  000D4E                     
  3778                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  3779  000D4E  A2AB               	btfss	171,1,c	;volatile
  3780  000D50  EFAC  F006         	goto	u781
  3781  000D54  EFAE  F006         	goto	u780
  3782  000D58                     u781:
  3783  000D58  EFB0  F006         	goto	l1993
  3784  000D5C                     u780:
  3785  000D5C                     
  3786                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  3787  000D5C  98AB               	bcf	171,4,c	;volatile
  3788                           
  3789                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  3790  000D5E  88AB               	bsf	171,4,c	;volatile
  3791  000D60                     l1993:
  3792                           
  3793                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  3794  000D60  50AE               	movf	174,w,c	;volatile
  3795  000D62  0012               	return		;funcret
  3796  000D64                     __end_of_EUSART1_Read:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _INTERRUPT_InterruptManager *****************
  3800 ;; Defined at:
  3801 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        6 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    3
  3822 ;; This function calls:
  3823 ;;		_TMR0_ISR
  3824 ;;		_TMR1_ISR
  3825 ;; This function is called by:
  3826 ;;		Interrupt level 2
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	intcode
  3831  000008                     __pintcode:
  3832                           	callstack 0
  3833  000008                     _INTERRUPT_InterruptManager:
  3834                           	callstack 18
  3835                           
  3836                           ;incstack = 0
  3837  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3838  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManager
  3839  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3840  000012  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3841  000016  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3842  00001A  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+4
  3843  00001E  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+5
  3844  000022                     
  3845                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  3846  000022  AAF2               	btfss	242,5,c	;volatile
  3847  000024  EF16  F000         	goto	i2u79_41
  3848  000028  EF18  F000         	goto	i2u79_40
  3849  00002C                     i2u79_41:
  3850  00002C  EF23  F000         	goto	i2l20
  3851  000030                     i2u79_40:
  3852  000030  A4F2               	btfss	242,2,c	;volatile
  3853  000032  EF1D  F000         	goto	i2u80_41
  3854  000036  EF1F  F000         	goto	i2u80_40
  3855  00003A                     i2u80_41:
  3856  00003A  EF23  F000         	goto	i2l20
  3857  00003E                     i2u80_40:
  3858  00003E                     
  3859                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  3860  00003E  EC10  F006         	call	_TMR0_ISR	;wreg free
  3861                           
  3862                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  3863  000042  EF3C  F000         	goto	i2l26
  3864  000046                     i2l20:
  3865  000046  ACF2               	btfss	242,6,c	;volatile
  3866  000048  EF28  F000         	goto	i2u81_41
  3867  00004C  EF2A  F000         	goto	i2u81_40
  3868  000050                     i2u81_41:
  3869  000050  EF3C  F000         	goto	i2l26
  3870  000054                     i2u81_40:
  3871  000054                     
  3872                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3873  000054  A09D               	btfss	157,0,c	;volatile
  3874  000056  EF2F  F000         	goto	i2u82_41
  3875  00005A  EF31  F000         	goto	i2u82_40
  3876  00005E                     i2u82_41:
  3877  00005E  EF3C  F000         	goto	i2l25
  3878  000062                     i2u82_40:
  3879  000062  A09E               	btfss	158,0,c	;volatile
  3880  000064  EF36  F000         	goto	i2u83_41
  3881  000068  EF38  F000         	goto	i2u83_40
  3882  00006C                     i2u83_41:
  3883  00006C  EF3C  F000         	goto	i2l25
  3884  000070                     i2u83_40:
  3885  000070                     
  3886                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  3887  000070  ECD8  F005         	call	_TMR1_ISR	;wreg free
  3888                           
  3889                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  3890  000074  EF3C  F000         	goto	i2l26
  3891  000078                     i2l25:
  3892  000078                     i2l26:
  3893  000078  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  3894  00007C  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  3895  000080  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3896  000084  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3897  000088  C00C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3898  00008C  C00B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3899  000090  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3900  000092  0011               	retfie		f
  3901  000094                     __end_of_INTERRUPT_InterruptManager:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _TMR1_ISR *****************
  3905 ;; Defined at:
  3906 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    2
  3927 ;; This function calls:
  3928 ;;		Absolute function
  3929 ;;		_TMR1_DefaultInterruptHandler
  3930 ;;		_TMR1_WriteTimer
  3931 ;;		_myTMR1ISR
  3932 ;; This function is called by:
  3933 ;;		_INTERRUPT_InterruptManager
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text27
  3938  000BB0                     __ptext27:
  3939                           	callstack 0
  3940  000BB0                     _TMR1_ISR:
  3941                           	callstack 18
  3942  000BB0                     
  3943                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3944  000BB0  909E               	bcf	158,0,c	;volatile
  3945  000BB2                     
  3946                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3947  000BB2  C044  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3948  000BB6  C045  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3949  000BBA  ECB2  F006         	call	_TMR1_WriteTimer	;wreg free
  3950  000BBE                     
  3951                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  3952  000BBE  5042               	movf	_TMR1_InterruptHandler^0,w,c
  3953  000BC0  1043               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3954  000BC2  B4D8               	btfsc	status,2,c
  3955  000BC4  EFE6  F005         	goto	i2u74_41
  3956  000BC8  EFE8  F005         	goto	i2u74_40
  3957  000BCC                     i2u74_41:
  3958  000BCC  EFF4  F005         	goto	i2l128
  3959  000BD0                     i2u74_40:
  3960  000BD0                     
  3961                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  3962  000BD0  D802               	call	i2u75_48
  3963  000BD2  EFF4  F005         	goto	i2u75_49
  3964  000BD6                     i2u75_48:
  3965  000BD6  0005               	push	
  3966  000BD8  6EFA               	movwf	pclath,c
  3967  000BDA  5042               	movf	_TMR1_InterruptHandler^0,w,c
  3968  000BDC  6EFD               	movwf	tosl,c
  3969  000BDE  5043               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3970  000BE0  6EFE               	movwf	tosh,c
  3971  000BE2  6AFF               	clrf	tosu,c
  3972  000BE4  50FA               	movf	pclath,w,c
  3973  000BE6  0012               	return		;indir
  3974  000BE8                     i2u75_49:
  3975  000BE8                     i2l128:
  3976  000BE8  0012               	return		;funcret
  3977  000BEA                     __end_of_TMR1_ISR:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3981 ;; Defined at:
  3982 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		None
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        0 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_TMR1_Initialize
  4006 ;;		_TMR1_ISR
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text28
  4011  000E54                     __ptext28:
  4012                           	callstack 0
  4013  000E54                     _TMR1_DefaultInterruptHandler:
  4014                           	callstack 19
  4015  000E54  0012               	return		;funcret
  4016  000E56                     __end_of_TMR1_DefaultInterruptHandler:
  4017                           	callstack 0
  4018                           
  4019 ;; *************** function _myTMR1ISR *****************
  4020 ;; Defined at:
  4021 ;;		line 269 in file "main.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    1
  4042 ;; This function calls:
  4043 ;;		_TMR1_WriteTimer
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;;		_TMR1_ISR
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text29
  4051  00066E                     __ptext29:
  4052                           	callstack 0
  4053  00066E                     _myTMR1ISR:
  4054                           	callstack 18
  4055  00066E                     
  4056                           ;main.c: 270:     if(playNote == 1){
  4057  00066E  044C               	decf	_playNote^0,w,c
  4058  000670  A4D8               	btfss	status,2,c
  4059  000672  EF3D  F003         	goto	i2u67_41
  4060  000676  EF3F  F003         	goto	i2u67_40
  4061  00067A                     i2u67_41:
  4062  00067A  EFA4  F003         	goto	i2l397
  4063  00067E                     i2u67_40:
  4064  00067E                     
  4065                           ;main.c: 271:         if(noteIndex < songLength[songIndex]){
  4066  00067E  0E90               	movlw	low _songLength
  4067  000680  0100               	movlb	0	; () banked
  4068  000682  259C               	addwf	_songIndex& (0+255),w,b
  4069  000684  6ED9               	movwf	fsr2l,c
  4070  000686  6ADA               	clrf	fsr2h,c
  4071  000688  0E00               	movlw	high _songLength
  4072  00068A  22DA               	addwfc	fsr2h,f,c
  4073  00068C  50DE               	movf	postinc2,w,c
  4074  00068E  5D9D               	subwf	_noteIndex& (0+255),w,b
  4075  000690  B0D8               	btfsc	status,0,c
  4076  000692  EF4D  F003         	goto	i2u68_41
  4077  000696  EF4F  F003         	goto	i2u68_40
  4078  00069A                     i2u68_41:
  4079  00069A  EF94  F003         	goto	i2l1933
  4080  00069E                     i2u68_40:
  4081  00069E                     
  4082                           ; BSR set to: 0
  4083                           ;main.c: 272:             TMR1_WriteTimer(0x10000 - scale[notes[songIndex][noteIndex]]);
  4084  00069E  519D               	movf	_noteIndex& (0+255),w,b
  4085  0006A0  0D02               	mullw	2
  4086  0006A2  CFF3 F003          	movff	prodl,??_myTMR1ISR
  4087  0006A6  CFF4 F004          	movff	prodh,??_myTMR1ISR+1
  4088  0006AA  519C               	movf	_songIndex& (0+255),w,b
  4089  0006AC  0D2A               	mullw	42
  4090  0006AE  0E00               	movlw	low _notes
  4091  0006B0  6E05               	movwf	(??_myTMR1ISR+2)^0,c
  4092  0006B2  0E02               	movlw	high _notes
  4093  0006B4  6E06               	movwf	(??_myTMR1ISR+3)^0,c
  4094  0006B6  50F3               	movf	243,w,c
  4095  0006B8  2605               	addwf	(??_myTMR1ISR+2)^0,f,c
  4096  0006BA  50F4               	movf	244,w,c
  4097  0006BC  2206               	addwfc	(??_myTMR1ISR+3)^0,f,c
  4098  0006BE  5003               	movf	??_myTMR1ISR^0,w,c
  4099  0006C0  2405               	addwf	(??_myTMR1ISR+2)^0,w,c
  4100  0006C2  6ED9               	movwf	fsr2l,c
  4101  0006C4  5004               	movf	(??_myTMR1ISR+1)^0,w,c
  4102  0006C6  2006               	addwfc	(??_myTMR1ISR+3)^0,w,c
  4103  0006C8  6EDA               	movwf	fsr2h,c
  4104  0006CA  CFDE F007          	movff	postinc2,??_myTMR1ISR+4
  4105  0006CE  CFDD F008          	movff	postdec2,??_myTMR1ISR+5
  4106  0006D2  90D8               	bcf	status,0,c
  4107  0006D4  3607               	rlcf	(??_myTMR1ISR+4)^0,f,c
  4108  0006D6  3608               	rlcf	(??_myTMR1ISR+5)^0,f,c
  4109  0006D8  0E60               	movlw	low _scale
  4110  0006DA  2407               	addwf	(??_myTMR1ISR+4)^0,w,c
  4111  0006DC  6ED9               	movwf	fsr2l,c
  4112  0006DE  0E00               	movlw	high _scale
  4113  0006E0  2008               	addwfc	(??_myTMR1ISR+5)^0,w,c
  4114  0006E2  6EDA               	movwf	fsr2h,c
  4115  0006E4  CFDE F009          	movff	postinc2,??_myTMR1ISR+6
  4116  0006E8  CFDD F00A          	movff	postdec2,??_myTMR1ISR+7
  4117  0006EC  5009               	movf	(??_myTMR1ISR+6)^0,w,c
  4118  0006EE  0800               	sublw	0
  4119  0006F0  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  4120  0006F2  500A               	movf	(??_myTMR1ISR+7)^0,w,c
  4121  0006F4  A0D8               	btfss	status,0,c
  4122  0006F6  2AE8               	incf	wreg,f,c
  4123  0006F8  0800               	sublw	0
  4124  0006FA  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  4125  0006FC  ECB2  F006         	call	_TMR1_WriteTimer	;wreg free
  4126  000700  BA8A               	btfsc	138,5,c	;volatile
  4127  000702  EF85  F003         	goto	i2u69_41
  4128  000706  EF88  F003         	goto	i2u69_40
  4129  00070A                     i2u69_41:
  4130  00070A  0E01               	movlw	1
  4131  00070C  EF89  F003         	goto	i2u69_46
  4132  000710                     i2u69_40:
  4133  000710  0E00               	movlw	0
  4134  000712                     i2u69_46:
  4135  000712  0AFF               	xorlw	255
  4136  000714  6E03               	movwf	??_myTMR1ISR^0,c
  4137  000716  3A03               	swapf	??_myTMR1ISR^0,f,c
  4138  000718  4603               	rlncf	??_myTMR1ISR^0,f,c
  4139  00071A  508A               	movf	138,w,c	;volatile
  4140  00071C  1803               	xorwf	??_myTMR1ISR^0,w,c
  4141  00071E  0BDF               	andlw	-33
  4142  000720  1803               	xorwf	??_myTMR1ISR^0,w,c
  4143  000722  6E8A               	movwf	138,c	;volatile
  4144  000724  EFA4  F003         	goto	i2l397
  4145  000728                     i2l1933:
  4146                           
  4147                           ; BSR set to: 0
  4148  000728  0E90               	movlw	low _songLength
  4149  00072A  259C               	addwf	_songIndex& (0+255),w,b
  4150  00072C  6ED9               	movwf	fsr2l,c
  4151  00072E  6ADA               	clrf	fsr2h,c
  4152  000730  0E00               	movlw	high _songLength
  4153  000732  22DA               	addwfc	fsr2h,f,c
  4154  000734  519D               	movf	_noteIndex& (0+255),w,b
  4155  000736  18DE               	xorwf	postinc2,w,c
  4156  000738  A4D8               	btfss	status,2,c
  4157  00073A  EFA1  F003         	goto	i2u70_41
  4158  00073E  EFA3  F003         	goto	i2u70_40
  4159  000742                     i2u70_41:
  4160  000742  EFA4  F003         	goto	i2l397
  4161  000746                     i2u70_40:
  4162  000746                     
  4163                           ; BSR set to: 0
  4164  000746  9A8A               	bcf	138,5,c	;volatile
  4165  000748                     i2l397:
  4166  000748  0012               	return		;funcret
  4167  00074A                     __end_of_myTMR1ISR:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _TMR1_WriteTimer *****************
  4171 ;; Defined at:
  4172 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  timerVal        2    0[COMRAM] unsigned short 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_TMR1_ISR
  4196 ;;		_myTMR1ISR
  4197 ;;		_TMR1_Reload
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text30
  4202  000D64                     __ptext30:
  4203                           	callstack 0
  4204  000D64                     _TMR1_WriteTimer:
  4205                           	callstack 18
  4206  000D64                     
  4207                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  4208  000D64  A4CD               	btfss	205,2,c	;volatile
  4209  000D66  EFB7  F006         	goto	i2u60_41
  4210  000D6A  EFB9  F006         	goto	i2u60_40
  4211  000D6E                     i2u60_41:
  4212  000D6E  EFC1  F006         	goto	i2l1795
  4213  000D72                     i2u60_40:
  4214  000D72                     
  4215                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  4216  000D72  90CD               	bcf	205,0,c	;volatile
  4217  000D74                     
  4218                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  4219  000D74  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4220  000D76  6ECF               	movwf	207,c	;volatile
  4221  000D78                     
  4222                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  4223  000D78  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4224  000D7C                     
  4225                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  4226  000D7C  80CD               	bsf	205,0,c	;volatile
  4227                           
  4228                           ;mcc_generated_files/tmr1.c: 134:     }
  4229  000D7E  EFC5  F006         	goto	i2l115
  4230  000D82                     i2l1795:
  4231                           
  4232                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  4233  000D82  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4234  000D84  6ECF               	movwf	207,c	;volatile
  4235  000D86                     
  4236                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  4237  000D86  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4238  000D8A                     i2l115:
  4239  000D8A  0012               	return		;funcret
  4240  000D8C                     __end_of_TMR1_WriteTimer:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _TMR0_ISR *****************
  4244 ;; Defined at:
  4245 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    2
  4266 ;; This function calls:
  4267 ;;		Absolute function
  4268 ;;		_TMR0_DefaultInterruptHandler
  4269 ;;		_myTMR0ISR
  4270 ;; This function is called by:
  4271 ;;		_INTERRUPT_InterruptManager
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text31
  4276  000C20                     __ptext31:
  4277                           	callstack 0
  4278  000C20                     _TMR0_ISR:
  4279                           	callstack 18
  4280  000C20                     
  4281                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4282  000C20  94F2               	bcf	242,2,c	;volatile
  4283  000C22                     
  4284                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4285  000C22  5047               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4286  000C24  6ED7               	movwf	215,c	;volatile
  4287  000C26                     
  4288                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4289  000C26  C046  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4290  000C2A                     
  4291                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4292  000C2A  5048               	movf	_TMR0_InterruptHandler^0,w,c
  4293  000C2C  1049               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  4294  000C2E  B4D8               	btfsc	status,2,c
  4295  000C30  EF1C  F006         	goto	i2u72_41
  4296  000C34  EF1E  F006         	goto	i2u72_40
  4297  000C38                     i2u72_41:
  4298  000C38  EF2A  F006         	goto	i2l66
  4299  000C3C                     i2u72_40:
  4300  000C3C                     
  4301                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4302  000C3C  D802               	call	i2u73_48
  4303  000C3E  EF2A  F006         	goto	i2u73_49
  4304  000C42                     i2u73_48:
  4305  000C42  0005               	push	
  4306  000C44  6EFA               	movwf	pclath,c
  4307  000C46  5048               	movf	_TMR0_InterruptHandler^0,w,c
  4308  000C48  6EFD               	movwf	tosl,c
  4309  000C4A  5049               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  4310  000C4C  6EFE               	movwf	tosh,c
  4311  000C4E  6AFF               	clrf	tosu,c
  4312  000C50  50FA               	movf	pclath,w,c
  4313  000C52  0012               	return		;indir
  4314  000C54                     i2u73_49:
  4315  000C54                     i2l66:
  4316  000C54  0012               	return		;funcret
  4317  000C56                     __end_of_TMR0_ISR:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4321 ;; Defined at:
  4322 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		None
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;Total ram usage:        0 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_TMR0_Initialize
  4346 ;;		_TMR0_ISR
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text32
  4351  000E56                     __ptext32:
  4352                           	callstack 0
  4353  000E56                     _TMR0_DefaultInterruptHandler:
  4354                           	callstack 19
  4355  000E56  0012               	return		;funcret
  4356  000E58                     __end_of_TMR0_DefaultInterruptHandler:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function _myTMR0ISR *****************
  4360 ;; Defined at:
  4361 ;;		line 237 in file "main.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:        6 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    1
  4382 ;; This function calls:
  4383 ;;		_TMR0_WriteTimer
  4384 ;; This function is called by:
  4385 ;;		_main
  4386 ;;		_TMR0_ISR
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text33
  4391  00057A                     __ptext33:
  4392                           	callstack 0
  4393  00057A                     _myTMR0ISR:
  4394                           	callstack 18
  4395  00057A                     
  4396                           ;main.c: 238:     static tmr0myspace_t tmr0_state = IDLE;;main.c: 239:     if(playSong =
      +                          = 1){
  4397  00057A  0100               	movlb	0	; () banked
  4398  00057C  059E               	decf	_playSong& (0+255),w,b
  4399  00057E  A4D8               	btfss	status,2,c
  4400  000580  EFC4  F002         	goto	i2u65_41
  4401  000584  EFC6  F002         	goto	i2u65_40
  4402  000588                     i2u65_41:
  4403  000588  EF36  F003         	goto	i2l386
  4404  00058C                     i2u65_40:
  4405  00058C  EF1D  F003         	goto	i2l1917
  4406  000590                     i2l1895:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;main.c: 242:                 playSong = 1;
  4410  000590  0E01               	movlw	1
  4411  000592  6F9E               	movwf	_playSong& (0+255),b
  4412                           
  4413                           ;main.c: 243:                 tmr0_state = PLAYING_SONG;
  4414  000594  0E01               	movlw	1
  4415  000596  6E4A               	movwf	myTMR0ISR@tmr0_state^0,c
  4416                           
  4417                           ;main.c: 244:                 noteIndex = 0;
  4418  000598  0E00               	movlw	0
  4419  00059A  6F9D               	movwf	_noteIndex& (0+255),b
  4420                           
  4421                           ;main.c: 245:                 break;
  4422  00059C  EF36  F003         	goto	i2l386
  4423  0005A0                     i2l1897:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;main.c: 248:                 playNote = 1;
  4427  0005A0  0E01               	movlw	1
  4428  0005A2  6E4C               	movwf	_playNote^0,c
  4429  0005A4                     
  4430                           ; BSR set to: 0
  4431                           ;main.c: 249:                 TMR0_WriteTimer(0x10000 - duration[songIndex][noteIndex]);
  4432  0005A4  519D               	movf	_noteIndex& (0+255),w,b
  4433  0005A6  0D02               	mullw	2
  4434  0005A8  CFF3 F003          	movff	prodl,??_myTMR0ISR
  4435  0005AC  CFF4 F004          	movff	prodh,??_myTMR0ISR+1
  4436  0005B0  519C               	movf	_songIndex& (0+255),w,b
  4437  0005B2  0D2A               	mullw	42
  4438  0005B4  0E00               	movlw	low _duration
  4439  0005B6  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  4440  0005B8  0E01               	movlw	high _duration
  4441  0005BA  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  4442  0005BC  50F3               	movf	243,w,c
  4443  0005BE  2605               	addwf	(??_myTMR0ISR+2)^0,f,c
  4444  0005C0  50F4               	movf	244,w,c
  4445  0005C2  2206               	addwfc	(??_myTMR0ISR+3)^0,f,c
  4446  0005C4  5003               	movf	??_myTMR0ISR^0,w,c
  4447  0005C6  2405               	addwf	(??_myTMR0ISR+2)^0,w,c
  4448  0005C8  6ED9               	movwf	fsr2l,c
  4449  0005CA  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4450  0005CC  2006               	addwfc	(??_myTMR0ISR+3)^0,w,c
  4451  0005CE  6EDA               	movwf	fsr2h,c
  4452  0005D0  CFDE F007          	movff	postinc2,??_myTMR0ISR+4
  4453  0005D4  CFDD F008          	movff	postdec2,??_myTMR0ISR+5
  4454  0005D8  5007               	movf	(??_myTMR0ISR+4)^0,w,c
  4455  0005DA  0800               	sublw	0
  4456  0005DC  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  4457  0005DE  5008               	movf	(??_myTMR0ISR+5)^0,w,c
  4458  0005E0  A0D8               	btfss	status,0,c
  4459  0005E2  2AE8               	incf	wreg,f,c
  4460  0005E4  0800               	sublw	0
  4461  0005E6  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4462  0005E8  EC23  F007         	call	_TMR0_WriteTimer	;wreg free
  4463  0005EC                     
  4464                           ;main.c: 250:                 tmr0_state = PLAYING_REST;
  4465  0005EC  0E02               	movlw	2
  4466  0005EE  6E4A               	movwf	myTMR0ISR@tmr0_state^0,c
  4467                           
  4468                           ;main.c: 251:                 break;
  4469  0005F0  EF36  F003         	goto	i2l386
  4470  0005F4                     i2l1903:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;main.c: 254:                 TMR0_WriteTimer(0x10000 - 25);
  4474  0005F4  0EFF               	movlw	255
  4475  0005F6  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4476  0005F8  0EE7               	movlw	231
  4477  0005FA  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  4478  0005FC  EC23  F007         	call	_TMR0_WriteTimer	;wreg free
  4479  000600                     
  4480                           ;main.c: 255:                 playNote = 0;
  4481  000600  0E00               	movlw	0
  4482  000602  6E4C               	movwf	_playNote^0,c
  4483  000604                     
  4484                           ;main.c: 256:                 if (noteIndex == songLength[songIndex]) {
  4485  000604  0E90               	movlw	low _songLength
  4486  000606  0100               	movlb	0	; () banked
  4487  000608  259C               	addwf	_songIndex& (0+255),w,b
  4488  00060A  6ED9               	movwf	fsr2l,c
  4489  00060C  6ADA               	clrf	fsr2h,c
  4490  00060E  0E00               	movlw	high _songLength
  4491  000610  22DA               	addwfc	fsr2h,f,c
  4492  000612  519D               	movf	_noteIndex& (0+255),w,b
  4493  000614  18DE               	xorwf	postinc2,w,c
  4494  000616  A4D8               	btfss	status,2,c
  4495  000618  EF10  F003         	goto	i2u66_41
  4496  00061C  EF12  F003         	goto	i2u66_40
  4497  000620                     i2u66_41:
  4498  000620  EF18  F003         	goto	i2l1911
  4499  000624                     i2u66_40:
  4500  000624                     
  4501                           ; BSR set to: 0
  4502                           ;main.c: 257:                     tmr0_state = IDLE;
  4503  000624  0E00               	movlw	0
  4504  000626  6E4A               	movwf	myTMR0ISR@tmr0_state^0,c
  4505                           
  4506                           ;main.c: 258:                     playSong = 0;
  4507  000628  0E00               	movlw	0
  4508  00062A  6F9E               	movwf	_playSong& (0+255),b
  4509                           
  4510                           ;main.c: 259:                 }
  4511  00062C  EF36  F003         	goto	i2l386
  4512  000630                     i2l1911:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;main.c: 261:                     tmr0_state = PLAYING_SONG;
  4516  000630  0E01               	movlw	1
  4517  000632  6E4A               	movwf	myTMR0ISR@tmr0_state^0,c
  4518  000634                     
  4519                           ; BSR set to: 0
  4520                           ;main.c: 262:                     noteIndex++;
  4521  000634  2B9D               	incf	_noteIndex& (0+255),f,b
  4522  000636  EF36  F003         	goto	i2l386
  4523  00063A                     i2l1917:
  4524                           
  4525                           ; BSR set to: 0
  4526  00063A  504A               	movf	myTMR0ISR@tmr0_state^0,w,c
  4527  00063C  6E03               	movwf	??_myTMR0ISR^0,c
  4528  00063E  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4529                           
  4530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4531                           ; Switch size 1, requested type "simple"
  4532                           ; Number of cases is 1, Range of values is 0 to 0
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte            4     3 (average)
  4536                           ;	Chosen strategy is simple_byte
  4537  000640  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4538  000642  0A00               	xorlw	0	; case 0
  4539  000644  B4D8               	btfsc	status,2,c
  4540  000646  EF27  F003         	goto	i2l2557
  4541  00064A  EF36  F003         	goto	i2l386
  4542  00064E                     i2l2557:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ; Switch size 1, requested type "simple"
  4546                           ; Number of cases is 3, Range of values is 0 to 2
  4547                           ; switch strategies available:
  4548                           ; Name         Instructions Cycles
  4549                           ; simple_byte           10     6 (average)
  4550                           ;	Chosen strategy is simple_byte
  4551  00064E  5003               	movf	??_myTMR0ISR^0,w,c
  4552  000650  0A00               	xorlw	0	; case 0
  4553  000652  B4D8               	btfsc	status,2,c
  4554  000654  EFC8  F002         	goto	i2l1895
  4555  000658  0A01               	xorlw	1	; case 1
  4556  00065A  B4D8               	btfsc	status,2,c
  4557  00065C  EFD0  F002         	goto	i2l1897
  4558  000660  0A03               	xorlw	3	; case 2
  4559  000662  B4D8               	btfsc	status,2,c
  4560  000664  EFFA  F002         	goto	i2l1903
  4561  000668  EF36  F003         	goto	i2l386
  4562  00066C                     i2l386:
  4563  00066C  0012               	return		;funcret
  4564  00066E                     __end_of_myTMR0ISR:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function _TMR0_WriteTimer *****************
  4568 ;; Defined at:
  4569 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  timerVal        2    0[COMRAM] unsigned short 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;Total ram usage:        2 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_myTMR0ISR
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text34
  4597  000E46                     __ptext34:
  4598                           	callstack 0
  4599  000E46                     _TMR0_WriteTimer:
  4600                           	callstack 18
  4601  000E46                     
  4602                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4603  000E46  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4604  000E48  6ED7               	movwf	215,c	;volatile
  4605  000E4A                     
  4606                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4607  000E4A  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4608  000E4E  0012               	return		;funcret
  4609  000E50                     __end_of_TMR0_WriteTimer:
  4610                           	callstack 0
  4611                           
  4612                           	psect	text35
  4613  000000                     __ptext35:
  4614                           	callstack 0
  4615  000000                     
  4616                           	psect	rparam
  4617  0000                     
  4618                           	psect	temp
  4619  00004E                     btemp:
  4620                           	callstack 0
  4621  00004E                     	ds	1
  4622  0000                     int$flags	set	btemp
  4623  0000                     wtemp8	set	btemp+1
  4624  0000                     ttemp5	set	btemp+1
  4625  0000                     ttemp6	set	btemp+4
  4626  0000                     ttemp7	set	btemp+8
  4627                           
  4628                           	psect	idloc
  4629                           
  4630                           ;Config register IDLOC0 @ 0x200000
  4631                           ;	unspecified, using default values
  4632  200000                     	org	2097152
  4633  200000  FF                 	db	255
  4634                           
  4635                           ;Config register IDLOC1 @ 0x200001
  4636                           ;	unspecified, using default values
  4637  200001                     	org	2097153
  4638  200001  FF                 	db	255
  4639                           
  4640                           ;Config register IDLOC2 @ 0x200002
  4641                           ;	unspecified, using default values
  4642  200002                     	org	2097154
  4643  200002  FF                 	db	255
  4644                           
  4645                           ;Config register IDLOC3 @ 0x200003
  4646                           ;	unspecified, using default values
  4647  200003                     	org	2097155
  4648  200003  FF                 	db	255
  4649                           
  4650                           ;Config register IDLOC4 @ 0x200004
  4651                           ;	unspecified, using default values
  4652  200004                     	org	2097156
  4653  200004  FF                 	db	255
  4654                           
  4655                           ;Config register IDLOC5 @ 0x200005
  4656                           ;	unspecified, using default values
  4657  200005                     	org	2097157
  4658  200005  FF                 	db	255
  4659                           
  4660                           ;Config register IDLOC6 @ 0x200006
  4661                           ;	unspecified, using default values
  4662  200006                     	org	2097158
  4663  200006  FF                 	db	255
  4664                           
  4665                           ;Config register IDLOC7 @ 0x200007
  4666                           ;	unspecified, using default values
  4667  200007                     	org	2097159
  4668  200007  FF                 	db	255
  4669                           
  4670                           	psect	config
  4671                           
  4672                           ; Padding undefined space
  4673  300000                     	org	3145728
  4674  300000  FF                 	db	255
  4675                           
  4676                           ;Config register CONFIG1H @ 0x300001
  4677                           ;	Oscillator Selection bits
  4678                           ;	FOSC = INTIO67, Internal oscillator block
  4679                           ;	4X PLL Enable
  4680                           ;	PLLCFG = OFF, Oscillator used directly
  4681                           ;	Primary clock enable bit
  4682                           ;	PRICLKEN = ON, Primary clock enabled
  4683                           ;	Fail-Safe Clock Monitor Enable bit
  4684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4685                           ;	Internal/External Oscillator Switchover bit
  4686                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4687  300001                     	org	3145729
  4688  300001  28                 	db	40
  4689                           
  4690                           ;Config register CONFIG2L @ 0x300002
  4691                           ;	Power-up Timer Enable bit
  4692                           ;	PWRTEN = OFF, Power up timer disabled
  4693                           ;	Brown-out Reset Enable bits
  4694                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4695                           ;	Brown Out Reset Voltage bits
  4696                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4697  300002                     	org	3145730
  4698  300002  1F                 	db	31
  4699                           
  4700                           ;Config register CONFIG2H @ 0x300003
  4701                           ;	Watchdog Timer Enable bits
  4702                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4703                           ;	Watchdog Timer Postscale Select bits
  4704                           ;	WDTPS = 32768, 1:32768
  4705  300003                     	org	3145731
  4706  300003  3C                 	db	60
  4707                           
  4708                           ; Padding undefined space
  4709  300004                     	org	3145732
  4710  300004  FF                 	db	255
  4711                           
  4712                           ;Config register CONFIG3H @ 0x300005
  4713                           ;	CCP2 MUX bit
  4714                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4715                           ;	PORTB A/D Enable bit
  4716                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4717                           ;	P3A/CCP3 Mux bit
  4718                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4719                           ;	HFINTOSC Fast Start-up
  4720                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4721                           ;	Timer3 Clock input mux bit
  4722                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4723                           ;	ECCP2 B output mux bit
  4724                           ;	P2BMX = PORTB5, P2B is on RB5
  4725                           ;	MCLR Pin Enable bit
  4726                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4727  300005                     	org	3145733
  4728  300005  BF                 	db	191
  4729                           
  4730                           ;Config register CONFIG4L @ 0x300006
  4731                           ;	Stack Full/Underflow Reset Enable bit
  4732                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4733                           ;	Single-Supply ICSP Enable bit
  4734                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4735                           ;	Extended Instruction Set Enable bit
  4736                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4737                           ;	Background Debug
  4738                           ;	DEBUG = OFF, Disabled
  4739  300006                     	org	3145734
  4740  300006  85                 	db	133
  4741                           
  4742                           ; Padding undefined space
  4743  300007                     	org	3145735
  4744  300007  FF                 	db	255
  4745                           
  4746                           ;Config register CONFIG5L @ 0x300008
  4747                           ;	Code Protection Block 0
  4748                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4749                           ;	Code Protection Block 1
  4750                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4751                           ;	Code Protection Block 2
  4752                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4753                           ;	Code Protection Block 3
  4754                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4755  300008                     	org	3145736
  4756  300008  0F                 	db	15
  4757                           
  4758                           ;Config register CONFIG5H @ 0x300009
  4759                           ;	Boot Block Code Protection bit
  4760                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4761                           ;	Data EEPROM Code Protection bit
  4762                           ;	CPD = OFF, Data EEPROM not code-protected
  4763  300009                     	org	3145737
  4764  300009  C0                 	db	192
  4765                           
  4766                           ;Config register CONFIG6L @ 0x30000A
  4767                           ;	Write Protection Block 0
  4768                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4769                           ;	Write Protection Block 1
  4770                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4771                           ;	Write Protection Block 2
  4772                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4773                           ;	Write Protection Block 3
  4774                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4775  30000A                     	org	3145738
  4776  30000A  0F                 	db	15
  4777                           
  4778                           ;Config register CONFIG6H @ 0x30000B
  4779                           ;	Configuration Register Write Protection bit
  4780                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4781                           ;	Boot Block Write Protection bit
  4782                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4783                           ;	Data EEPROM Write Protection bit
  4784                           ;	WRTD = OFF, Data EEPROM not write-protected
  4785  30000B                     	org	3145739
  4786  30000B  E0                 	db	224
  4787                           
  4788                           ;Config register CONFIG7L @ 0x30000C
  4789                           ;	Table Read Protection Block 0
  4790                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4791                           ;	Table Read Protection Block 1
  4792                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4793                           ;	Table Read Protection Block 2
  4794                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4795                           ;	Table Read Protection Block 3
  4796                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4797  30000C                     	org	3145740
  4798  30000C  0F                 	db	15
  4799                           
  4800                           ;Config register CONFIG7H @ 0x30000D
  4801                           ;	Boot Block Table Read Protection bit
  4802                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4803  30000D                     	org	3145741
  4804  30000D  40                 	db	64
  4805                           tosu	equ	0xFFF
  4806                           tosh	equ	0xFFE
  4807                           tosl	equ	0xFFD
  4808                           stkptr	equ	0xFFC
  4809                           pclatu	equ	0xFFB
  4810                           pclath	equ	0xFFA
  4811                           pcl	equ	0xFF9
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           prodh	equ	0xFF4
  4817                           prodl	equ	0xFF3
  4818                           indf0	equ	0xFEF
  4819                           postinc0	equ	0xFEE
  4820                           postdec0	equ	0xFED
  4821                           preinc0	equ	0xFEC
  4822                           plusw0	equ	0xFEB
  4823                           fsr0h	equ	0xFEA
  4824                           fsr0l	equ	0xFE9
  4825                           wreg	equ	0xFE8
  4826                           indf1	equ	0xFE7
  4827                           postinc1	equ	0xFE6
  4828                           postdec1	equ	0xFE5
  4829                           preinc1	equ	0xFE4
  4830                           plusw1	equ	0xFE3
  4831                           fsr1h	equ	0xFE2
  4832                           fsr1l	equ	0xFE1
  4833                           bsr	equ	0xFE0
  4834                           indf2	equ	0xFDF
  4835                           postinc2	equ	0xFDE
  4836                           postdec2	equ	0xFDD
  4837                           preinc2	equ	0xFDC
  4838                           plusw2	equ	0xFDB
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8

Data Sizes:
    Strings     394
    Constant    0
    Data        388
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      77
    BANK0           160     29     124
    BANK1           256      0     168
    BANK2           256      0     168
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1635_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_23(CODE[17]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[11]), 
		 -> STR_19(CODE[12]), STR_18(CODE[49]), STR_17(CODE[30]), STR_16(CODE[5]), 
		 -> STR_15(CODE[22]), STR_14(CODE[33]), STR_13(CODE[21]), STR_12(CODE[20]), 
		 -> STR_11(CODE[24]), STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_23(CODE[17]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[11]), 
		 -> STR_19(CODE[12]), STR_18(CODE[49]), STR_17(CODE[30]), STR_16(CODE[5]), 
		 -> STR_15(CODE[22]), STR_14(CODE[33]), STR_13(CODE[21]), STR_12(CODE[20]), 
		 -> STR_11(CODE[24]), STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_23(CODE[17]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[11]), 
		 -> STR_19(CODE[12]), STR_18(CODE[49]), STR_17(CODE[30]), STR_16(CODE[5]), 
		 -> STR_15(CODE[22]), STR_14(CODE[33]), STR_13(CODE[21]), STR_12(CODE[20]), 
		 -> STR_11(CODE[24]), STR_10(CODE[21]), STR_9(CODE[7]), STR_8(CODE[15]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->_TMR1_WriteTimer
    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    9401
                                             16 BANK0     13    13      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7968
                                              8 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5817
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5347
                                             50 COMRAM     9     3      6
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3634
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3355
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1006
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                             16 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             18 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0     828
                                             10 COMRAM     6     6      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     632
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                          _myTMR1ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR1ISR                                           8     8      0     316
                                              2 COMRAM     8     8      0
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     196
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           6     6      0     196
                                              2 COMRAM     6     6      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_ReadTimer
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_WriteTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _myTMR1ISR *
       _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A8       9       65.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A8       7       65.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4D       1       81.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219      12        0.0%
DATA                 0      0     219       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Sep 24 17:39:54 2020

                                            l15 0E52                                              l47 0CBC  
                                            l56 0DA8                                              l69 0E26  
                               _timer0ReloadVal 0046                                             l101 0D12  
                                           l131 0E1C                                             l160 0DB6  
                                           l163 0DC4                                             l244 0E08  
                                           l236 0BAE                                             l260 0DE2  
                                           l253 0D3C                                             l157 0DDE  
                                           l190 0CE8                                             l263 0DF4  
                                           l351 0214                                             l257 0D62  
                                           l281 0E3A                                             l354 0232  
                                           l363 0354                                             l284 0E30  
                                           l269 0E12                                             l287 0E44  
                                           l367 0382                                             u640 0DC4  
                                           u641 0DC0                                             u760 0E06  
                                           u761 0E00                                             u770 0D4A  
                                           u930 0DF0                                             u771 0D46  
                                           u931 0DEC                                             u780 0D5C  
                                           u940 096E                                             u781 0D58  
                                           u941 096A                                             u766 0E08  
                                           u950 0980                                             u951 097C  
                                           u960 09A8                                             u961 09A4  
                                           u970 09DE                                             u971 09DA  
                                           u980 0B70                                             u981 0B6C  
                                           u990 0C12                                             u991 0C0E  
                               _timer1ReloadVal 0044                                             _pad 074A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1103 078E  
                                          l1120 0578                                            l1106 07D0  
                                          l1115 0B2C                                            l1108 080A  
                                          l1126 0ACA                                            l1127 0AD2  
                                          l1153 0C1E                                            l1139 09F0  
                                          l1147 0B70                                            l2301 0448  
                                          l1078 0D3A                                            l2223 0DE2  
                                          l2231 096E                                            l2303 0458  
                                          l2225 0DF0                                            l2233 0980  
                                          l2313 04D2                                            l2305 045E  
                                          l2401 0206                                            l2227 0E0C  
                                          l2235 098A                                            l2243 0B2E  
                                          l2251 0BEA                                            l2331 0566  
                                          l2315 04F8                                            l2323 0526  
                                          l2307 0484                                            l2411 0240  
                                          l2403 020C                                            l2237 09A8  
                                          l2229 095C                                            l2245 0B3A  
                                          l2253 0BF6                                            l2261 074A  
                                          l2325 0534                                            l2317 0506  
                                          l2309 04B6                                            l2341 0A88  
                                          l2421 02D2                                            l2413 024C  
                                          l2405 020C                                            l2239 09DE  
                                          l2247 0B4C                                            l2255 0BFA  
                                          l2271 079A                                            l2263 0758  
                                          l2319 051A                                            l2343 0AAC  
                                          l2431 030C                                            l2423 02D6  
                                          l2415 0250                                            l2407 0222  
                                          l2351 0098                                            l1801 0E28  
                                          l2249 0B50                                            l2257 0C12  
                                          l2273 07AE                                            l2265 076C  
                                          l2329 0540                                            l2337 0A74  
                                          l2345 0D14                                            l2433 0314  
                                          l2441 032A                                            l2417 025E  
                                          l2409 022E                                            l2425 02D8  
                                          l2361 00B6                                            l2353 00A2  
                                          l1803 0E3C                                            l2275 07B2  
                                          l2267 077A                                            l2291 0B02  
                                          l2283 0AD4                                            l2339 0A7C  
                                          l2347 0D1E                                            l2451 0362  
                                          l2443 0356                                            l2435 0320  
                                          l2427 02FA                                            l2419 0298  
                                          l2371 00FA                                            l2363 00C2  
                                          l2355 00A6                                            l2277 07DE  
                                          l2269 0786                                            l2293 0B08  
                                          l2285 0AE6                                            l2453 036E  
                                          l2445 035E                                            l2429 0306  
                                          l2381 01A8                                            l2373 0108  
                                          l2365 00D0                                            l2357 00A8  
                                          l2279 07F2                                            l2287 0AF2  
                                          l2463 038C                                            l2455 0372  
                                          l2391 01DE                                            l2383 01B4  
                                          l2375 0116                                            l2367 00DE  
                                          l2359 00AA                                            l2289 0AFE  
                                          l2297 0414                                            l2465 0398  
                                          l2457 0388                                            l2553 033E  
                                          l2393 01E4                                            l2385 01BA  
                                          l2473 03C6                                            l2377 012A  
                                          l2369 00EC                                            l1851 0C92  
                                          l2299 043A                                            l2555 03DA  
                                          l2467 039C                                            l2395 01E8  
                                          l2387 01C2                                            l2379 0136  
                                          l1845 0E50                                            l1853 0CA8  
                                          l1861 0CEA                                            l2469 03B0  
                                          l2397 01F8                                            l2389 01D2  
                                          l1855 0CAA                                            l1847 0C8A  
                                          l1783 0E14                                            l1871 0D0E  
                                          l1863 0CF6                                            l2399 0204  
                                          l1881 0B72                                            l1873 0CBE  
                                          l1777 0E1E                                            l1857 0CAC  
                                          l1849 0C8E                                            l1865 0CFE  
                                          l1961 0D8C                                            l1883 0B86  
                                          l1875 0CCA                                            l1859 0CB8  
                                          l1867 0D00                                            l1971 0DCA  
                                          l1963 0D94                                            l1981 0DF6  
                                          l1885 0B92                                            l1877 0CE6  
                                          l1869 0D02                                            l1973 0DCE  
                                          l1965 0DA0                                            ?_pad 0023  
                                          l1991 0D5C                                            l1799 0E32  
                                          l1887 0B9E                                            l1879 0DAA  
                                          l1975 0DD2                                            l1993 0D60  
                                          l1985 0D3C                                            l1889 0BAA  
                                          l1977 0DD6                                            l1969 0DC6  
                                          l1987 0D4A                                            l1979 0DDA  
                                          l1989 0D4E                                            STR_1 FFDA  
                                          STR_2 FF40                                            STR_3 FFE5  
                                          STR_4 FFA5                                            STR_5 FEA6  
                                          STR_6 FFFA                                            STR_7 FED3  
                                          STR_8 FFB4                                            STR_9 FFEE  
                                          u1000 0758                                            u1001 0754  
                                          u1010 077A                                            u1011 0776  
                                          u1020 07D0                                            u1100 01F8  
                                          u1021 07CC                                            u1101 01F4  
                                          u1030 07DE                                            u1110 0222  
                                          u1031 07DA                                            u1111 021E  
                                          u1040 0AE6                                            u1120 0240  
                                          u1041 0AE2                                            u1121 023C  
                                          u1050 043A                                            u1130 0298  
                                          u1051 0436                                            u1131 0294  
                                          u1060 0484                                            u1140 02D2  
                                          u1061 0480                                            u1141 02CE  
                                          u1070 04F8                                            u1150 02F6  
                                          u1071 04F4                                            u1151 02F2  
                                          u1080 0ACA                                            u1160 0382  
                                          u1081 0AC6                                            u1161 037E  
                                          u1170 03AC                                            u1090 012A  
                                          u1171 03A8                                            u1091 0126  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            i2l20 0046  
                                          i2l25 0078                                            i2l26 0078  
                                          i2l72 0E56                                            i2l66 0C54  
                                          i2l59 0E4E                                            _TMR1 000FCE  
                                          _WPUB 000F61                                     main@initial 00D3  
                                 _EUSART1_Write 0DE0                                            _dbuf 009F  
                                          _ctoa 0AD4                                            _main 0098  
                                 ?_EUSART1_Read 0001                                            _prec 0094  
                                          _nout 003C                                            pad@i 002A  
                                          pad@p 0027                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002C  
                                          fsr2l 000FD9                                            btemp 004E  
                                   main@success 00D7                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0094  
                    ??_TMR1_SetInterruptHandler 0013                                    ___param_bank 000000  
                                         ??_pad 0029                         __end_of_TMR0_Initialize 0CBE  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 0DC6                                           ?_ctoa 002E  
                                         ?_main 0001                                           STR_10 FF6B  
                                         STR_11 FF12                                           STR_20 FFCF  
                                         STR_12 FF80                                           STR_21 FFCC  
                                         STR_13 FF56                                           STR_22 FFCC  
                                         STR_14 FED3                                           STR_23 FF94  
                                         STR_15 FF2A                                           STR_16 FFF5  
                                         STR_17 FEF4                                           STR_18 FE75  
                                         STR_19 FFC3                       TMR0_ReadTimer@readValHigh 0018  
                                         _T0CON 000FD5                                           _T1CON 000FCD  
                                         i2l115 0D8A                                           i2l134 0E54  
                                         i2l128 0BE8                                 _TMR0_WriteTimer 0E46  
                                         i2l386 066C                                           i2l395 0746  
                                         i2l397 0748                                    vfpfcnvrt@fmt 0035  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             myTMR0ISR@tmr0_state 004A  
             __size_of_TMR0_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 0011  
                              __end_of_TMR0_ISR 0C56                                __end_of_TMR1_ISR 0BEA  
                                         _flags 0040                                           _fputc 095C  
                                         _scale 0060                                           _fputs 0B2E  
                                         _notes 0200                                           pad@fp 0023  
                                         _width 003E                                           ctoa@c 0030  
                                         _putch 0E0A                                           ctoa@w 0031  
                                         main@i 00DB                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 0D14                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0011  
                                         ttemp5 004F                                           ttemp6 0052  
                                         ttemp7 0056                                           status 000FD8  
                                         wtemp8 004F              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 0D64                                 __initialization 09F2  
                                  __end_of_ctoa 0B2E                      __end_of_EUSART1_Initialize 0BB0  
                                  __end_of_main 0414                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 0031                                          ??_main 00CF  
                                 __activetblptr 000003                                          ?_fputc 0013  
                                        ?_fputs 001C                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                       TMR1_WriteTimer@timerVal 0001                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2011 0062                                          i2l2003 0022  
                                        i2l2013 0070                                          i2l2005 0030  
                                        i2l2007 003E                                          i2l2009 0054  
                                        i2l1901 05EC                                          i2l1911 0630  
                                        i2l1903 05F4                                          i2l1913 0634  
                                        i2l1905 0600                                          i2l1907 0604  
                                        i2l1931 0700                                          i2l1781 0E4A  
                                        i2l2557 064E                                          i2l1909 0624  
                                        i2l1917 063A                                          i2l1933 0728  
                                        i2l1925 066E                                          i2l1951 0C3C  
                                        i2l1943 0C20                                          i2l1791 0D78  
                                        i2l1927 067E                                          i2l1945 0C22  
                                        i2l1793 0D7C                                          i2l1785 0D64  
                                        i2l1929 069E                                          i2l1953 0BB0  
                                        i2l1779 0E46                                          i2l1891 057A  
                                        i2l1947 0C26                                          i2l1787 0D72  
                                        i2l1795 0D82                                          i2l1955 0BB2  
                                        i2l1949 0C2A                                          i2l1797 0D86  
                                        i2l1789 0D74                                          i2l1957 0BBE  
                                        i2l1895 0590                                          i2l1959 0BD0  
                                        i2l1897 05A0                                          i2l1899 05A4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC            __end_of_TMR1_DefaultInterruptHandler 0E56  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 0E54  
                                  vfprintf@cfmt 00C5                         __end_of_TMR0_WriteTimer 0E50  
                      ?_EUSART1_SetErrorHandler 0011                                ?_TMR0_Initialize 0001  
                                        clear_0 0A58                                          clear_1 0A64  
                                        _printf 0D14                                          pad@buf 0025  
              ??_EUSART1_SetOverrunErrorHandler 0013                 ?_EUSART1_SetOverrunErrorHandler 0011  
                                        ctoa@fp 002E                                          _strlen 0BEA  
                                        fputc@c 0013                                          fputs@c 0020  
                                        fputs@i 0021                                          fputs@s 001C  
                                  __mediumconst FE74                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0AD4                                 ??_EUSART1_Write 0011  
      TMR1_SetInterruptHandler@InterruptHandler 0011        TMR0_SetInterruptHandler@InterruptHandler 0011  
                       __end_of_TMR1_WriteTimer 0D8C                   __size_of_INTERRUPT_Initialize 0004  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 0DC6  
                                    __accesstop 0060                         __end_of__initialization 0A6A  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 0C56  
                                  __pidataBANK1 080C                                    __pidataBANK2 08B4  
                           ??_SYSTEM_Initialize 0015                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 09F2  
                                 __end_of_fputs 0B72                                   __end_of_putch 0E14  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read 0D64  
                                       ??_fputc 0017                       __end_of_SYSTEM_Initialize 0DE0  
                                       ??_fputs 0020                              __size_of_myTMR0ISR 00F4  
                            __size_of_myTMR1ISR 00DC                                         ??_putch 0012  
                                    __pbssBANK0 0094                 __end_of_EUSART1_SetErrorHandler 0E46  
              __end_of_TMR0_SetInterruptHandler 0E28                                      ??_TMR0_ISR 0009  
                                    ??_TMR1_ISR 000B                                ?_TMR0_WriteTimer 0001  
                                       ?_printf 00C7                                         ?_strlen 0011  
        __end_of_EUSART1_SetFramingErrorHandler 0E3C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0E32                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0166                                         i2u60_40 0D72  
                                       i2u60_41 0D6E                                         i2u70_40 0746  
                                       i2u70_41 0742                                         _OSCTUNE 000F9B  
                                       i2u72_40 0C3C                                         i2u80_40 003E  
                                       i2u72_41 0C38                                         i2u80_41 003A  
                                       i2u65_40 058C                                         i2u81_40 0054  
                                       i2u65_41 0588                                         i2u81_41 0050  
                                       i2u66_40 0624                                         i2u73_48 0C42  
                                       i2u74_40 0BD0                                         i2u82_40 0062  
                                       i2u66_41 0620                                         i2u73_49 0C54  
                                       i2u74_41 0BCC                                         i2u82_41 005E  
                                       i2u67_40 067E                                         i2u83_40 0070  
                                       i2u67_41 067A                                         i2u83_41 006C  
                                       _SPBRGH1 000FB0                                         i2u68_40 069E  
                                       i2u75_48 0BD6                                         i2u68_41 069A  
                                       i2u75_49 0BE8                                         i2u69_40 0710  
                                       i2u69_41 070A                                         i2u69_46 0712  
                                       i2u79_40 0030                                         i2u79_41 002C  
                              ?_TMR1_WriteTimer 0001                                         __Hparam 0000  
                                       __Lparam 0000                               __end_of_myTMR0ISR 066E  
                             __end_of_myTMR1ISR 074A                                       ?_vfprintf 00BF  
                           _EUSART1_is_rx_ready 0DF6                                         __pcinit 09F2  
                                       __ramtop 1000                                         __ptext0 0098  
                                       __ptext1 0D14                                         __ptext2 0A74  
                                       __ptext3 0414                                         __ptext4 0AD4  
                                       __ptext5 074A                                         __ptext6 0BEA  
                                       __ptext7 0B2E                                         __ptext8 095C  
                                       __ptext9 0E0A                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                  ??_TMR1_DefaultInterruptHandler 0001  
                               __size_of_strlen 0036                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 0DAA                                    __size_of_pad 00C2  
             __size_of_TMR1_SetInterruptHandler 000A                              _EUSART1_Initialize 0B72  
                      ??_PIN_MANAGER_Initialize 0011                       ?_TMR1_SetInterruptHandler 0011  
                                       main@cmd 00D8                      __size_of_SYSTEM_Initialize 001A  
                                       main@sum 00D9                            end_of_initialization 0A6A  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0015                     _EUSART1_OverrunErrorHandler 0098  
                                       fputs@fp 001E                               __end_of_vfpfcnvrt 057A  
                         TMR0_ReadTimer@readVal 0015                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 003C  
                                _TMR0_ReadTimer 0D8C                            ??_EUSART1_Initialize 0013  
                                       strlen@a 0013                                         strlen@s 0011  
                      _TMR0_SetInterruptHandler 0E1E                                       _PORTAbits 000F80  
                                    _songLength 0090                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0011                           ??_EUSART1_is_rx_ready 0011  
                                  _EUSART1_Read 0D3C                          __end_of_TMR0_ReadTimer 0DAA  
                  __end_of_INTERRUPT_Initialize 0E54                                     vfpfcnvrt@ap 0037  
                                   vfpfcnvrt@fp 0033                               __size_of_TMR0_ISR 0036  
                             __size_of_TMR1_ISR 003A                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0D3C                                  __end_of_strlen 0C20  
                           start_initialization 09F2                        __size_of_TMR0_Initialize 0034  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_pad 080C  
                                   putch@txData 0012                           __end_of_EUSART1_Write 0DF6  
                      __size_of_TMR1_Initialize 002A                                     vfprintf@fmt 00C1  
                               ?_TMR0_ReadTimer 0011                                     __pdataBANK0 0060  
                                   __pdataBANK1 0100                                     __pdataBANK2 0200  
                                      ??_printf 003C                                        ??_strlen 0013  
                                   __pbssCOMRAM 003C                                   __pcstackBANK0 00BF  
              ??_EUSART1_SetFramingErrorHandler 0013                 ?_EUSART1_SetFramingErrorHandler 0011  
                         _TMR0_InterruptHandler 0048                          _PIN_MANAGER_Initialize 0CBE  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 0E1E  
                                 __pmediumconst FE74                    ??_INTERRUPT_InterruptManager 000B  
                             __size_of_vfprintf 0060                                       _myTMR0ISR 057A  
                                     _myTMR1ISR 066E                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 0096                         _EUSART1_SetErrorHandler 0E3C  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 0E50  
                             ??_TMR0_Initialize 0013         EUSART1_SetErrorHandler@interruptHandler 0011  
                                      _LATBbits 000F8A                                       _myState_t 004B  
                                      _PIE1bits 000F9D                                       _noteIndex 009D  
                      __size_of_TMR1_WriteTimer 0028             __size_of_INTERRUPT_InterruptManager 008C  
                    ??_TMR0_SetInterruptHandler 0013                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0C20  
                                      _TMR1_ISR 0BB0                                       _songIndex 009C  
                                     _vfpfcnvrt 0414                        TMR0_ReadTimer@readValLow 0017  
                             ??_TMR1_Initialize 0013                                      ?_myTMR0ISR 0001  
                                    ?_myTMR1ISR 0001                                       main@final 00D5  
                                    vfpfcnvrt@c 003B                                     _INTCON2bits 000FF1  
                                     copy_data0 0A06                                       copy_data1 0A26  
                                     copy_data2 0A46                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                      vfprintf@ap 00C3  
                                      __Lrparam 0000                                      vfprintf@fp 00BF  
                       ??_OSCILLATOR_Initialize 0011                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 0033                        _TMR1_SetInterruptHandler 0E14  
                         _TMR1_InterruptHandler 0042                       ??_EUSART1_SetErrorHandler 0013  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 0E0A  
                                      __ptext10 0DE0                                        __ptext11 0D8C  
                                      __ptext20 0B72                                        __ptext12 0DC6  
                                      __ptext21 0E28                                        __ptext13 0CEA  
                                    _T1GCONbits 000FCC                                        __ptext30 0D64  
                                      __ptext22 0E32                                        __ptext14 0E14  
                                      __ptext31 0C20                                        __ptext23 0E3C  
                                      __ptext15 0C8A                                        __ptext32 0E56  
                                      __ptext24 0DF6                                        __ptext16 0E1E  
                                      __ptext33 057A                                        __ptext25 0D3C  
                                      __ptext17 0CBE                                        __ptext34 0E46  
                                      __ptext18 0DAA                                        __ptext35 0000  
                                      __ptext27 0BB0                                        __ptext19 0E50  
                                      __ptext28 0E54                                        __ptext29 066E  
                       TMR0_WriteTimer@timerVal 0001                               ??_TMR0_WriteTimer 0003  
                                      _duration 0100                                   __size_of_ctoa 005A  
                                 __size_of_main 037C                                ??_TMR0_ReadTimer 0013  
          __end_of_TMR0_DefaultInterruptHandler 0E58           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 0E56                                        _playNote 004C  
                                      _playSong 009E  EUSART1_SetOverrunErrorHandler@interruptHandler 0011  
                                      int$flags 004E                                        _vfprintf 0A74  
            __end_of_INTERRUPT_InterruptManager 0094                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00C7                               ??_TMR1_WriteTimer 0003  
                   _EUSART1_FramingErrorHandler 009A                                     ??_myTMR0ISR 0003  
                                   ??_myTMR1ISR 0003                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0011                                        intlevel2 0000  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0E32  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0E28  
                                    _RCSTA1bits 000FAB                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 00CD  
EUSART1_SetFramingErrorHandler@interruptHandler 0011                                     ??_vfpfcnvrt 0039  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004D  
                               _TMR0_Initialize 0C8A                  __end_of_PIN_MANAGER_Initialize 0CEA  
                               _TMR1_Initialize 0CEA                                    fp__myTMR0ISR 0000  
                                  fp__myTMR1ISR 0000  
