

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Sep 09 15:03:52 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 09/04/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F26K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  00FD16                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for main@F6074
    63  00FD16  73                 	db	115
    64  00FD17  6F                 	db	111
    65  00FD18  73                 	db	115
    66  00FD19  00                 	db	0
    67                           
    68                           	psect	idataBANK1
    69  00FE6E                     __pidataBANK1:
    70                           	callstack 0
    71                           
    72                           ;initializer for blink@F6088
    73  00FE6E  00                 	db	0
    74  00FE6F  01                 	db	1
    75  00FE70  02                 	db	2
    76  00FE71  00                 	db	0
    77  00FE72  00                 	db	0
    78  00FE73  01                 	db	1
    79  00FE74  00                 	db	0
    80  00FE75  00                 	db	0
    81  00FE76  00                 	db	0
    82  00FE77  02                 	db	2
    83  00FE78  01                 	db	1
    84  00FE79  00                 	db	0
    85  00FE7A  01                 	db	1
    86  00FE7B  00                 	db	0
    87  00FE7C  02                 	db	2
    88  00FE7D  01                 	db	1
    89  00FE7E  00                 	db	0
    90  00FE7F  00                 	db	0
    91  00FE80  02                 	db	2
    92  00FE81  00                 	db	0
    93  00FE82  00                 	db	0
    94  00FE83  02                 	db	2
    95  00FE84  00                 	db	0
    96  00FE85  00                 	db	0
    97  00FE86  00                 	db	0
    98  00FE87  00                 	db	0
    99  00FE88  00                 	db	0
   100  00FE89  01                 	db	1
   101  00FE8A  00                 	db	0
   102  00FE8B  02                 	db	2
   103  00FE8C  01                 	db	1
   104  00FE8D  01                 	db	1
   105  00FE8E  00                 	db	0
   106  00FE8F  02                 	db	2
   107  00FE90  00                 	db	0
   108  00FE91  00                 	db	0
   109  00FE92  00                 	db	0
   110  00FE93  00                 	db	0
   111  00FE94  00                 	db	0
   112  00FE95  02                 	db	2
   113  00FE96  00                 	db	0
   114  00FE97  00                 	db	0
   115  00FE98  02                 	db	2
   116  00FE99  00                 	db	0
   117  00FE9A  00                 	db	0
   118  00FE9B  00                 	db	0
   119  00FE9C  01                 	db	1
   120  00FE9D  01                 	db	1
   121  00FE9E  01                 	db	1
   122  00FE9F  02                 	db	2
   123  00FEA0  01                 	db	1
   124  00FEA1  00                 	db	0
   125  00FEA2  01                 	db	1
   126  00FEA3  02                 	db	2
   127  00FEA4  00                 	db	0
   128  00FEA5  00                 	db	0
   129  00FEA6  01                 	db	1
   130  00FEA7  00                 	db	0
   131  00FEA8  00                 	db	0
   132  00FEA9  02                 	db	2
   133  00FEAA  01                 	db	1
   134  00FEAB  01                 	db	1
   135  00FEAC  02                 	db	2
   136  00FEAD  00                 	db	0
   137  00FEAE  00                 	db	0
   138  00FEAF  01                 	db	1
   139  00FEB0  00                 	db	0
   140  00FEB1  02                 	db	2
   141  00FEB2  00                 	db	0
   142  00FEB3  00                 	db	0
   143  00FEB4  01                 	db	1
   144  00FEB5  01                 	db	1
   145  00FEB6  01                 	db	1
   146  00FEB7  02                 	db	2
   147  00FEB8  00                 	db	0
   148  00FEB9  00                 	db	0
   149  00FEBA  01                 	db	1
   150  00FEBB  01                 	db	1
   151  00FEBC  00                 	db	0
   152  00FEBD  02                 	db	2
   153  00FEBE  01                 	db	1
   154  00FEBF  01                 	db	1
   155  00FEC0  00                 	db	0
   156  00FEC1  01                 	db	1
   157  00FEC2  02                 	db	2
   158  00FEC3  00                 	db	0
   159  00FEC4  01                 	db	1
   160  00FEC5  00                 	db	0
   161  00FEC6  02                 	db	2
   162  00FEC7  00                 	db	0
   163  00FEC8  00                 	db	0
   164  00FEC9  00                 	db	0
   165  00FECA  00                 	db	0
   166  00FECB  02                 	db	2
   167  00FECC  00                 	db	0
   168  00FECD  01                 	db	1
   169  00FECE  02                 	db	2
   170  00FECF  00                 	db	0
   171  00FED0  00                 	db	0
   172  00FED1  00                 	db	0
   173  00FED2  00                 	db	0
   174  00FED3  00                 	db	0
   175  00FED4  01                 	db	1
   176  00FED5  02                 	db	2
   177  00FED6  00                 	db	0
   178  00FED7  00                 	db	0
   179  00FED8  00                 	db	0
   180  00FED9  00                 	db	0
   181  00FEDA  01                 	db	1
   182  00FEDB  02                 	db	2
   183  00FEDC  00                 	db	0
   184  00FEDD  01                 	db	1
   185  00FEDE  01                 	db	1
   186  00FEDF  02                 	db	2
   187  00FEE0  00                 	db	0
   188  00FEE1  01                 	db	1
   189  00FEE2  00                 	db	0
   190  00FEE3  00                 	db	0
   191  00FEE4  01                 	db	1
   192  00FEE5  02                 	db	2
   193  00FEE6  01                 	db	1
   194  00FEE7  00                 	db	0
   195  00FEE8  01                 	db	1
   196  00FEE9  01                 	db	1
   197  00FEEA  02                 	db	2
   198  00FEEB  01                 	db	1
   199  00FEEC  01                 	db	1
   200  00FEED  00                 	db	0
   201  00FEEE  00                 	db	0
   202  00FEEF  02                 	db	2
   203  0000                     _ANSELBbits	set	3897
   204  0000                     _ANSELAbits	set	3896
   205  0000                     _TRISBbits	set	3987
   206  0000                     _TRISAbits	set	3986
   207  0000                     _OSCTUNEbits	set	3995
   208  0000                     _OSCCONbits	set	4051
   209  0000                     _LATBbits	set	3978
   210  0000                     _PORTAbits	set	3968
   211                           
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215  00FDC6                     __pcinit:
   216                           	callstack 0
   217  00FDC6                     start_initialization:
   218                           	callstack 0
   219  00FDC6                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK1 (130 bytes)
   223                           ; load TBLPTR registers with __pidataBANK1
   224  00FDC6  0E6E               	movlw	low __pidataBANK1
   225  00FDC8  6EF6               	movwf	tblptrl,c
   226  00FDCA  0EFE               	movlw	high __pidataBANK1
   227  00FDCC  6EF7               	movwf	tblptrh,c
   228  00FDCE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   229  00FDD0  6EF8               	movwf	tblptru,c
   230  00FDD2  EE01  F000         	lfsr	0,__pdataBANK1
   231  00FDD6  EE10 F082          	lfsr	1,130
   232  00FDDA                     copy_data0:
   233  00FDDA  0009               	tblrd		*+
   234  00FDDC  CFF5 FFEE          	movff	tablat,postinc0
   235  00FDE0  50E5               	movf	postdec1,w,c
   236  00FDE2  50E1               	movf	fsr1l,w,c
   237  00FDE4  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (4 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  00FDE6  0E16               	movlw	low __pidataCOMRAM
   242  00FDE8  6EF6               	movwf	tblptrl,c
   243  00FDEA  0EFD               	movlw	high __pidataCOMRAM
   244  00FDEC  6EF7               	movwf	tblptrh,c
   245  00FDEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  00FDF0  6EF8               	movwf	tblptru,c
   247  00FDF2  EE00  F010         	lfsr	0,__pdataCOMRAM
   248  00FDF6  EE10 F004          	lfsr	1,4
   249  00FDFA                     copy_data1:
   250  00FDFA  0009               	tblrd		*+
   251  00FDFC  CFF5 FFEE          	movff	tablat,postinc0
   252  00FE00  50E5               	movf	postdec1,w,c
   253  00FE02  50E1               	movf	fsr1l,w,c
   254  00FE04  E1FA               	bnz	copy_data1
   255  00FE06                     end_of_initialization:
   256                           	callstack 0
   257  00FE06                     __end_of__initialization:
   258                           	callstack 0
   259  00FE06  0100               	movlb	0
   260  00FE08  EF06  F07F         	goto	_main	;jump to C main() function
   261                           
   262                           	psect	dataCOMRAM
   263  000010                     __pdataCOMRAM:
   264                           	callstack 0
   265  000010                     main@F6074:
   266                           	callstack 0
   267  000010                     	ds	4
   268                           
   269                           	psect	dataBANK1
   270  000100                     __pdataBANK1:
   271                           	callstack 0
   272  000100                     blink@F6088:
   273                           	callstack 0
   274  000100                     	ds	130
   275                           
   276                           	psect	cstackBANK0
   277  000060                     __pcstackBANK0:
   278                           	callstack 0
   279  000060                     blink@morseCode:
   280                           	callstack 0
   281                           
   282                           ; 130 bytes @ 0x0
   283  000060                     	ds	130
   284  0000E2                     blink@index:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x82
   288  0000E2                     	ds	1
   289  0000E3                     blink@letter:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x83
   293  0000E3                     	ds	1
   294  0000E4                     blink@sign:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x84
   298  0000E4                     	ds	1
   299  0000E5                     blink@i:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x85
   303  0000E5                     	ds	1
   304                           
   305                           	psect	cstackCOMRAM
   306  000001                     __pcstackCOMRAM:
   307                           	callstack 0
   308  000001                     convert@letter:
   309                           	callstack 0
   310  000001                     microSecondDelay@us:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     convert@num:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x1
   319  000002                     	ds	1
   320  000003                     microSecondDelay@i:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324  000003                     	ds	2
   325  000005                     milliSecondDelay@ms:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329  000005                     	ds	2
   330  000007                     milliSecondDelay@i:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x6
   334  000007                     	ds	2
   335  000009                     ??_blink:
   336                           
   337                           ; 1 bytes @ 0x8
   338  000009                     	ds	2
   339  00000B                     main@phrase:
   340                           	callstack 0
   341                           
   342                           ; 4 bytes @ 0xA
   343  00000B                     	ds	4
   344  00000F                     main@i:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xE
   348  00000F                     	ds	1
   349                           
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 66 in file "Lab02.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  i               1   14[COMRAM] unsigned char 
   360 ;;  phrase          4   10[COMRAM] unsigned char [4]
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;Total ram usage:        5 bytes
   375 ;; Hardware stack levels required when called:    3
   376 ;; This function calls:
   377 ;;		_blink
   378 ;;		_initpic
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  00FE0C                     __ptext0:
   386                           	callstack 0
   387  00FE0C                     _main:
   388                           	callstack 28
   389  00FE0C                     
   390                           ;Lab02.c: 68:     initpic();
   391  00FE0C  EC8D  F07E         	call	_initpic	;wreg free
   392  00FE10                     l27:
   393  00FE10  B480               	btfsc	128,2,c	;volatile
   394  00FE12  EF0D  F07F         	goto	u231
   395  00FE16  EF0F  F07F         	goto	u230
   396  00FE1A                     u231:
   397  00FE1A  EF08  F07F         	goto	l27
   398  00FE1E                     u230:
   399  00FE1E                     
   400                           ;Lab02.c: 72:         char phrase[] = "sos";
   401  00FE1E  C010  F00B         	movff	main@F6074,main@phrase
   402  00FE22  C011  F00C         	movff	main@F6074+1,main@phrase+1
   403  00FE26  C012  F00D         	movff	main@F6074+2,main@phrase+2
   404  00FE2A  C013  F00E         	movff	main@F6074+3,main@phrase+3
   405  00FE2E                     
   406                           ;Lab02.c: 73:         for(uint8_t i = 0; phrase[i] != '\0'; ++i) {
   407  00FE2E  0E00               	movlw	0
   408  00FE30  6E0F               	movwf	main@i^0,c
   409  00FE32  EF25  F07F         	goto	l915
   410  00FE36                     l911:
   411                           
   412                           ;Lab02.c: 74:             blink(phrase[i]);
   413  00FE36  0E0B               	movlw	low main@phrase
   414  00FE38  240F               	addwf	main@i^0,w,c
   415  00FE3A  6ED9               	movwf	fsr2l,c
   416  00FE3C  6ADA               	clrf	fsr2h,c
   417  00FE3E  0E00               	movlw	high main@phrase
   418  00FE40  22DA               	addwfc	fsr2h,f,c
   419  00FE42  50DF               	movf	indf2,w,c
   420  00FE44  EC78  F07F         	call	_blink
   421  00FE48                     
   422                           ;Lab02.c: 75:         }
   423  00FE48  2A0F               	incf	main@i^0,f,c
   424  00FE4A                     l915:
   425  00FE4A  0E0B               	movlw	low main@phrase
   426  00FE4C  240F               	addwf	main@i^0,w,c
   427  00FE4E  6ED9               	movwf	fsr2l,c
   428  00FE50  6ADA               	clrf	fsr2h,c
   429  00FE52  0E00               	movlw	high main@phrase
   430  00FE54  22DA               	addwfc	fsr2h,f,c
   431  00FE56  50DF               	movf	indf2,w,c
   432  00FE58  A4D8               	btfss	status,2,c
   433  00FE5A  EF31  F07F         	goto	u241
   434  00FE5E  EF33  F07F         	goto	u240
   435  00FE62                     u241:
   436  00FE62  EF1B  F07F         	goto	l911
   437  00FE66                     u240:
   438  00FE66  EF08  F07F         	goto	l27
   439  00FE6A  EF00  F000         	goto	start
   440  00FE6E                     __end_of_main:
   441                           	callstack 0
   442                           
   443 ;; *************** function _initpic *****************
   444 ;; Defined at:
   445 ;;		line 166 in file "Lab02.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		None
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text1
   473  00FD1A                     __ptext1:
   474                           	callstack 0
   475  00FD1A                     _initpic:
   476                           	callstack 30
   477  00FD1A                     
   478                           ;Lab02.c: 169:     OSCCONbits.IRCF2 = 1;
   479  00FD1A  8CD3               	bsf	211,6,c	;volatile
   480                           
   481                           ;Lab02.c: 170:     OSCCONbits.IRCF1 = 1;
   482  00FD1C  8AD3               	bsf	211,5,c	;volatile
   483                           
   484                           ;Lab02.c: 171:     OSCCONbits.IRCF0 = 1;
   485  00FD1E  88D3               	bsf	211,4,c	;volatile
   486                           
   487                           ;Lab02.c: 172:     OSCTUNEbits.PLLEN = 1;
   488  00FD20  8C9B               	bsf	155,6,c	;volatile
   489                           
   490                           ;Lab02.c: 174:     ANSELAbits.ANSA2 = 0;
   491  00FD22  010F               	movlb	15	; () banked
   492  00FD24  9538               	bcf	56,2,b	;volatile
   493                           
   494                           ;Lab02.c: 175:     TRISAbits.TRISA2 = 1;
   495  00FD26  8492               	bsf	146,2,c	;volatile
   496                           
   497                           ;Lab02.c: 177:     ANSELBbits.ANSB5 = 0;
   498  00FD28  9B39               	bcf	57,5,b	;volatile
   499                           
   500                           ;Lab02.c: 178:     TRISBbits.TRISB5 = 0;
   501  00FD2A  9A93               	bcf	147,5,c	;volatile
   502  00FD2C                     
   503                           ; BSR set to: 15
   504  00FD2C  0012               	return		;funcret
   505  00FD2E                     __end_of_initpic:
   506                           	callstack 0
   507                           
   508 ;; *************** function _blink *****************
   509 ;; Defined at:
   510 ;;		line 104 in file "Lab02.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  letter          1    wreg     unsigned char 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  letter          1  131[BANK0 ] unsigned char 
   515 ;;  sign            1  132[BANK0 ] unsigned char 
   516 ;;  i               1  133[BANK0 ] unsigned char 
   517 ;;  morseCode     130    0[BANK0 ] unsigned char [5][26]
   518 ;;  index           1  130[BANK0 ] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0     134       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         2     134       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:      136 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		_convert
   537 ;;		_milliSecondDelay
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  00FEF0                     __ptext2:
   545                           	callstack 0
   546  00FEF0                     _blink:
   547                           	callstack 28
   548                           
   549                           ; BSR set to: 15
   550                           ;incstack = 0
   551                           ;blink@letter stored from wreg
   552  00FEF0  0100               	movlb	0	; () banked
   553  00FEF2  6FE3               	movwf	blink@letter& (0+255),b
   554  00FEF4                     
   555                           ;Lab02.c: 105:     if (letter == ' ') {
   556  00FEF4  0E20               	movlw	32
   557  00FEF6  0100               	movlb	0	; () banked
   558  00FEF8  19E3               	xorwf	blink@letter& (0+255),w,b
   559  00FEFA  A4D8               	btfss	status,2,c
   560  00FEFC  EF82  F07F         	goto	u171
   561  00FF00  EF84  F07F         	goto	u170
   562  00FF04                     u171:
   563  00FF04  EF8C  F07F         	goto	l867
   564  00FF08                     u170:
   565  00FF08                     
   566                           ; BSR set to: 0
   567                           ;Lab02.c: 106:         milliSecondDelay(7*200 - 3*200);
   568  00FF08  0E03               	movlw	3
   569  00FF0A  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   570  00FF0C  0E20               	movlw	32
   571  00FF0E  6E05               	movwf	milliSecondDelay@ms^0,c
   572  00FF10  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   573  00FF14  EFFF  F07F         	goto	l58
   574  00FF18                     l867:
   575                           
   576                           ; BSR set to: 0
   577                           ;Lab02.c: 110:     uint8_t morseCode[26][5] = {
   578  00FF18  EE21  F000         	lfsr	2,blink@F6088
   579  00FF1C  EE10  F060         	lfsr	1,blink@morseCode
   580  00FF20  0E81               	movlw	129
   581  00FF22                     u181:
   582  00FF22  CFDE FFE6          	movff	postinc2,postinc1
   583  00FF26  06E8               	decf	wreg,f,c
   584  00FF28  E2FC               	bc	u181
   585  00FF2A  0E82               	movlw	130
   586  00FF2C  5ED9               	subwf	fsr2l,f,c
   587  00FF2E  5EE1               	subwf	fsr1l,f,c
   588  00FF30                     
   589                           ; BSR set to: 0
   590                           ;Lab02.c: 139:     uint8_t index = convert(letter);
   591  00FF30  51E3               	movf	blink@letter& (0+255),w,b
   592  00FF32  EC97  F07E         	call	_convert
   593  00FF36  0100               	movlb	0	; () banked
   594  00FF38  6FE2               	movwf	blink@index& (0+255),b
   595  00FF3A                     
   596                           ; BSR set to: 0
   597                           ;Lab02.c: 141:     for(uint8_t i = 0; i < 5; ++i) {
   598  00FF3A  0E00               	movlw	0
   599  00FF3C  6FE5               	movwf	blink@i& (0+255),b
   600  00FF3E                     l877:
   601                           
   602                           ; BSR set to: 0
   603                           ;Lab02.c: 142:         uint8_t sign = morseCode[index][i];
   604  00FF3E  51E2               	movf	blink@index& (0+255),w,b
   605  00FF40  0D05               	mullw	5
   606  00FF42  0E60               	movlw	low blink@morseCode
   607  00FF44  6E09               	movwf	??_blink^0,c
   608  00FF46  0E00               	movlw	high blink@morseCode
   609  00FF48  6E0A               	movwf	(??_blink+1)^0,c
   610  00FF4A  50F3               	movf	243,w,c
   611  00FF4C  2609               	addwf	??_blink^0,f,c
   612  00FF4E  50F4               	movf	244,w,c
   613  00FF50  220A               	addwfc	(??_blink+1)^0,f,c
   614  00FF52  51E5               	movf	blink@i& (0+255),w,b
   615  00FF54  2409               	addwf	??_blink^0,w,c
   616  00FF56  6ED9               	movwf	fsr2l,c
   617  00FF58  0E00               	movlw	0
   618  00FF5A  200A               	addwfc	(??_blink+1)^0,w,c
   619  00FF5C  6EDA               	movwf	fsr2h,c
   620  00FF5E  50DF               	movf	indf2,w,c
   621  00FF60  6FE4               	movwf	blink@sign& (0+255),b
   622  00FF62                     
   623                           ; BSR set to: 0
   624                           ;Lab02.c: 143:         if(sign == 2) {
   625  00FF62  0E02               	movlw	2
   626  00FF64  19E4               	xorwf	blink@sign& (0+255),w,b
   627  00FF66  A4D8               	btfss	status,2,c
   628  00FF68  EFB8  F07F         	goto	u191
   629  00FF6C  EFBA  F07F         	goto	u190
   630  00FF70                     u191:
   631  00FF70  EFC5  F07F         	goto	l885
   632  00FF74                     u190:
   633  00FF74                     
   634                           ; BSR set to: 0
   635                           ;Lab02.c: 144:             milliSecondDelay(3*200 - 1*200);
   636  00FF74  0E01               	movlw	1
   637  00FF76  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   638  00FF78  0E90               	movlw	144
   639  00FF7A  6E05               	movwf	milliSecondDelay@ms^0,c
   640  00FF7C  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   641  00FF80                     
   642                           ;Lab02.c: 145:             i = 5;
   643  00FF80  0E05               	movlw	5
   644  00FF82  0100               	movlb	0	; () banked
   645  00FF84  6FE5               	movwf	blink@i& (0+255),b
   646                           
   647                           ;Lab02.c: 146:         }
   648  00FF86  EFF5  F07F         	goto	l903
   649  00FF8A                     l885:
   650                           
   651                           ; BSR set to: 0
   652                           ;Lab02.c: 148:             if(sign == 0) {
   653  00FF8A  51E4               	movf	blink@sign& (0+255),w,b
   654  00FF8C  A4D8               	btfss	status,2,c
   655  00FF8E  EFCB  F07F         	goto	u201
   656  00FF92  EFCD  F07F         	goto	u200
   657  00FF96                     u201:
   658  00FF96  EFDD  F07F         	goto	l895
   659  00FF9A                     u200:
   660  00FF9A                     
   661                           ; BSR set to: 0
   662                           ;Lab02.c: 149:                 LATBbits.LATB5 = 0;
   663  00FF9A  9A8A               	bcf	138,5,c	;volatile
   664  00FF9C                     
   665                           ; BSR set to: 0
   666                           ;Lab02.c: 150:                 milliSecondDelay(1*200);
   667  00FF9C  0E00               	movlw	0
   668  00FF9E  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   669  00FFA0  0EC8               	movlw	200
   670  00FFA2  6E05               	movwf	milliSecondDelay@ms^0,c
   671  00FFA4  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   672  00FFA8                     
   673                           ;Lab02.c: 151:                 LATBbits.LATB5 = 1;
   674  00FFA8  8A8A               	bsf	138,5,c	;volatile
   675                           
   676                           ;Lab02.c: 152:                 milliSecondDelay(1*200);
   677  00FFAA  0E00               	movlw	0
   678  00FFAC  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   679  00FFAE  0EC8               	movlw	200
   680  00FFB0  6E05               	movwf	milliSecondDelay@ms^0,c
   681  00FFB2  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   682                           
   683                           ;Lab02.c: 153:                 continue;
   684  00FFB6  EFF5  F07F         	goto	l903
   685  00FFBA                     l895:
   686                           
   687                           ; BSR set to: 0
   688  00FFBA  05E4               	decf	blink@sign& (0+255),w,b
   689  00FFBC  A4D8               	btfss	status,2,c
   690  00FFBE  EFE3  F07F         	goto	u211
   691  00FFC2  EFE5  F07F         	goto	u210
   692  00FFC6                     u211:
   693  00FFC6  EFF5  F07F         	goto	l64
   694  00FFCA                     u210:
   695  00FFCA                     
   696                           ; BSR set to: 0
   697                           ;Lab02.c: 156:                 LATBbits.LATB5 = 0;
   698  00FFCA  9A8A               	bcf	138,5,c	;volatile
   699  00FFCC                     
   700                           ; BSR set to: 0
   701                           ;Lab02.c: 157:                 milliSecondDelay(3*200);
   702  00FFCC  0E02               	movlw	2
   703  00FFCE  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   704  00FFD0  0E58               	movlw	88
   705  00FFD2  6E05               	movwf	milliSecondDelay@ms^0,c
   706  00FFD4  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   707  00FFD8                     
   708                           ;Lab02.c: 158:                 LATBbits.LATB5 = 1;
   709  00FFD8  8A8A               	bsf	138,5,c	;volatile
   710                           
   711                           ;Lab02.c: 159:                 milliSecondDelay(1*200);
   712  00FFDA  0E00               	movlw	0
   713  00FFDC  6E06               	movwf	(milliSecondDelay@ms+1)^0,c
   714  00FFDE  0EC8               	movlw	200
   715  00FFE0  6E05               	movwf	milliSecondDelay@ms^0,c
   716  00FFE2  ECC9  F07E         	call	_milliSecondDelay	;wreg free
   717                           
   718                           ;Lab02.c: 160:                 continue;
   719  00FFE6  EFF5  F07F         	goto	l903
   720  00FFEA                     l64:
   721  00FFEA                     l903:
   722  00FFEA  0100               	movlb	0	; () banked
   723  00FFEC  2BE5               	incf	blink@i& (0+255),f,b
   724  00FFEE                     
   725                           ; BSR set to: 0
   726  00FFEE  0E04               	movlw	4
   727  00FFF0  65E5               	cpfsgt	blink@i& (0+255),b
   728  00FFF2  EFFD  F07F         	goto	u221
   729  00FFF6  EFFF  F07F         	goto	u220
   730  00FFFA                     u221:
   731  00FFFA  EF9F  F07F         	goto	l877
   732  00FFFE                     u220:
   733  00FFFE                     l58:
   734  00FFFE  0012               	return		;funcret
   735  010000                     __end_of_blink:
   736                           	callstack 0
   737                           
   738 ;; *************** function _milliSecondDelay *****************
   739 ;; Defined at:
   740 ;;		line 90 in file "Lab02.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  ms              2    4[COMRAM] unsigned short 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  i               2    6[COMRAM] unsigned short 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;Total ram usage:        4 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    1
   761 ;; This function calls:
   762 ;;		_microSecondDelay
   763 ;; This function is called by:
   764 ;;		_blink
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text3
   769  00FD92                     __ptext3:
   770                           	callstack 0
   771  00FD92                     _milliSecondDelay:
   772                           	callstack 28
   773  00FD92                     
   774                           ;Lab02.c: 91:     for (uint16_t i = 0; i < ms; ++i) {
   775  00FD92  0E00               	movlw	0
   776  00FD94  6E08               	movwf	(milliSecondDelay@i+1)^0,c
   777  00FD96  0E00               	movlw	0
   778  00FD98  6E07               	movwf	milliSecondDelay@i^0,c
   779  00FD9A  EFD7  F07E         	goto	l845
   780  00FD9E                     l841:
   781                           
   782                           ;Lab02.c: 92:          microSecondDelay(1000);
   783  00FD9E  0E03               	movlw	3
   784  00FDA0  6E02               	movwf	(microSecondDelay@us+1)^0,c
   785  00FDA2  0EE8               	movlw	232
   786  00FDA4  6E01               	movwf	microSecondDelay@us^0,c
   787  00FDA6  ECB0  F07E         	call	_microSecondDelay	;wreg free
   788  00FDAA                     
   789                           ;Lab02.c: 93:     }
   790  00FDAA  4A07               	infsnz	milliSecondDelay@i^0,f,c
   791  00FDAC  2A08               	incf	(milliSecondDelay@i+1)^0,f,c
   792  00FDAE                     l845:
   793  00FDAE  5005               	movf	milliSecondDelay@ms^0,w,c
   794  00FDB0  5C07               	subwf	milliSecondDelay@i^0,w,c
   795  00FDB2  5006               	movf	(milliSecondDelay@ms+1)^0,w,c
   796  00FDB4  5808               	subwfb	(milliSecondDelay@i+1)^0,w,c
   797  00FDB6  A0D8               	btfss	status,0,c
   798  00FDB8  EFE0  F07E         	goto	u141
   799  00FDBC  EFE2  F07E         	goto	u140
   800  00FDC0                     u141:
   801  00FDC0  EFCF  F07E         	goto	l841
   802  00FDC4                     u140:
   803  00FDC4  0012               	return		;funcret
   804  00FDC6                     __end_of_milliSecondDelay:
   805                           	callstack 0
   806                           
   807 ;; *************** function _microSecondDelay *****************
   808 ;; Defined at:
   809 ;;		line 80 in file "Lab02.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  us              2    0[COMRAM] unsigned short 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  i               2    2[COMRAM] unsigned short 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        4 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_milliSecondDelay
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text4
   837  00FD60                     __ptext4:
   838                           	callstack 0
   839  00FD60                     _microSecondDelay:
   840                           	callstack 28
   841  00FD60                     
   842                           ;Lab02.c: 81:      for(uint16_t i = 0; i < us; ++i) {
   843  00FD60  0E00               	movlw	0
   844  00FD62  6E04               	movwf	(microSecondDelay@i+1)^0,c
   845  00FD64  0E00               	movlw	0
   846  00FD66  6E03               	movwf	microSecondDelay@i^0,c
   847  00FD68  EFBD  F07E         	goto	l837
   848  00FD6C                     l40:
   849  00FD6C  F000               	nop		;# 
   850  00FD6E  F000               	nop		;# 
   851  00FD70  F000               	nop		;# 
   852  00FD72  F000               	nop		;# 
   853  00FD74  F000               	nop		;# 
   854  00FD76                     
   855                           ;Lab02.c: 87:      }
   856  00FD76  4A03               	infsnz	microSecondDelay@i^0,f,c
   857  00FD78  2A04               	incf	(microSecondDelay@i+1)^0,f,c
   858  00FD7A                     l837:
   859  00FD7A  5001               	movf	microSecondDelay@us^0,w,c
   860  00FD7C  5C03               	subwf	microSecondDelay@i^0,w,c
   861  00FD7E  5002               	movf	(microSecondDelay@us+1)^0,w,c
   862  00FD80  5804               	subwfb	(microSecondDelay@i+1)^0,w,c
   863  00FD82  A0D8               	btfss	status,0,c
   864  00FD84  EFC6  F07E         	goto	u131
   865  00FD88  EFC8  F07E         	goto	u130
   866  00FD8C                     u131:
   867  00FD8C  EFB6  F07E         	goto	l40
   868  00FD90                     u130:
   869  00FD90  0012               	return		;funcret
   870  00FD92                     __end_of_microSecondDelay:
   871                           	callstack 0
   872                           
   873 ;; *************** function _convert *****************
   874 ;; Defined at:
   875 ;;		line 96 in file "Lab02.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  letter          1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  letter          1    0[COMRAM] unsigned char 
   880 ;;  num             1    1[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      unsigned char 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_blink
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text5
   904  00FD2E                     __ptext5:
   905                           	callstack 0
   906  00FD2E                     _convert:
   907                           	callstack 29
   908                           
   909                           ;incstack = 0
   910                           ;convert@letter stored from wreg
   911  00FD2E  6E01               	movwf	convert@letter^0,c
   912  00FD30                     
   913                           ;Lab02.c: 97:     uint8_t num = letter;
   914  00FD30  C001  F002         	movff	convert@letter,convert@num
   915  00FD34                     
   916                           ;Lab02.c: 98:     if (num < 97 || num > 122 ) {
   917  00FD34  0E60               	movlw	96
   918  00FD36  6402               	cpfsgt	convert@num^0,c
   919  00FD38  EFA0  F07E         	goto	u151
   920  00FD3C  EFA2  F07E         	goto	u150
   921  00FD40                     u151:
   922  00FD40  EFAA  F07E         	goto	l853
   923  00FD44                     u150:
   924  00FD44  0E7A               	movlw	122
   925  00FD46  6402               	cpfsgt	convert@num^0,c
   926  00FD48  EFA8  F07E         	goto	u161
   927  00FD4C  EFAA  F07E         	goto	u160
   928  00FD50                     u161:
   929  00FD50  EFAD  F07E         	goto	l857
   930  00FD54                     u160:
   931  00FD54                     l853:
   932                           
   933                           ;Lab02.c: 99:         return 0;
   934  00FD54  0E00               	movlw	0
   935  00FD56  EFAF  F07E         	goto	l54
   936  00FD5A                     l857:
   937                           
   938                           ;Lab02.c: 101:     return (num - 97);
   939  00FD5A  5002               	movf	convert@num^0,w,c
   940  00FD5C  0F9F               	addlw	159
   941  00FD5E                     l54:
   942  00FD5E  0012               	return		;funcret
   943  00FD60                     __end_of_convert:
   944                           	callstack 0
   945  0000                     
   946                           	psect	rparam
   947  0000                     
   948                           	psect	idloc
   949                           
   950                           ;Config register IDLOC0 @ 0x200000
   951                           ;	unspecified, using default values
   952  200000                     	org	2097152
   953  200000  FF                 	db	255
   954                           
   955                           ;Config register IDLOC1 @ 0x200001
   956                           ;	unspecified, using default values
   957  200001                     	org	2097153
   958  200001  FF                 	db	255
   959                           
   960                           ;Config register IDLOC2 @ 0x200002
   961                           ;	unspecified, using default values
   962  200002                     	org	2097154
   963  200002  FF                 	db	255
   964                           
   965                           ;Config register IDLOC3 @ 0x200003
   966                           ;	unspecified, using default values
   967  200003                     	org	2097155
   968  200003  FF                 	db	255
   969                           
   970                           ;Config register IDLOC4 @ 0x200004
   971                           ;	unspecified, using default values
   972  200004                     	org	2097156
   973  200004  FF                 	db	255
   974                           
   975                           ;Config register IDLOC5 @ 0x200005
   976                           ;	unspecified, using default values
   977  200005                     	org	2097157
   978  200005  FF                 	db	255
   979                           
   980                           ;Config register IDLOC6 @ 0x200006
   981                           ;	unspecified, using default values
   982  200006                     	org	2097158
   983  200006  FF                 	db	255
   984                           
   985                           ;Config register IDLOC7 @ 0x200007
   986                           ;	unspecified, using default values
   987  200007                     	org	2097159
   988  200007  FF                 	db	255
   989                           
   990                           	psect	config
   991                           
   992                           ; Padding undefined space
   993  300000                     	org	3145728
   994  300000  FF                 	db	255
   995                           
   996                           ;Config register CONFIG1H @ 0x300001
   997                           ;	Oscillator Selection bits
   998                           ;	FOSC = INTIO67, Internal oscillator block
   999                           ;	4X PLL Enable
  1000                           ;	PLLCFG = OFF, Oscillator used directly
  1001                           ;	Primary clock enable bit
  1002                           ;	PRICLKEN = ON, Primary clock enabled
  1003                           ;	Fail-Safe Clock Monitor Enable bit
  1004                           ;	FCMEN = 0x0, unprogrammed default
  1005                           ;	Internal/External Oscillator Switchover bit
  1006                           ;	IESO = 0x0, unprogrammed default
  1007  300001                     	org	3145729
  1008  300001  28                 	db	40
  1009                           
  1010                           ;Config register CONFIG2L @ 0x300002
  1011                           ;	unspecified, using default values
  1012                           ;	Power-up Timer Enable bit
  1013                           ;	PWRTEN = 0x1, unprogrammed default
  1014                           ;	Brown-out Reset Enable bits
  1015                           ;	BOREN = 0x3, unprogrammed default
  1016                           ;	Brown Out Reset Voltage bits
  1017                           ;	BORV = 0x3, unprogrammed default
  1018  300002                     	org	3145730
  1019  300002  1F                 	db	31
  1020                           
  1021                           ;Config register CONFIG2H @ 0x300003
  1022                           ;	unspecified, using default values
  1023                           ;	Watchdog Timer Enable bits
  1024                           ;	WDTEN = 0x3, unprogrammed default
  1025                           ;	Watchdog Timer Postscale Select bits
  1026                           ;	WDTPS = 0xF, unprogrammed default
  1027  300003                     	org	3145731
  1028  300003  3F                 	db	63
  1029                           
  1030                           ; Padding undefined space
  1031  300004                     	org	3145732
  1032  300004  FF                 	db	255
  1033                           
  1034                           ;Config register CONFIG3H @ 0x300005
  1035                           ;	unspecified, using default values
  1036                           ;	CCP2 MUX bit
  1037                           ;	CCP2MX = 0x1, unprogrammed default
  1038                           ;	PORTB A/D Enable bit
  1039                           ;	PBADEN = 0x1, unprogrammed default
  1040                           ;	P3A/CCP3 Mux bit
  1041                           ;	CCP3MX = 0x1, unprogrammed default
  1042                           ;	HFINTOSC Fast Start-up
  1043                           ;	HFOFST = 0x1, unprogrammed default
  1044                           ;	Timer3 Clock input mux bit
  1045                           ;	T3CMX = 0x1, unprogrammed default
  1046                           ;	ECCP2 B output mux bit
  1047                           ;	P2BMX = 0x1, unprogrammed default
  1048                           ;	MCLR Pin Enable bit
  1049                           ;	MCLRE = 0x1, unprogrammed default
  1050  300005                     	org	3145733
  1051  300005  BF                 	db	191
  1052                           
  1053                           ;Config register CONFIG4L @ 0x300006
  1054                           ;	unspecified, using default values
  1055                           ;	Stack Full/Underflow Reset Enable bit
  1056                           ;	STVREN = 0x1, unprogrammed default
  1057                           ;	Single-Supply ICSP Enable bit
  1058                           ;	LVP = 0x1, unprogrammed default
  1059                           ;	Extended Instruction Set Enable bit
  1060                           ;	XINST = 0x0, unprogrammed default
  1061                           ;	Background Debug
  1062                           ;	DEBUG = 0x1, unprogrammed default
  1063  300006                     	org	3145734
  1064  300006  85                 	db	133
  1065                           
  1066                           ; Padding undefined space
  1067  300007                     	org	3145735
  1068  300007  FF                 	db	255
  1069                           
  1070                           ;Config register CONFIG5L @ 0x300008
  1071                           ;	unspecified, using default values
  1072                           ;	Code Protection Block 0
  1073                           ;	CP0 = 0x1, unprogrammed default
  1074                           ;	Code Protection Block 1
  1075                           ;	CP1 = 0x1, unprogrammed default
  1076                           ;	Code Protection Block 2
  1077                           ;	CP2 = 0x1, unprogrammed default
  1078                           ;	Code Protection Block 3
  1079                           ;	CP3 = 0x1, unprogrammed default
  1080  300008                     	org	3145736
  1081  300008  0F                 	db	15
  1082                           
  1083                           ;Config register CONFIG5H @ 0x300009
  1084                           ;	unspecified, using default values
  1085                           ;	Boot Block Code Protection bit
  1086                           ;	CPB = 0x1, unprogrammed default
  1087                           ;	Data EEPROM Code Protection bit
  1088                           ;	CPD = 0x1, unprogrammed default
  1089  300009                     	org	3145737
  1090  300009  C0                 	db	192
  1091                           
  1092                           ;Config register CONFIG6L @ 0x30000A
  1093                           ;	unspecified, using default values
  1094                           ;	Write Protection Block 0
  1095                           ;	WRT0 = 0x1, unprogrammed default
  1096                           ;	Write Protection Block 1
  1097                           ;	WRT1 = 0x1, unprogrammed default
  1098                           ;	Write Protection Block 2
  1099                           ;	WRT2 = 0x1, unprogrammed default
  1100                           ;	Write Protection Block 3
  1101                           ;	WRT3 = 0x1, unprogrammed default
  1102  30000A                     	org	3145738
  1103  30000A  0F                 	db	15
  1104                           
  1105                           ;Config register CONFIG6H @ 0x30000B
  1106                           ;	unspecified, using default values
  1107                           ;	Configuration Register Write Protection bit
  1108                           ;	WRTC = 0x1, unprogrammed default
  1109                           ;	Boot Block Write Protection bit
  1110                           ;	WRTB = 0x1, unprogrammed default
  1111                           ;	Data EEPROM Write Protection bit
  1112                           ;	WRTD = 0x1, unprogrammed default
  1113  30000B                     	org	3145739
  1114  30000B  E0                 	db	224
  1115                           
  1116                           ;Config register CONFIG7L @ 0x30000C
  1117                           ;	unspecified, using default values
  1118                           ;	Table Read Protection Block 0
  1119                           ;	EBTR0 = 0x1, unprogrammed default
  1120                           ;	Table Read Protection Block 1
  1121                           ;	EBTR1 = 0x1, unprogrammed default
  1122                           ;	Table Read Protection Block 2
  1123                           ;	EBTR2 = 0x1, unprogrammed default
  1124                           ;	Table Read Protection Block 3
  1125                           ;	EBTR3 = 0x1, unprogrammed default
  1126  30000C                     	org	3145740
  1127  30000C  0F                 	db	15
  1128                           
  1129                           ;Config register CONFIG7H @ 0x30000D
  1130                           ;	unspecified, using default values
  1131                           ;	Boot Block Table Read Protection bit
  1132                           ;	EBTRB = 0x1, unprogrammed default
  1133  30000D                     	org	3145741
  1134  30000D  40                 	db	64
  1135                           tosu	equ	0xFFF
  1136                           tosh	equ	0xFFE
  1137                           tosl	equ	0xFFD
  1138                           stkptr	equ	0xFFC
  1139                           pclatu	equ	0xFFB
  1140                           pclath	equ	0xFFA
  1141                           pcl	equ	0xFF9
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           indf0	equ	0xFEF
  1149                           postinc0	equ	0xFEE
  1150                           postdec0	equ	0xFED
  1151                           preinc0	equ	0xFEC
  1152                           plusw0	equ	0xFEB
  1153                           fsr0h	equ	0xFEA
  1154                           fsr0l	equ	0xFE9
  1155                           wreg	equ	0xFE8
  1156                           indf1	equ	0xFE7
  1157                           postinc1	equ	0xFE6
  1158                           postdec1	equ	0xFE5
  1159                           preinc1	equ	0xFE4
  1160                           plusw1	equ	0xFE3
  1161                           fsr1h	equ	0xFE2
  1162                           fsr1l	equ	0xFE1
  1163                           bsr	equ	0xFE0
  1164                           indf2	equ	0xFDF
  1165                           postinc2	equ	0xFDE
  1166                           postdec2	equ	0xFDD
  1167                           preinc2	equ	0xFDC
  1168                           plusw2	equ	0xFDB
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        134
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      19
    BANK0           160    134     134
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_blink
    _blink->_milliSecondDelay
    _milliSecondDelay->_microSecondDelay

Critical Paths under _main in BANK0

    _main->_blink

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1033
                                             10 COMRAM     5     5      0
                              _blink
                            _initpic
 ---------------------------------------------------------------------------------
 (1) _initpic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink                                              136   136      0     940
                                              8 COMRAM     2     2      0
                                              0 BANK0    134   134      0
                            _convert
                   _milliSecondDelay
 ---------------------------------------------------------------------------------
 (2) _milliSecondDelay                                     4     2      2     624
                                              4 COMRAM     4     2      2
                   _microSecondDelay
 ---------------------------------------------------------------------------------
 (3) _microSecondDelay                                     4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _convert                                              2     2      0      89
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     _convert
     _milliSecondDelay
       _microSecondDelay
   _initpic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      86       5       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      13       1       20.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      12        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Sep 09 15:03:52 2020

                       l40 FD6C                         l42 FD90                         l27 FE10  
                       l29 FE1E                         l54 FD5E                         l71 FD2C  
                       l48 FDC4                         l64 FFEA                         l58 FFFE  
                      l901 FFD8                        l903 FFEA                        l911 FE36  
                      l833 FD60                        l841 FD9E                        l905 FFEE  
                      l913 FE48                        l851 FD44                        l835 FD76  
                      l843 FDAA                        l915 FE4A                        l907 FE0C  
                      l853 FD54                        l837 FD7A                        l845 FDAE  
                      l861 FEF4                        l909 FE2E                        l847 FD30  
                      l839 FD92                        l871 FF3A                        l863 FF08  
                      l775 FD1A                        l857 FD5A                        l849 FD34  
                      l881 FF74                        l891 FFA8                        l883 FF80  
                      l867 FF18                        l885 FF8A                        l877 FF3E  
                      l869 FF30                        l887 FF9A                        l895 FFBA  
                      l879 FF62                        l897 FFCA                        l889 FF9C  
                      l899 FFCC           _milliSecondDelay FD92                        u200 FF9A  
                      u201 FF96                        u130 FD90                        u210 FFCA  
                      u131 FD8C                        u211 FFC6                        u140 FDC4  
                      u220 FFFE                        u141 FDC0                        u221 FFFA  
                      u150 FD44                        u230 FE1E                        u151 FD40  
                      u231 FE1A                        u160 FD54                        u240 FE66  
                      u161 FD50                        u241 FE62                        u170 FF08  
                      u171 FF04                        u181 FF22                        u190 FF74  
                      u191 FF70                        fsr1 000FE1                        fsr2 000FD9  
                      wreg 000FE8                       _main FE0C                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0000               ___param_bank 000000  
                    ?_main 0001            __end_of_convert FD60                      _blink FEF0  
          __end_of_initpic FD2E                      main@i 000F                      tablat 000FF5  
                    status 000FD8            __initialization FDC6               __end_of_main FE6E  
                   ??_main 000B              __activetblptr 000000                     ?_blink 0001  
__size_of_microSecondDelay 0032                     blink@i 00E5                  ??_convert 0001  
             __pdataCOMRAM 0010                  ??_initpic 0001                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization FE06   __end_of_milliSecondDelay FDC6              ___rparam_used 000001  
           __pcstackCOMRAM 0001               __pidataBANK1 FE6E              __end_of_blink 0000  
           blink@morseCode 0060                    ??_blink 0009                    __Hparam 0000  
                  __Lparam 0000              convert@letter 0001          milliSecondDelay@i 0007  
         _microSecondDelay FD60                    __pcinit FDC6                    __ramtop 1000  
                  __ptext0 FE0C                    __ptext1 FD1A                    __ptext2 FEF0  
                  __ptext3 FD92                    __ptext4 FD60                    __ptext5 FD2E  
                  _convert FD2E                    _initpic FD1A                 blink@F6088 0100  
     end_of_initialization FE06                 blink@index 00E2                    postdec1 000FE5  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
                _PORTAbits 000F80                  _TRISAbits 000F92                  _TRISBbits 000F93  
               main@phrase 000B          ?_milliSecondDelay 0005         ??_milliSecondDelay 0007  
            __pidataCOMRAM FD16                 convert@num 0002        start_initialization FDC6  
              __pdataBANK1 0100              __pcstackBANK0 0060   __end_of_microSecondDelay FD92  
                 ?_convert 0001                   ?_initpic 0001             __size_of_blink 0110  
                 _LATBbits 000F8A                  blink@sign 00E4                  main@F6074 0010  
                copy_data0 FDDA                  copy_data1 FDFA                   __Hrparam 0000  
                 __Lrparam 0000         milliSecondDelay@ms 0005                 _ANSELAbits 000F38  
               _ANSELBbits 000F39  __size_of_milliSecondDelay 0034           __size_of_convert 0032  
         __size_of_initpic 0014              __size_of_main 0062                _OSCTUNEbits 000F9B  
              blink@letter 00E3          ?_microSecondDelay 0001         ??_microSecondDelay 0003  
               _OSCCONbits 000FD3         microSecondDelay@us 0001          microSecondDelay@i 0003  
