

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Oct 08 17:09:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 09/04/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F26K22 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   118  0000                     
   119 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   120  0000                     
   121 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   122  0000                     
   123                           	psect	idataBANK0
   124  002716                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _bitPeriod
   128  002716  D055               	dw	53333
   129  002718  3415               	dw	13333
   130  00271A  1A0A               	dw	6666
   131  00271C  0682               	dw	1666
   132  00271E  0341               	dw	833
   133                           
   134                           ;initializer for stoa@F1144
   135  002720  28                 	db	40
   136  002721  6E                 	db	110
   137  002722  75                 	db	117
   138  002723  6C                 	db	108
   139  002724  6C                 	db	108
   140  002725  29                 	db	41
   141  002726  00                 	db	0
   142                           
   143                           ;initializer for _baudRateSelected
   144  002727  01                 	db	1
   145  0000                     _CCPTMRS0bits	set	3913
   146  0000                     _ANSELA	set	3896
   147  0000                     _ANSELB	set	3897
   148  0000                     _ANSELC	set	3898
   149  0000                     _TMR1	set	4046
   150  0000                     _PIR3bits	set	4004
   151  0000                     _RCONbits	set	4048
   152  0000                     _OSCTUNE	set	3995
   153  0000                     _OSCCON2	set	4050
   154  0000                     _OSCCON	set	4051
   155  0000                     _TXREG1	set	4013
   156  0000                     _RCREG1	set	4014
   157  0000                     _RCSTA1bits	set	4011
   158  0000                     _TXSTA1bits	set	4012
   159  0000                     _SPBRGH1	set	4016
   160  0000                     _SPBRG1	set	4015
   161  0000                     _TXSTA1	set	4012
   162  0000                     _RCSTA1	set	4011
   163  0000                     _BAUDCON1	set	4024
   164  0000                     _RCREG2	set	3956
   165  0000                     _RCSTA2bits	set	3953
   166  0000                     _TXREG2	set	3955
   167  0000                     _TXSTA2bits	set	3954
   168  0000                     _SPBRGH2	set	3958
   169  0000                     _SPBRG2	set	3957
   170  0000                     _TXSTA2	set	3954
   171  0000                     _RCSTA2	set	3953
   172  0000                     _BAUDCON2	set	3952
   173  0000                     _PIE3bits	set	4003
   174  0000                     _T1GCONbits	set	4044
   175  0000                     _T1CONbits	set	4045
   176  0000                     _T1CON	set	4045
   177  0000                     _TMR1L	set	4046
   178  0000                     _TMR1H	set	4047
   179  0000                     _T1GCON	set	4044
   180  0000                     _T2CONbits	set	4026
   181  0000                     _T2CON	set	4026
   182  0000                     _PIR1bits	set	3998
   183  0000                     _TMR2	set	4028
   184  0000                     _PR2	set	4027
   185  0000                     _CCPR2L	set	3943
   186  0000                     _CCPR2H	set	3944
   187  0000                     _PSTR2CON	set	3939
   188  0000                     _PWM2CON	set	3941
   189  0000                     _ECCP2AS	set	3940
   190  0000                     _CCP2CON	set	3942
   191  0000                     _INTCONbits	set	4082
   192  0000                     _INTCON2bits	set	4081
   193  0000                     _WPUB	set	3937
   194  0000                     _TRISC	set	3988
   195  0000                     _TRISB	set	3987
   196  0000                     _TRISA	set	3986
   197  0000                     _LATC	set	3979
   198  0000                     _LATB	set	3978
   199  0000                     _LATA	set	3977
   200  0000                     _PLLRDY	set	32407
   201                           
   202                           	psect	mediumconst
   203  00FC6A                     __pmediumconst:
   204                           	callstack 0
   205  00FC6A  00                 	db	0
   206  00FC6B                     STR_4:
   207                           
   208                           ; BSR set to: 0
   209  00FC6B  49                 	db	73	;'I'
   210  00FC6C  6E                 	db	110	;'n'
   211  00FC6D  73                 	db	115	;'s'
   212  00FC6E  74                 	db	116	;'t'
   213  00FC6F  61                 	db	97	;'a'
   214  00FC70  6C                 	db	108	;'l'
   215  00FC71  6C                 	db	108	;'l'
   216  00FC72  20                 	db	32
   217  00FC73  61                 	db	97	;'a'
   218  00FC74  20                 	db	32
   219  00FC75  6A                 	db	106	;'j'
   220  00FC76  75                 	db	117	;'u'
   221  00FC77  6D                 	db	109	;'m'
   222  00FC78  70                 	db	112	;'p'
   223  00FC79  65                 	db	101	;'e'
   224  00FC7A  72                 	db	114	;'r'
   225  00FC7B  20                 	db	32
   226  00FC7C  77                 	db	119	;'w'
   227  00FC7D  69                 	db	105	;'i'
   228  00FC7E  72                 	db	114	;'r'
   229  00FC7F  65                 	db	101	;'e'
   230  00FC80  20                 	db	32
   231  00FC81  66                 	db	102	;'f'
   232  00FC82  72                 	db	114	;'r'
   233  00FC83  6F                 	db	111	;'o'
   234  00FC84  6D                 	db	109	;'m'
   235  00FC85  20                 	db	32
   236  00FC86  52                 	db	82	;'R'
   237  00FC87  43                 	db	67	;'C'
   238  00FC88  30                 	db	48	;'0'
   239  00FC89  20                 	db	32
   240  00FC8A  74                 	db	116	;'t'
   241  00FC8B  6F                 	db	111	;'o'
   242  00FC8C  20                 	db	32
   243  00FC8D  52                 	db	82	;'R'
   244  00FC8E  42                 	db	66	;'B'
   245  00FC8F  37                 	db	55	;'7'
   246  00FC90  20                 	db	32
   247  00FC91  4F                 	db	79	;'O'
   248  00FC92  4E                 	db	78	;'N'
   249  00FC93  4C                 	db	76	;'L'
   250  00FC94  59                 	db	89	;'Y'
   251  00FC95  20                 	db	32
   252  00FC96  41                 	db	65	;'A'
   253  00FC97  46                 	db	70	;'F'
   254  00FC98  54                 	db	84	;'T'
   255  00FC99  45                 	db	69	;'E'
   256  00FC9A  52                 	db	82	;'R'
   257  00FC9B  20                 	db	32
   258  00FC9C  75                 	db	117	;'u'
   259  00FC9D  6E                 	db	110	;'n'
   260  00FC9E  70                 	db	112	;'p'
   261  00FC9F  6C                 	db	108	;'l'
   262  00FCA0  75                 	db	117	;'u'
   263  00FCA1  67                 	db	103	;'g'
   264  00FCA2  67                 	db	103	;'g'
   265  00FCA3  69                 	db	105	;'i'
   266  00FCA4  6E                 	db	110	;'n'
   267  00FCA5  67                 	db	103	;'g'
   268  00FCA6  20                 	db	32
   269  00FCA7  50                 	db	80	;'P'
   270  00FCA8  49                 	db	73	;'I'
   271  00FCA9  43                 	db	67	;'C'
   272  00FCAA  4B                 	db	75	;'K'
   273  00FCAB  69                 	db	105	;'i'
   274  00FCAC  74                 	db	116	;'t'
   275  00FCAD  33                 	db	51	;'3'
   276  00FCAE  0D                 	db	13
   277  00FCAF  0A                 	db	10
   278  00FCB0  00                 	db	0
   279  00FCB1                     STR_23:
   280                           
   281                           ; BSR set to: 0
   282  00FCB1  52                 	db	82	;'R'
   283  00FCB2  3A                 	db	58	;':'
   284  00FCB3  20                 	db	32
   285  00FCB4  52                 	db	82	;'R'
   286  00FCB5  65                 	db	101	;'e'
   287  00FCB6  63                 	db	99	;'c'
   288  00FCB7  65                 	db	101	;'e'
   289  00FCB8  69                 	db	105	;'i'
   290  00FCB9  76                 	db	118	;'v'
   291  00FCBA  65                 	db	101	;'e'
   292  00FCBB  20                 	db	32
   293  00FCBC  6D                 	db	109	;'m'
   294  00FCBD  65                 	db	101	;'e'
   295  00FCBE  73                 	db	115	;'s'
   296  00FCBF  73                 	db	115	;'s'
   297  00FCC0  61                 	db	97	;'a'
   298  00FCC1  67                 	db	103	;'g'
   299  00FCC2  65                 	db	101	;'e'
   300  00FCC3  20                 	db	32
   301  00FCC4  75                 	db	117	;'u'
   302  00FCC5  73                 	db	115	;'s'
   303  00FCC6  69                 	db	105	;'i'
   304  00FCC7  6E                 	db	110	;'n'
   305  00FCC8  67                 	db	103	;'g'
   306  00FCC9  20                 	db	32
   307  00FCCA  45                 	db	69	;'E'
   308  00FCCB  55                 	db	85	;'U'
   309  00FCCC  53                 	db	83	;'S'
   310  00FCCD  41                 	db	65	;'A'
   311  00FCCE  52                 	db	82	;'R'
   312  00FCCF  54                 	db	84	;'T'
   313  00FCD0  32                 	db	50	;'2'
   314  00FCD1  20                 	db	32
   315  00FCD2  49                 	db	73	;'I'
   316  00FCD3  53                 	db	83	;'S'
   317  00FCD4  52                 	db	82	;'R'
   318  00FCD5  20                 	db	32
   319  00FCD6  76                 	db	118	;'v'
   320  00FCD7  69                 	db	105	;'i'
   321  00FCD8  61                 	db	97	;'a'
   322  00FCD9  20                 	db	32
   323  00FCDA  49                 	db	73	;'I'
   324  00FCDB  52                 	db	82	;'R'
   325  00FCDC  20                 	db	32
   326  00FCDD  64                 	db	100	;'d'
   327  00FCDE  65                 	db	101	;'e'
   328  00FCDF  63                 	db	99	;'c'
   329  00FCE0  6F                 	db	111	;'o'
   330  00FCE1  64                 	db	100	;'d'
   331  00FCE2  65                 	db	101	;'e'
   332  00FCE3  72                 	db	114	;'r'
   333  00FCE4  0D                 	db	13
   334  00FCE5  0A                 	db	10
   335  00FCE6  00                 	db	0
   336  00FCE7                     STR_7:
   337                           
   338                           ; BSR set to: 0
   339  00FCE7  2D                 	db	45
   340  00FCE8  2D                 	db	45
   341  00FCE9  2D                 	db	45
   342  00FCEA  2D                 	db	45
   343  00FCEB  2D                 	db	45
   344  00FCEC  2D                 	db	45
   345  00FCED  2D                 	db	45
   346  00FCEE  2D                 	db	45
   347  00FCEF  2D                 	db	45
   348  00FCF0  2D                 	db	45
   349  00FCF1  2D                 	db	45
   350  00FCF2  2D                 	db	45
   351  00FCF3  2D                 	db	45
   352  00FCF4  2D                 	db	45
   353  00FCF5  2D                 	db	45
   354  00FCF6  2D                 	db	45
   355  00FCF7  2D                 	db	45
   356  00FCF8  2D                 	db	45
   357  00FCF9  2D                 	db	45
   358  00FCFA  2D                 	db	45
   359  00FCFB  2D                 	db	45
   360  00FCFC  2D                 	db	45
   361  00FCFD  2D                 	db	45
   362  00FCFE  2D                 	db	45
   363  00FCFF  2D                 	db	45
   364  00FD00  2D                 	db	45
   365  00FD01  2D                 	db	45
   366  00FD02  2D                 	db	45
   367  00FD03  2D                 	db	45
   368  00FD04  2D                 	db	45
   369  00FD05  2D                 	db	45
   370  00FD06  2D                 	db	45
   371  00FD07  2D                 	db	45
   372  00FD08  2D                 	db	45
   373  00FD09  2D                 	db	45
   374  00FD0A  2D                 	db	45
   375  00FD0B  2D                 	db	45
   376  00FD0C  2D                 	db	45
   377  00FD0D  2D                 	db	45
   378  00FD0E  2D                 	db	45
   379  00FD0F  2D                 	db	45
   380  00FD10  2D                 	db	45
   381  00FD11  2D                 	db	45
   382  00FD12  2D                 	db	45
   383  00FD13  2D                 	db	45
   384  00FD14  2D                 	db	45
   385  00FD15  2D                 	db	45
   386  00FD16  2D                 	db	45
   387  00FD17  2D                 	db	45
   388  00FD18  0D                 	db	13
   389  00FD19  0A                 	db	10
   390  00FD1A  00                 	db	0
   391  00FD1B                     STR_19:
   392                           
   393                           ; BSR set to: 0
   394  00FD1B  62                 	db	98	;'b'
   395  00FD1C  3A                 	db	58	;':'
   396  00FD1D  20                 	db	32
   397  00FD1E  73                 	db	115	;'s'
   398  00FD1F  65                 	db	101	;'e'
   399  00FD20  74                 	db	116	;'t'
   400  00FD21  20                 	db	32
   401  00FD22  74                 	db	116	;'t'
   402  00FD23  68                 	db	104	;'h'
   403  00FD24  65                 	db	101	;'e'
   404  00FD25  20                 	db	32
   405  00FD26  42                 	db	66	;'B'
   406  00FD27  61                 	db	97	;'a'
   407  00FD28  75                 	db	117	;'u'
   408  00FD29  64                 	db	100	;'d'
   409  00FD2A  20                 	db	32
   410  00FD2B  72                 	db	114	;'r'
   411  00FD2C  61                 	db	97	;'a'
   412  00FD2D  74                 	db	116	;'t'
   413  00FD2E  65                 	db	101	;'e'
   414  00FD2F  20                 	db	32
   415  00FD30  6F                 	db	111	;'o'
   416  00FD31  66                 	db	102	;'f'
   417  00FD32  20                 	db	32
   418  00FD33  74                 	db	116	;'t'
   419  00FD34  68                 	db	104	;'h'
   420  00FD35  65                 	db	101	;'e'
   421  00FD36  20                 	db	32
   422  00FD37  73                 	db	115	;'s'
   423  00FD38  65                 	db	101	;'e'
   424  00FD39  6E                 	db	110	;'n'
   425  00FD3A  74                 	db	116	;'t'
   426  00FD3B  20                 	db	32
   427  00FD3C  63                 	db	99	;'c'
   428  00FD3D  68                 	db	104	;'h'
   429  00FD3E  61                 	db	97	;'a'
   430  00FD3F  72                 	db	114	;'r'
   431  00FD40  61                 	db	97	;'a'
   432  00FD41  63                 	db	99	;'c'
   433  00FD42  74                 	db	116	;'t'
   434  00FD43  65                 	db	101	;'e'
   435  00FD44  72                 	db	114	;'r'
   436  00FD45  73                 	db	115	;'s'
   437  00FD46  0D                 	db	13
   438  00FD47  0A                 	db	10
   439  00FD48  00                 	db	0
   440  00FD49                     STR_28:
   441                           
   442                           ; BSR set to: 0
   443  00FD49  43                 	db	67	;'C'
   444  00FD4A  68                 	db	104	;'h'
   445  00FD4B  6F                 	db	111	;'o'
   446  00FD4C  6F                 	db	111	;'o'
   447  00FD4D  73                 	db	115	;'s'
   448  00FD4E  65                 	db	101	;'e'
   449  00FD4F  20                 	db	32
   450  00FD50  74                 	db	116	;'t'
   451  00FD51  68                 	db	104	;'h'
   452  00FD52  65                 	db	101	;'e'
   453  00FD53  20                 	db	32
   454  00FD54  69                 	db	105	;'i'
   455  00FD55  6E                 	db	110	;'n'
   456  00FD56  64                 	db	100	;'d'
   457  00FD57  65                 	db	101	;'e'
   458  00FD58  78                 	db	120	;'x'
   459  00FD59  20                 	db	32
   460  00FD5A  6F                 	db	111	;'o'
   461  00FD5B  66                 	db	102	;'f'
   462  00FD5C  20                 	db	32
   463  00FD5D  74                 	db	116	;'t'
   464  00FD5E  68                 	db	104	;'h'
   465  00FD5F  65                 	db	101	;'e'
   466  00FD60  20                 	db	32
   467  00FD61  74                 	db	116	;'t'
   468  00FD62  61                 	db	97	;'a'
   469  00FD63  72                 	db	114	;'r'
   470  00FD64  67                 	db	103	;'g'
   471  00FD65  65                 	db	101	;'e'
   472  00FD66  74                 	db	116	;'t'
   473  00FD67  20                 	db	32
   474  00FD68  62                 	db	98	;'b'
   475  00FD69  61                 	db	97	;'a'
   476  00FD6A  75                 	db	117	;'u'
   477  00FD6B  64                 	db	100	;'d'
   478  00FD6C  20                 	db	32
   479  00FD6D  72                 	db	114	;'r'
   480  00FD6E  61                 	db	97	;'a'
   481  00FD6F  74                 	db	116	;'t'
   482  00FD70  65                 	db	101	;'e'
   483  00FD71  0D                 	db	13
   484  00FD72  0A                 	db	10
   485  00FD73  00                 	db	0
   486  00FD74                     STR_5:
   487                           
   488                           ; BSR set to: 0
   489  00FD74  49                 	db	73	;'I'
   490  00FD75  6E                 	db	110	;'n'
   491  00FD76  73                 	db	115	;'s'
   492  00FD77  74                 	db	116	;'t'
   493  00FD78  61                 	db	97	;'a'
   494  00FD79  6C                 	db	108	;'l'
   495  00FD7A  6C                 	db	108	;'l'
   496  00FD7B  20                 	db	32
   497  00FD7C  61                 	db	97	;'a'
   498  00FD7D  20                 	db	32
   499  00FD7E  6A                 	db	106	;'j'
   500  00FD7F  75                 	db	117	;'u'
   501  00FD80  6D                 	db	109	;'m'
   502  00FD81  70                 	db	112	;'p'
   503  00FD82  65                 	db	101	;'e'
   504  00FD83  72                 	db	114	;'r'
   505  00FD84  20                 	db	32
   506  00FD85  6F                 	db	111	;'o'
   507  00FD86  76                 	db	118	;'v'
   508  00FD87  65                 	db	101	;'e'
   509  00FD88  72                 	db	114	;'r'
   510  00FD89  20                 	db	32
   511  00FD8A  49                 	db	73	;'I'
   512  00FD8B  52                 	db	82	;'R'
   513  00FD8C  5F                 	db	95	;'_'
   514  00FD8D  54                 	db	84	;'T'
   515  00FD8E  58                 	db	88	;'X'
   516  00FD8F  20                 	db	32
   517  00FD90  68                 	db	104	;'h'
   518  00FD91  65                 	db	101	;'e'
   519  00FD92  61                 	db	97	;'a'
   520  00FD93  64                 	db	100	;'d'
   521  00FD94  65                 	db	101	;'e'
   522  00FD95  72                 	db	114	;'r'
   523  00FD96  20                 	db	32
   524  00FD97  70                 	db	112	;'p'
   525  00FD98  69                 	db	105	;'i'
   526  00FD99  6E                 	db	110	;'n'
   527  00FD9A  73                 	db	115	;'s'
   528  00FD9B  0D                 	db	13
   529  00FD9C  0A                 	db	10
   530  00FD9D  00                 	db	0
   531  00FD9E                     STR_36:
   532                           
   533                           ; BSR set to: 0
   534  00FD9E  45                 	db	69	;'E'
   535  00FD9F  6E                 	db	110	;'n'
   536  00FDA0  74                 	db	116	;'t'
   537  00FDA1  65                 	db	101	;'e'
   538  00FDA2  72                 	db	114	;'r'
   539  00FDA3  20                 	db	32
   540  00FDA4  61                 	db	97	;'a'
   541  00FDA5  20                 	db	32
   542  00FDA6  6D                 	db	109	;'m'
   543  00FDA7  65                 	db	101	;'e'
   544  00FDA8  73                 	db	115	;'s'
   545  00FDA9  73                 	db	115	;'s'
   546  00FDAA  61                 	db	97	;'a'
   547  00FDAB  67                 	db	103	;'g'
   548  00FDAC  65                 	db	101	;'e'
   549  00FDAD  2C                 	db	44
   550  00FDAE  20                 	db	32
   551  00FDAF  68                 	db	104	;'h'
   552  00FDB0  69                 	db	105	;'i'
   553  00FDB1  74                 	db	116	;'t'
   554  00FDB2  20                 	db	32
   555  00FDB3  72                 	db	114	;'r'
   556  00FDB4  65                 	db	101	;'e'
   557  00FDB5  74                 	db	116	;'t'
   558  00FDB6  75                 	db	117	;'u'
   559  00FDB7  72                 	db	114	;'r'
   560  00FDB8  6E                 	db	110	;'n'
   561  00FDB9  20                 	db	32
   562  00FDBA  77                 	db	119	;'w'
   563  00FDBB  68                 	db	104	;'h'
   564  00FDBC  65                 	db	101	;'e'
   565  00FDBD  6E                 	db	110	;'n'
   566  00FDBE  20                 	db	32
   567  00FDBF  64                 	db	100	;'d'
   568  00FDC0  6F                 	db	111	;'o'
   569  00FDC1  6E                 	db	110	;'n'
   570  00FDC2  65                 	db	101	;'e'
   571  00FDC3  2E                 	db	46
   572  00FDC4  0D                 	db	13
   573  00FDC5  0A                 	db	10
   574  00FDC6  00                 	db	0
   575  00FDC7                     STR_45:
   576                           
   577                           ; BSR set to: 0
   578  00FDC7  4E                 	db	78	;'N'
   579  00FDC8  6F                 	db	111	;'o'
   580  00FDC9  20                 	db	32
   581  00FDCA  6D                 	db	109	;'m'
   582  00FDCB  65                 	db	101	;'e'
   583  00FDCC  73                 	db	115	;'s'
   584  00FDCD  73                 	db	115	;'s'
   585  00FDCE  61                 	db	97	;'a'
   586  00FDCF  67                 	db	103	;'g'
   587  00FDD0  65                 	db	101	;'e'
   588  00FDD1  2C                 	db	44
   589  00FDD2  20                 	db	32
   590  00FDD3  72                 	db	114	;'r'
   591  00FDD4  65                 	db	101	;'e'
   592  00FDD5  63                 	db	99	;'c'
   593  00FDD6  65                 	db	101	;'e'
   594  00FDD7  69                 	db	105	;'i'
   595  00FDD8  76                 	db	118	;'v'
   596  00FDD9  65                 	db	101	;'e'
   597  00FDDA  4E                 	db	78	;'N'
   598  00FDDB  65                 	db	101	;'e'
   599  00FDDC  77                 	db	119	;'w'
   600  00FDDD  6D                 	db	109	;'m'
   601  00FDDE  65                 	db	101	;'e'
   602  00FDDF  73                 	db	115	;'s'
   603  00FDE0  73                 	db	115	;'s'
   604  00FDE1  61                 	db	97	;'a'
   605  00FDE2  67                 	db	103	;'g'
   606  00FDE3  65                 	db	101	;'e'
   607  00FDE4  20                 	db	32
   608  00FDE5  3D                 	db	61	;'='
   609  00FDE6  20                 	db	32
   610  00FDE7  66                 	db	102	;'f'
   611  00FDE8  61                 	db	97	;'a'
   612  00FDE9  6C                 	db	108	;'l'
   613  00FDEA  73                 	db	115	;'s'
   614  00FDEB  65                 	db	101	;'e'
   615  00FDEC  0D                 	db	13
   616  00FDED  0A                 	db	10
   617  00FDEE  00                 	db	0
   618  00FDEF                     STR_21:
   619                           
   620                           ; BSR set to: 0
   621  00FDEF  6D                 	db	109	;'m'
   622  00FDF0  3A                 	db	58	;':'
   623  00FDF1  20                 	db	32
   624  00FDF2  45                 	db	69	;'E'
   625  00FDF3  6E                 	db	110	;'n'
   626  00FDF4  74                 	db	116	;'t'
   627  00FDF5  65                 	db	101	;'e'
   628  00FDF6  72                 	db	114	;'r'
   629  00FDF7  20                 	db	32
   630  00FDF8  69                 	db	105	;'i'
   631  00FDF9  6E                 	db	110	;'n'
   632  00FDFA  20                 	db	32
   633  00FDFB  74                 	db	116	;'t'
   634  00FDFC  68                 	db	104	;'h'
   635  00FDFD  65                 	db	101	;'e'
   636  00FDFE  20                 	db	32
   637  00FDFF  74                 	db	116	;'t'
   638  00FE00  72                 	db	114	;'r'
   639  00FE01  61                 	db	97	;'a'
   640  00FE02  6E                 	db	110	;'n'
   641  00FE03  73                 	db	115	;'s'
   642  00FE04  6D                 	db	109	;'m'
   643  00FE05  69                 	db	105	;'i'
   644  00FE06  74                 	db	116	;'t'
   645  00FE07  20                 	db	32
   646  00FE08  4D                 	db	77	;'M'
   647  00FE09  65                 	db	101	;'e'
   648  00FE0A  73                 	db	115	;'s'
   649  00FE0B  73                 	db	115	;'s'
   650  00FE0C  61                 	db	97	;'a'
   651  00FE0D  67                 	db	103	;'g'
   652  00FE0E  65                 	db	101	;'e'
   653  00FE0F  0D                 	db	13
   654  00FE10  0A                 	db	10
   655  00FE11  00                 	db	0
   656  00FE12                     STR_2:
   657                           
   658                           ; BSR set to: 0
   659  00FE12  52                 	db	82	;'R'
   660  00FE13  65                 	db	101	;'e'
   661  00FE14  63                 	db	99	;'c'
   662  00FE15  65                 	db	101	;'e'
   663  00FE16  69                 	db	105	;'i'
   664  00FE17  76                 	db	118	;'v'
   665  00FE18  65                 	db	101	;'e'
   666  00FE19  20                 	db	32
   667  00FE1A  61                 	db	97	;'a'
   668  00FE1B  6E                 	db	110	;'n'
   669  00FE1C  64                 	db	100	;'d'
   670  00FE1D  20                 	db	32
   671  00FE1E  64                 	db	100	;'d'
   672  00FE1F  65                 	db	101	;'e'
   673  00FE20  63                 	db	99	;'c'
   674  00FE21  6F                 	db	111	;'o'
   675  00FE22  64                 	db	100	;'d'
   676  00FE23  65                 	db	101	;'e'
   677  00FE24  20                 	db	32
   678  00FE25  61                 	db	97	;'a'
   679  00FE26  6E                 	db	110	;'n'
   680  00FE27  20                 	db	32
   681  00FE28  49                 	db	73	;'I'
   682  00FE29  52                 	db	82	;'R'
   683  00FE2A  20                 	db	32
   684  00FE2B  70                 	db	112	;'p'
   685  00FE2C  61                 	db	97	;'a'
   686  00FE2D  63                 	db	99	;'c'
   687  00FE2E  6B                 	db	107	;'k'
   688  00FE2F  65                 	db	101	;'e'
   689  00FE30  74                 	db	116	;'t'
   690  00FE31  0D                 	db	13
   691  00FE32  0A                 	db	10
   692  00FE33  00                 	db	0
   693  00FE34                     STR_22:
   694                           
   695                           ; BSR set to: 0
   696  00FE34  53                 	db	83	;'S'
   697  00FE35  3A                 	db	58	;':'
   698  00FE36  20                 	db	32
   699  00FE37  53                 	db	83	;'S'
   700  00FE38  65                 	db	101	;'e'
   701  00FE39  6E                 	db	110	;'n'
   702  00FE3A  64                 	db	100	;'d'
   703  00FE3B  20                 	db	32
   704  00FE3C  6D                 	db	109	;'m'
   705  00FE3D  65                 	db	101	;'e'
   706  00FE3E  73                 	db	115	;'s'
   707  00FE3F  73                 	db	115	;'s'
   708  00FE40  61                 	db	97	;'a'
   709  00FE41  67                 	db	103	;'g'
   710  00FE42  65                 	db	101	;'e'
   711  00FE43  20                 	db	32
   712  00FE44  69                 	db	105	;'i'
   713  00FE45  6E                 	db	110	;'n'
   714  00FE46  20                 	db	32
   715  00FE47  66                 	db	102	;'f'
   716  00FE48  6F                 	db	111	;'o'
   717  00FE49  72                 	db	114	;'r'
   718  00FE4A  65                 	db	101	;'e'
   719  00FE4B  67                 	db	103	;'g'
   720  00FE4C  72                 	db	114	;'r'
   721  00FE4D  6F                 	db	111	;'o'
   722  00FE4E  75                 	db	117	;'u'
   723  00FE4F  6E                 	db	110	;'n'
   724  00FE50  64                 	db	100	;'d'
   725  00FE51  0D                 	db	13
   726  00FE52  0A                 	db	10
   727  00FE53  00                 	db	0
   728  00FE54                     STR_34:
   729                           
   730                           ; BSR set to: 0
   731  00FE54  42                 	db	66	;'B'
   732  00FE55  61                 	db	97	;'a'
   733  00FE56  75                 	db	117	;'u'
   734  00FE57  64                 	db	100	;'d'
   735  00FE58  20                 	db	32
   736  00FE59  72                 	db	114	;'r'
   737  00FE5A  61                 	db	97	;'a'
   738  00FE5B  74                 	db	116	;'t'
   739  00FE5C  65                 	db	101	;'e'
   740  00FE5D  20                 	db	32
   741  00FE5E  61                 	db	97	;'a'
   742  00FE5F  73                 	db	115	;'s'
   743  00FE60  73                 	db	115	;'s'
   744  00FE61  69                 	db	105	;'i'
   745  00FE62  67                 	db	103	;'g'
   746  00FE63  6E                 	db	110	;'n'
   747  00FE64  65                 	db	101	;'e'
   748  00FE65  64                 	db	100	;'d'
   749  00FE66  20                 	db	32
   750  00FE67  25                 	db	37
   751  00FE68  30                 	db	48	;'0'
   752  00FE69  32                 	db	50	;'2'
   753  00FE6A  78                 	db	120	;'x'
   754  00FE6B  3A                 	db	58	;':'
   755  00FE6C  25                 	db	37
   756  00FE6D  30                 	db	48	;'0'
   757  00FE6E  32                 	db	50	;'2'
   758  00FE6F  78                 	db	120	;'x'
   759  00FE70  0D                 	db	13
   760  00FE71  0A                 	db	10
   761  00FE72  00                 	db	0
   762  00FE73                     STR_18:
   763                           
   764                           ; BSR set to: 0
   765  00FE73  7A                 	db	122	;'z'
   766  00FE74  3A                 	db	58	;':'
   767  00FE75  20                 	db	32
   768  00FE76  43                 	db	67	;'C'
   769  00FE77  6C                 	db	108	;'l'
   770  00FE78  65                 	db	101	;'e'
   771  00FE79  61                 	db	97	;'a'
   772  00FE7A  72                 	db	114	;'r'
   773  00FE7B  20                 	db	32
   774  00FE7C  74                 	db	116	;'t'
   775  00FE7D  68                 	db	104	;'h'
   776  00FE7E  65                 	db	101	;'e'
   777  00FE7F  20                 	db	32
   778  00FE80  74                 	db	116	;'t'
   779  00FE81  65                 	db	101	;'e'
   780  00FE82  72                 	db	114	;'r'
   781  00FE83  6D                 	db	109	;'m'
   782  00FE84  69                 	db	105	;'i'
   783  00FE85  6E                 	db	110	;'n'
   784  00FE86  61                 	db	97	;'a'
   785  00FE87  6C                 	db	108	;'l'
   786  00FE88  0D                 	db	13
   787  00FE89  0A                 	db	10
   788  00FE8A  00                 	db	0
   789  00FE8B                     STR_3:
   790                           
   791                           ; BSR set to: 0
   792  00FE8B  44                 	db	68	;'D'
   793  00FE8C  65                 	db	101	;'e'
   794  00FE8D  76                 	db	118	;'v'
   795  00FE8E  27                 	db	39
   796  00FE8F  32                 	db	50	;'2'
   797  00FE90  31                 	db	49	;'1'
   798  00FE91  20                 	db	32
   799  00FE92  42                 	db	66	;'B'
   800  00FE93  6F                 	db	111	;'o'
   801  00FE94  61                 	db	97	;'a'
   802  00FE95  72                 	db	114	;'r'
   803  00FE96  64                 	db	100	;'d'
   804  00FE97  20                 	db	32
   805  00FE98  77                 	db	119	;'w'
   806  00FE99  69                 	db	105	;'i'
   807  00FE9A  72                 	db	114	;'r'
   808  00FE9B  69                 	db	105	;'i'
   809  00FE9C  6E                 	db	110	;'n'
   810  00FE9D  67                 	db	103	;'g'
   811  00FE9E  0D                 	db	13
   812  00FE9F  0A                 	db	10
   813  00FEA0  00                 	db	0
   814  00FEA1                     STR_35:
   815                           
   816                           ; BSR set to: 0
   817  00FEA1  4A                 	db	74	;'J'
   818  00FEA2  75                 	db	117	;'u'
   819  00FEA3  73                 	db	115	;'s'
   820  00FEA4  74                 	db	116	;'t'
   821  00FEA5  20                 	db	32
   822  00FEA6  72                 	db	114	;'r'
   823  00FEA7  65                 	db	101	;'e'
   824  00FEA8  73                 	db	115	;'s'
   825  00FEA9  65                 	db	101	;'e'
   826  00FEAA  74                 	db	116	;'t'
   827  00FEAB  20                 	db	32
   828  00FEAC  45                 	db	69	;'E'
   829  00FEAD  55                 	db	85	;'U'
   830  00FEAE  53                 	db	83	;'S'
   831  00FEAF  41                 	db	65	;'A'
   832  00FEB0  52                 	db	82	;'R'
   833  00FEB1  54                 	db	84	;'T'
   834  00FEB2  32                 	db	50	;'2'
   835  00FEB3  0D                 	db	13
   836  00FEB4  0A                 	db	10
   837  00FEB5  00                 	db	0
   838  00FEB6                     STR_17:
   839                           
   840                           ; BSR set to: 0
   841  00FEB6  5A                 	db	90	;'Z'
   842  00FEB7  3A                 	db	58	;':'
   843  00FEB8  20                 	db	32
   844  00FEB9  52                 	db	82	;'R'
   845  00FEBA  65                 	db	101	;'e'
   846  00FEBB  73                 	db	115	;'s'
   847  00FEBC  65                 	db	101	;'e'
   848  00FEBD  74                 	db	116	;'t'
   849  00FEBE  20                 	db	32
   850  00FEBF  70                 	db	112	;'p'
   851  00FEC0  72                 	db	114	;'r'
   852  00FEC1  6F                 	db	111	;'o'
   853  00FEC2  63                 	db	99	;'c'
   854  00FEC3  65                 	db	101	;'e'
   855  00FEC4  73                 	db	115	;'s'
   856  00FEC5  73                 	db	115	;'s'
   857  00FEC6  6F                 	db	111	;'o'
   858  00FEC7  72                 	db	114	;'r'
   859  00FEC8  0D                 	db	13
   860  00FEC9  0A                 	db	10
   861  00FECA  00                 	db	0
   862  00FECB                     STR_20:
   863                           
   864                           ; BSR set to: 0
   865  00FECB  72                 	db	114	;'r'
   866  00FECC  3A                 	db	58	;':'
   867  00FECD  20                 	db	32
   868  00FECE  72                 	db	114	;'r'
   869  00FECF  65                 	db	101	;'e'
   870  00FED0  73                 	db	115	;'s'
   871  00FED1  65                 	db	101	;'e'
   872  00FED2  74                 	db	116	;'t'
   873  00FED3  20                 	db	32
   874  00FED4  45                 	db	69	;'E'
   875  00FED5  55                 	db	85	;'U'
   876  00FED6  53                 	db	83	;'S'
   877  00FED7  41                 	db	65	;'A'
   878  00FED8  52                 	db	82	;'R'
   879  00FED9  54                 	db	84	;'T'
   880  00FEDA  32                 	db	50	;'2'
   881  00FEDB  0D                 	db	13
   882  00FEDC  0A                 	db	10
   883  00FEDD  00                 	db	0
   884  00FEDE                     STR_49:
   885                           
   886                           ; BSR set to: 0
   887  00FEDE  55                 	db	85	;'U'
   888  00FEDF  6E                 	db	110	;'n'
   889  00FEE0  6B                 	db	107	;'k'
   890  00FEE1  6E                 	db	110	;'n'
   891  00FEE2  6F                 	db	111	;'o'
   892  00FEE3  77                 	db	119	;'w'
   893  00FEE4  6E                 	db	110	;'n'
   894  00FEE5  20                 	db	32
   895  00FEE6  6B                 	db	107	;'k'
   896  00FEE7  65                 	db	101	;'e'
   897  00FEE8  79                 	db	121	;'y'
   898  00FEE9  20                 	db	32
   899  00FEEA  25                 	db	37
   900  00FEEB  63                 	db	99	;'c'
   901  00FEEC  0D                 	db	13
   902  00FEED  0A                 	db	10
   903  00FEEE  00                 	db	0
   904  00FEEF                     STR_40:
   905                           
   906                           ; BSR set to: 0
   907  00FEEF  4D                 	db	77	;'M'
   908  00FEF0  65                 	db	101	;'e'
   909  00FEF1  73                 	db	115	;'s'
   910  00FEF2  73                 	db	115	;'s'
   911  00FEF3  61                 	db	97	;'a'
   912  00FEF4  67                 	db	103	;'g'
   913  00FEF5  65                 	db	101	;'e'
   914  00FEF6  3A                 	db	58	;':'
   915  00FEF7  20                 	db	32
   916  00FEF8  0D                 	db	13
   917  00FEF9  0A                 	db	10
   918  00FEFA  09                 	db	9
   919  00FEFB  25                 	db	37
   920  00FEFC  73                 	db	115	;'s'
   921  00FEFD  0D                 	db	13
   922  00FEFE  0A                 	db	10
   923  00FEFF  00                 	db	0
   924  00FF00                     STR_41:
   925                           
   926                           ; BSR set to: 0
   927  00FF00  09                 	db	9
   928  00FF01  63                 	db	99	;'c'
   929  00FF02  68                 	db	104	;'h'
   930  00FF03  65                 	db	101	;'e'
   931  00FF04  63                 	db	99	;'c'
   932  00FF05  6B                 	db	107	;'k'
   933  00FF06  73                 	db	115	;'s'
   934  00FF07  75                 	db	117	;'u'
   935  00FF08  6D                 	db	109	;'m'
   936  00FF09  3A                 	db	58	;':'
   937  00FF0A  20                 	db	32
   938  00FF0B  25                 	db	37
   939  00FF0C  64                 	db	100	;'d'
   940  00FF0D  0D                 	db	13
   941  00FF0E  0A                 	db	10
   942  00FF0F  00                 	db	0
   943  00FF10                     STR_33:
   944                           
   945                           ; BSR set to: 0
   946  00FF10  34                 	db	52	;'4'
   947  00FF11  3A                 	db	58	;':'
   948  00FF12  20                 	db	32
   949  00FF13  31                 	db	49	;'1'
   950  00FF14  39                 	db	57	;'9'
   951  00FF15  32                 	db	50	;'2'
   952  00FF16  30                 	db	48	;'0'
   953  00FF17  30                 	db	48	;'0'
   954  00FF18  20                 	db	32
   955  00FF19  62                 	db	98	;'b'
   956  00FF1A  61                 	db	97	;'a'
   957  00FF1B  75                 	db	117	;'u'
   958  00FF1C  64                 	db	100	;'d'
   959  00FF1D  0D                 	db	13
   960  00FF1E  0A                 	db	10
   961  00FF1F  00                 	db	0
   962  00FF20                     STR_44:
   963                           
   964                           ; BSR set to: 0
   965  00FF20  09                 	db	9
   966  00FF21  43                 	db	67	;'C'
   967  00FF22  68                 	db	104	;'h'
   968  00FF23  65                 	db	101	;'e'
   969  00FF24  63                 	db	99	;'c'
   970  00FF25  6B                 	db	107	;'k'
   971  00FF26  73                 	db	115	;'s'
   972  00FF27  75                 	db	117	;'u'
   973  00FF28  6D                 	db	109	;'m'
   974  00FF29  3A                 	db	58	;':'
   975  00FF2A  20                 	db	32
   976  00FF2B  25                 	db	37
   977  00FF2C  75                 	db	117	;'u'
   978  00FF2D  0D                 	db	13
   979  00FF2E  0A                 	db	10
   980  00FF2F  00                 	db	0
   981  00FF30                     STR_30:
   982                           
   983                           ; BSR set to: 0
   984  00FF30  31                 	db	49	;'1'
   985  00FF31  3A                 	db	58	;':'
   986  00FF32  20                 	db	32
   987  00FF33  31                 	db	49	;'1'
   988  00FF34  32                 	db	50	;'2'
   989  00FF35  30                 	db	48	;'0'
   990  00FF36  30                 	db	48	;'0'
   991  00FF37  20                 	db	32
   992  00FF38  62                 	db	98	;'b'
   993  00FF39  61                 	db	97	;'a'
   994  00FF3A  75                 	db	117	;'u'
   995  00FF3B  64                 	db	100	;'d'
   996  00FF3C  0D                 	db	13
   997  00FF3D  0A                 	db	10
   998  00FF3E  00                 	db	0
   999  00FF3F                     STR_31:
  1000                           
  1001                           ; BSR set to: 0
  1002  00FF3F  32                 	db	50	;'2'
  1003  00FF40  3A                 	db	58	;':'
  1004  00FF41  20                 	db	32
  1005  00FF42  32                 	db	50	;'2'
  1006  00FF43  34                 	db	52	;'4'
  1007  00FF44  30                 	db	48	;'0'
  1008  00FF45  30                 	db	48	;'0'
  1009  00FF46  20                 	db	32
  1010  00FF47  62                 	db	98	;'b'
  1011  00FF48  61                 	db	97	;'a'
  1012  00FF49  75                 	db	117	;'u'
  1013  00FF4A  64                 	db	100	;'d'
  1014  00FF4B  0D                 	db	13
  1015  00FF4C  0A                 	db	10
  1016  00FF4D  00                 	db	0
  1017  00FF4E                     STR_32:
  1018                           
  1019                           ; BSR set to: 0
  1020  00FF4E  33                 	db	51	;'3'
  1021  00FF4F  3A                 	db	58	;':'
  1022  00FF50  20                 	db	32
  1023  00FF51  39                 	db	57	;'9'
  1024  00FF52  36                 	db	54	;'6'
  1025  00FF53  30                 	db	48	;'0'
  1026  00FF54  30                 	db	48	;'0'
  1027  00FF55  20                 	db	32
  1028  00FF56  62                 	db	98	;'b'
  1029  00FF57  61                 	db	97	;'a'
  1030  00FF58  75                 	db	117	;'u'
  1031  00FF59  64                 	db	100	;'d'
  1032  00FF5A  0D                 	db	13
  1033  00FF5B  0A                 	db	10
  1034  00FF5C  00                 	db	0
  1035  00FF5D                     STR_43:
  1036                           
  1037                           ; BSR set to: 0
  1038  00FF5D  09                 	db	9
  1039  00FF5E  4D                 	db	77	;'M'
  1040  00FF5F  65                 	db	101	;'e'
  1041  00FF60  73                 	db	115	;'s'
  1042  00FF61  73                 	db	115	;'s'
  1043  00FF62  61                 	db	97	;'a'
  1044  00FF63  67                 	db	103	;'g'
  1045  00FF64  65                 	db	101	;'e'
  1046  00FF65  3A                 	db	58	;':'
  1047  00FF66  20                 	db	32
  1048  00FF67  25                 	db	37
  1049  00FF68  73                 	db	115	;'s'
  1050  00FF69  0D                 	db	13
  1051  00FF6A  0A                 	db	10
  1052  00FF6B  00                 	db	0
  1053  00FF6C                     STR_15:
  1054                           
  1055                           ; BSR set to: 0
  1056  00FF6C  3F                 	db	63	;'?'
  1057  00FF6D  3A                 	db	58	;':'
  1058  00FF6E  20                 	db	32
  1059  00FF6F  68                 	db	104	;'h'
  1060  00FF70  65                 	db	101	;'e'
  1061  00FF71  6C                 	db	108	;'l'
  1062  00FF72  70                 	db	112	;'p'
  1063  00FF73  20                 	db	32
  1064  00FF74  6D                 	db	109	;'m'
  1065  00FF75  65                 	db	101	;'e'
  1066  00FF76  6E                 	db	110	;'n'
  1067  00FF77  75                 	db	117	;'u'
  1068  00FF78  0D                 	db	13
  1069  00FF79  0A                 	db	10
  1070  00FF7A  00                 	db	0
  1071  00FF7B                     STR_46:
  1072                           
  1073                           ; BSR set to: 0
  1074  00FF7B  54                 	db	84	;'T'
  1075  00FF7C  72                 	db	114	;'r'
  1076  00FF7D  61                 	db	97	;'a'
  1077  00FF7E  6E                 	db	110	;'n'
  1078  00FF7F  73                 	db	115	;'s'
  1079  00FF80  6D                 	db	109	;'m'
  1080  00FF81  69                 	db	105	;'i'
  1081  00FF82  74                 	db	116	;'t'
  1082  00FF83  74                 	db	116	;'t'
  1083  00FF84  65                 	db	101	;'e'
  1084  00FF85  64                 	db	100	;'d'
  1085  00FF86  0D                 	db	13
  1086  00FF87  0A                 	db	10
  1087  00FF88  00                 	db	0
  1088  00FF89                     STR_29:
  1089                           
  1090                           ; BSR set to: 0
  1091  00FF89  30                 	db	48	;'0'
  1092  00FF8A  3A                 	db	58	;':'
  1093  00FF8B  20                 	db	32
  1094  00FF8C  33                 	db	51	;'3'
  1095  00FF8D  30                 	db	48	;'0'
  1096  00FF8E  30                 	db	48	;'0'
  1097  00FF8F  20                 	db	32
  1098  00FF90  62                 	db	98	;'b'
  1099  00FF91  61                 	db	97	;'a'
  1100  00FF92  75                 	db	117	;'u'
  1101  00FF93  64                 	db	100	;'d'
  1102  00FF94  0D                 	db	13
  1103  00FF95  0A                 	db	10
  1104  00FF96  00                 	db	0
  1105  00FF97                     STR_12:
  1106                           
  1107                           ; BSR set to: 0
  1108  00FF97  31                 	db	49	;'1'
  1109  00FF98  39                 	db	57	;'9'
  1110  00FF99  32                 	db	50	;'2'
  1111  00FF9A  30                 	db	48	;'0'
  1112  00FF9B  30                 	db	48	;'0'
  1113  00FF9C  20                 	db	32
  1114  00FF9D  42                 	db	66	;'B'
  1115  00FF9E  61                 	db	97	;'a'
  1116  00FF9F  75                 	db	117	;'u'
  1117  00FFA0  64                 	db	100	;'d'
  1118  00FFA1  0D                 	db	13
  1119  00FFA2  0A                 	db	10
  1120  00FFA3  00                 	db	0
  1121  00FFA4                     STR_9:
  1122                           
  1123                           ; BSR set to: 0
  1124  00FFA4  31                 	db	49	;'1'
  1125  00FFA5  32                 	db	50	;'2'
  1126  00FFA6  30                 	db	48	;'0'
  1127  00FFA7  30                 	db	48	;'0'
  1128  00FFA8  20                 	db	32
  1129  00FFA9  42                 	db	66	;'B'
  1130  00FFAA  61                 	db	97	;'a'
  1131  00FFAB  75                 	db	117	;'u'
  1132  00FFAC  64                 	db	100	;'d'
  1133  00FFAD  0D                 	db	13
  1134  00FFAE  0A                 	db	10
  1135  00FFAF  00                 	db	0
  1136  00FFB0                     STR_10:
  1137                           
  1138                           ; BSR set to: 0
  1139  00FFB0  32                 	db	50	;'2'
  1140  00FFB1  34                 	db	52	;'4'
  1141  00FFB2  30                 	db	48	;'0'
  1142  00FFB3  30                 	db	48	;'0'
  1143  00FFB4  20                 	db	32
  1144  00FFB5  42                 	db	66	;'B'
  1145  00FFB6  61                 	db	97	;'a'
  1146  00FFB7  75                 	db	117	;'u'
  1147  00FFB8  64                 	db	100	;'d'
  1148  00FFB9  0D                 	db	13
  1149  00FFBA  0A                 	db	10
  1150  00FFBB  00                 	db	0
  1151  00FFBC                     STR_11:
  1152                           
  1153                           ; BSR set to: 0
  1154  00FFBC  39                 	db	57	;'9'
  1155  00FFBD  36                 	db	54	;'6'
  1156  00FFBE  30                 	db	48	;'0'
  1157  00FFBF  30                 	db	48	;'0'
  1158  00FFC0  20                 	db	32
  1159  00FFC1  42                 	db	66	;'B'
  1160  00FFC2  61                 	db	97	;'a'
  1161  00FFC3  75                 	db	117	;'u'
  1162  00FFC4  64                 	db	100	;'d'
  1163  00FFC5  0D                 	db	13
  1164  00FFC6  0A                 	db	10
  1165  00FFC7  00                 	db	0
  1166  00FFC8                     STR_42:
  1167                           
  1168                           ; BSR set to: 0
  1169  00FFC8  52                 	db	82	;'R'
  1170  00FFC9  65                 	db	101	;'e'
  1171  00FFCA  63                 	db	99	;'c'
  1172  00FFCB  65                 	db	101	;'e'
  1173  00FFCC  69                 	db	105	;'i'
  1174  00FFCD  76                 	db	118	;'v'
  1175  00FFCE  65                 	db	101	;'e'
  1176  00FFCF  64                 	db	100	;'d'
  1177  00FFD0  0D                 	db	13
  1178  00FFD1  0A                 	db	10
  1179  00FFD2  00                 	db	0
  1180  00FFD3                     STR_8:
  1181                           
  1182                           ; BSR set to: 0
  1183  00FFD3  33                 	db	51	;'3'
  1184  00FFD4  30                 	db	48	;'0'
  1185  00FFD5  30                 	db	48	;'0'
  1186  00FFD6  20                 	db	32
  1187  00FFD7  42                 	db	66	;'B'
  1188  00FFD8  61                 	db	97	;'a'
  1189  00FFD9  75                 	db	117	;'u'
  1190  00FFDA  64                 	db	100	;'d'
  1191  00FFDB  0D                 	db	13
  1192  00FFDC  0A                 	db	10
  1193  00FFDD  00                 	db	0
  1194  00FFDE                     STR_1:
  1195                           
  1196                           ; BSR set to: 0
  1197  00FFDE  4C                 	db	76	;'L'
  1198  00FFDF  61                 	db	97	;'a'
  1199  00FFE0  62                 	db	98	;'b'
  1200  00FFE1  20                 	db	32
  1201  00FFE2  36                 	db	54	;'6'
  1202  00FFE3  0D                 	db	13
  1203  00FFE4  0A                 	db	10
  1204  00FFE5  00                 	db	0
  1205  00FFE6                     STR_25:
  1206                           
  1207                           ; BSR set to: 0
  1208  00FFE6  6F                 	db	111	;'o'
  1209  00FFE7  3A                 	db	58	;':'
  1210  00FFE8  09                 	db	9
  1211  00FFE9  6F                 	db	111	;'o'
  1212  00FFEA  6B                 	db	107	;'k'
  1213  00FFEB  0D                 	db	13
  1214  00FFEC  0A                 	db	10
  1215  00FFED  00                 	db	0
  1216  00FFEE                     STR_16:
  1217                           
  1218                           ; BSR set to: 0
  1219  00FFEE  6F                 	db	111	;'o'
  1220  00FFEF  3A                 	db	58	;':'
  1221  00FFF0  20                 	db	32
  1222  00FFF1  6B                 	db	107	;'k'
  1223  00FFF2  0D                 	db	13
  1224  00FFF3  0A                 	db	10
  1225  00FFF4  00                 	db	0
  1226  00FFF5                     STR_6:
  1227                           
  1228                           ; BSR set to: 0
  1229  00FFF5  0D                 	db	13
  1230  00FFF6  0A                 	db	10
  1231  00FFF7  3E                 	db	62	;'>'
  1232  00FFF8  20                 	db	32
  1233  00FFF9  00                 	db	0
  1234  00FFFA                     STR_38:
  1235                           
  1236                           ; BSR set to: 0
  1237  00FFFA  25                 	db	37
  1238  00FFFB  63                 	db	99	;'c'
  1239  00FFFC  00                 	db	0
  1240  00FFFD                     STR_37:
  1241                           
  1242                           ; BSR set to: 0
  1243  00FFFD  3E                 	db	62	;'>'
  1244  00FFFE  00                 	db	0
  1245  00FFFF  00                 	db	0	; dummy byte at the end
  1246  0000                     
  1247                           ; #config settings
  1248                           
  1249                           	psect	cinit
  1250  002264                     __pcinit:
  1251                           	callstack 0
  1252  002264                     start_initialization:
  1253                           	callstack 0
  1254  002264                     __initialization:
  1255                           	callstack 0
  1256                           
  1257                           ; Initialize objects allocated to BANK0 (18 bytes)
  1258                           ; load TBLPTR registers with __pidataBANK0
  1259  002264  0E16               	movlw	low __pidataBANK0
  1260  002266  6EF6               	movwf	tblptrl,c
  1261  002268  0E27               	movlw	high __pidataBANK0
  1262  00226A  6EF7               	movwf	tblptrh,c
  1263  00226C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1264  00226E  6EF8               	movwf	tblptru,c
  1265  002270  EE00  F0E7         	lfsr	0,__pdataBANK0
  1266  002274  EE10 F012          	lfsr	1,18
  1267  002278                     copy_data0:
  1268  002278  0009               	tblrd		*+
  1269  00227A  CFF5 FFEE          	movff	tablat,postinc0
  1270  00227E  50E5               	movf	postdec1,w,c
  1271  002280  50E1               	movf	fsr1l,w,c
  1272  002282  E1FA               	bnz	copy_data0
  1273                           
  1274                           ; Clear objects allocated to BANK1 (57 bytes)
  1275  002284  EE01  F000         	lfsr	0,__pbssBANK1
  1276  002288  0E39               	movlw	57
  1277  00228A                     clear_0:
  1278  00228A  6AEE               	clrf	postinc0,c
  1279  00228C  06E8               	decf	wreg,f,c
  1280  00228E  E1FD               	bnz	clear_0
  1281                           
  1282                           ; Clear objects allocated to BANK0 (84 bytes)
  1283  002290  EE00  F060         	lfsr	0,__pbssBANK0
  1284  002294  0E54               	movlw	84
  1285  002296                     clear_1:
  1286  002296  6AEE               	clrf	postinc0,c
  1287  002298  06E8               	decf	wreg,f,c
  1288  00229A  E1FD               	bnz	clear_1
  1289                           
  1290                           ; Clear objects allocated to COMRAM (6 bytes)
  1291  00229C  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1292  00229E  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1293  0022A0  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1294  0022A2  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1295  0022A4  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1296  0022A6  6A53               	clrf	__pbssCOMRAM& (0+255),c
  1297  0022A8                     end_of_initialization:
  1298                           	callstack 0
  1299  0022A8                     __end_of__initialization:
  1300                           	callstack 0
  1301  0022A8  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1302  0022AA  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1303  0022AC  0100               	movlb	0
  1304  0022AE  EF5A  F000         	goto	_main	;jump to C main() function
  1305                           
  1306                           	psect	bssCOMRAM
  1307  000053                     __pbssCOMRAM:
  1308                           	callstack 0
  1309  000053                     _prec:
  1310                           	callstack 0
  1311  000053                     	ds	2
  1312  000055                     _flags:
  1313                           	callstack 0
  1314  000055                     	ds	2
  1315  000057                     _eusart2RxTail:
  1316                           	callstack 0
  1317  000057                     	ds	1
  1318  000058                     _eusart2RxHead:
  1319                           	callstack 0
  1320  000058                     	ds	1
  1321                           
  1322                           	psect	bssBANK0
  1323  000060                     __pbssBANK0:
  1324                           	callstack 0
  1325  000060                     _eusart2RxStatusBuffer:
  1326                           	callstack 0
  1327  000060                     	ds	8
  1328  000068                     _eusart2RxBuffer:
  1329                           	callstack 0
  1330  000068                     	ds	8
  1331  000070                     _eusart2TxBuffer:
  1332                           	callstack 0
  1333  000070                     	ds	8
  1334  000078                     _nout:
  1335                           	callstack 0
  1336  000078                     	ds	2
  1337  00007A                     _width:
  1338                           	callstack 0
  1339  00007A                     	ds	2
  1340  00007C                     _EUSART1_ErrorHandler:
  1341                           	callstack 0
  1342  00007C                     	ds	2
  1343  00007E                     _EUSART1_OverrunErrorHandler:
  1344                           	callstack 0
  1345  00007E                     	ds	2
  1346  000080                     _EUSART1_FramingErrorHandler:
  1347                           	callstack 0
  1348  000080                     	ds	2
  1349  000082                     _EUSART2_ErrorHandler:
  1350                           	callstack 0
  1351  000082                     	ds	2
  1352  000084                     _EUSART2_OverrunErrorHandler:
  1353                           	callstack 0
  1354  000084                     	ds	2
  1355  000086                     _EUSART2_FramingErrorHandler:
  1356                           	callstack 0
  1357  000086                     	ds	2
  1358  000088                     _EUSART2_RxDefaultInterruptHandler:
  1359                           	callstack 0
  1360  000088                     	ds	2
  1361  00008A                     _EUSART2_TxDefaultInterruptHandler:
  1362                           	callstack 0
  1363  00008A                     	ds	2
  1364  00008C                     _timer1ReloadVal:
  1365                           	callstack 0
  1366  00008C                     	ds	2
  1367  00008E                     myEUSART2ISR@Index:
  1368                           	callstack 0
  1369  00008E                     	ds	1
  1370  00008F                     myEUSART2ISR@state:
  1371                           	callstack 0
  1372  00008F                     	ds	1
  1373  000090                     _checksum:
  1374                           	callstack 0
  1375  000090                     	ds	1
  1376  000091                     _cksum:
  1377                           	callstack 0
  1378  000091                     	ds	1
  1379  000092                     _ind:
  1380                           	callstack 0
  1381  000092                     	ds	1
  1382  000093                     _receiveNewMessage:
  1383                           	callstack 0
  1384  000093                     	ds	1
  1385  000094                     _receiveBusy:
  1386                           	callstack 0
  1387  000094                     	ds	1
  1388  000095                     _eusart1RxLastError:
  1389                           	callstack 0
  1390  000095                     	ds	1
  1391  000096                     _eusart2RxLastError:
  1392                           	callstack 0
  1393  000096                     	ds	1
  1394  000097                     _eusart2RxCount:
  1395                           	callstack 0
  1396  000097                     	ds	1
  1397  000098                     _eusart2TxBufferRemaining:
  1398                           	callstack 0
  1399  000098                     	ds	1
  1400  000099                     _eusart2TxTail:
  1401                           	callstack 0
  1402  000099                     	ds	1
  1403  00009A                     _eusart2TxHead:
  1404                           	callstack 0
  1405  00009A                     	ds	1
  1406  00009B                     _IRtransmitBuffer:
  1407                           	callstack 0
  1408  00009B                     	ds	25
  1409                           
  1410                           	psect	dataBANK0
  1411  0000E7                     __pdataBANK0:
  1412                           	callstack 0
  1413  0000E7                     _bitPeriod:
  1414                           	callstack 0
  1415  0000E7                     	ds	10
  1416  0000F1                     stoa@F1144:
  1417                           	callstack 0
  1418  0000F1                     	ds	7
  1419  0000F8                     _baudRateSelected:
  1420                           	callstack 0
  1421  0000F8                     	ds	1
  1422                           
  1423                           	psect	bssBANK1
  1424  000100                     __pbssBANK1:
  1425                           	callstack 0
  1426  000100                     _dbuf:
  1427                           	callstack 0
  1428  000100                     	ds	32
  1429  000120                     _IRreceiveBuffer:
  1430                           	callstack 0
  1431  000120                     	ds	25
  1432                           
  1433                           	psect	cstackBANK0
  1434  0000B4                     __pcstackBANK0:
  1435                           	callstack 0
  1436  0000B4                     ??_vfpfcnvrt:
  1437                           
  1438                           ; 1 bytes @ 0x0
  1439  0000B4                     	ds	4
  1440  0000B8                     vfpfcnvrt@ll:
  1441                           	callstack 0
  1442                           
  1443                           ; 8 bytes @ 0x4
  1444  0000B8                     	ds	8
  1445  0000C0                     vfpfcnvrt@cp:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0xC
  1449  0000C0                     	ds	2
  1450  0000C2                     vfpfcnvrt@done:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0xE
  1454  0000C2                     	ds	2
  1455  0000C4                     _vfpfcnvrt$1960:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x10
  1459  0000C4                     	ds	2
  1460  0000C6                     vfpfcnvrt@llu:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x12
  1464  0000C6                     	ds	8
  1465  0000CE                     vfpfcnvrt@c:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x1A
  1469  0000CE                     	ds	1
  1470  0000CF                     ?_vfprintf:
  1471                           	callstack 0
  1472  0000CF                     vfprintf@fp:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x1B
  1476  0000CF                     	ds	2
  1477  0000D1                     vfprintf@fmt:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x1D
  1481  0000D1                     	ds	2
  1482  0000D3                     vfprintf@ap:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x1F
  1486  0000D3                     	ds	2
  1487  0000D5                     ?_printf:
  1488                           	callstack 0
  1489  0000D5                     printf@fmt:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x21
  1493  0000D5                     	ds	8
  1494  0000DD                     printf@ap:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x29
  1498  0000DD                     	ds	2
  1499  0000DF                     ??_main:
  1500                           
  1501                           ; 1 bytes @ 0x2B
  1502  0000DF                     	ds	2
  1503  0000E1                     main@baud_rate:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x2D
  1507  0000E1                     	ds	2
  1508  0000E3                     main@cmd:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0x2F
  1512  0000E3                     	ds	1
  1513  0000E4                     main@letter:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x30
  1517  0000E4                     	ds	1
  1518  0000E5                     main@i_1370:
  1519                           	callstack 0
  1520                           
  1521                           ; 1 bytes @ 0x31
  1522  0000E5                     	ds	1
  1523  0000E6                     main@i:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x32
  1527  0000E6                     	ds	1
  1528                           
  1529                           	psect	cstackCOMRAM
  1530  000001                     __pcstackCOMRAM:
  1531                           	callstack 0
  1532  000001                     ??_myEUSART2ISR:
  1533  000001                     
  1534                           ; 1 bytes @ 0x0
  1535  000001                     	ds	2
  1536  000003                     ??_INTERRUPT_InterruptManager:
  1537                           
  1538                           ; 1 bytes @ 0x2
  1539  000003                     	ds	4
  1540  000007                     ?_strlen:
  1541                           	callstack 0
  1542  000007                     ?_isupper:
  1543                           	callstack 0
  1544  000007                     ?_isalpha:
  1545                           	callstack 0
  1546  000007                     ?_isdigit:
  1547                           	callstack 0
  1548  000007                     ?_isspace:
  1549                           	callstack 0
  1550  000007                     ?_islower:
  1551                           	callstack 0
  1552  000007                     ?___wmul:
  1553                           	callstack 0
  1554  000007                     ?___aodiv:
  1555                           	callstack 0
  1556  000007                     ?___aomod:
  1557                           	callstack 0
  1558  000007                     ?___lodiv:
  1559                           	callstack 0
  1560  000007                     ?___lomod:
  1561                           	callstack 0
  1562  000007                     EUSART1_Write@txData:
  1563                           	callstack 0
  1564  000007                     EPWM2_LoadDutyValue@dutyValue:
  1565                           	callstack 0
  1566  000007                     TMR1_WriteTimer@timerVal:
  1567                           	callstack 0
  1568  000007                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1569                           	callstack 0
  1570  000007                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1571                           	callstack 0
  1572  000007                     EUSART2_SetErrorHandler@interruptHandler:
  1573                           	callstack 0
  1574  000007                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1575                           	callstack 0
  1576  000007                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1577                           	callstack 0
  1578  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1579                           	callstack 0
  1580  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1581                           	callstack 0
  1582  000007                     EUSART1_SetErrorHandler@interruptHandler:
  1583                           	callstack 0
  1584  000007                     ___wmul@multiplier:
  1585                           	callstack 0
  1586  000007                     isalpha@c:
  1587                           	callstack 0
  1588  000007                     isdigit@c:
  1589                           	callstack 0
  1590  000007                     isspace@c:
  1591                           	callstack 0
  1592  000007                     isupper@c:
  1593                           	callstack 0
  1594  000007                     strlen@s:
  1595                           	callstack 0
  1596  000007                     islower@c:
  1597                           	callstack 0
  1598  000007                     ___aodiv@dividend:
  1599                           	callstack 0
  1600  000007                     ___aomod@dividend:
  1601                           	callstack 0
  1602  000007                     ___lodiv@dividend:
  1603                           	callstack 0
  1604  000007                     ___lomod@dividend:
  1605                           	callstack 0
  1606                           
  1607                           ; 8 bytes @ 0x6
  1608  000007                     	ds	1
  1609  000008                     putch@txData:
  1610                           	callstack 0
  1611                           
  1612                           ; 1 bytes @ 0x7
  1613  000008                     	ds	1
  1614  000009                     ??_isupper:
  1615  000009                     ??_isalpha:
  1616  000009                     ??_isdigit:
  1617  000009                     ??_isspace:
  1618  000009                     ??_islower:
  1619  000009                     ??_EPWM2_LoadDutyValue:
  1620  000009                     ___wmul@multiplicand:
  1621                           	callstack 0
  1622  000009                     fputc@c:
  1623                           	callstack 0
  1624  000009                     strlen@a:
  1625                           	callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x8
  1628  000009                     	ds	2
  1629  00000B                     transmitCharacterOverIR@baudRate:
  1630                           	callstack 0
  1631  00000B                     ___wmul@product:
  1632                           	callstack 0
  1633  00000B                     fputc@fp:
  1634                           	callstack 0
  1635                           
  1636                           ; 2 bytes @ 0xA
  1637  00000B                     	ds	2
  1638  00000D                     ??_fputc:
  1639  00000D                     ?_toupper:
  1640                           	callstack 0
  1641  00000D                     transmitCharacterOverIR@letter:
  1642                           	callstack 0
  1643  00000D                     _isspace$2011:
  1644                           	callstack 0
  1645  00000D                     toupper@c:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0xC
  1649  00000D                     	ds	1
  1650  00000E                     ?_atoi:
  1651                           	callstack 0
  1652  00000E                     transmitCharacterOverIR@mask:
  1653                           	callstack 0
  1654  00000E                     atoi@s:
  1655                           	callstack 0
  1656                           
  1657                           ; 2 bytes @ 0xD
  1658  00000E                     	ds	1
  1659  00000F                     ??_toupper:
  1660  00000F                     ___aodiv@divisor:
  1661                           	callstack 0
  1662  00000F                     ___aomod@divisor:
  1663                           	callstack 0
  1664  00000F                     ___lodiv@divisor:
  1665                           	callstack 0
  1666  00000F                     ___lomod@divisor:
  1667                           	callstack 0
  1668                           
  1669                           ; 8 bytes @ 0xE
  1670  00000F                     	ds	1
  1671  000010                     ??_atoi:
  1672                           
  1673                           ; 1 bytes @ 0xF
  1674  000010                     	ds	2
  1675  000012                     ?_stoa:
  1676                           	callstack 0
  1677  000012                     stoa@fp:
  1678                           	callstack 0
  1679  000012                     fputs@s:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x11
  1683  000012                     	ds	1
  1684  000013                     _toupper$2060:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x12
  1688  000013                     	ds	1
  1689  000014                     stoa@s:
  1690                           	callstack 0
  1691  000014                     atoi@neg:
  1692                           	callstack 0
  1693  000014                     fputs@fp:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x13
  1697  000014                     	ds	2
  1698  000016                     ??_stoa:
  1699  000016                     fputs@c:
  1700                           	callstack 0
  1701  000016                     _atoi$1984:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x15
  1705  000016                     	ds	1
  1706  000017                     ___aodiv@counter:
  1707                           	callstack 0
  1708  000017                     ___aomod@counter:
  1709                           	callstack 0
  1710  000017                     ___lomod@counter:
  1711                           	callstack 0
  1712  000017                     fputs@i:
  1713                           	callstack 0
  1714  000017                     stoa@nuls:
  1715                           	callstack 0
  1716  000017                     ___lodiv@quotient:
  1717                           	callstack 0
  1718                           
  1719                           ; 8 bytes @ 0x16
  1720  000017                     	ds	1
  1721  000018                     ___aodiv@sign:
  1722                           	callstack 0
  1723  000018                     ___aomod@sign:
  1724                           	callstack 0
  1725  000018                     _atoi$1986:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x17
  1729  000018                     	ds	1
  1730  000019                     ?_abs:
  1731                           	callstack 0
  1732  000019                     ?_pad:
  1733                           	callstack 0
  1734  000019                     pad@fp:
  1735                           	callstack 0
  1736  000019                     abs@a:
  1737                           	callstack 0
  1738  000019                     ___aodiv@quotient:
  1739                           	callstack 0
  1740                           
  1741                           ; 8 bytes @ 0x18
  1742  000019                     	ds	1
  1743  00001A                     _atoi$1985:
  1744                           	callstack 0
  1745                           
  1746                           ; 1 bytes @ 0x19
  1747  00001A                     	ds	1
  1748  00001B                     ??_abs:
  1749  00001B                     pad@buf:
  1750                           	callstack 0
  1751  00001B                     atoi@n:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x1A
  1755  00001B                     	ds	2
  1756  00001D                     pad@p:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x1C
  1760  00001D                     	ds	1
  1761  00001E                     stoa@i:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x1D
  1765  00001E                     	ds	1
  1766  00001F                     ??_pad:
  1767  00001F                     ___lodiv@counter:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x1E
  1771  00001F                     	ds	1
  1772  000020                     pad@i:
  1773                           	callstack 0
  1774  000020                     stoa@w:
  1775                           	callstack 0
  1776                           
  1777                           ; 2 bytes @ 0x1F
  1778  000020                     	ds	2
  1779  000022                     pad@w:
  1780                           	callstack 0
  1781  000022                     stoa@cp:
  1782                           	callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x21
  1785  000022                     	ds	2
  1786  000024                     ?_ctoa:
  1787                           	callstack 0
  1788  000024                     ?_dtoa:
  1789                           	callstack 0
  1790  000024                     ?_utoa:
  1791                           	callstack 0
  1792  000024                     ?_xtoa:
  1793                           	callstack 0
  1794  000024                     ctoa@fp:
  1795                           	callstack 0
  1796  000024                     dtoa@fp:
  1797                           	callstack 0
  1798  000024                     stoa@p:
  1799                           	callstack 0
  1800  000024                     utoa@fp:
  1801                           	callstack 0
  1802  000024                     xtoa@fp:
  1803                           	callstack 0
  1804                           
  1805                           ; 2 bytes @ 0x23
  1806  000024                     	ds	2
  1807  000026                     ctoa@c:
  1808                           	callstack 0
  1809  000026                     stoa@l:
  1810                           	callstack 0
  1811  000026                     dtoa@d:
  1812                           	callstack 0
  1813  000026                     utoa@d:
  1814                           	callstack 0
  1815  000026                     xtoa@d:
  1816                           	callstack 0
  1817                           
  1818                           ; 8 bytes @ 0x25
  1819  000026                     	ds	1
  1820  000027                     ctoa@w:
  1821                           	callstack 0
  1822                           
  1823                           ; 2 bytes @ 0x26
  1824  000027                     	ds	7
  1825  00002E                     ??_dtoa:
  1826  00002E                     ??_utoa:
  1827  00002E                     xtoa@x:
  1828                           	callstack 0
  1829                           
  1830                           ; 1 bytes @ 0x2D
  1831  00002E                     	ds	1
  1832  00002F                     ??_xtoa:
  1833                           
  1834                           ; 1 bytes @ 0x2E
  1835  00002F                     	ds	7
  1836  000036                     _dtoa$1918:
  1837                           	callstack 0
  1838  000036                     utoa@p:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x35
  1842  000036                     	ds	1
  1843  000037                     _xtoa$1945:
  1844                           	callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x36
  1847  000037                     	ds	1
  1848  000038                     dtoa@p:
  1849                           	callstack 0
  1850  000038                     utoa@w:
  1851                           	callstack 0
  1852                           
  1853                           ; 2 bytes @ 0x37
  1854  000038                     	ds	1
  1855  000039                     _xtoa$1946:
  1856                           	callstack 0
  1857                           
  1858                           ; 2 bytes @ 0x38
  1859  000039                     	ds	1
  1860  00003A                     dtoa@w:
  1861                           	callstack 0
  1862  00003A                     utoa@n:
  1863                           	callstack 0
  1864                           
  1865                           ; 8 bytes @ 0x39
  1866  00003A                     	ds	1
  1867  00003B                     xtoa@p:
  1868                           	callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x3A
  1871  00003B                     	ds	1
  1872  00003C                     dtoa@s:
  1873                           	callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x3B
  1876  00003C                     	ds	1
  1877  00003D                     xtoa@w:
  1878                           	callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x3C
  1881  00003D                     	ds	1
  1882  00003E                     dtoa@n:
  1883                           	callstack 0
  1884                           
  1885                           ; 8 bytes @ 0x3D
  1886  00003E                     	ds	1
  1887  00003F                     xtoa@n:
  1888                           	callstack 0
  1889                           
  1890                           ; 8 bytes @ 0x3E
  1891  00003F                     	ds	3
  1892  000042                     utoa@i:
  1893                           	callstack 0
  1894                           
  1895                           ; 2 bytes @ 0x41
  1896  000042                     	ds	4
  1897  000046                     dtoa@i:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x45
  1901  000046                     	ds	1
  1902  000047                     xtoa@i:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x46
  1906  000047                     	ds	2
  1907  000049                     xtoa@c:
  1908                           	callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x48
  1911  000049                     	ds	2
  1912  00004B                     ?_vfpfcnvrt:
  1913                           	callstack 0
  1914  00004B                     vfpfcnvrt@fp:
  1915                           	callstack 0
  1916                           
  1917                           ; 2 bytes @ 0x4A
  1918  00004B                     	ds	2
  1919  00004D                     vfpfcnvrt@fmt:
  1920                           	callstack 0
  1921                           
  1922                           ; 2 bytes @ 0x4C
  1923  00004D                     	ds	2
  1924  00004F                     vfpfcnvrt@ap:
  1925                           	callstack 0
  1926                           
  1927                           ; 2 bytes @ 0x4E
  1928  00004F                     	ds	2
  1929  000051                     vfprintf@cfmt:
  1930                           	callstack 0
  1931                           
  1932                           ; 2 bytes @ 0x50
  1933  000051                     	ds	2
  1934  000053                     
  1935                           ; 1 bytes @ 0x52
  1936 ;;
  1937 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1938 ;;
  1939 ;; *************** function _main *****************
  1940 ;; Defined at:
  1941 ;;		line 49 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  baud_rate       2   45[BANK0 ] unsigned short 
  1946 ;;  i               1   49[BANK0 ] unsigned char 
  1947 ;;  i               1   50[BANK0 ] unsigned char 
  1948 ;;  letter          1   48[BANK0 ] unsigned char 
  1949 ;;  cmd             1   47[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        8 bytes
  1964 ;; Hardware stack levels required when called:   13
  1965 ;; This function calls:
  1966 ;;		_EPWM2_LoadDutyValue
  1967 ;;		_EUSART1_Read
  1968 ;;		_EUSART1_is_rx_ready
  1969 ;;		_EUSART2_Read
  1970 ;;		_EUSART2_SetRxInterruptHandler
  1971 ;;		_EUSART2_is_rx_ready
  1972 ;;		_SYSTEM_Initialize
  1973 ;;		_TMR1_HasOverflowOccured
  1974 ;;		_TMR1_WriteTimer
  1975 ;;		_printf
  1976 ;;		_transmitCharacterOverIR
  1977 ;; This function is called by:
  1978 ;;		Startup code after reset
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text0
  1983  0000B4                     __ptext0:
  1984                           	callstack 0
  1985  0000B4                     _main:
  1986                           	callstack 18
  1987  0000B4                     
  1988                           ;main.c: 51: ;main.c: 52:  printf("Lab 6\r\n");;main.c: 53:  printf("Receive and decode 
      +                          an IR packet\r\n");;main.c: 55:  printf("Install a jumper wire from RC0 to RB7 ONLY AFTE
      +                          R unplugging PICKit3\r\n");
  1989  0000B4  EC23  F013         	call	_SYSTEM_Initialize	;wreg free
  1990                           
  1991                           ;main.c: 56:  printf("Install a jumper over IR_TX header pins\r\n");
  1992  0000B8  0E38               	movlw	low _myEUSART2ISR
  1993  0000BA  6E07               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  1994  0000BC  0E1F               	movlw	high _myEUSART2ISR
  1995  0000BE  6E08               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  1996  0000C0  ECA6  F013         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  1997  0000C4                     
  1998                           ;main.c: 57:  printf("\r\n> ");
  1999  0000C4  8EF2               	bsf	242,7,c	;volatile
  2000  0000C6                     
  2001                           ;main.c: 58: 
  2002  0000C6  8CF2               	bsf	242,6,c	;volatile
  2003                           
  2004                           ;main.c: 60:  for (;;) {
  2005  0000C8  0E00               	movlw	0
  2006  0000CA  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2007  0000CC  0E00               	movlw	0
  2008  0000CE  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2009  0000D0  EC8F  F012         	call	_EPWM2_LoadDutyValue	;wreg free
  2010  0000D4                     
  2011                           ;main.c: 63:          cmd = EUSART1_Read();
  2012  0000D4  EC60  F013         	call	_EUSART2_is_rx_ready	;wreg free
  2013  0000D8  0900               	iorlw	0
  2014  0000DA  B4D8               	btfsc	status,2,c
  2015  0000DC  EF72  F000         	goto	u3541
  2016  0000E0  EF74  F000         	goto	u3540
  2017  0000E4                     u3541:
  2018  0000E4  EF76  F000         	goto	l4361
  2019  0000E8                     u3540:
  2020  0000E8  EC59  F011         	call	_EUSART2_Read	;wreg free
  2021  0000EC                     l4361:
  2022                           
  2023                           ;main.c: 64:          switch (cmd) {
  2024  0000EC  EC60  F013         	call	_EUSART2_is_rx_ready	;wreg free
  2025  0000F0  0900               	iorlw	0
  2026  0000F2  B4D8               	btfsc	status,2,c
  2027  0000F4  EF7E  F000         	goto	u3551
  2028  0000F8  EF80  F000         	goto	u3550
  2029  0000FC                     u3551:
  2030  0000FC  EF82  F000         	goto	l4365
  2031  000100                     u3550:
  2032  000100  EC59  F011         	call	_EUSART2_Read	;wreg free
  2033  000104                     l4365:
  2034                           
  2035                           ;main.c: 67: 
  2036  000104  0E00               	movlw	0
  2037  000106  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2038  000108  0E00               	movlw	0
  2039  00010A  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  2040  00010C  ECE8  F012         	call	_TMR1_WriteTimer	;wreg free
  2041  000110                     
  2042                           ;main.c: 68: 
  2043  000110  909E               	bcf	158,0,c	;volatile
  2044  000112                     l4369:
  2045  000112  EC77  F013         	call	_TMR1_HasOverflowOccured	;wreg free
  2046  000116  0900               	iorlw	0
  2047  000118  B4D8               	btfsc	status,2,c
  2048  00011A  EF91  F000         	goto	u3561
  2049  00011E  EF93  F000         	goto	u3560
  2050  000122                     u3561:
  2051  000122  EF89  F000         	goto	l4369
  2052  000126                     u3560:
  2053  000126                     
  2054                           ;main.c: 77:                      case 2: printf("2400 Baud\r\n");
  2055  000126  0EDE               	movlw	low STR_1
  2056  000128  0100               	movlb	0	; () banked
  2057  00012A  6FD5               	movwf	printf@fmt& (0+255),b
  2058  00012C  0EFF               	movlw	high STR_1
  2059  00012E  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2060  000130  ECFC  F012         	call	_printf	;wreg free
  2061                           
  2062                           ;main.c: 78:                          break;
  2063  000134  0E12               	movlw	low STR_2
  2064  000136  0100               	movlb	0	; () banked
  2065  000138  6FD5               	movwf	printf@fmt& (0+255),b
  2066  00013A  0EFE               	movlw	high STR_2
  2067  00013C  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2068  00013E  ECFC  F012         	call	_printf	;wreg free
  2069                           
  2070                           ;main.c: 79:                      case 3: printf("9600 Baud\r\n");
  2071  000142  0E8B               	movlw	low STR_3
  2072  000144  0100               	movlb	0	; () banked
  2073  000146  6FD5               	movwf	printf@fmt& (0+255),b
  2074  000148  0EFE               	movlw	high STR_3
  2075  00014A  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2076  00014C  ECFC  F012         	call	_printf	;wreg free
  2077                           
  2078                           ;main.c: 80:                          break;
  2079  000150  0E6B               	movlw	low STR_4
  2080  000152  0100               	movlb	0	; () banked
  2081  000154  6FD5               	movwf	printf@fmt& (0+255),b
  2082  000156  0EFC               	movlw	high STR_4
  2083  000158  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2084  00015A  ECFC  F012         	call	_printf	;wreg free
  2085                           
  2086                           ;main.c: 81:                      case 4: printf("19200 Baud\r\n");
  2087  00015E  0E74               	movlw	low STR_5
  2088  000160  0100               	movlb	0	; () banked
  2089  000162  6FD5               	movwf	printf@fmt& (0+255),b
  2090  000164  0EFD               	movlw	high STR_5
  2091  000166  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2092  000168  ECFC  F012         	call	_printf	;wreg free
  2093                           
  2094                           ;main.c: 82:                          break;
  2095  00016C  0EF5               	movlw	low STR_6
  2096  00016E  0100               	movlb	0	; () banked
  2097  000170  6FD5               	movwf	printf@fmt& (0+255),b
  2098  000172  0EFF               	movlw	high STR_6
  2099  000174  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2100  000176  ECFC  F012         	call	_printf	;wreg free
  2101  00017A                     l4373:
  2102                           
  2103                           ;main.c: 87:                  printf("?: help menu\r\n");
  2104  00017A  EC81  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2105  00017E  0900               	iorlw	0
  2106  000180  B4D8               	btfsc	status,2,c
  2107  000182  EFC5  F000         	goto	u3571
  2108  000186  EFC7  F000         	goto	u3570
  2109  00018A                     u3571:
  2110  00018A  EFBD  F000         	goto	l4373
  2111  00018E                     u3570:
  2112  00018E                     
  2113                           ;main.c: 88:                  printf("o: k\r\n");
  2114  00018E  ECD3  F012         	call	_EUSART1_Read	;wreg free
  2115  000192  0100               	movlb	0	; () banked
  2116  000194  6FE3               	movwf	main@cmd& (0+255),b
  2117                           
  2118                           ;main.c: 89:                  printf("Z: Reset processor\r\n");
  2119  000196  EF7A  F003         	goto	l4529
  2120  00019A                     l4377:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 95:                  printf("R: Receive message using EUSART2 ISR via IR decode
      +                          r\r\n");;main.c: 96:                  printf("------------------------------------------
      +                          -------\r\n");
  2124  00019A  0EE7               	movlw	low STR_7
  2125  00019C  6FD5               	movwf	printf@fmt& (0+255),b
  2126  00019E  0EFC               	movlw	high STR_7
  2127  0001A0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2128  0001A2  ECFC  F012         	call	_printf	;wreg free
  2129                           
  2130                           ;main.c: 97:                  break;
  2131  0001A6  EF05  F001         	goto	l4393
  2132  0001AA                     l4379:
  2133                           
  2134                           ; BSR set to: 0
  2135  0001AA  0ED3               	movlw	low STR_8
  2136  0001AC  6FD5               	movwf	printf@fmt& (0+255),b
  2137  0001AE  0EFF               	movlw	high STR_8
  2138  0001B0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2139  0001B2  ECFC  F012         	call	_printf	;wreg free
  2140                           
  2141                           ;main.c: 99: 
  2142  0001B6  EF27  F001         	goto	l4395
  2143  0001BA                     l4381:
  2144                           
  2145                           ; BSR set to: 0
  2146  0001BA  0EA4               	movlw	low STR_9
  2147  0001BC  6FD5               	movwf	printf@fmt& (0+255),b
  2148  0001BE  0EFF               	movlw	high STR_9
  2149  0001C0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2150  0001C2  ECFC  F012         	call	_printf	;wreg free
  2151                           
  2152                           ;main.c: 101: 
  2153  0001C6  EF27  F001         	goto	l4395
  2154  0001CA                     l4383:
  2155                           
  2156                           ; BSR set to: 0
  2157  0001CA  0EB0               	movlw	low STR_10
  2158  0001CC  6FD5               	movwf	printf@fmt& (0+255),b
  2159  0001CE  0EFF               	movlw	high STR_10
  2160  0001D0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2161  0001D2  ECFC  F012         	call	_printf	;wreg free
  2162                           
  2163                           ;main.c: 103:              {
  2164  0001D6  EF27  F001         	goto	l4395
  2165  0001DA                     l4385:
  2166                           
  2167                           ; BSR set to: 0
  2168  0001DA  0EBC               	movlw	low STR_11
  2169  0001DC  6FD5               	movwf	printf@fmt& (0+255),b
  2170  0001DE  0EFF               	movlw	high STR_11
  2171  0001E0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2172  0001E2  ECFC  F012         	call	_printf	;wreg free
  2173                           
  2174                           ;main.c: 105:                  break;
  2175  0001E6  EF27  F001         	goto	l4395
  2176  0001EA                     l4387:
  2177                           
  2178                           ; BSR set to: 0
  2179  0001EA  0E97               	movlw	low STR_12
  2180  0001EC  6FD5               	movwf	printf@fmt& (0+255),b
  2181  0001EE  0EFF               	movlw	high STR_12
  2182  0001F0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2183  0001F2  ECFC  F012         	call	_printf	;wreg free
  2184                           
  2185                           ;main.c: 107: 
  2186  0001F6  EF27  F001         	goto	l4395
  2187  0001FA                     l4389:
  2188                           
  2189                           ; BSR set to: 0
  2190  0001FA  0EA4               	movlw	low STR_9
  2191  0001FC  6FD5               	movwf	printf@fmt& (0+255),b
  2192  0001FE  0EFF               	movlw	high STR_9
  2193  000200  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2194  000202  ECFC  F012         	call	_printf	;wreg free
  2195                           
  2196                           ;main.c: 109: 
  2197  000206  EF27  F001         	goto	l4395
  2198  00020A                     l4393:
  2199  00020A  0100               	movlb	0	; () banked
  2200  00020C  51F8               	movf	_baudRateSelected& (0+255),w,b
  2201  00020E  6FDF               	movwf	??_main& (0+255),b
  2202  000210  6BE0               	clrf	(??_main+1)& (0+255),b
  2203                           
  2204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2205                           ; Switch size 1, requested type "simple"
  2206                           ; Number of cases is 1, Range of values is 0 to 0
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte            4     3 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211  000212  51E0               	movf	(??_main+1)& (0+255),w,b
  2212  000214  0A00               	xorlw	0	; case 0
  2213  000216  B4D8               	btfsc	status,2,c
  2214  000218  EF10  F001         	goto	l4719
  2215  00021C  EFFD  F000         	goto	l4389
  2216  000220                     l4719:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 5, Range of values is 0 to 4
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte           16     9 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225  000220  51DF               	movf	??_main& (0+255),w,b
  2226  000222  0A00               	xorlw	0	; case 0
  2227  000224  B4D8               	btfsc	status,2,c
  2228  000226  EFD5  F000         	goto	l4379
  2229  00022A  0A01               	xorlw	1	; case 1
  2230  00022C  B4D8               	btfsc	status,2,c
  2231  00022E  EFDD  F000         	goto	l4381
  2232  000232  0A03               	xorlw	3	; case 2
  2233  000234  B4D8               	btfsc	status,2,c
  2234  000236  EFE5  F000         	goto	l4383
  2235  00023A  0A01               	xorlw	1	; case 3
  2236  00023C  B4D8               	btfsc	status,2,c
  2237  00023E  EFED  F000         	goto	l4385
  2238  000242  0A07               	xorlw	7	; case 4
  2239  000244  B4D8               	btfsc	status,2,c
  2240  000246  EFF5  F000         	goto	l4387
  2241  00024A  EFFD  F000         	goto	l4389
  2242  00024E                     l4395:
  2243                           
  2244                           ;main.c: 111:              {
  2245  00024E  0EE7               	movlw	low STR_7
  2246  000250  0100               	movlb	0	; () banked
  2247  000252  6FD5               	movwf	printf@fmt& (0+255),b
  2248  000254  0EFC               	movlw	high STR_7
  2249  000256  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2250  000258  ECFC  F012         	call	_printf	;wreg free
  2251                           
  2252                           ;main.c: 112:                  for (i = 0; i < 40; i++) printf("\n");
  2253  00025C  0E6C               	movlw	low STR_15
  2254  00025E  0100               	movlb	0	; () banked
  2255  000260  6FD5               	movwf	printf@fmt& (0+255),b
  2256  000262  0EFF               	movlw	high STR_15
  2257  000264  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2258  000266  ECFC  F012         	call	_printf	;wreg free
  2259                           
  2260                           ;main.c: 113:                  __asm("reset");
  2261  00026A  0EEE               	movlw	low STR_16
  2262  00026C  0100               	movlb	0	; () banked
  2263  00026E  6FD5               	movwf	printf@fmt& (0+255),b
  2264  000270  0EFF               	movlw	high STR_16
  2265  000272  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2266  000274  ECFC  F012         	call	_printf	;wreg free
  2267                           
  2268                           ;main.c: 114:                  break;
  2269  000278  0EB6               	movlw	low STR_17
  2270  00027A  0100               	movlb	0	; () banked
  2271  00027C  6FD5               	movwf	printf@fmt& (0+255),b
  2272  00027E  0EFE               	movlw	high STR_17
  2273  000280  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2274  000282  ECFC  F012         	call	_printf	;wreg free
  2275                           
  2276                           ;main.c: 115:              }
  2277  000286  0E73               	movlw	low STR_18
  2278  000288  0100               	movlb	0	; () banked
  2279  00028A  6FD5               	movwf	printf@fmt& (0+255),b
  2280  00028C  0EFE               	movlw	high STR_18
  2281  00028E  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2282  000290  ECFC  F012         	call	_printf	;wreg free
  2283                           
  2284                           ;main.c: 116: 
  2285  000294  0E1B               	movlw	low STR_19
  2286  000296  0100               	movlb	0	; () banked
  2287  000298  6FD5               	movwf	printf@fmt& (0+255),b
  2288  00029A  0EFD               	movlw	high STR_19
  2289  00029C  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2290  00029E  ECFC  F012         	call	_printf	;wreg free
  2291                           
  2292                           ;main.c: 117: 
  2293  0002A2  0ECB               	movlw	low STR_20
  2294  0002A4  0100               	movlb	0	; () banked
  2295  0002A6  6FD5               	movwf	printf@fmt& (0+255),b
  2296  0002A8  0EFE               	movlw	high STR_20
  2297  0002AA  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2298  0002AC  ECFC  F012         	call	_printf	;wreg free
  2299                           
  2300                           ;main.c: 118: 
  2301  0002B0  0EEF               	movlw	low STR_21
  2302  0002B2  0100               	movlb	0	; () banked
  2303  0002B4  6FD5               	movwf	printf@fmt& (0+255),b
  2304  0002B6  0EFD               	movlw	high STR_21
  2305  0002B8  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2306  0002BA  ECFC  F012         	call	_printf	;wreg free
  2307                           
  2308                           ;main.c: 119:              case 'z':
  2309  0002BE  0E34               	movlw	low STR_22
  2310  0002C0  0100               	movlb	0	; () banked
  2311  0002C2  6FD5               	movwf	printf@fmt& (0+255),b
  2312  0002C4  0EFE               	movlw	high STR_22
  2313  0002C6  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2314  0002C8  ECFC  F012         	call	_printf	;wreg free
  2315                           
  2316                           ;main.c: 120:              {
  2317  0002CC  0EB1               	movlw	low STR_23
  2318  0002CE  0100               	movlb	0	; () banked
  2319  0002D0  6FD5               	movwf	printf@fmt& (0+255),b
  2320  0002D2  0EFC               	movlw	high STR_23
  2321  0002D4  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2322  0002D6  ECFC  F012         	call	_printf	;wreg free
  2323                           
  2324                           ;main.c: 121:                  for (i = 0; i < 40; i++) printf("\n");
  2325  0002DA  0EE7               	movlw	low STR_7
  2326  0002DC  0100               	movlb	0	; () banked
  2327  0002DE  6FD5               	movwf	printf@fmt& (0+255),b
  2328  0002E0  0EFC               	movlw	high STR_7
  2329  0002E2  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2330  0002E4  ECFC  F012         	call	_printf	;wreg free
  2331                           
  2332                           ;main.c: 122:                  break;
  2333  0002E8  EFBD  F000         	goto	l4373
  2334  0002EC                     l4397:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;main.c: 128:              {;main.c: 129:                  printf("Choose the index of t
      +                          he target baud rate\r\n");
  2338  0002EC  0EE6               	movlw	low STR_25
  2339  0002EE  6FD5               	movwf	printf@fmt& (0+255),b
  2340  0002F0  0EFF               	movlw	high STR_25
  2341  0002F2  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2342  0002F4  ECFC  F012         	call	_printf	;wreg free
  2343                           
  2344                           ;main.c: 130:                  printf("0: 300 baud\r\n");
  2345  0002F8  EFBD  F000         	goto	l4373
  2346  0002FC                     l4399:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;main.c: 136:                  baudRateSelected = EUSART1_Read() - '0';;main.c: 137:    
      +                                        switch (baudRateSelected) {
  2350  0002FC  0E00               	movlw	0
  2351  0002FE  6FE6               	movwf	main@i& (0+255),b
  2352  000300                     l4405:
  2353                           
  2354                           ; BSR set to: 0
  2355  000300  0E19               	movlw	low (STR_7+50)
  2356  000302  6FD5               	movwf	printf@fmt& (0+255),b
  2357  000304  0EFD               	movlw	high (STR_7+50)
  2358  000306  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2359  000308  ECFC  F012         	call	_printf	;wreg free
  2360  00030C  0100               	movlb	0	; () banked
  2361  00030E  2BE6               	incf	main@i& (0+255),f,b
  2362  000310                     
  2363                           ; BSR set to: 0
  2364  000310  0E27               	movlw	39
  2365  000312  65E6               	cpfsgt	main@i& (0+255),b
  2366  000314  EF8E  F001         	goto	u3581
  2367  000318  EF90  F001         	goto	u3580
  2368  00031C                     u3581:
  2369  00031C  EF80  F001         	goto	l4405
  2370  000320                     u3580:
  2371  000320                     
  2372                           ; BSR set to: 0
  2373  000320  00FF               	reset		;# 
  2374                           
  2375                           ;main.c: 139:                          SPBRG2 = 0x54;
  2376  000322  EFBD  F000         	goto	l4373
  2377  000326                     l4411:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;main.c: 145:                          SPBRG2 = 0x0A;;main.c: 146:                      
      +                              break;
  2381  000326  0E00               	movlw	0
  2382  000328  6FE6               	movwf	main@i& (0+255),b
  2383  00032A                     l4417:
  2384                           
  2385                           ; BSR set to: 0
  2386  00032A  0E19               	movlw	low (STR_7+50)
  2387  00032C  6FD5               	movwf	printf@fmt& (0+255),b
  2388  00032E  0EFD               	movlw	high (STR_7+50)
  2389  000330  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2390  000332  ECFC  F012         	call	_printf	;wreg free
  2391  000336  0100               	movlb	0	; () banked
  2392  000338  2BE6               	incf	main@i& (0+255),f,b
  2393  00033A                     
  2394                           ; BSR set to: 0
  2395  00033A  0E27               	movlw	39
  2396  00033C  65E6               	cpfsgt	main@i& (0+255),b
  2397  00033E  EFA3  F001         	goto	u3591
  2398  000342  EFA5  F001         	goto	u3590
  2399  000346                     u3591:
  2400  000346  EF95  F001         	goto	l4417
  2401  00034A                     u3590:
  2402  00034A  EFBD  F000         	goto	l4373
  2403  00034E                     l4423:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;main.c: 153:                      default: SPBRGH2 = 0x34;;main.c: 154:                
      +                                    SPBRG2 = 0x14;
  2407  00034E  0E49               	movlw	low STR_28
  2408  000350  6FD5               	movwf	printf@fmt& (0+255),b
  2409  000352  0EFD               	movlw	high STR_28
  2410  000354  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2411  000356  ECFC  F012         	call	_printf	;wreg free
  2412                           
  2413                           ;main.c: 155:                          break;
  2414  00035A  0E89               	movlw	low STR_29
  2415  00035C  0100               	movlb	0	; () banked
  2416  00035E  6FD5               	movwf	printf@fmt& (0+255),b
  2417  000360  0EFF               	movlw	high STR_29
  2418  000362  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2419  000364  ECFC  F012         	call	_printf	;wreg free
  2420                           
  2421                           ;main.c: 156:                  }
  2422  000368  0E30               	movlw	low STR_30
  2423  00036A  0100               	movlb	0	; () banked
  2424  00036C  6FD5               	movwf	printf@fmt& (0+255),b
  2425  00036E  0EFF               	movlw	high STR_30
  2426  000370  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2427  000372  ECFC  F012         	call	_printf	;wreg free
  2428                           
  2429                           ;main.c: 157:                  printf("Baud rate assigned %02x:%02x\r\n", SPBRGH2, SPBRG
      +                          2);
  2430  000376  0E3F               	movlw	low STR_31
  2431  000378  0100               	movlb	0	; () banked
  2432  00037A  6FD5               	movwf	printf@fmt& (0+255),b
  2433  00037C  0EFF               	movlw	high STR_31
  2434  00037E  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2435  000380  ECFC  F012         	call	_printf	;wreg free
  2436                           
  2437                           ;main.c: 158:                  break;
  2438  000384  0E4E               	movlw	low STR_32
  2439  000386  0100               	movlb	0	; () banked
  2440  000388  6FD5               	movwf	printf@fmt& (0+255),b
  2441  00038A  0EFF               	movlw	high STR_32
  2442  00038C  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2443  00038E  ECFC  F012         	call	_printf	;wreg free
  2444                           
  2445                           ;main.c: 159:              }
  2446  000392  0E10               	movlw	low STR_33
  2447  000394  0100               	movlb	0	; () banked
  2448  000396  6FD5               	movwf	printf@fmt& (0+255),b
  2449  000398  0EFF               	movlw	high STR_33
  2450  00039A  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2451  00039C  ECFC  F012         	call	_printf	;wreg free
  2452  0003A0                     l4425:
  2453  0003A0  EC81  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2454  0003A4  0900               	iorlw	0
  2455  0003A6  A4D8               	btfss	status,2,c
  2456  0003A8  EFD8  F001         	goto	u3601
  2457  0003AC  EFDA  F001         	goto	u3600
  2458  0003B0                     u3601:
  2459  0003B0  EFD0  F001         	goto	l4425
  2460  0003B4                     u3600:
  2461  0003B4                     
  2462                           ;main.c: 161: 
  2463  0003B4  ECD3  F012         	call	_EUSART1_Read	;wreg free
  2464  0003B8  0FD0               	addlw	208
  2465  0003BA  0100               	movlb	0	; () banked
  2466  0003BC  6FF8               	movwf	_baudRateSelected& (0+255),b
  2467                           
  2468                           ;main.c: 162: 
  2469  0003BE  EFFF  F001         	goto	l4443
  2470  0003C2                     l4429:
  2471                           
  2472                           ; BSR set to: 0
  2473  0003C2  0ED0               	movlw	208
  2474  0003C4  6E76               	movwf	118,c	;volatile
  2475                           
  2476                           ;main.c: 164:              {
  2477  0003C6  0E54               	movlw	84
  2478  0003C8  6E75               	movwf	117,c	;volatile
  2479                           
  2480                           ;main.c: 165:                  RCSTA2bits.CREN = 0;
  2481  0003CA  EF20  F002         	goto	l4445
  2482  0003CE                     l4431:
  2483                           
  2484                           ; BSR set to: 0
  2485  0003CE  0E34               	movlw	52
  2486  0003D0  6E76               	movwf	118,c	;volatile
  2487                           
  2488                           ;main.c: 167:                  printf("Just reset EUSART2\r\n");
  2489  0003D2  0E14               	movlw	20
  2490  0003D4  6E75               	movwf	117,c	;volatile
  2491                           
  2492                           ;main.c: 168:                  break;
  2493  0003D6  EF20  F002         	goto	l4445
  2494  0003DA                     l4433:
  2495                           
  2496                           ; BSR set to: 0
  2497  0003DA  0E1A               	movlw	26
  2498  0003DC  6E76               	movwf	118,c	;volatile
  2499                           
  2500                           ;main.c: 170: 
  2501  0003DE  0E0A               	movlw	10
  2502  0003E0  6E75               	movwf	117,c	;volatile
  2503                           
  2504                           ;main.c: 171: 
  2505  0003E2  EF20  F002         	goto	l4445
  2506  0003E6                     l4435:
  2507                           
  2508                           ; BSR set to: 0
  2509  0003E6  0E06               	movlw	6
  2510  0003E8  6E76               	movwf	118,c	;volatile
  2511                           
  2512                           ;main.c: 173:              case 'm':
  2513  0003EA  0E82               	movlw	130
  2514  0003EC  6E75               	movwf	117,c	;volatile
  2515                           
  2516                           ;main.c: 174:              {
  2517  0003EE  EF20  F002         	goto	l4445
  2518  0003F2                     l4437:
  2519                           
  2520                           ; BSR set to: 0
  2521  0003F2  0E03               	movlw	3
  2522  0003F4  6E76               	movwf	118,c	;volatile
  2523                           
  2524                           ;main.c: 176:                  cksum = 0;
  2525  0003F6  0E40               	movlw	64
  2526  0003F8  6E75               	movwf	117,c	;volatile
  2527                           
  2528                           ;main.c: 177:                  printf("Enter a message, hit return when done.\r\n");
  2529  0003FA  EF20  F002         	goto	l4445
  2530  0003FE                     l4443:
  2531                           
  2532                           ; BSR set to: 0
  2533  0003FE  51F8               	movf	_baudRateSelected& (0+255),w,b
  2534  000400  6FDF               	movwf	??_main& (0+255),b
  2535  000402  6BE0               	clrf	(??_main+1)& (0+255),b
  2536                           
  2537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2538                           ; Switch size 1, requested type "simple"
  2539                           ; Number of cases is 1, Range of values is 0 to 0
  2540                           ; switch strategies available:
  2541                           ; Name         Instructions Cycles
  2542                           ; simple_byte            4     3 (average)
  2543                           ;	Chosen strategy is simple_byte
  2544  000404  51E0               	movf	(??_main+1)& (0+255),w,b
  2545  000406  0A00               	xorlw	0	; case 0
  2546  000408  B4D8               	btfsc	status,2,c
  2547  00040A  EF09  F002         	goto	l4721
  2548  00040E  EFE7  F001         	goto	l4431
  2549  000412                     l4721:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ; Switch size 1, requested type "simple"
  2553                           ; Number of cases is 5, Range of values is 0 to 4
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte           16     9 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558  000412  51DF               	movf	??_main& (0+255),w,b
  2559  000414  0A00               	xorlw	0	; case 0
  2560  000416  B4D8               	btfsc	status,2,c
  2561  000418  EFE1  F001         	goto	l4429
  2562  00041C  0A01               	xorlw	1	; case 1
  2563  00041E  B4D8               	btfsc	status,2,c
  2564  000420  EFE7  F001         	goto	l4431
  2565  000424  0A03               	xorlw	3	; case 2
  2566  000426  B4D8               	btfsc	status,2,c
  2567  000428  EFED  F001         	goto	l4433
  2568  00042C  0A01               	xorlw	1	; case 3
  2569  00042E  B4D8               	btfsc	status,2,c
  2570  000430  EFF3  F001         	goto	l4435
  2571  000434  0A07               	xorlw	7	; case 4
  2572  000436  B4D8               	btfsc	status,2,c
  2573  000438  EFF9  F001         	goto	l4437
  2574  00043C  EFE7  F001         	goto	l4431
  2575  000440                     l4445:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;main.c: 182:                      cksum += IRtransmitBuffer[ind];
  2579  000440  0E54               	movlw	low STR_34
  2580  000442  6FD5               	movwf	printf@fmt& (0+255),b
  2581  000444  0EFE               	movlw	high STR_34
  2582  000446  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2583  000448  CF76 F0D7          	movff	3958,?_printf+2	;volatile
  2584  00044C  6BD8               	clrf	(?_printf+3)& (0+255),b
  2585  00044E  CF75 F0D9          	movff	3957,?_printf+4	;volatile
  2586  000452  6BDA               	clrf	(?_printf+5)& (0+255),b
  2587  000454  ECFC  F012         	call	_printf	;wreg free
  2588                           
  2589                           ;main.c: 183:                      printf("%c", IRtransmitBuffer[ind]);
  2590  000458  EFBD  F000         	goto	l4373
  2591  00045C                     l522:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;main.c: 189:                  };main.c: 190:                  IRtransmitBuffer[ind + 1]
      +                           = '\0';
  2595  00045C  9871               	bcf	113,4,c	;volatile
  2596                           
  2597                           ;main.c: 191:                  IRtransmitBuffer[ind + 2] = cksum;
  2598  00045E  8871               	bsf	113,4,c	;volatile
  2599  000460                     
  2600                           ; BSR set to: 0
  2601                           ;main.c: 192:                  printf("Message: \r\n\t%s\r\n", IRtransmitBuffer);
  2602  000460  0EA1               	movlw	low STR_35
  2603  000462  6FD5               	movwf	printf@fmt& (0+255),b
  2604  000464  0EFE               	movlw	high STR_35
  2605  000466  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2606  000468  ECFC  F012         	call	_printf	;wreg free
  2607                           
  2608                           ;main.c: 193:                  printf("\tchecksum: %d\r\n", cksum);
  2609  00046C  EFBD  F000         	goto	l4373
  2610  000470                     l4449:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;main.c: 199:                  checksum = 0;;main.c: 200:                  if (receiveNe
      +                          wMessage == 1) {
  2614  000470  0E00               	movlw	0
  2615  000472  6F92               	movwf	_ind& (0+255),b
  2616                           
  2617                           ;main.c: 201:                      printf("Received\r\n");
  2618  000474  0E00               	movlw	0
  2619  000476  6F91               	movwf	_cksum& (0+255),b
  2620  000478                     
  2621                           ; BSR set to: 0
  2622                           ;main.c: 202:                      printf("\tMessage: %s\r\n", IRreceiveBuffer);
  2623  000478  0E9E               	movlw	low STR_36
  2624  00047A  6FD5               	movwf	printf@fmt& (0+255),b
  2625  00047C  0EFD               	movlw	high STR_36
  2626  00047E  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2627  000480  ECFC  F012         	call	_printf	;wreg free
  2628  000484                     
  2629                           ;main.c: 203:                      i = 0;
  2630  000484  0EFD               	movlw	low STR_37
  2631  000486  0100               	movlb	0	; () banked
  2632  000488  6FD5               	movwf	printf@fmt& (0+255),b
  2633  00048A  0EFF               	movlw	high STR_37
  2634  00048C  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2635  00048E  ECFC  F012         	call	_printf	;wreg free
  2636  000492                     l4455:
  2637  000492  EC81  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2638  000496  0900               	iorlw	0
  2639  000498  A4D8               	btfss	status,2,c
  2640  00049A  EF51  F002         	goto	u3611
  2641  00049E  EF53  F002         	goto	u3610
  2642  0004A2                     u3611:
  2643  0004A2  EF49  F002         	goto	l4455
  2644  0004A6                     u3610:
  2645  0004A6                     
  2646                           ;main.c: 205:                          i++;
  2647  0004A6  0E00               	movlw	0
  2648  0004A8  0100               	movlb	0	; () banked
  2649  0004AA  6F92               	movwf	_ind& (0+255),b
  2650  0004AC                     l4463:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;main.c: 206:                      }
  2654  0004AC  0E9B               	movlw	low _IRtransmitBuffer
  2655  0004AE  2592               	addwf	_ind& (0+255),w,b
  2656  0004B0  6ED9               	movwf	fsr2l,c
  2657  0004B2  6ADA               	clrf	fsr2h,c
  2658  0004B4  0E00               	movlw	high _IRtransmitBuffer
  2659  0004B6  22DA               	addwfc	fsr2h,f,c
  2660  0004B8  ECD3  F012         	call	_EUSART1_Read	;wreg free
  2661  0004BC  6EDF               	movwf	indf2,c
  2662  0004BE                     
  2663                           ;main.c: 207:                      ++i;
  2664  0004BE  0E9B               	movlw	low _IRtransmitBuffer
  2665  0004C0  0100               	movlb	0	; () banked
  2666  0004C2  2592               	addwf	_ind& (0+255),w,b
  2667  0004C4  6ED9               	movwf	fsr2l,c
  2668  0004C6  6ADA               	clrf	fsr2h,c
  2669  0004C8  0E00               	movlw	high _IRtransmitBuffer
  2670  0004CA  22DA               	addwfc	fsr2h,f,c
  2671  0004CC  50DF               	movf	indf2,w,c
  2672  0004CE  2791               	addwf	_cksum& (0+255),f,b
  2673  0004D0                     
  2674                           ; BSR set to: 0
  2675                           ;main.c: 208:                      checksum = IRreceiveBuffer[i];
  2676  0004D0  0EFA               	movlw	low STR_38
  2677  0004D2  6FD5               	movwf	printf@fmt& (0+255),b
  2678  0004D4  0EFF               	movlw	high STR_38
  2679  0004D6  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2680  0004D8  0E9B               	movlw	low _IRtransmitBuffer
  2681  0004DA  2592               	addwf	_ind& (0+255),w,b
  2682  0004DC  6ED9               	movwf	fsr2l,c
  2683  0004DE  6ADA               	clrf	fsr2h,c
  2684  0004E0  0E00               	movlw	high _IRtransmitBuffer
  2685  0004E2  22DA               	addwfc	fsr2h,f,c
  2686  0004E4  50DF               	movf	indf2,w,c
  2687  0004E6  6FDF               	movwf	??_main& (0+255),b
  2688  0004E8  51DF               	movf	??_main& (0+255),w,b
  2689  0004EA  6FD7               	movwf	(?_printf+2)& (0+255),b
  2690  0004EC  6BD8               	clrf	(?_printf+3)& (0+255),b
  2691  0004EE  ECFC  F012         	call	_printf	;wreg free
  2692  0004F2                     
  2693                           ;main.c: 209:                      printf("\tChecksum: %u\r\n", checksum);
  2694  0004F2  0E9B               	movlw	low _IRtransmitBuffer
  2695  0004F4  0100               	movlb	0	; () banked
  2696  0004F6  2592               	addwf	_ind& (0+255),w,b
  2697  0004F8  6ED9               	movwf	fsr2l,c
  2698  0004FA  6ADA               	clrf	fsr2h,c
  2699  0004FC  0E00               	movlw	high _IRtransmitBuffer
  2700  0004FE  22DA               	addwfc	fsr2h,f,c
  2701  000500  0E0D               	movlw	13
  2702  000502  18DE               	xorwf	postinc2,w,c
  2703  000504  A4D8               	btfss	status,2,c
  2704  000506  EF87  F002         	goto	u3621
  2705  00050A  EF89  F002         	goto	u3620
  2706  00050E                     u3621:
  2707  00050E  EF93  F002         	goto	l4475
  2708  000512                     u3620:
  2709  000512                     
  2710                           ; BSR set to: 0
  2711                           ;main.c: 210:                      receiveNewMessage = 0;
  2712  000512  0E0D               	movlw	13
  2713  000514  5F91               	subwf	_cksum& (0+255),f,b
  2714  000516                     
  2715                           ; BSR set to: 0
  2716                           ;main.c: 211:                  } else
  2717  000516  0E18               	movlw	low (STR_7+49)
  2718  000518  6FD5               	movwf	printf@fmt& (0+255),b
  2719  00051A  0EFD               	movlw	high (STR_7+49)
  2720  00051C  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2721  00051E  ECFC  F012         	call	_printf	;wreg free
  2722                           
  2723                           ;main.c: 212:                      printf("No message, receiveNewmessage = false\r\n");
  2724  000522  EF9C  F002         	goto	l4479
  2725  000526                     l4475:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;main.c: 214:              }
  2729  000526  2B92               	incf	_ind& (0+255),f,b
  2730  000528                     
  2731                           ; BSR set to: 0
  2732  000528  0E16               	movlw	22
  2733  00052A  6592               	cpfsgt	_ind& (0+255),b
  2734  00052C  EF9A  F002         	goto	u3631
  2735  000530  EF9C  F002         	goto	u3630
  2736  000534                     u3631:
  2737  000534  EF56  F002         	goto	l4463
  2738  000538                     u3630:
  2739  000538                     l4479:
  2740                           
  2741                           ;main.c: 215: 
  2742  000538  0E9C               	movlw	low (_IRtransmitBuffer+1)
  2743  00053A  0100               	movlb	0	; () banked
  2744  00053C  2592               	addwf	_ind& (0+255),w,b
  2745  00053E  6ED9               	movwf	fsr2l,c
  2746  000540  6ADA               	clrf	fsr2h,c
  2747  000542  0E00               	movlw	high (_IRtransmitBuffer+1)
  2748  000544  22DA               	addwfc	fsr2h,f,c
  2749  000546  0E00               	movlw	0
  2750  000548  6EDF               	movwf	indf2,c
  2751                           
  2752                           ;main.c: 216: 
  2753  00054A  0E9D               	movlw	low (_IRtransmitBuffer+2)
  2754  00054C  2592               	addwf	_ind& (0+255),w,b
  2755  00054E  6ED9               	movwf	fsr2l,c
  2756  000550  6ADA               	clrf	fsr2h,c
  2757  000552  0E00               	movlw	high (_IRtransmitBuffer+2)
  2758  000554  22DA               	addwfc	fsr2h,f,c
  2759  000556  C091  FFDF         	movff	_cksum,indf2
  2760  00055A                     
  2761                           ; BSR set to: 0
  2762                           ;main.c: 217:              case 'S':
  2763  00055A  0EEF               	movlw	low STR_40
  2764  00055C  6FD5               	movwf	printf@fmt& (0+255),b
  2765  00055E  0EFE               	movlw	high STR_40
  2766  000560  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2767  000562  0E9B               	movlw	low _IRtransmitBuffer
  2768  000564  6FD7               	movwf	(?_printf+2)& (0+255),b
  2769  000566  0E00               	movlw	high _IRtransmitBuffer
  2770  000568  6FD8               	movwf	(?_printf+3)& (0+255),b
  2771  00056A  ECFC  F012         	call	_printf	;wreg free
  2772  00056E                     
  2773                           ;main.c: 218:              {
  2774  00056E  0E00               	movlw	low STR_41
  2775  000570  0100               	movlb	0	; () banked
  2776  000572  6FD5               	movwf	printf@fmt& (0+255),b
  2777  000574  0EFF               	movlw	high STR_41
  2778  000576  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2779  000578  C091  F0D7         	movff	_cksum,?_printf+2
  2780  00057C  6BD8               	clrf	(?_printf+3)& (0+255),b
  2781  00057E  ECFC  F012         	call	_printf	;wreg free
  2782                           
  2783                           ;main.c: 219:                  uint16_t baud_rate = bitPeriod[baudRateSelected];
  2784  000582  EFBD  F000         	goto	l4373
  2785  000586                     l4485:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;main.c: 223:                      transmitCharacterOverIR(letter, baud_rate);;main.c: 2
      +                          24:                      if (IRtransmitBuffer[i] == '\0') {
  2789  000586  0E00               	movlw	0
  2790  000588  6F90               	movwf	_checksum& (0+255),b
  2791  00058A                     
  2792                           ; BSR set to: 0
  2793                           ;main.c: 225:                          letter = IRtransmitBuffer[i + 1];
  2794  00058A  0593               	decf	_receiveNewMessage& (0+255),w,b
  2795  00058C  A4D8               	btfss	status,2,c
  2796  00058E  EFCB  F002         	goto	u3641
  2797  000592  EFCD  F002         	goto	u3640
  2798  000596                     u3641:
  2799  000596  EF09  F003         	goto	l4505
  2800  00059A                     u3640:
  2801  00059A                     
  2802                           ; BSR set to: 0
  2803                           ;main.c: 226:                          transmitCharacterOverIR(letter, baud_rate);
  2804  00059A  0EC8               	movlw	low STR_42
  2805  00059C  6FD5               	movwf	printf@fmt& (0+255),b
  2806  00059E  0EFF               	movlw	high STR_42
  2807  0005A0  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2808  0005A2  ECFC  F012         	call	_printf	;wreg free
  2809                           
  2810                           ;main.c: 227:                          break;
  2811  0005A6  0E5D               	movlw	low STR_43
  2812  0005A8  0100               	movlb	0	; () banked
  2813  0005AA  6FD5               	movwf	printf@fmt& (0+255),b
  2814  0005AC  0EFF               	movlw	high STR_43
  2815  0005AE  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2816  0005B0  0E20               	movlw	low _IRreceiveBuffer
  2817  0005B2  6FD7               	movwf	(?_printf+2)& (0+255),b
  2818  0005B4  0E01               	movlw	high _IRreceiveBuffer
  2819  0005B6  6FD8               	movwf	(?_printf+3)& (0+255),b
  2820  0005B8  ECFC  F012         	call	_printf	;wreg free
  2821  0005BC                     
  2822                           ;main.c: 228:                      }
  2823  0005BC  0E00               	movlw	0
  2824  0005BE  0100               	movlb	0	; () banked
  2825  0005C0  6FE6               	movwf	main@i& (0+255),b
  2826                           
  2827                           ;main.c: 229:                      ++i;
  2828  0005C2  EFE4  F002         	goto	l4495
  2829  0005C6                     l4493:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 230:                  }
  2833  0005C6  2BE6               	incf	main@i& (0+255),f,b
  2834  0005C8                     l4495:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 229:                      ++i;
  2838  0005C8  0E20               	movlw	low _IRreceiveBuffer
  2839  0005CA  25E6               	addwf	main@i& (0+255),w,b
  2840  0005CC  6ED9               	movwf	fsr2l,c
  2841  0005CE  6ADA               	clrf	fsr2h,c
  2842  0005D0  0E01               	movlw	high _IRreceiveBuffer
  2843  0005D2  22DA               	addwfc	fsr2h,f,c
  2844  0005D4  50DF               	movf	indf2,w,c
  2845  0005D6  A4D8               	btfss	status,2,c
  2846  0005D8  EFF0  F002         	goto	u3651
  2847  0005DC  EFF2  F002         	goto	u3650
  2848  0005E0                     u3651:
  2849  0005E0  EFE3  F002         	goto	l4493
  2850  0005E4                     u3650:
  2851  0005E4                     
  2852                           ; BSR set to: 0
  2853                           ;main.c: 232:                  printf("\tMessage: %s\r\n", IRtransmitBuffer);
  2854  0005E4  2BE6               	incf	main@i& (0+255),f,b
  2855  0005E6                     
  2856                           ; BSR set to: 0
  2857                           ;main.c: 233:                  printf("\tChecksum: %u\r\n", cksum);
  2858  0005E6  0E20               	movlw	low _IRreceiveBuffer
  2859  0005E8  25E6               	addwf	main@i& (0+255),w,b
  2860  0005EA  6ED9               	movwf	fsr2l,c
  2861  0005EC  6ADA               	clrf	fsr2h,c
  2862  0005EE  0E01               	movlw	high _IRreceiveBuffer
  2863  0005F0  22DA               	addwfc	fsr2h,f,c
  2864  0005F2  50DF               	movf	indf2,w,c
  2865  0005F4  6F90               	movwf	_checksum& (0+255),b
  2866  0005F6                     
  2867                           ; BSR set to: 0
  2868                           ;main.c: 234:                  break;
  2869  0005F6  0E20               	movlw	low STR_44
  2870  0005F8  6FD5               	movwf	printf@fmt& (0+255),b
  2871  0005FA  0EFF               	movlw	high STR_44
  2872  0005FC  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2873  0005FE  C090  F0D7         	movff	_checksum,?_printf+2
  2874  000602  6BD8               	clrf	(?_printf+3)& (0+255),b
  2875  000604  ECFC  F012         	call	_printf	;wreg free
  2876  000608                     
  2877                           ;main.c: 235:              }
  2878  000608  0E00               	movlw	0
  2879  00060A  0100               	movlb	0	; () banked
  2880  00060C  6F93               	movwf	_receiveNewMessage& (0+255),b
  2881                           
  2882                           ;main.c: 236: 
  2883  00060E  EFBD  F000         	goto	l4373
  2884  000612                     l4505:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;main.c: 237: 
  2888  000612  0EC7               	movlw	low STR_45
  2889  000614  6FD5               	movwf	printf@fmt& (0+255),b
  2890  000616  0EFD               	movlw	high STR_45
  2891  000618  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2892  00061A  ECFC  F012         	call	_printf	;wreg free
  2893  00061E  EFBD  F000         	goto	l4373
  2894  000622                     l4507:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;main.c: 243:          };main.c: 244:      }
  2898  000622  51F8               	movf	_baudRateSelected& (0+255),w,b
  2899  000624  0D02               	mullw	2
  2900  000626  0EE7               	movlw	low _bitPeriod
  2901  000628  24F3               	addwf	243,w,c
  2902  00062A  6ED9               	movwf	fsr2l,c
  2903  00062C  0E00               	movlw	high _bitPeriod
  2904  00062E  20F4               	addwfc	prodh,w,c
  2905  000630  6EDA               	movwf	fsr2h,c
  2906  000632  CFDE F0E1          	movff	postinc2,main@baud_rate
  2907  000636  CFDD F0E2          	movff	postdec2,main@baud_rate+1
  2908  00063A                     
  2909                           ; BSR set to: 0
  2910                           ;main.c: 245:  }
  2911  00063A  0E00               	movlw	0
  2912  00063C  6FE5               	movwf	main@i_1370& (0+255),b
  2913  00063E                     l4511:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;main.c: 247: 
  2917  00063E  0E9B               	movlw	low _IRtransmitBuffer
  2918  000640  25E5               	addwf	main@i_1370& (0+255),w,b
  2919  000642  6ED9               	movwf	fsr2l,c
  2920  000644  6ADA               	clrf	fsr2h,c
  2921  000646  0E00               	movlw	high _IRtransmitBuffer
  2922  000648  22DA               	addwfc	fsr2h,f,c
  2923  00064A  50DF               	movf	indf2,w,c
  2924  00064C  6FE4               	movwf	main@letter& (0+255),b
  2925  00064E                     
  2926                           ; BSR set to: 0
  2927                           ;main.c: 248: typedef enum {
  2928  00064E  C0E1  F00B         	movff	main@baud_rate,transmitCharacterOverIR@baudRate
  2929  000652  C0E2  F00C         	movff	main@baud_rate+1,transmitCharacterOverIR@baudRate+1
  2930  000656  51E4               	movf	main@letter& (0+255),w,b
  2931  000658  EC01  F00E         	call	_transmitCharacterOverIR
  2932  00065C                     
  2933                           ;main.c: 249:  IDLE, DATA, CHECKSUM
  2934  00065C  0E9B               	movlw	low _IRtransmitBuffer
  2935  00065E  0100               	movlb	0	; () banked
  2936  000660  25E5               	addwf	main@i_1370& (0+255),w,b
  2937  000662  6ED9               	movwf	fsr2l,c
  2938  000664  6ADA               	clrf	fsr2h,c
  2939  000666  0E00               	movlw	high _IRtransmitBuffer
  2940  000668  22DA               	addwfc	fsr2h,f,c
  2941  00066A  50DF               	movf	indf2,w,c
  2942  00066C  A4D8               	btfss	status,2,c
  2943  00066E  EF3B  F003         	goto	u3661
  2944  000672  EF3D  F003         	goto	u3660
  2945  000676                     u3661:
  2946  000676  EF4E  F003         	goto	l4521
  2947  00067A                     u3660:
  2948  00067A                     
  2949                           ; BSR set to: 0
  2950                           ;main.c: 250: } eusart2_t;
  2951  00067A  0E9C               	movlw	low (_IRtransmitBuffer+1)
  2952  00067C  25E5               	addwf	main@i_1370& (0+255),w,b
  2953  00067E  6ED9               	movwf	fsr2l,c
  2954  000680  6ADA               	clrf	fsr2h,c
  2955  000682  0E00               	movlw	high (_IRtransmitBuffer+1)
  2956  000684  22DA               	addwfc	fsr2h,f,c
  2957  000686  50DF               	movf	indf2,w,c
  2958  000688  6FE4               	movwf	main@letter& (0+255),b
  2959  00068A                     
  2960                           ; BSR set to: 0
  2961                           ;main.c: 251: 
  2962  00068A  C0E1  F00B         	movff	main@baud_rate,transmitCharacterOverIR@baudRate
  2963  00068E  C0E2  F00C         	movff	main@baud_rate+1,transmitCharacterOverIR@baudRate+1
  2964  000692  51E4               	movf	main@letter& (0+255),w,b
  2965  000694  EC01  F00E         	call	_transmitCharacterOverIR
  2966                           
  2967                           ;main.c: 252: void myEUSART2ISR(void) {
  2968  000698  EF51  F003         	goto	l4523
  2969  00069C                     l4521:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 254:  static uint8_t Index;
  2973  00069C  2BE5               	incf	main@i_1370& (0+255),f,b
  2974                           
  2975                           ;main.c: 255:  switch (state) {
  2976  00069E  EF1F  F003         	goto	l4511
  2977  0006A2                     l4523:
  2978                           
  2979                           ;main.c: 256:      case IDLE:
  2980  0006A2  0E7B               	movlw	low STR_46
  2981  0006A4  0100               	movlb	0	; () banked
  2982  0006A6  6FD5               	movwf	printf@fmt& (0+255),b
  2983  0006A8  0EFF               	movlw	high STR_46
  2984  0006AA  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2985  0006AC  ECFC  F012         	call	_printf	;wreg free
  2986                           
  2987                           ;main.c: 257:          state = DATA;
  2988  0006B0  0E5D               	movlw	low STR_43
  2989  0006B2  0100               	movlb	0	; () banked
  2990  0006B4  6FD5               	movwf	printf@fmt& (0+255),b
  2991  0006B6  0EFF               	movlw	high STR_43
  2992  0006B8  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  2993  0006BA  0E9B               	movlw	low _IRtransmitBuffer
  2994  0006BC  6FD7               	movwf	(?_printf+2)& (0+255),b
  2995  0006BE  0E00               	movlw	high _IRtransmitBuffer
  2996  0006C0  6FD8               	movwf	(?_printf+3)& (0+255),b
  2997  0006C2  ECFC  F012         	call	_printf	;wreg free
  2998                           
  2999                           ;main.c: 258:          Index = 0;
  3000  0006C6  0E20               	movlw	low STR_44
  3001  0006C8  0100               	movlb	0	; () banked
  3002  0006CA  6FD5               	movwf	printf@fmt& (0+255),b
  3003  0006CC  0EFF               	movlw	high STR_44
  3004  0006CE  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  3005  0006D0  C091  F0D7         	movff	_cksum,?_printf+2
  3006  0006D4  6BD8               	clrf	(?_printf+3)& (0+255),b
  3007  0006D6  ECFC  F012         	call	_printf	;wreg free
  3008                           
  3009                           ;main.c: 259:          IRreceiveBuffer[Index++] = RCREG2;
  3010  0006DA  EFBD  F000         	goto	l4373
  3011  0006DE                     l4525:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;main.c: 265:          if (IRreceiveBuffer[Index - 1] == '\0') {
  3015  0006DE  0EDE               	movlw	low STR_49
  3016  0006E0  6FD5               	movwf	printf@fmt& (0+255),b
  3017  0006E2  0EFE               	movlw	high STR_49
  3018  0006E4  6FD6               	movwf	(printf@fmt+1)& (0+255),b
  3019  0006E6  C0E3  F0D7         	movff	main@cmd,?_printf+2
  3020  0006EA  6BD8               	clrf	(?_printf+3)& (0+255),b
  3021  0006EC  ECFC  F012         	call	_printf	;wreg free
  3022                           
  3023                           ;main.c: 266:              state = CHECKSUM;
  3024  0006F0  EFBD  F000         	goto	l4373
  3025  0006F4                     l4529:
  3026                           
  3027                           ; BSR set to: 0
  3028  0006F4  51E3               	movf	main@cmd& (0+255),w,b
  3029  0006F6  6FDF               	movwf	??_main& (0+255),b
  3030  0006F8  6BE0               	clrf	(??_main+1)& (0+255),b
  3031                           
  3032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3033                           ; Switch size 1, requested type "simple"
  3034                           ; Number of cases is 1, Range of values is 0 to 0
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte            4     3 (average)
  3038                           ;	Chosen strategy is simple_byte
  3039  0006FA  51E0               	movf	(??_main+1)& (0+255),w,b
  3040  0006FC  0A00               	xorlw	0	; case 0
  3041  0006FE  B4D8               	btfsc	status,2,c
  3042  000700  EF84  F003         	goto	l4723
  3043  000704  EF6F  F003         	goto	l4525
  3044  000708                     l4723:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ; Switch size 1, requested type "simple"
  3048                           ; Number of cases is 9, Range of values is 63 to 122
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte           28    15 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053  000708  51DF               	movf	??_main& (0+255),w,b
  3054  00070A  0A3F               	xorlw	63	; case 63
  3055  00070C  B4D8               	btfsc	status,2,c
  3056  00070E  EFCD  F000         	goto	l4377
  3057  000712  0A6D               	xorlw	109	; case 82
  3058  000714  B4D8               	btfsc	status,2,c
  3059  000716  EFC3  F002         	goto	l4485
  3060  00071A  0A01               	xorlw	1	; case 83
  3061  00071C  B4D8               	btfsc	status,2,c
  3062  00071E  EF11  F003         	goto	l4507
  3063  000722  0A09               	xorlw	9	; case 90
  3064  000724  B4D8               	btfsc	status,2,c
  3065  000726  EF7E  F001         	goto	l4399
  3066  00072A  0A38               	xorlw	56	; case 98
  3067  00072C  B4D8               	btfsc	status,2,c
  3068  00072E  EFA7  F001         	goto	l4423
  3069  000732  0A0F               	xorlw	15	; case 109
  3070  000734  B4D8               	btfsc	status,2,c
  3071  000736  EF38  F002         	goto	l4449
  3072  00073A  0A02               	xorlw	2	; case 111
  3073  00073C  B4D8               	btfsc	status,2,c
  3074  00073E  EF76  F001         	goto	l4397
  3075  000742  0A1D               	xorlw	29	; case 114
  3076  000744  B4D8               	btfsc	status,2,c
  3077  000746  EF2E  F002         	goto	l522
  3078  00074A  0A08               	xorlw	8	; case 122
  3079  00074C  B4D8               	btfsc	status,2,c
  3080  00074E  EF93  F001         	goto	l4411
  3081  000752  EF6F  F003         	goto	l4525
  3082  000756  EF58  F000         	goto	start
  3083  00075A                     __end_of_main:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _transmitCharacterOverIR *****************
  3087 ;; Defined at:
  3088 ;;		line 305 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  letter          1    wreg     unsigned char 
  3091 ;;  baudRate        2   10[COMRAM] unsigned short 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  letter          1   12[COMRAM] unsigned char 
  3094 ;;  mask            1   13[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        4 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    5
  3111 ;; This function calls:
  3112 ;;		_EPWM2_LoadDutyValue
  3113 ;;		_TMR1_HasOverflowOccured
  3114 ;;		_TMR1_WriteTimer
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text1
  3121  001C02                     __ptext1:
  3122                           	callstack 0
  3123  001C02                     _transmitCharacterOverIR:
  3124                           	callstack 25
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;incstack = 0
  3128                           ;transmitCharacterOverIR@letter stored from wreg
  3129  001C02  6E0D               	movwf	transmitCharacterOverIR@letter^0,c
  3130  001C04  0E01               	movlw	1
  3131  001C06  6E0E               	movwf	transmitCharacterOverIR@mask^0,c
  3132  001C08  0E00               	movlw	0
  3133  001C0A  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  3134  001C0C  0E19               	movlw	25
  3135  001C0E  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  3136  001C10  EC8F  F012         	call	_EPWM2_LoadDutyValue	;wreg free
  3137  001C14  500B               	movf	transmitCharacterOverIR@baudRate^0,w,c
  3138  001C16  0800               	sublw	0
  3139  001C18  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  3140  001C1A  500C               	movf	(transmitCharacterOverIR@baudRate+1)^0,w,c
  3141  001C1C  A0D8               	btfss	status,0,c
  3142  001C1E  2AE8               	incf	wreg,f,c
  3143  001C20  0800               	sublw	0
  3144  001C22  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3145  001C24  ECE8  F012         	call	_TMR1_WriteTimer	;wreg free
  3146  001C28  909E               	bcf	158,0,c	;volatile
  3147  001C2A                     l3727:
  3148  001C2A  EC77  F013         	call	_TMR1_HasOverflowOccured	;wreg free
  3149  001C2E  0900               	iorlw	0
  3150  001C30  B4D8               	btfsc	status,2,c
  3151  001C32  EF1D  F00E         	goto	u3081
  3152  001C36  EF1F  F00E         	goto	u3080
  3153  001C3A                     u3081:
  3154  001C3A  EF15  F00E         	goto	l3727
  3155  001C3E                     u3080:
  3156  001C3E  EF51  F00E         	goto	l3743
  3157  001C42                     l3729:
  3158  001C42  500D               	movf	transmitCharacterOverIR@letter^0,w,c
  3159  001C44  140E               	andwf	transmitCharacterOverIR@mask^0,w,c
  3160  001C46  0900               	iorlw	0
  3161  001C48  B4D8               	btfsc	status,2,c
  3162  001C4A  EF29  F00E         	goto	u3091
  3163  001C4E  EF2B  F00E         	goto	u3090
  3164  001C52                     u3091:
  3165  001C52  EF33  F00E         	goto	l3733
  3166  001C56                     u3090:
  3167  001C56  0E00               	movlw	0
  3168  001C58  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  3169  001C5A  0E00               	movlw	0
  3170  001C5C  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  3171  001C5E  EC8F  F012         	call	_EPWM2_LoadDutyValue	;wreg free
  3172  001C62  EF39  F00E         	goto	l3735
  3173  001C66                     l3733:
  3174  001C66  0E00               	movlw	0
  3175  001C68  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  3176  001C6A  0E19               	movlw	25
  3177  001C6C  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  3178  001C6E  EC8F  F012         	call	_EPWM2_LoadDutyValue	;wreg free
  3179  001C72                     l3735:
  3180  001C72  500E               	movf	transmitCharacterOverIR@mask^0,w,c
  3181  001C74  240E               	addwf	transmitCharacterOverIR@mask^0,w,c
  3182  001C76  6E0E               	movwf	transmitCharacterOverIR@mask^0,c
  3183  001C78  500B               	movf	transmitCharacterOverIR@baudRate^0,w,c
  3184  001C7A  0800               	sublw	0
  3185  001C7C  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  3186  001C7E  500C               	movf	(transmitCharacterOverIR@baudRate+1)^0,w,c
  3187  001C80  A0D8               	btfss	status,0,c
  3188  001C82  2AE8               	incf	wreg,f,c
  3189  001C84  0800               	sublw	0
  3190  001C86  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3191  001C88  ECE8  F012         	call	_TMR1_WriteTimer	;wreg free
  3192  001C8C  909E               	bcf	158,0,c	;volatile
  3193  001C8E                     l3741:
  3194  001C8E  EC77  F013         	call	_TMR1_HasOverflowOccured	;wreg free
  3195  001C92  0900               	iorlw	0
  3196  001C94  B4D8               	btfsc	status,2,c
  3197  001C96  EF4F  F00E         	goto	u3101
  3198  001C9A  EF51  F00E         	goto	u3100
  3199  001C9E                     u3101:
  3200  001C9E  EF47  F00E         	goto	l3741
  3201  001CA2                     u3100:
  3202  001CA2                     l3743:
  3203  001CA2  500E               	movf	transmitCharacterOverIR@mask^0,w,c
  3204  001CA4  A4D8               	btfss	status,2,c
  3205  001CA6  EF57  F00E         	goto	u3111
  3206  001CAA  EF59  F00E         	goto	u3110
  3207  001CAE                     u3111:
  3208  001CAE  EF21  F00E         	goto	l3729
  3209  001CB2                     u3110:
  3210  001CB2  0E00               	movlw	0
  3211  001CB4  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  3212  001CB6  0E00               	movlw	0
  3213  001CB8  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  3214  001CBA  EC8F  F012         	call	_EPWM2_LoadDutyValue	;wreg free
  3215  001CBE  500B               	movf	transmitCharacterOverIR@baudRate^0,w,c
  3216  001CC0  0800               	sublw	0
  3217  001CC2  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  3218  001CC4  500C               	movf	(transmitCharacterOverIR@baudRate+1)^0,w,c
  3219  001CC6  A0D8               	btfss	status,0,c
  3220  001CC8  2AE8               	incf	wreg,f,c
  3221  001CCA  0800               	sublw	0
  3222  001CCC  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3223  001CCE  ECE8  F012         	call	_TMR1_WriteTimer	;wreg free
  3224  001CD2  909E               	bcf	158,0,c	;volatile
  3225  001CD4                     l3749:
  3226  001CD4  EC77  F013         	call	_TMR1_HasOverflowOccured	;wreg free
  3227  001CD8  0900               	iorlw	0
  3228  001CDA  B4D8               	btfsc	status,2,c
  3229  001CDC  EF72  F00E         	goto	u3121
  3230  001CE0  EF74  F00E         	goto	u3120
  3231  001CE4                     u3121:
  3232  001CE4  EF6A  F00E         	goto	l3749
  3233  001CE8                     u3120:
  3234  001CE8  0012               	return		;funcret
  3235  001CEA                     __end_of_transmitCharacterOverIR:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _TMR1_WriteTimer *****************
  3239 ;; Defined at:
  3240 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  timerVal        2    6[COMRAM] unsigned short 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    4
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;;		_transmitCharacterOverIR
  3266 ;;		_TMR1_Reload
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text2
  3271  0025D0                     __ptext2:
  3272                           	callstack 0
  3273  0025D0                     _TMR1_WriteTimer:
  3274                           	callstack 25
  3275  0025D0                     
  3276                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  3277  0025D0  A4CD               	btfss	205,2,c	;volatile
  3278  0025D2  EFED  F012         	goto	u2891
  3279  0025D6  EFEF  F012         	goto	u2890
  3280  0025DA                     u2891:
  3281  0025DA  EFF7  F012         	goto	l3567
  3282  0025DE                     u2890:
  3283  0025DE                     
  3284                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  3285  0025DE  90CD               	bcf	205,0,c	;volatile
  3286  0025E0                     
  3287                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (timerVal >> 8);
  3288  0025E0  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3289  0025E2  6ECF               	movwf	207,c	;volatile
  3290  0025E4                     
  3291                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t) timerVal;
  3292  0025E4  C007  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3293  0025E8                     
  3294                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  3295  0025E8  80CD               	bsf	205,0,c	;volatile
  3296                           
  3297                           ;mcc_generated_files/tmr1.c: 127:     }
  3298  0025EA  EFFB  F012         	goto	l117
  3299  0025EE                     l3567:
  3300                           
  3301                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (timerVal >> 8);
  3302  0025EE  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3303  0025F0  6ECF               	movwf	207,c	;volatile
  3304  0025F2                     
  3305                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t) timerVal;
  3306  0025F2  C007  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3307  0025F6                     l117:
  3308  0025F6  0012               	return		;funcret
  3309  0025F8                     __end_of_TMR1_WriteTimer:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _TMR1_HasOverflowOccured *****************
  3313 ;; Defined at:
  3314 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      _Bool 
  3321 ;; Registers used:
  3322 ;;		wreg
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    4
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;;		_transmitCharacterOverIR
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text3
  3344  0026EE                     __ptext3:
  3345                           	callstack 0
  3346  0026EE                     _TMR1_HasOverflowOccured:
  3347                           	callstack 25
  3348  0026EE                     
  3349                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  3350  0026EE  B09E               	btfsc	158,0,c	;volatile
  3351  0026F0  EF7C  F013         	goto	u2901
  3352  0026F4  EF7F  F013         	goto	u2900
  3353  0026F8                     u2901:
  3354  0026F8  0E01               	movlw	1
  3355  0026FA  EF80  F013         	goto	u2906
  3356  0026FE                     u2900:
  3357  0026FE  0E00               	movlw	0
  3358  002700                     u2906:
  3359  002700  0012               	return		;funcret
  3360  002702                     __end_of_TMR1_HasOverflowOccured:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _EPWM2_LoadDutyValue *****************
  3364 ;; Defined at:
  3365 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  dutyValue       2    6[COMRAM] unsigned short 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;Total ram usage:        4 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    4
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;;		_transmitCharacterOverIR
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text4
  3395  00251E                     __ptext4:
  3396                           	callstack 0
  3397  00251E                     _EPWM2_LoadDutyValue:
  3398                           	callstack 25
  3399  00251E                     
  3400                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  3401  00251E  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3402  002522  C008  F00A         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3403  002526  90D8               	bcf	status,0,c
  3404  002528  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  3405  00252A  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  3406  00252C  90D8               	bcf	status,0,c
  3407  00252E  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  3408  002530  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  3409  002532  5009               	movf	??_EPWM2_LoadDutyValue^0,w,c
  3410  002534  6E67               	movwf	103,c	;volatile
  3411                           
  3412                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  3413  002536  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3414  00253A  0E03               	movlw	3
  3415  00253C  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  3416  00253E  3A09               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  3417  002540  0EF0               	movlw	240
  3418  002542  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  3419  002544  5066               	movf	102,w,c	;volatile
  3420  002546  0BCF               	andlw	207
  3421  002548  1009               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  3422  00254A  6E66               	movwf	102,c	;volatile
  3423  00254C  0012               	return		;funcret
  3424  00254E                     __end_of_EPWM2_LoadDutyValue:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _printf *****************
  3428 ;; Defined at:
  3429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  3432 ;;		 -> STR_49(17), STR_48(16), STR_47(15), STR_46(14), 
  3433 ;;		 -> STR_45(40), STR_44(16), STR_43(15), STR_42(11), 
  3434 ;;		 -> STR_41(16), STR_40(17), STR_39(3), STR_38(3), 
  3435 ;;		 -> STR_37(2), STR_36(41), STR_35(21), STR_34(31), 
  3436 ;;		 -> STR_33(16), STR_32(15), STR_31(15), STR_30(15), 
  3437 ;;		 -> STR_29(14), STR_28(43), STR_27(2), STR_26(2), 
  3438 ;;		 -> STR_25(8), STR_24(52), STR_23(54), STR_22(32), 
  3439 ;;		 -> STR_21(35), STR_20(19), STR_19(46), STR_18(24), 
  3440 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(52), 
  3441 ;;		 -> STR_13(12), STR_12(13), STR_11(12), STR_10(12), 
  3442 ;;		 -> STR_9(12), STR_8(11), STR_7(52), STR_6(5), 
  3443 ;;		 -> STR_5(42), STR_4(70), STR_3(22), STR_2(34), 
  3444 ;;		 -> STR_1(8), 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  ap              2   41[BANK0 ] PTR void [1]
  3447 ;;		 -> ?_printf(2), 
  3448 ;;  ret             2    0        int 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  2   33[BANK0 ] int 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:       10 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:   12
  3465 ;; This function calls:
  3466 ;;		_vfprintf
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text5
  3473  0025F8                     __ptext5:
  3474                           	callstack 0
  3475  0025F8                     _printf:
  3476                           	callstack 18
  3477  0025F8  0ED7               	movlw	low (?_printf+2)
  3478  0025FA  0100               	movlb	0	; () banked
  3479  0025FC  6FDD               	movwf	printf@ap& (0+255),b
  3480  0025FE  0E00               	movlw	high (?_printf+2)
  3481  002600  6FDE               	movwf	(printf@ap+1)& (0+255),b
  3482  002602                     
  3483                           ; BSR set to: 0
  3484  002602  0E00               	movlw	0
  3485  002604  6FCF               	movwf	vfprintf@fp& (0+255),b
  3486  002606  0E00               	movlw	0
  3487  002608  6FD0               	movwf	(vfprintf@fp+1)& (0+255),b
  3488  00260A  C0D5  F0D1         	movff	printf@fmt,vfprintf@fmt
  3489  00260E  C0D6  F0D2         	movff	printf@fmt+1,vfprintf@fmt+1
  3490  002612  0EDD               	movlw	low printf@ap
  3491  002614  6FD3               	movwf	vfprintf@ap& (0+255),b
  3492  002616  0E00               	movlw	high printf@ap
  3493  002618  6FD4               	movwf	(vfprintf@ap+1)& (0+255),b
  3494  00261A  EC7A  F010         	call	_vfprintf	;wreg free
  3495  00261E  0012               	return		;funcret
  3496  002620                     __end_of_printf:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _vfprintf *****************
  3500 ;; Defined at:
  3501 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3504 ;;		 -> NULL(0), 
  3505 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  3506 ;;		 -> STR_49(17), STR_48(16), STR_47(15), STR_46(14), 
  3507 ;;		 -> STR_45(40), STR_44(16), STR_43(15), STR_42(11), 
  3508 ;;		 -> STR_41(16), STR_40(17), STR_39(3), STR_38(3), 
  3509 ;;		 -> STR_37(2), STR_36(41), STR_35(21), STR_34(31), 
  3510 ;;		 -> STR_33(16), STR_32(15), STR_31(15), STR_30(15), 
  3511 ;;		 -> STR_29(14), STR_28(43), STR_27(2), STR_26(2), 
  3512 ;;		 -> STR_25(8), STR_24(52), STR_23(54), STR_22(32), 
  3513 ;;		 -> STR_21(35), STR_20(19), STR_19(46), STR_18(24), 
  3514 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(52), 
  3515 ;;		 -> STR_13(12), STR_12(13), STR_11(12), STR_10(12), 
  3516 ;;		 -> STR_9(12), STR_8(11), STR_7(52), STR_6(5), 
  3517 ;;		 -> STR_5(42), STR_4(70), STR_3(22), STR_2(34), 
  3518 ;;		 -> STR_1(8), 
  3519 ;;  ap              2   31[BANK0 ] PTR PTR void 
  3520 ;;		 -> printf@ap(2), 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  cfmt            2   80[COMRAM] PTR unsigned char 
  3523 ;;		 -> STR_49(17), STR_48(16), STR_47(15), STR_46(14), 
  3524 ;;		 -> STR_45(40), STR_44(16), STR_43(15), STR_42(11), 
  3525 ;;		 -> STR_41(16), STR_40(17), STR_39(3), STR_38(3), 
  3526 ;;		 -> STR_37(2), STR_36(41), STR_35(21), STR_34(31), 
  3527 ;;		 -> STR_33(16), STR_32(15), STR_31(15), STR_30(15), 
  3528 ;;		 -> STR_29(14), STR_28(43), STR_27(2), STR_26(2), 
  3529 ;;		 -> STR_25(8), STR_24(52), STR_23(54), STR_22(32), 
  3530 ;;		 -> STR_21(35), STR_20(19), STR_19(46), STR_18(24), 
  3531 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(52), 
  3532 ;;		 -> STR_13(12), STR_12(13), STR_11(12), STR_10(12), 
  3533 ;;		 -> STR_9(12), STR_8(11), STR_7(52), STR_6(5), 
  3534 ;;		 -> STR_5(42), STR_4(70), STR_3(22), STR_2(34), 
  3535 ;;		 -> STR_1(8), 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2   27[BANK0 ] int 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3545 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   11
  3552 ;; This function calls:
  3553 ;;		_vfpfcnvrt
  3554 ;; This function is called by:
  3555 ;;		_printf
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text6
  3560  0020F4                     __ptext6:
  3561                           	callstack 0
  3562  0020F4                     _vfprintf:
  3563                           	callstack 18
  3564  0020F4                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3566  0020F4  C0D1  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  3567  0020F8  C0D2  F052         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3568  0020FC                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3570  0020FC  0E00               	movlw	0
  3571  0020FE  0100               	movlb	0	; () banked
  3572  002100  6F79               	movwf	(_nout+1)& (0+255),b
  3573  002102  0E00               	movlw	0
  3574  002104  6F78               	movwf	_nout& (0+255),b
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3577  002106  EF98  F010         	goto	l4343
  3578  00210A                     l4341:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3582  00210A  C0CF  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  3583  00210E  C0D0  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3584  002112  0E51               	movlw	low vfprintf@cfmt
  3585  002114  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  3586  002116  0E00               	movlw	high vfprintf@cfmt
  3587  002118  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3588  00211A  C0D3  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  3589  00211E  C0D4  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3590  002122  ECAD  F003         	call	_vfpfcnvrt	;wreg free
  3591  002126  504B               	movf	?_vfpfcnvrt^0,w,c
  3592  002128  0100               	movlb	0	; () banked
  3593  00212A  2778               	addwf	_nout& (0+255),f,b
  3594  00212C  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  3595  00212E  2379               	addwfc	(_nout+1)& (0+255),f,b
  3596  002130                     l4343:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3600  002130  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  3601  002134  C052  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3602  002138                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3603  002138  6AF8               	clrf	tblptru,c
  3604  00213A                     	endif
  3605  00213A                     	if	0	;tblptru may be non-zero
  3606  00213A                     	endif
  3607  00213A  0008               	tblrd		*
  3608  00213C  50F5               	movf	tablat,w,c
  3609  00213E  0900               	iorlw	0
  3610  002140  A4D8               	btfss	status,2,c
  3611  002142  EFA5  F010         	goto	u3531
  3612  002146  EFA7  F010         	goto	u3530
  3613  00214A                     u3531:
  3614  00214A  EF85  F010         	goto	l4341
  3615  00214E                     u3530:
  3616  00214E                     
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3619  00214E  C078  F0CF         	movff	_nout,?_vfprintf
  3620  002152  C079  F0D0         	movff	_nout+1,?_vfprintf+1
  3621  002156                     
  3622                           ; BSR set to: 0
  3623  002156  0012               	return		;funcret
  3624  002158                     __end_of_vfprintf:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function _vfpfcnvrt *****************
  3628 ;; Defined at:
  3629 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  3632 ;;		 -> NULL(0), 
  3633 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  3634 ;;		 -> vfprintf@cfmt(2), 
  3635 ;;  ap              2   78[COMRAM] PTR PTR void 
  3636 ;;		 -> printf@ap(2), 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  llu             8   18[BANK0 ] unsigned long long 
  3639 ;;  ll              8    4[BANK0 ] long long 
  3640 ;;  f               4    0        long long 
  3641 ;;  vp              3    0        PTR void 
  3642 ;;  ct              3    0        unsigned char [3]
  3643 ;;  done            2   14[BANK0 ] int 
  3644 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  3645 ;;		 -> ?_printf(2), IRreceiveBuffer(25), IRtransmitBuffer(25), 
  3646 ;;  i               2    0        int 
  3647 ;;  c               1   26[BANK0 ] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2   74[COMRAM] int 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         6      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:       33 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:   10
  3664 ;; This function calls:
  3665 ;;		_atoi
  3666 ;;		_ctoa
  3667 ;;		_dtoa
  3668 ;;		_fputc
  3669 ;;		_isdigit
  3670 ;;		_stoa
  3671 ;;		_utoa
  3672 ;;		_xtoa
  3673 ;; This function is called by:
  3674 ;;		_vfprintf
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text7
  3679  00075A                     __ptext7:
  3680                           	callstack 0
  3681  00075A                     _vfpfcnvrt:
  3682                           	callstack 18
  3683  00075A                     
  3684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3685  00075A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3686  00075E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3687  000762  CFDE FFF6          	movff	postinc2,tblptrl
  3688  000766  CFDD FFF7          	movff	postdec2,tblptrh
  3689  00076A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3690  00076A  6AF8               	clrf	tblptru,c
  3691  00076C                     	endif
  3692  00076C                     	if	0	;tblptru may be non-zero
  3693  00076C                     	endif
  3694  00076C  0008               	tblrd		*
  3695  00076E  50F5               	movf	tablat,w,c
  3696  000770  0A25               	xorlw	37
  3697  000772  A4D8               	btfss	status,2,c
  3698  000774  EFBE  F003         	goto	u3371
  3699  000778  EFC0  F003         	goto	u3370
  3700  00077C                     u3371:
  3701  00077C  EF8F  F006         	goto	l4321
  3702  000780                     u3370:
  3703  000780                     
  3704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3705  000780  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3706  000784  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3707  000788  2ADE               	incf	postinc2,f,c
  3708  00078A  0E00               	movlw	0
  3709  00078C  22DD               	addwfc	postdec2,f,c
  3710  00078E                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3712  00078E  0E00               	movlw	0
  3713  000790  0100               	movlb	0	; () banked
  3714  000792  6F7B               	movwf	(_width+1)& (0+255),b
  3715  000794  0E00               	movlw	0
  3716  000796  6F7A               	movwf	_width& (0+255),b
  3717  000798  C07A  F055         	movff	_width,_flags
  3718  00079C  C07B  F056         	movff	_width+1,_flags+1
  3719  0007A0                     
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3722  0007A0  6853               	setf	_prec^0,c
  3723  0007A2  6854               	setf	(_prec+1)^0,c
  3724  0007A4                     
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3727  0007A4  0E00               	movlw	0
  3728  0007A6  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3729  0007A8  0E00               	movlw	0
  3730  0007AA  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3733  0007AC  EF1F  F004         	goto	l4235
  3734  0007B0                     l4209:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3738  0007B0  8055               	bsf	_flags^0,0,c
  3739  0007B2                     l4211:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3743  0007B2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3744  0007B6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3745  0007BA  2ADE               	incf	postinc2,f,c
  3746  0007BC  0E00               	movlw	0
  3747  0007BE  22DD               	addwfc	postdec2,f,c
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3750  0007C0  EF1F  F004         	goto	l4235
  3751  0007C4                     l4213:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3755  0007C4  8255               	bsf	_flags^0,1,c
  3756  0007C6  EFD9  F003         	goto	l4211
  3757  0007CA                     l4217:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3761  0007CA  8455               	bsf	_flags^0,2,c
  3762  0007CC  EFD9  F003         	goto	l4211
  3763  0007D0                     l4221:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3767  0007D0  8655               	bsf	_flags^0,3,c
  3768  0007D2  EFD9  F003         	goto	l4211
  3769  0007D6                     l4225:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3773  0007D6  8855               	bsf	_flags^0,4,c
  3774  0007D8  EFD9  F003         	goto	l4211
  3775  0007DC                     l4229:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3779  0007DC  0E00               	movlw	0
  3780  0007DE  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3781  0007E0  0E01               	movlw	1
  3782  0007E2  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3785  0007E4  EF1F  F004         	goto	l4235
  3786  0007E8                     l4233:
  3787                           
  3788                           ; BSR set to: 0
  3789  0007E8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3790  0007EC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  0007F0  CFDE FFF6          	movff	postinc2,tblptrl
  3792  0007F4  CFDD FFF7          	movff	postdec2,tblptrh
  3793  0007F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3794  0007F8  6AF8               	clrf	tblptru,c
  3795  0007FA                     	endif
  3796  0007FA                     	if	0	;tblptru may be non-zero
  3797  0007FA                     	endif
  3798  0007FA  0008               	tblrd		*
  3799  0007FC  50F5               	movf	tablat,w,c
  3800  0007FE  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3801  000800  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3802                           
  3803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3804                           ; Switch size 1, requested type "simple"
  3805                           ; Number of cases is 1, Range of values is 0 to 0
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte            4     3 (average)
  3809                           ;	Chosen strategy is simple_byte
  3810  000802  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3811  000804  0A00               	xorlw	0	; case 0
  3812  000806  B4D8               	btfsc	status,2,c
  3813  000808  EF08  F004         	goto	l4725
  3814  00080C  EFEE  F003         	goto	l4229
  3815  000810                     l4725:
  3816                           
  3817                           ; BSR set to: 0
  3818                           ; Switch size 1, requested type "simple"
  3819                           ; Number of cases is 5, Range of values is 32 to 48
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte           16     9 (average)
  3823                           ;	Chosen strategy is simple_byte
  3824  000810  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3825  000812  0A20               	xorlw	32	; case 32
  3826  000814  B4D8               	btfsc	status,2,c
  3827  000816  EFE8  F003         	goto	l4221
  3828  00081A  0A03               	xorlw	3	; case 35
  3829  00081C  B4D8               	btfsc	status,2,c
  3830  00081E  EFEB  F003         	goto	l4225
  3831  000822  0A08               	xorlw	8	; case 43
  3832  000824  B4D8               	btfsc	status,2,c
  3833  000826  EFE5  F003         	goto	l4217
  3834  00082A  0A06               	xorlw	6	; case 45
  3835  00082C  B4D8               	btfsc	status,2,c
  3836  00082E  EFD8  F003         	goto	l4209
  3837  000832  0A1D               	xorlw	29	; case 48
  3838  000834  B4D8               	btfsc	status,2,c
  3839  000836  EFE2  F003         	goto	l4213
  3840  00083A  EFEE  F003         	goto	l4229
  3841  00083E                     l4235:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3845  00083E  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  3846  000840  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3847  000842  B4D8               	btfsc	status,2,c
  3848  000844  EF26  F004         	goto	u3381
  3849  000848  EF28  F004         	goto	u3380
  3850  00084C                     u3381:
  3851  00084C  EFF4  F003         	goto	l4233
  3852  000850                     u3380:
  3853  000850                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3856  000850  A055               	btfss	_flags^0,0,c
  3857  000852  EF2D  F004         	goto	u3391
  3858  000856  EF2F  F004         	goto	u3390
  3859  00085A                     u3391:
  3860  00085A  EF30  F004         	goto	l4239
  3861  00085E                     u3390:
  3862  00085E                     
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3865  00085E  9255               	bcf	_flags^0,1,c
  3866  000860                     l4239:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3870  000860  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3871  000864  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3872  000868  CFDE FFF6          	movff	postinc2,tblptrl
  3873  00086C  CFDD FFF7          	movff	postdec2,tblptrh
  3874  000870                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3875  000870  6AF8               	clrf	tblptru,c
  3876  000872                     	endif
  3877  000872                     	if	0	;tblptru may be non-zero
  3878  000872                     	endif
  3879  000872  0008               	tblrd		*
  3880  000874  50F5               	movf	tablat,w,c
  3881  000876  0A2A               	xorlw	42
  3882  000878  A4D8               	btfss	status,2,c
  3883  00087A  EF41  F004         	goto	u3401
  3884  00087E  EF43  F004         	goto	u3400
  3885  000882                     u3401:
  3886  000882  EF6C  F004         	goto	l4247
  3887  000886                     u3400:
  3888  000886                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3891  000886  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3892  00088A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3893  00088E  2ADE               	incf	postinc2,f,c
  3894  000890  0E00               	movlw	0
  3895  000892  22DD               	addwfc	postdec2,f,c
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3898  000894  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3899  000898  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3900  00089C  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  3901  0008A0  0E02               	movlw	2
  3902  0008A2  26DE               	addwf	postinc2,f,c
  3903  0008A4  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  3904  0008A8  0E00               	movlw	0
  3905  0008AA  22DD               	addwfc	postdec2,f,c
  3906  0008AC  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3907  0008B0  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3908  0008B4  CFDE F07A          	movff	postinc2,_width
  3909  0008B8  CFDD F07B          	movff	postdec2,_width+1
  3910  0008BC                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3913  0008BC  BF7B               	btfsc	(_width+1)& (0+255),7,b
  3914  0008BE  EF65  F004         	goto	u3410
  3915  0008C2  EF63  F004         	goto	u3411
  3916  0008C6                     u3411:
  3917  0008C6  EFB1  F004         	goto	l4257
  3918  0008CA                     u3410:
  3919  0008CA                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3922  0008CA  8055               	bsf	_flags^0,0,c
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3925  0008CC  6D7A               	negf	_width& (0+255),b
  3926  0008CE  1F7B               	comf	(_width+1)& (0+255),f,b
  3927  0008D0  B0D8               	btfsc	status,0,c
  3928  0008D2  2B7B               	incf	(_width+1)& (0+255),f,b
  3929  0008D4  EFB1  F004         	goto	l4257
  3930  0008D8                     l4247:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3934  0008D8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3935  0008DC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3936  0008E0  CFDE F00E          	movff	postinc2,atoi@s
  3937  0008E4  CFDD F00F          	movff	postdec2,atoi@s+1
  3938  0008E8  EC85  F00A         	call	_atoi	;wreg free
  3939  0008EC  C00E  F07A         	movff	?_atoi,_width
  3940  0008F0  C00F  F07B         	movff	?_atoi+1,_width+1
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3943  0008F4  EF83  F004         	goto	l4251
  3944  0008F8                     l4249:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3948  0008F8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3949  0008FC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3950  000900  2ADE               	incf	postinc2,f,c
  3951  000902  0E00               	movlw	0
  3952  000904  22DD               	addwfc	postdec2,f,c
  3953  000906                     l4251:
  3954  000906  0ED0               	movlw	208
  3955  000908  0100               	movlb	0	; () banked
  3956  00090A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3957  00090C  0EFF               	movlw	255
  3958  00090E  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3959  000910  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3960  000914  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3961  000918  CFDE FFF6          	movff	postinc2,tblptrl
  3962  00091C  CFDD FFF7          	movff	postdec2,tblptrh
  3963  000920                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3964  000920  6AF8               	clrf	tblptru,c
  3965  000922                     	endif
  3966  000922                     	if	0	;tblptru may be non-zero
  3967  000922                     	endif
  3968  000922  0008               	tblrd		*
  3969  000924  50F5               	movf	tablat,w,c
  3970  000926  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3971  000928  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3972  00092A  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3973  00092C  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3974  00092E  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3975  000930  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3976  000932  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3977  000934  E10A               	bnz	u3420
  3978  000936  0E0A               	movlw	10
  3979  000938  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3980  00093A  A0D8               	btfss	status,0,c
  3981  00093C  EFA2  F004         	goto	u3421
  3982  000940  EFA5  F004         	goto	u3420
  3983  000944                     u3421:
  3984  000944  0E01               	movlw	1
  3985  000946  EFA6  F004         	goto	u3430
  3986  00094A                     u3420:
  3987  00094A  0E00               	movlw	0
  3988  00094C                     u3430:
  3989  00094C  6FC4               	movwf	_vfpfcnvrt$1960& (0+255),b
  3990  00094E  6BC5               	clrf	(_vfpfcnvrt$1960+1)& (0+255),b
  3991  000950                     
  3992                           ; BSR set to: 0
  3993  000950  51C4               	movf	_vfpfcnvrt$1960& (0+255),w,b
  3994  000952  11C5               	iorwf	(_vfpfcnvrt$1960+1)& (0+255),w,b
  3995  000954  A4D8               	btfss	status,2,c
  3996  000956  EFAF  F004         	goto	u3441
  3997  00095A  EFB1  F004         	goto	u3440
  3998  00095E                     u3441:
  3999  00095E  EF7C  F004         	goto	l4249
  4000  000962                     u3440:
  4001  000962                     l4257:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4005  000962  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4006  000966  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4007  00096A  CFDE FFF6          	movff	postinc2,tblptrl
  4008  00096E  CFDD FFF7          	movff	postdec2,tblptrh
  4009  000972                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4010  000972  6AF8               	clrf	tblptru,c
  4011  000974                     	endif
  4012  000974                     	if	0	;tblptru may be non-zero
  4013  000974                     	endif
  4014  000974  0008               	tblrd		*
  4015  000976  50F5               	movf	tablat,w,c
  4016  000978  0A63               	xorlw	99
  4017  00097A  A4D8               	btfss	status,2,c
  4018  00097C  EFC2  F004         	goto	u3451
  4019  000980  EFC4  F004         	goto	u3450
  4020  000984                     u3451:
  4021  000984  EFEB  F004         	goto	l4265
  4022  000988                     u3450:
  4023  000988                     
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4026  000988  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4027  00098C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4028  000990  2ADE               	incf	postinc2,f,c
  4029  000992  0E00               	movlw	0
  4030  000994  22DD               	addwfc	postdec2,f,c
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4033  000996  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4034  00099A  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4035  00099E  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  4036  0009A2  0E02               	movlw	2
  4037  0009A4  26DE               	addwf	postinc2,f,c
  4038  0009A6  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  4039  0009AA  0E00               	movlw	0
  4040  0009AC  22DD               	addwfc	postdec2,f,c
  4041  0009AE  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4042  0009B2  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4043  0009B6  50DF               	movf	indf2,w,c
  4044  0009B8  6FCE               	movwf	vfpfcnvrt@c& (0+255),b
  4045  0009BA                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4048  0009BA  C04B  F024         	movff	vfpfcnvrt@fp,ctoa@fp
  4049  0009BE  C04C  F025         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4050  0009C2  C0CE  F026         	movff	vfpfcnvrt@c,ctoa@c
  4051  0009C6  ECDB  F010         	call	_ctoa	;wreg free
  4052  0009CA  C024  F04B         	movff	?_ctoa,?_vfpfcnvrt
  4053  0009CE  C025  F04C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4054  0009D2  EFAB  F006         	goto	l1423
  4055  0009D6                     l4265:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4059  0009D6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4060  0009DA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4061  0009DE  CFDE FFF6          	movff	postinc2,tblptrl
  4062  0009E2  CFDD FFF7          	movff	postdec2,tblptrh
  4063  0009E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4064  0009E6  6AF8               	clrf	tblptru,c
  4065  0009E8                     	endif
  4066  0009E8                     	if	0	;tblptru may be non-zero
  4067  0009E8                     	endif
  4068  0009E8  0008               	tblrd		*
  4069  0009EA  50F5               	movf	tablat,w,c
  4070  0009EC  0A64               	xorlw	100
  4071  0009EE  B4D8               	btfsc	status,2,c
  4072  0009F0  EFFC  F004         	goto	u3461
  4073  0009F4  EFFE  F004         	goto	u3460
  4074  0009F8                     u3461:
  4075  0009F8  EF11  F005         	goto	l4269
  4076  0009FC                     u3460:
  4077  0009FC                     
  4078                           ; BSR set to: 0
  4079  0009FC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4080  000A00  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4081  000A04  CFDE FFF6          	movff	postinc2,tblptrl
  4082  000A08  CFDD FFF7          	movff	postdec2,tblptrh
  4083  000A0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4084  000A0C  6AF8               	clrf	tblptru,c
  4085  000A0E                     	endif
  4086  000A0E                     	if	0	;tblptru may be non-zero
  4087  000A0E                     	endif
  4088  000A0E  0008               	tblrd		*
  4089  000A10  50F5               	movf	tablat,w,c
  4090  000A12  0A69               	xorlw	105
  4091  000A14  A4D8               	btfss	status,2,c
  4092  000A16  EF0F  F005         	goto	u3471
  4093  000A1A  EF11  F005         	goto	u3470
  4094  000A1E                     u3471:
  4095  000A1E  EF51  F005         	goto	l4275
  4096  000A22                     u3470:
  4097  000A22                     l4269:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4101  000A22  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4102  000A26  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4103  000A2A  2ADE               	incf	postinc2,f,c
  4104  000A2C  0E00               	movlw	0
  4105  000A2E  22DD               	addwfc	postdec2,f,c
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4108  000A30  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4109  000A34  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4110  000A38  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  4111  000A3C  0E02               	movlw	2
  4112  000A3E  26DE               	addwf	postinc2,f,c
  4113  000A40  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  4114  000A44  0E00               	movlw	0
  4115  000A46  22DD               	addwfc	postdec2,f,c
  4116  000A48  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4117  000A4C  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4118  000A50  CFDE F0B8          	movff	postinc2,vfpfcnvrt@ll
  4119  000A54  CFDD F0B9          	movff	postdec2,vfpfcnvrt@ll+1
  4120  000A58  0E00               	movlw	0
  4121  000A5A  BFB9               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4122  000A5C  0EFF               	movlw	-1
  4123  000A5E  6FBA               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4124  000A60  6FBB               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4125  000A62  6FBC               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4126  000A64  6FBD               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4127  000A66  6FBE               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4128  000A68  6FBF               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4129  000A6A                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  4132  000A6A  C04B  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  4133  000A6E  C04C  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4134  000A72  C0B8  F026         	movff	vfpfcnvrt@ll,dtoa@d
  4135  000A76  C0B9  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4136  000A7A  C0BA  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4137  000A7E  C0BB  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4138  000A82  C0BC  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4139  000A86  C0BD  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4140  000A8A  C0BE  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4141  000A8E  C0BF  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4142  000A92  ECAC  F006         	call	_dtoa	;wreg free
  4143  000A96  C024  F04B         	movff	?_dtoa,?_vfpfcnvrt
  4144  000A9A  C025  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4145  000A9E  EFAB  F006         	goto	l1423
  4146  000AA2                     l4275:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  4150  000AA2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4151  000AA6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4152  000AAA  CFDE FFF6          	movff	postinc2,tblptrl
  4153  000AAE  CFDD FFF7          	movff	postdec2,tblptrh
  4154  000AB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4155  000AB2  6AF8               	clrf	tblptru,c
  4156  000AB4                     	endif
  4157  000AB4                     	if	0	;tblptru may be non-zero
  4158  000AB4                     	endif
  4159  000AB4  0008               	tblrd		*
  4160  000AB6  50F5               	movf	tablat,w,c
  4161  000AB8  0A73               	xorlw	115
  4162  000ABA  A4D8               	btfss	status,2,c
  4163  000ABC  EF62  F005         	goto	u3481
  4164  000AC0  EF64  F005         	goto	u3480
  4165  000AC4                     u3481:
  4166  000AC4  EF8F  F005         	goto	l4283
  4167  000AC8                     u3480:
  4168  000AC8                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  4171  000AC8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4172  000ACC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4173  000AD0  2ADE               	incf	postinc2,f,c
  4174  000AD2  0E00               	movlw	0
  4175  000AD4  22DD               	addwfc	postdec2,f,c
  4176                           
  4177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4178  000AD6  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4179  000ADA  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4180  000ADE  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  4181  000AE2  0E02               	movlw	2
  4182  000AE4  26DE               	addwf	postinc2,f,c
  4183  000AE6  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  4184  000AEA  0E00               	movlw	0
  4185  000AEC  22DD               	addwfc	postdec2,f,c
  4186  000AEE  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4187  000AF2  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4188  000AF6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@cp
  4189  000AFA  CFDD F0C1          	movff	postdec2,vfpfcnvrt@cp+1
  4190  000AFE                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  4193  000AFE  C04B  F012         	movff	vfpfcnvrt@fp,stoa@fp
  4194  000B02  C04C  F013         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4195  000B06  C0C0  F014         	movff	vfpfcnvrt@cp,stoa@s
  4196  000B0A  C0C1  F015         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4197  000B0E  EC16  F00C         	call	_stoa	;wreg free
  4198  000B12  C012  F04B         	movff	?_stoa,?_vfpfcnvrt
  4199  000B16  C013  F04C         	movff	?_stoa+1,?_vfpfcnvrt+1
  4200  000B1A  EFAB  F006         	goto	l1423
  4201  000B1E                     l4283:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  4205  000B1E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4206  000B22  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4207  000B26  CFDE FFF6          	movff	postinc2,tblptrl
  4208  000B2A  CFDD FFF7          	movff	postdec2,tblptrh
  4209  000B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4210  000B2E  6AF8               	clrf	tblptru,c
  4211  000B30                     	endif
  4212  000B30                     	if	0	;tblptru may be non-zero
  4213  000B30                     	endif
  4214  000B30  0008               	tblrd		*
  4215  000B32  50F5               	movf	tablat,w,c
  4216  000B34  0A75               	xorlw	117
  4217  000B36  A4D8               	btfss	status,2,c
  4218  000B38  EFA0  F005         	goto	u3491
  4219  000B3C  EFA2  F005         	goto	u3490
  4220  000B40                     u3491:
  4221  000B40  EFE3  F005         	goto	l4291
  4222  000B44                     u3490:
  4223  000B44                     
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  4226  000B44  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4227  000B48  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4228  000B4C  2ADE               	incf	postinc2,f,c
  4229  000B4E  0E00               	movlw	0
  4230  000B50  22DD               	addwfc	postdec2,f,c
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4233  000B52  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4234  000B56  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4235  000B5A  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  4236  000B5E  0E02               	movlw	2
  4237  000B60  26DE               	addwf	postinc2,f,c
  4238  000B62  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  4239  000B66  0E00               	movlw	0
  4240  000B68  22DD               	addwfc	postdec2,f,c
  4241  000B6A  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4242  000B6E  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4243  000B72  CFDE F0B6          	movff	postinc2,??_vfpfcnvrt+2
  4244  000B76  CFDD F0B7          	movff	postdec2,??_vfpfcnvrt+3
  4245  000B7A  C0B6  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4246  000B7E  C0B7  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4247  000B82  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4248  000B84  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4249  000B86  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4250  000B88  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4251  000B8A  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4252  000B8C  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4253  000B8E                     
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
  4256  000B8E  C04B  F024         	movff	vfpfcnvrt@fp,utoa@fp
  4257  000B92  C04C  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4258  000B96  C0C6  F026         	movff	vfpfcnvrt@llu,utoa@d
  4259  000B9A  C0C7  F027         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4260  000B9E  C0C8  F028         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4261  000BA2  C0C9  F029         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4262  000BA6  C0CA  F02A         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4263  000BAA  C0CB  F02B         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4264  000BAE  C0CC  F02C         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4265  000BB2  C0CD  F02D         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4266  000BB6  EC85  F009         	call	_utoa	;wreg free
  4267  000BBA  C024  F04B         	movff	?_utoa,?_vfpfcnvrt
  4268  000BBE  C025  F04C         	movff	?_utoa+1,?_vfpfcnvrt+1
  4269  000BC2  EFAB  F006         	goto	l1423
  4270  000BC6                     l4291:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4274  000BC6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4275  000BCA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4276  000BCE  CFDE FFF6          	movff	postinc2,tblptrl
  4277  000BD2  CFDD FFF7          	movff	postdec2,tblptrh
  4278  000BD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4279  000BD6  6AF8               	clrf	tblptru,c
  4280  000BD8                     	endif
  4281  000BD8                     	if	0	;tblptru may be non-zero
  4282  000BD8                     	endif
  4283  000BD8  0008               	tblrd		*
  4284  000BDA  50F5               	movf	tablat,w,c
  4285  000BDC  0A78               	xorlw	120
  4286  000BDE  B4D8               	btfsc	status,2,c
  4287  000BE0  EFF4  F005         	goto	u3501
  4288  000BE4  EFF6  F005         	goto	u3500
  4289  000BE8                     u3501:
  4290  000BE8  EF09  F006         	goto	l4295
  4291  000BEC                     u3500:
  4292  000BEC                     
  4293                           ; BSR set to: 0
  4294  000BEC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4295  000BF0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4296  000BF4  CFDE FFF6          	movff	postinc2,tblptrl
  4297  000BF8  CFDD FFF7          	movff	postdec2,tblptrh
  4298  000BFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4299  000BFC  6AF8               	clrf	tblptru,c
  4300  000BFE                     	endif
  4301  000BFE                     	if	0	;tblptru may be non-zero
  4302  000BFE                     	endif
  4303  000BFE  0008               	tblrd		*
  4304  000C00  50F5               	movf	tablat,w,c
  4305  000C02  0A58               	xorlw	88
  4306  000C04  A4D8               	btfss	status,2,c
  4307  000C06  EF07  F006         	goto	u3511
  4308  000C0A  EF09  F006         	goto	u3510
  4309  000C0E                     u3511:
  4310  000C0E  EF58  F006         	goto	l4305
  4311  000C12                     u3510:
  4312  000C12                     l4295:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  4316  000C12  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4317  000C16  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4318  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  4319  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  4320  000C22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4321  000C22  6AF8               	clrf	tblptru,c
  4322  000C24                     	endif
  4323  000C24                     	if	0	;tblptru may be non-zero
  4324  000C24                     	endif
  4325  000C24  0008               	tblrd		*
  4326  000C26  CFF5 F0CE          	movff	tablat,vfpfcnvrt@c
  4327  000C2A                     
  4328                           ; BSR set to: 0
  4329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  4330  000C2A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4331  000C2E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4332  000C32  2ADE               	incf	postinc2,f,c
  4333  000C34  0E00               	movlw	0
  4334  000C36  22DD               	addwfc	postdec2,f,c
  4335  000C38                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4338  000C38  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4339  000C3C  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4340  000C40  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  4341  000C44  0E02               	movlw	2
  4342  000C46  26DE               	addwf	postinc2,f,c
  4343  000C48  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  4344  000C4C  0E00               	movlw	0
  4345  000C4E  22DD               	addwfc	postdec2,f,c
  4346  000C50  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4347  000C54  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4348  000C58  CFDE F0B6          	movff	postinc2,??_vfpfcnvrt+2
  4349  000C5C  CFDD F0B7          	movff	postdec2,??_vfpfcnvrt+3
  4350  000C60  C0B6  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4351  000C64  C0B7  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4352  000C68  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4353  000C6A  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4354  000C6C  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4355  000C6E  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4356  000C70  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4357  000C72  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4358  000C74                     
  4359                           ; BSR set to: 0
  4360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  4361  000C74  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
  4362  000C78  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4363  000C7C  C0C6  F026         	movff	vfpfcnvrt@llu,xtoa@d
  4364  000C80  C0C7  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4365  000C84  C0C8  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4366  000C88  C0C9  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4367  000C8C  C0CA  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4368  000C90  C0CB  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4369  000C94  C0CC  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4370  000C98  C0CD  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4371  000C9C  C0CE  F02E         	movff	vfpfcnvrt@c,xtoa@x
  4372  000CA0  EC1B  F008         	call	_xtoa	;wreg free
  4373  000CA4  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
  4374  000CA8  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4375  000CAC  EFAB  F006         	goto	l1423
  4376  000CB0                     l4305:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  4380  000CB0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4381  000CB4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4382  000CB8  CFDE FFF6          	movff	postinc2,tblptrl
  4383  000CBC  CFDD FFF7          	movff	postdec2,tblptrh
  4384  000CC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4385  000CC0  6AF8               	clrf	tblptru,c
  4386  000CC2                     	endif
  4387  000CC2                     	if	0	;tblptru may be non-zero
  4388  000CC2                     	endif
  4389  000CC2  0008               	tblrd		*
  4390  000CC4  50F5               	movf	tablat,w,c
  4391  000CC6  0A25               	xorlw	37
  4392  000CC8  A4D8               	btfss	status,2,c
  4393  000CCA  EF69  F006         	goto	u3521
  4394  000CCE  EF6B  F006         	goto	u3520
  4395  000CD2                     u3521:
  4396  000CD2  EF82  F006         	goto	l4315
  4397  000CD6                     u3520:
  4398  000CD6                     
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  4401  000CD6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4402  000CDA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4403  000CDE  2ADE               	incf	postinc2,f,c
  4404  000CE0  0E00               	movlw	0
  4405  000CE2  22DD               	addwfc	postdec2,f,c
  4406  000CE4                     
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  4409  000CE4  0E00               	movlw	0
  4410  000CE6  6E0A               	movwf	(fputc@c+1)^0,c
  4411  000CE8  0E25               	movlw	37
  4412  000CEA  6E09               	movwf	fputc@c^0,c
  4413  000CEC  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  4414  000CF0  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4415  000CF4  ECF4  F00F         	call	_fputc	;wreg free
  4416  000CF8                     l4311:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  4419  000CF8  0E00               	movlw	0
  4420  000CFA  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  4421  000CFC  0E01               	movlw	1
  4422  000CFE  6E4B               	movwf	?_vfpfcnvrt^0,c
  4423  000D00  EFAB  F006         	goto	l1423
  4424  000D04                     l4315:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  4428  000D04  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4429  000D08  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4430  000D0C  2ADE               	incf	postinc2,f,c
  4431  000D0E  0E00               	movlw	0
  4432  000D10  22DD               	addwfc	postdec2,f,c
  4433  000D12                     
  4434                           ; BSR set to: 0
  4435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  4436  000D12  0E00               	movlw	0
  4437  000D14  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  4438  000D16  0E00               	movlw	0
  4439  000D18  6E4B               	movwf	?_vfpfcnvrt^0,c
  4440  000D1A  EFAB  F006         	goto	l1423
  4441  000D1E                     l4321:
  4442                           
  4443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  4444  000D1E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4445  000D22  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4446  000D26  CFDE FFF6          	movff	postinc2,tblptrl
  4447  000D2A  CFDD FFF7          	movff	postdec2,tblptrh
  4448  000D2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4449  000D2E  6AF8               	clrf	tblptru,c
  4450  000D30                     	endif
  4451  000D30                     	if	0	;tblptru may be non-zero
  4452  000D30                     	endif
  4453  000D30  0008               	tblrd		*
  4454  000D32  50F5               	movf	tablat,w,c
  4455  000D34  6E09               	movwf	fputc@c^0,c
  4456  000D36  6A0A               	clrf	(fputc@c+1)^0,c
  4457  000D38  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  4458  000D3C  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4459  000D40  ECF4  F00F         	call	_fputc	;wreg free
  4460  000D44                     
  4461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4462  000D44  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4463  000D48  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4464  000D4C  2ADE               	incf	postinc2,f,c
  4465  000D4E  0E00               	movlw	0
  4466  000D50  22DD               	addwfc	postdec2,f,c
  4467  000D52  EF7C  F006         	goto	l4311
  4468  000D56                     l1423:
  4469  000D56  0012               	return		;funcret
  4470  000D58                     __end_of_vfpfcnvrt:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _xtoa *****************
  4474 ;; Defined at:
  4475 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  4478 ;;		 -> NULL(0), 
  4479 ;;  d               8   37[COMRAM] unsigned long long 
  4480 ;;  x               1   45[COMRAM] unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  n               8   62[COMRAM] unsigned long long 
  4483 ;;  c               2   72[COMRAM] int 
  4484 ;;  i               2   70[COMRAM] int 
  4485 ;;  w               2   60[COMRAM] int 
  4486 ;;  p               2   58[COMRAM] int 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2   35[COMRAM] int 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4496 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;Total ram usage:       39 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    9
  4503 ;; This function calls:
  4504 ;;		_isalpha
  4505 ;;		_isupper
  4506 ;;		_pad
  4507 ;;		_toupper
  4508 ;; This function is called by:
  4509 ;;		_vfpfcnvrt
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text8
  4514  001036                     __ptext8:
  4515                           	callstack 0
  4516  001036                     _xtoa:
  4517                           	callstack 18
  4518  001036                     
  4519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  4520  001036  BE54               	btfsc	(_prec+1)^0,7,c
  4521  001038  EF20  F008         	goto	u2481
  4522  00103C  EF22  F008         	goto	u2480
  4523  001040                     u2481:
  4524  001040  EF23  F008         	goto	l3267
  4525  001044                     u2480:
  4526  001044                     
  4527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  4528  001044  9255               	bcf	_flags^0,1,c
  4529  001046                     l3267:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  4532  001046  BE54               	btfsc	(_prec+1)^0,7,c
  4533  001048  EF30  F008         	goto	u2490
  4534  00104C  5054               	movf	(_prec+1)^0,w,c
  4535  00104E  E106               	bnz	u2491
  4536  001050  0453               	decf	_prec^0,w,c
  4537  001052  B0D8               	btfsc	status,0,c
  4538  001054  EF2E  F008         	goto	u2491
  4539  001058  EF30  F008         	goto	u2490
  4540  00105C                     u2491:
  4541  00105C  EF36  F008         	goto	l1371
  4542  001060                     u2490:
  4543  001060  0E00               	movlw	0
  4544  001062  6E3C               	movwf	(xtoa@p+1)^0,c
  4545  001064  0E01               	movlw	1
  4546  001066  6E3B               	movwf	xtoa@p^0,c
  4547  001068  EF3A  F008         	goto	l1373
  4548  00106C                     l1371:
  4549  00106C  C053  F03B         	movff	_prec,xtoa@p
  4550  001070  C054  F03C         	movff	_prec+1,xtoa@p+1
  4551  001074                     l1373:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  4554  001074  C07A  F03D         	movff	_width,xtoa@w
  4555  001078  C07B  F03E         	movff	_width+1,xtoa@w+1
  4556                           
  4557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  4558  00107C  A855               	btfss	_flags^0,4,c
  4559  00107E  EF43  F008         	goto	u2501
  4560  001082  EF45  F008         	goto	u2500
  4561  001086                     u2501:
  4562  001086  EF49  F008         	goto	l3273
  4563  00108A                     u2500:
  4564  00108A                     
  4565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  4566  00108A  0EFE               	movlw	254
  4567  00108C  263D               	addwf	xtoa@w^0,f,c
  4568  00108E  0EFF               	movlw	255
  4569  001090  223E               	addwfc	(xtoa@w+1)^0,f,c
  4570  001092                     l3273:
  4571                           
  4572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  4573  001092  C026  F03F         	movff	xtoa@d,xtoa@n
  4574  001096  C027  F040         	movff	xtoa@d+1,xtoa@n+1
  4575  00109A  C028  F041         	movff	xtoa@d+2,xtoa@n+2
  4576  00109E  C029  F042         	movff	xtoa@d+3,xtoa@n+3
  4577  0010A2  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
  4578  0010A6  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
  4579  0010AA  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
  4580  0010AE  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
  4581  0010B2                     
  4582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  4583  0010B2  0E00               	movlw	0
  4584  0010B4  6E48               	movwf	(xtoa@i+1)^0,c
  4585  0010B6  0E1F               	movlw	31
  4586  0010B8  6E47               	movwf	xtoa@i^0,c
  4587  0010BA                     
  4588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  4589  0010BA  0E00               	movlw	0
  4590  0010BC  0101               	movlb	1	; () banked
  4591  0010BE  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4592                           
  4593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4594  0010C0  EF15  F009         	goto	l3309
  4595  0010C4                     l3279:
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  4598  0010C4  0647               	decf	xtoa@i^0,f,c
  4599  0010C6  A0D8               	btfss	status,0,c
  4600  0010C8  0648               	decf	(xtoa@i+1)^0,f,c
  4601  0010CA                     
  4602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  4603  0010CA  0E0F               	movlw	15
  4604  0010CC  143F               	andwf	xtoa@n^0,w,c
  4605  0010CE  6E49               	movwf	xtoa@c^0,c
  4606  0010D0  6A4A               	clrf	(xtoa@c+1)^0,c
  4607  0010D2                     
  4608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  4609  0010D2  BE4A               	btfsc	(xtoa@c+1)^0,7,c
  4610  0010D4  EF75  F008         	goto	u2511
  4611  0010D8  504A               	movf	(xtoa@c+1)^0,w,c
  4612  0010DA  E109               	bnz	u2510
  4613  0010DC  0E0A               	movlw	10
  4614  0010DE  5C49               	subwf	xtoa@c^0,w,c
  4615  0010E0  A0D8               	btfss	status,0,c
  4616  0010E2  EF75  F008         	goto	u2511
  4617  0010E6  EF77  F008         	goto	u2510
  4618  0010EA                     u2511:
  4619  0010EA  EF7F  F008         	goto	l3287
  4620  0010EE                     u2510:
  4621  0010EE  0E57               	movlw	87
  4622  0010F0  2449               	addwf	xtoa@c^0,w,c
  4623  0010F2  6E49               	movwf	xtoa@c^0,c
  4624  0010F4  0E00               	movlw	0
  4625  0010F6  204A               	addwfc	(xtoa@c+1)^0,w,c
  4626  0010F8  6E4A               	movwf	(xtoa@c+1)^0,c
  4627  0010FA  EF85  F008         	goto	l1380
  4628  0010FE                     l3287:
  4629  0010FE  0E30               	movlw	48
  4630  001100  2449               	addwf	xtoa@c^0,w,c
  4631  001102  6E49               	movwf	xtoa@c^0,c
  4632  001104  0E00               	movlw	0
  4633  001106  204A               	addwfc	(xtoa@c+1)^0,w,c
  4634  001108  6E4A               	movwf	(xtoa@c+1)^0,c
  4635  00110A                     l1380:
  4636  00110A  0EBF               	movlw	191
  4637  00110C  6E2F               	movwf	??_xtoa^0,c
  4638  00110E  0EFF               	movlw	255
  4639  001110  6E30               	movwf	(??_xtoa+1)^0,c
  4640  001112  502E               	movf	xtoa@x^0,w,c
  4641  001114  6E31               	movwf	(??_xtoa+2)^0,c
  4642  001116  6A32               	clrf	(??_xtoa+3)^0,c
  4643  001118  502F               	movf	??_xtoa^0,w,c
  4644  00111A  2631               	addwf	(??_xtoa+2)^0,f,c
  4645  00111C  5030               	movf	(??_xtoa+1)^0,w,c
  4646  00111E  2232               	addwfc	(??_xtoa+3)^0,f,c
  4647  001120  5032               	movf	(??_xtoa+3)^0,w,c
  4648  001122  E10A               	bnz	u2520
  4649  001124  0E1A               	movlw	26
  4650  001126  5C31               	subwf	(??_xtoa+2)^0,w,c
  4651  001128  A0D8               	btfss	status,0,c
  4652  00112A  EF99  F008         	goto	u2521
  4653  00112E  EF9C  F008         	goto	u2520
  4654  001132                     u2521:
  4655  001132  0E01               	movlw	1
  4656  001134  EF9D  F008         	goto	u2530
  4657  001138                     u2520:
  4658  001138  0E00               	movlw	0
  4659  00113A                     u2530:
  4660  00113A  6E37               	movwf	_xtoa$1945^0,c
  4661  00113C  6A38               	clrf	(_xtoa$1945+1)^0,c
  4662  00113E  5037               	movf	_xtoa$1945^0,w,c
  4663  001140  1038               	iorwf	(_xtoa$1945+1)^0,w,c
  4664  001142  B4D8               	btfsc	status,2,c
  4665  001144  EFA6  F008         	goto	u2541
  4666  001148  EFA8  F008         	goto	u2540
  4667  00114C                     u2541:
  4668  00114C  EFD8  F008         	goto	l3301
  4669  001150                     u2540:
  4670  001150  0E9F               	movlw	159
  4671  001152  6E2F               	movwf	??_xtoa^0,c
  4672  001154  0EFF               	movlw	255
  4673  001156  6E30               	movwf	(??_xtoa+1)^0,c
  4674  001158  0E20               	movlw	32
  4675  00115A  1049               	iorwf	xtoa@c^0,w,c
  4676  00115C  6E31               	movwf	(??_xtoa+2)^0,c
  4677  00115E  0E00               	movlw	0
  4678  001160  104A               	iorwf	(xtoa@c+1)^0,w,c
  4679  001162  6E32               	movwf	(??_xtoa+3)^0,c
  4680  001164  502F               	movf	??_xtoa^0,w,c
  4681  001166  2631               	addwf	(??_xtoa+2)^0,f,c
  4682  001168  5030               	movf	(??_xtoa+1)^0,w,c
  4683  00116A  2232               	addwfc	(??_xtoa+3)^0,f,c
  4684  00116C  5032               	movf	(??_xtoa+3)^0,w,c
  4685  00116E  E10A               	bnz	u2550
  4686  001170  0E1A               	movlw	26
  4687  001172  5C31               	subwf	(??_xtoa+2)^0,w,c
  4688  001174  A0D8               	btfss	status,0,c
  4689  001176  EFBF  F008         	goto	u2551
  4690  00117A  EFC2  F008         	goto	u2550
  4691  00117E                     u2551:
  4692  00117E  0E01               	movlw	1
  4693  001180  EFC3  F008         	goto	u2560
  4694  001184                     u2550:
  4695  001184  0E00               	movlw	0
  4696  001186                     u2560:
  4697  001186  6E39               	movwf	_xtoa$1946^0,c
  4698  001188  6A3A               	clrf	(_xtoa$1946+1)^0,c
  4699  00118A  5039               	movf	_xtoa$1946^0,w,c
  4700  00118C  103A               	iorwf	(_xtoa$1946+1)^0,w,c
  4701  00118E  B4D8               	btfsc	status,2,c
  4702  001190  EFCC  F008         	goto	u2571
  4703  001194  EFCE  F008         	goto	u2570
  4704  001198                     u2571:
  4705  001198  EFD8  F008         	goto	l3301
  4706  00119C                     u2570:
  4707  00119C                     
  4708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  4709  00119C  C049  F00D         	movff	xtoa@c,toupper@c
  4710  0011A0  C04A  F00E         	movff	xtoa@c+1,toupper@c+1
  4711  0011A4  ECAC  F010         	call	_toupper	;wreg free
  4712  0011A8  C00D  F049         	movff	?_toupper,xtoa@c
  4713  0011AC  C00E  F04A         	movff	?_toupper+1,xtoa@c+1
  4714  0011B0                     l3301:
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  4717  0011B0  0E00               	movlw	low _dbuf
  4718  0011B2  2447               	addwf	xtoa@i^0,w,c
  4719  0011B4  6ED9               	movwf	fsr2l,c
  4720  0011B6  0E01               	movlw	high _dbuf
  4721  0011B8  2048               	addwfc	(xtoa@i+1)^0,w,c
  4722  0011BA  6EDA               	movwf	fsr2h,c
  4723  0011BC  C049  FFDF         	movff	xtoa@c,indf2
  4724  0011C0                     
  4725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  4726  0011C0  063B               	decf	xtoa@p^0,f,c
  4727  0011C2  A0D8               	btfss	status,0,c
  4728  0011C4  063C               	decf	(xtoa@p+1)^0,f,c
  4729  0011C6                     
  4730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  4731  0011C6  063D               	decf	xtoa@w^0,f,c
  4732  0011C8  A0D8               	btfss	status,0,c
  4733  0011CA  063E               	decf	(xtoa@w+1)^0,f,c
  4734  0011CC                     
  4735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  4736  0011CC  C03F  F02F         	movff	xtoa@n,??_xtoa
  4737  0011D0  C040  F030         	movff	xtoa@n+1,??_xtoa+1
  4738  0011D4  C041  F031         	movff	xtoa@n+2,??_xtoa+2
  4739  0011D8  C042  F032         	movff	xtoa@n+3,??_xtoa+3
  4740  0011DC  C043  F033         	movff	xtoa@n+4,??_xtoa+4
  4741  0011E0  C044  F034         	movff	xtoa@n+5,??_xtoa+5
  4742  0011E4  C045  F035         	movff	xtoa@n+6,??_xtoa+6
  4743  0011E8  C046  F036         	movff	xtoa@n+7,??_xtoa+7
  4744  0011EC  0E05               	movlw	5
  4745  0011EE  EF02  F009         	goto	u2580
  4746  0011F2                     u2585:
  4747  0011F2  90D8               	bcf	status,0,c
  4748  0011F4  3236               	rrcf	(??_xtoa+7)^0,f,c
  4749  0011F6  3235               	rrcf	(??_xtoa+6)^0,f,c
  4750  0011F8  3234               	rrcf	(??_xtoa+5)^0,f,c
  4751  0011FA  3233               	rrcf	(??_xtoa+4)^0,f,c
  4752  0011FC  3232               	rrcf	(??_xtoa+3)^0,f,c
  4753  0011FE  3231               	rrcf	(??_xtoa+2)^0,f,c
  4754  001200  3230               	rrcf	(??_xtoa+1)^0,f,c
  4755  001202  322F               	rrcf	??_xtoa^0,f,c
  4756  001204                     u2580:
  4757  001204  2EE8               	decfsz	wreg,f,c
  4758  001206  EFF9  F008         	goto	u2585
  4759  00120A  C02F  F03F         	movff	??_xtoa,xtoa@n
  4760  00120E  C030  F040         	movff	??_xtoa+1,xtoa@n+1
  4761  001212  C031  F041         	movff	??_xtoa+2,xtoa@n+2
  4762  001216  C032  F042         	movff	??_xtoa+3,xtoa@n+3
  4763  00121A  C033  F043         	movff	??_xtoa+4,xtoa@n+4
  4764  00121E  C034  F044         	movff	??_xtoa+5,xtoa@n+5
  4765  001222  C035  F045         	movff	??_xtoa+6,xtoa@n+6
  4766  001226  C036  F046         	movff	??_xtoa+7,xtoa@n+7
  4767  00122A                     l3309:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4770  00122A  BE48               	btfsc	(xtoa@i+1)^0,7,c
  4771  00122C  EF21  F009         	goto	u2591
  4772  001230  5048               	movf	(xtoa@i+1)^0,w,c
  4773  001232  E109               	bnz	u2590
  4774  001234  0E02               	movlw	2
  4775  001236  5C47               	subwf	xtoa@i^0,w,c
  4776  001238  A0D8               	btfss	status,0,c
  4777  00123A  EF21  F009         	goto	u2591
  4778  00123E  EF23  F009         	goto	u2590
  4779  001242                     u2591:
  4780  001242  EF53  F009         	goto	l1394
  4781  001246                     u2590:
  4782  001246  503F               	movf	xtoa@n^0,w,c
  4783  001248  1040               	iorwf	(xtoa@n+1)^0,w,c
  4784  00124A  1041               	iorwf	(xtoa@n+2)^0,w,c
  4785  00124C  1042               	iorwf	(xtoa@n+3)^0,w,c
  4786  00124E  1043               	iorwf	(xtoa@n+4)^0,w,c
  4787  001250  1044               	iorwf	(xtoa@n+5)^0,w,c
  4788  001252  1045               	iorwf	(xtoa@n+6)^0,w,c
  4789  001254  1046               	iorwf	(xtoa@n+7)^0,w,c
  4790  001256  A4D8               	btfss	status,2,c
  4791  001258  EF30  F009         	goto	u2601
  4792  00125C  EF32  F009         	goto	u2600
  4793  001260                     u2601:
  4794  001260  EF62  F008         	goto	l3279
  4795  001264                     u2600:
  4796  001264  BE3C               	btfsc	(xtoa@p+1)^0,7,c
  4797  001266  EF3F  F009         	goto	u2610
  4798  00126A  503C               	movf	(xtoa@p+1)^0,w,c
  4799  00126C  E106               	bnz	u2611
  4800  00126E  043B               	decf	xtoa@p^0,w,c
  4801  001270  B0D8               	btfsc	status,0,c
  4802  001272  EF3D  F009         	goto	u2611
  4803  001276  EF3F  F009         	goto	u2610
  4804  00127A                     u2611:
  4805  00127A  EF62  F008         	goto	l3279
  4806  00127E                     u2610:
  4807  00127E  BE3E               	btfsc	(xtoa@w+1)^0,7,c
  4808  001280  EF4A  F009         	goto	u2621
  4809  001284  503E               	movf	(xtoa@w+1)^0,w,c
  4810  001286  E108               	bnz	u2620
  4811  001288  043D               	decf	xtoa@w^0,w,c
  4812  00128A  A0D8               	btfss	status,0,c
  4813  00128C  EF4A  F009         	goto	u2621
  4814  001290  EF4C  F009         	goto	u2620
  4815  001294                     u2621:
  4816  001294  EF53  F009         	goto	l1394
  4817  001298                     u2620:
  4818  001298  B255               	btfsc	_flags^0,1,c
  4819  00129A  EF51  F009         	goto	u2631
  4820  00129E  EF53  F009         	goto	u2630
  4821  0012A2                     u2631:
  4822  0012A2  EF62  F008         	goto	l3279
  4823  0012A6                     u2630:
  4824  0012A6                     l1394:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4827  0012A6  A855               	btfss	_flags^0,4,c
  4828  0012A8  EF58  F009         	goto	u2641
  4829  0012AC  EF5A  F009         	goto	u2640
  4830  0012B0                     u2641:
  4831  0012B0  EF70  F009         	goto	l3325
  4832  0012B4                     u2640:
  4833  0012B4                     
  4834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  4835  0012B4  0647               	decf	xtoa@i^0,f,c
  4836  0012B6  A0D8               	btfss	status,0,c
  4837  0012B8  0648               	decf	(xtoa@i+1)^0,f,c
  4838  0012BA                     
  4839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  4840  0012BA  0E00               	movlw	low _dbuf
  4841  0012BC  2447               	addwf	xtoa@i^0,w,c
  4842  0012BE  6ED9               	movwf	fsr2l,c
  4843  0012C0  0E01               	movlw	high _dbuf
  4844  0012C2  2048               	addwfc	(xtoa@i+1)^0,w,c
  4845  0012C4  6EDA               	movwf	fsr2h,c
  4846  0012C6  C02E  FFDF         	movff	xtoa@x,indf2
  4847  0012CA                     
  4848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  4849  0012CA  0647               	decf	xtoa@i^0,f,c
  4850  0012CC  A0D8               	btfss	status,0,c
  4851  0012CE  0648               	decf	(xtoa@i+1)^0,f,c
  4852                           
  4853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  4854  0012D0  0E00               	movlw	low _dbuf
  4855  0012D2  2447               	addwf	xtoa@i^0,w,c
  4856  0012D4  6ED9               	movwf	fsr2l,c
  4857  0012D6  0E01               	movlw	high _dbuf
  4858  0012D8  2048               	addwfc	(xtoa@i+1)^0,w,c
  4859  0012DA  6EDA               	movwf	fsr2h,c
  4860  0012DC  0E30               	movlw	48
  4861  0012DE  6EDF               	movwf	indf2,c
  4862  0012E0                     l3325:
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  4865  0012E0  C024  F019         	movff	xtoa@fp,pad@fp
  4866  0012E4  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
  4867  0012E8  0E00               	movlw	low _dbuf
  4868  0012EA  2447               	addwf	xtoa@i^0,w,c
  4869  0012EC  6E1B               	movwf	pad@buf^0,c
  4870  0012EE  0E01               	movlw	high _dbuf
  4871  0012F0  2048               	addwfc	(xtoa@i+1)^0,w,c
  4872  0012F2  6E1C               	movwf	(pad@buf+1)^0,c
  4873  0012F4  C03D  F01D         	movff	xtoa@w,pad@p
  4874  0012F8  C03E  F01E         	movff	xtoa@w+1,pad@p+1
  4875  0012FC  ECDD  F00E         	call	_pad	;wreg free
  4876  001300  C019  F024         	movff	?_pad,?_xtoa
  4877  001304  C01A  F025         	movff	?_pad+1,?_xtoa+1
  4878  001308  0012               	return		;funcret
  4879  00130A                     __end_of_xtoa:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _toupper *****************
  4883 ;; Defined at:
  4884 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  c               2   12[COMRAM] int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2   12[COMRAM] int 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;Total ram usage:        8 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    5
  4905 ;; This function calls:
  4906 ;;		_islower
  4907 ;; This function is called by:
  4908 ;;		_xtoa
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text9
  4913  002158                     __ptext9:
  4914                           	callstack 0
  4915  002158                     _toupper:
  4916                           	callstack 21
  4917  002158  0E9F               	movlw	159
  4918  00215A  6E0F               	movwf	??_toupper^0,c
  4919  00215C  0EFF               	movlw	255
  4920  00215E  6E10               	movwf	(??_toupper+1)^0,c
  4921  002160  C00D  F011         	movff	toupper@c,??_toupper+2
  4922  002164  C00E  F012         	movff	toupper@c+1,??_toupper+3
  4923  002168  500F               	movf	??_toupper^0,w,c
  4924  00216A  2611               	addwf	(??_toupper+2)^0,f,c
  4925  00216C  5010               	movf	(??_toupper+1)^0,w,c
  4926  00216E  2212               	addwfc	(??_toupper+3)^0,f,c
  4927  002170  5012               	movf	(??_toupper+3)^0,w,c
  4928  002172  E10A               	bnz	u2090
  4929  002174  0E1A               	movlw	26
  4930  002176  5C11               	subwf	(??_toupper+2)^0,w,c
  4931  002178  A0D8               	btfss	status,0,c
  4932  00217A  EFC1  F010         	goto	u2091
  4933  00217E  EFC4  F010         	goto	u2090
  4934  002182                     u2091:
  4935  002182  0E01               	movlw	1
  4936  002184  EFC5  F010         	goto	u2100
  4937  002188                     u2090:
  4938  002188  0E00               	movlw	0
  4939  00218A                     u2100:
  4940  00218A  6E13               	movwf	_toupper$2060^0,c
  4941  00218C  6A14               	clrf	(_toupper$2060+1)^0,c
  4942  00218E  5013               	movf	_toupper$2060^0,w,c
  4943  002190  1014               	iorwf	(_toupper$2060+1)^0,w,c
  4944  002192  B4D8               	btfsc	status,2,c
  4945  002194  EFCE  F010         	goto	u2111
  4946  002198  EFD0  F010         	goto	u2110
  4947  00219C                     u2111:
  4948  00219C  EFD6  F010         	goto	l1533
  4949  0021A0                     u2110:
  4950  0021A0  0E5F               	movlw	95
  4951  0021A2  140D               	andwf	toupper@c^0,w,c
  4952  0021A4  6E0D               	movwf	?_toupper^0,c
  4953  0021A6  6A0E               	clrf	(?_toupper+1)^0,c
  4954  0021A8  EFDA  F010         	goto	l1538
  4955  0021AC                     l1533:
  4956  0021AC  C00D  F00D         	movff	toupper@c,?_toupper
  4957  0021B0  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  4958  0021B4                     l1538:
  4959  0021B4  0012               	return		;funcret
  4960  0021B6                     __end_of_toupper:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _islower *****************
  4964 ;; Defined at:
  4965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  c               2    6[COMRAM] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2    6[COMRAM] int 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        6 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    4
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_toupper
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text10
  4994  002440                     __ptext10:
  4995                           	callstack 0
  4996  002440                     _islower:
  4997                           	callstack 21
  4998  002440  0E9F               	movlw	159
  4999  002442  6E09               	movwf	??_islower^0,c
  5000  002444  0EFF               	movlw	255
  5001  002446  6E0A               	movwf	(??_islower+1)^0,c
  5002  002448  C007  F00B         	movff	islower@c,??_islower+2
  5003  00244C  C008  F00C         	movff	islower@c+1,??_islower+3
  5004  002450  5009               	movf	??_islower^0,w,c
  5005  002452  260B               	addwf	(??_islower+2)^0,f,c
  5006  002454  500A               	movf	(??_islower+1)^0,w,c
  5007  002456  220C               	addwfc	(??_islower+3)^0,f,c
  5008  002458  500C               	movf	(??_islower+3)^0,w,c
  5009  00245A  E10A               	bnz	u1780
  5010  00245C  0E1A               	movlw	26
  5011  00245E  5C0B               	subwf	(??_islower+2)^0,w,c
  5012  002460  A0D8               	btfss	status,0,c
  5013  002462  EF35  F012         	goto	u1781
  5014  002466  EF38  F012         	goto	u1780
  5015  00246A                     u1781:
  5016  00246A  0E01               	movlw	1
  5017  00246C  EF39  F012         	goto	u1790
  5018  002470                     u1780:
  5019  002470  0E00               	movlw	0
  5020  002472                     u1790:
  5021  002472  6E07               	movwf	?_islower^0,c
  5022  002474  6A08               	clrf	(?_islower+1)^0,c
  5023  002476  0012               	return		;funcret
  5024  002478                     __end_of_islower:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _isupper *****************
  5028 ;; Defined at:
  5029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  c               2    6[COMRAM] int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  2    6[COMRAM] int 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;Total ram usage:        6 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    4
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_xtoa
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text11
  5058  002478                     __ptext11:
  5059                           	callstack 0
  5060  002478                     _isupper:
  5061                           	callstack 22
  5062  002478  0EBF               	movlw	191
  5063  00247A  6E09               	movwf	??_isupper^0,c
  5064  00247C  0EFF               	movlw	255
  5065  00247E  6E0A               	movwf	(??_isupper+1)^0,c
  5066  002480  C007  F00B         	movff	isupper@c,??_isupper+2
  5067  002484  C008  F00C         	movff	isupper@c+1,??_isupper+3
  5068  002488  5009               	movf	??_isupper^0,w,c
  5069  00248A  260B               	addwf	(??_isupper+2)^0,f,c
  5070  00248C  500A               	movf	(??_isupper+1)^0,w,c
  5071  00248E  220C               	addwfc	(??_isupper+3)^0,f,c
  5072  002490  500C               	movf	(??_isupper+3)^0,w,c
  5073  002492  E10A               	bnz	u2050
  5074  002494  0E1A               	movlw	26
  5075  002496  5C0B               	subwf	(??_isupper+2)^0,w,c
  5076  002498  A0D8               	btfss	status,0,c
  5077  00249A  EF51  F012         	goto	u2051
  5078  00249E  EF54  F012         	goto	u2050
  5079  0024A2                     u2051:
  5080  0024A2  0E01               	movlw	1
  5081  0024A4  EF55  F012         	goto	u2060
  5082  0024A8                     u2050:
  5083  0024A8  0E00               	movlw	0
  5084  0024AA                     u2060:
  5085  0024AA  6E07               	movwf	?_isupper^0,c
  5086  0024AC  6A08               	clrf	(?_isupper+1)^0,c
  5087  0024AE  0012               	return		;funcret
  5088  0024B0                     __end_of_isupper:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _isalpha *****************
  5092 ;; Defined at:
  5093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  c               2    6[COMRAM] int 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  2    6[COMRAM] int 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;Total ram usage:        6 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    4
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_xtoa
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text12
  5122  002404                     __ptext12:
  5123                           	callstack 0
  5124  002404                     _isalpha:
  5125                           	callstack 22
  5126  002404  0E9F               	movlw	159
  5127  002406  6E09               	movwf	??_isalpha^0,c
  5128  002408  0EFF               	movlw	255
  5129  00240A  6E0A               	movwf	(??_isalpha+1)^0,c
  5130  00240C  0E20               	movlw	32
  5131  00240E  1007               	iorwf	isalpha@c^0,w,c
  5132  002410  6E0B               	movwf	(??_isalpha+2)^0,c
  5133  002412  0E00               	movlw	0
  5134  002414  1008               	iorwf	(isalpha@c+1)^0,w,c
  5135  002416  6E0C               	movwf	(??_isalpha+3)^0,c
  5136  002418  5009               	movf	??_isalpha^0,w,c
  5137  00241A  260B               	addwf	(??_isalpha+2)^0,f,c
  5138  00241C  500A               	movf	(??_isalpha+1)^0,w,c
  5139  00241E  220C               	addwfc	(??_isalpha+3)^0,f,c
  5140  002420  500C               	movf	(??_isalpha+3)^0,w,c
  5141  002422  E10A               	bnz	u2070
  5142  002424  0E1A               	movlw	26
  5143  002426  5C0B               	subwf	(??_isalpha+2)^0,w,c
  5144  002428  A0D8               	btfss	status,0,c
  5145  00242A  EF19  F012         	goto	u2071
  5146  00242E  EF1C  F012         	goto	u2070
  5147  002432                     u2071:
  5148  002432  0E01               	movlw	1
  5149  002434  EF1D  F012         	goto	u2080
  5150  002438                     u2070:
  5151  002438  0E00               	movlw	0
  5152  00243A                     u2080:
  5153  00243A  6E07               	movwf	?_isalpha^0,c
  5154  00243C  6A08               	clrf	(?_isalpha+1)^0,c
  5155  00243E  0012               	return		;funcret
  5156  002440                     __end_of_isalpha:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function _utoa *****************
  5160 ;; Defined at:
  5161 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5164 ;;		 -> NULL(0), 
  5165 ;;  d               8   37[COMRAM] unsigned long long 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  n               8   57[COMRAM] unsigned long long 
  5168 ;;  i               2   65[COMRAM] int 
  5169 ;;  w               2   55[COMRAM] int 
  5170 ;;  p               2   53[COMRAM] int 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2   35[COMRAM] int 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:       32 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    9
  5187 ;; This function calls:
  5188 ;;		___lodiv
  5189 ;;		___lomod
  5190 ;;		_pad
  5191 ;; This function is called by:
  5192 ;;		_vfpfcnvrt
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text13
  5197  00130A                     __ptext13:
  5198                           	callstack 0
  5199  00130A                     _utoa:
  5200                           	callstack 18
  5201  00130A                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5203  00130A  BE54               	btfsc	(_prec+1)^0,7,c
  5204  00130C  EF8A  F009         	goto	u2411
  5205  001310  EF8C  F009         	goto	u2410
  5206  001314                     u2411:
  5207  001314  EF8D  F009         	goto	l3231
  5208  001318                     u2410:
  5209  001318                     
  5210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  5211  001318  9255               	bcf	_flags^0,1,c
  5212  00131A                     l3231:
  5213                           
  5214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  5215  00131A  BE54               	btfsc	(_prec+1)^0,7,c
  5216  00131C  EF9A  F009         	goto	u2420
  5217  001320  5054               	movf	(_prec+1)^0,w,c
  5218  001322  E106               	bnz	u2421
  5219  001324  0453               	decf	_prec^0,w,c
  5220  001326  B0D8               	btfsc	status,0,c
  5221  001328  EF98  F009         	goto	u2421
  5222  00132C  EF9A  F009         	goto	u2420
  5223  001330                     u2421:
  5224  001330  EFA0  F009         	goto	l1356
  5225  001334                     u2420:
  5226  001334  0E00               	movlw	0
  5227  001336  6E37               	movwf	(utoa@p+1)^0,c
  5228  001338  0E01               	movlw	1
  5229  00133A  6E36               	movwf	utoa@p^0,c
  5230  00133C  EFA4  F009         	goto	l1358
  5231  001340                     l1356:
  5232  001340  C053  F036         	movff	_prec,utoa@p
  5233  001344  C054  F037         	movff	_prec+1,utoa@p+1
  5234  001348                     l1358:
  5235                           
  5236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  5237  001348  C07A  F038         	movff	_width,utoa@w
  5238  00134C  C07B  F039         	movff	_width+1,utoa@w+1
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  5241  001350  C026  F03A         	movff	utoa@d,utoa@n
  5242  001354  C027  F03B         	movff	utoa@d+1,utoa@n+1
  5243  001358  C028  F03C         	movff	utoa@d+2,utoa@n+2
  5244  00135C  C029  F03D         	movff	utoa@d+3,utoa@n+3
  5245  001360  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  5246  001364  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  5247  001368  C02C  F040         	movff	utoa@d+6,utoa@n+6
  5248  00136C  C02D  F041         	movff	utoa@d+7,utoa@n+7
  5249  001370                     
  5250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  5251  001370  0E00               	movlw	0
  5252  001372  6E43               	movwf	(utoa@i+1)^0,c
  5253  001374  0E1F               	movlw	31
  5254  001376  6E42               	movwf	utoa@i^0,c
  5255  001378                     
  5256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  5257  001378  0E00               	movlw	0
  5258  00137A  0101               	movlb	1	; () banked
  5259  00137C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5262  00137E  EF37  F00A         	goto	l3249
  5263  001382                     l3239:
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  5266  001382  0642               	decf	utoa@i^0,f,c
  5267  001384  A0D8               	btfss	status,0,c
  5268  001386  0643               	decf	(utoa@i+1)^0,f,c
  5269  001388                     
  5270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  5271  001388  0E00               	movlw	low _dbuf
  5272  00138A  2442               	addwf	utoa@i^0,w,c
  5273  00138C  6ED9               	movwf	fsr2l,c
  5274  00138E  0E01               	movlw	high _dbuf
  5275  001390  2043               	addwfc	(utoa@i+1)^0,w,c
  5276  001392  6EDA               	movwf	fsr2h,c
  5277  001394  C03A  F007         	movff	utoa@n,___lomod@dividend
  5278  001398  C03B  F008         	movff	utoa@n+1,___lomod@dividend+1
  5279  00139C  C03C  F009         	movff	utoa@n+2,___lomod@dividend+2
  5280  0013A0  C03D  F00A         	movff	utoa@n+3,___lomod@dividend+3
  5281  0013A4  C03E  F00B         	movff	utoa@n+4,___lomod@dividend+4
  5282  0013A8  C03F  F00C         	movff	utoa@n+5,___lomod@dividend+5
  5283  0013AC  C040  F00D         	movff	utoa@n+6,___lomod@dividend+6
  5284  0013B0  C041  F00E         	movff	utoa@n+7,___lomod@dividend+7
  5285  0013B4  0E0A               	movlw	10
  5286  0013B6  6E0F               	movwf	___lomod@divisor^0,c
  5287  0013B8  0E00               	movlw	0
  5288  0013BA  6E10               	movwf	(___lomod@divisor+1)^0,c
  5289  0013BC  0E00               	movlw	0
  5290  0013BE  6E11               	movwf	(___lomod@divisor+2)^0,c
  5291  0013C0  0E00               	movlw	0
  5292  0013C2  6E12               	movwf	(___lomod@divisor+3)^0,c
  5293  0013C4  0E00               	movlw	0
  5294  0013C6  6E13               	movwf	(___lomod@divisor+4)^0,c
  5295  0013C8  0E00               	movlw	0
  5296  0013CA  6E14               	movwf	(___lomod@divisor+5)^0,c
  5297  0013CC  0E00               	movlw	0
  5298  0013CE  6E15               	movwf	(___lomod@divisor+6)^0,c
  5299  0013D0  0E00               	movlw	0
  5300  0013D2  6E16               	movwf	(___lomod@divisor+7)^0,c
  5301  0013D4  EC75  F00E         	call	___lomod	;wreg free
  5302  0013D8  C007  F02E         	movff	?___lomod,??_utoa
  5303  0013DC  C008  F02F         	movff	?___lomod+1,??_utoa+1
  5304  0013E0  C009  F030         	movff	?___lomod+2,??_utoa+2
  5305  0013E4  C00A  F031         	movff	?___lomod+3,??_utoa+3
  5306  0013E8  C00B  F032         	movff	?___lomod+4,??_utoa+4
  5307  0013EC  C00C  F033         	movff	?___lomod+5,??_utoa+5
  5308  0013F0  C00D  F034         	movff	?___lomod+6,??_utoa+6
  5309  0013F4  C00E  F035         	movff	?___lomod+7,??_utoa+7
  5310  0013F8  502E               	movf	??_utoa^0,w,c
  5311  0013FA  0F30               	addlw	48
  5312  0013FC  6EDF               	movwf	indf2,c
  5313  0013FE                     
  5314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  5315  0013FE  0636               	decf	utoa@p^0,f,c
  5316  001400  A0D8               	btfss	status,0,c
  5317  001402  0637               	decf	(utoa@p+1)^0,f,c
  5318  001404                     
  5319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  5320  001404  0638               	decf	utoa@w^0,f,c
  5321  001406  A0D8               	btfss	status,0,c
  5322  001408  0639               	decf	(utoa@w+1)^0,f,c
  5323  00140A                     
  5324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  5325  00140A  C03A  F007         	movff	utoa@n,___lodiv@dividend
  5326  00140E  C03B  F008         	movff	utoa@n+1,___lodiv@dividend+1
  5327  001412  C03C  F009         	movff	utoa@n+2,___lodiv@dividend+2
  5328  001416  C03D  F00A         	movff	utoa@n+3,___lodiv@dividend+3
  5329  00141A  C03E  F00B         	movff	utoa@n+4,___lodiv@dividend+4
  5330  00141E  C03F  F00C         	movff	utoa@n+5,___lodiv@dividend+5
  5331  001422  C040  F00D         	movff	utoa@n+6,___lodiv@dividend+6
  5332  001426  C041  F00E         	movff	utoa@n+7,___lodiv@dividend+7
  5333  00142A  0E0A               	movlw	10
  5334  00142C  6E0F               	movwf	___lodiv@divisor^0,c
  5335  00142E  0E00               	movlw	0
  5336  001430  6E10               	movwf	(___lodiv@divisor+1)^0,c
  5337  001432  0E00               	movlw	0
  5338  001434  6E11               	movwf	(___lodiv@divisor+2)^0,c
  5339  001436  0E00               	movlw	0
  5340  001438  6E12               	movwf	(___lodiv@divisor+3)^0,c
  5341  00143A  0E00               	movlw	0
  5342  00143C  6E13               	movwf	(___lodiv@divisor+4)^0,c
  5343  00143E  0E00               	movlw	0
  5344  001440  6E14               	movwf	(___lodiv@divisor+5)^0,c
  5345  001442  0E00               	movlw	0
  5346  001444  6E15               	movwf	(___lodiv@divisor+6)^0,c
  5347  001446  0E00               	movlw	0
  5348  001448  6E16               	movwf	(___lodiv@divisor+7)^0,c
  5349  00144A  EC89  F00D         	call	___lodiv	;wreg free
  5350  00144E  C007  F03A         	movff	?___lodiv,utoa@n
  5351  001452  C008  F03B         	movff	?___lodiv+1,utoa@n+1
  5352  001456  C009  F03C         	movff	?___lodiv+2,utoa@n+2
  5353  00145A  C00A  F03D         	movff	?___lodiv+3,utoa@n+3
  5354  00145E  C00B  F03E         	movff	?___lodiv+4,utoa@n+4
  5355  001462  C00C  F03F         	movff	?___lodiv+5,utoa@n+5
  5356  001466  C00D  F040         	movff	?___lodiv+6,utoa@n+6
  5357  00146A  C00E  F041         	movff	?___lodiv+7,utoa@n+7
  5358  00146E                     l3249:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5361  00146E  5042               	movf	utoa@i^0,w,c
  5362  001470  1043               	iorwf	(utoa@i+1)^0,w,c
  5363  001472  B4D8               	btfsc	status,2,c
  5364  001474  EF3E  F00A         	goto	u2431
  5365  001478  EF40  F00A         	goto	u2430
  5366  00147C                     u2431:
  5367  00147C  EF70  F00A         	goto	l3259
  5368  001480                     u2430:
  5369  001480  503A               	movf	utoa@n^0,w,c
  5370  001482  103B               	iorwf	(utoa@n+1)^0,w,c
  5371  001484  103C               	iorwf	(utoa@n+2)^0,w,c
  5372  001486  103D               	iorwf	(utoa@n+3)^0,w,c
  5373  001488  103E               	iorwf	(utoa@n+4)^0,w,c
  5374  00148A  103F               	iorwf	(utoa@n+5)^0,w,c
  5375  00148C  1040               	iorwf	(utoa@n+6)^0,w,c
  5376  00148E  1041               	iorwf	(utoa@n+7)^0,w,c
  5377  001490  A4D8               	btfss	status,2,c
  5378  001492  EF4D  F00A         	goto	u2441
  5379  001496  EF4F  F00A         	goto	u2440
  5380  00149A                     u2441:
  5381  00149A  EFC1  F009         	goto	l3239
  5382  00149E                     u2440:
  5383  00149E  BE37               	btfsc	(utoa@p+1)^0,7,c
  5384  0014A0  EF5C  F00A         	goto	u2450
  5385  0014A4  5037               	movf	(utoa@p+1)^0,w,c
  5386  0014A6  E106               	bnz	u2451
  5387  0014A8  0436               	decf	utoa@p^0,w,c
  5388  0014AA  B0D8               	btfsc	status,0,c
  5389  0014AC  EF5A  F00A         	goto	u2451
  5390  0014B0  EF5C  F00A         	goto	u2450
  5391  0014B4                     u2451:
  5392  0014B4  EFC1  F009         	goto	l3239
  5393  0014B8                     u2450:
  5394  0014B8  BE39               	btfsc	(utoa@w+1)^0,7,c
  5395  0014BA  EF67  F00A         	goto	u2461
  5396  0014BE  5039               	movf	(utoa@w+1)^0,w,c
  5397  0014C0  E108               	bnz	u2460
  5398  0014C2  0438               	decf	utoa@w^0,w,c
  5399  0014C4  A0D8               	btfss	status,0,c
  5400  0014C6  EF67  F00A         	goto	u2461
  5401  0014CA  EF69  F00A         	goto	u2460
  5402  0014CE                     u2461:
  5403  0014CE  EF70  F00A         	goto	l3259
  5404  0014D2                     u2460:
  5405  0014D2  B255               	btfsc	_flags^0,1,c
  5406  0014D4  EF6E  F00A         	goto	u2471
  5407  0014D8  EF70  F00A         	goto	u2470
  5408  0014DC                     u2471:
  5409  0014DC  EFC1  F009         	goto	l3239
  5410  0014E0                     u2470:
  5411  0014E0                     l3259:
  5412                           
  5413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  5414  0014E0  C024  F019         	movff	utoa@fp,pad@fp
  5415  0014E4  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  5416  0014E8  0E00               	movlw	low _dbuf
  5417  0014EA  2442               	addwf	utoa@i^0,w,c
  5418  0014EC  6E1B               	movwf	pad@buf^0,c
  5419  0014EE  0E01               	movlw	high _dbuf
  5420  0014F0  2043               	addwfc	(utoa@i+1)^0,w,c
  5421  0014F2  6E1C               	movwf	(pad@buf+1)^0,c
  5422  0014F4  C038  F01D         	movff	utoa@w,pad@p
  5423  0014F8  C039  F01E         	movff	utoa@w+1,pad@p+1
  5424  0014FC  ECDD  F00E         	call	_pad	;wreg free
  5425  001500  C019  F024         	movff	?_pad,?_utoa
  5426  001504  C01A  F025         	movff	?_pad+1,?_utoa+1
  5427  001508  0012               	return		;funcret
  5428  00150A                     __end_of_utoa:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function ___lomod *****************
  5432 ;; Defined at:
  5433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  dividend        8    6[COMRAM] unsigned long long 
  5436 ;;  divisor         8   14[COMRAM] unsigned long long 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  counter         1   22[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  8    6[COMRAM] unsigned long long 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5448 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;Total ram usage:       17 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    4
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_utoa
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text14
  5463  001CEA                     __ptext14:
  5464                           	callstack 0
  5465  001CEA                     ___lomod:
  5466                           	callstack 22
  5467  001CEA  500F               	movf	___lomod@divisor^0,w,c
  5468  001CEC  1010               	iorwf	(___lomod@divisor+1)^0,w,c
  5469  001CEE  1011               	iorwf	(___lomod@divisor+2)^0,w,c
  5470  001CF0  1012               	iorwf	(___lomod@divisor+3)^0,w,c
  5471  001CF2  1013               	iorwf	(___lomod@divisor+4)^0,w,c
  5472  001CF4  1014               	iorwf	(___lomod@divisor+5)^0,w,c
  5473  001CF6  1015               	iorwf	(___lomod@divisor+6)^0,w,c
  5474  001CF8  1016               	iorwf	(___lomod@divisor+7)^0,w,c
  5475  001CFA  B4D8               	btfsc	status,2,c
  5476  001CFC  EF82  F00E         	goto	u1971
  5477  001D00  EF84  F00E         	goto	u1970
  5478  001D04                     u1971:
  5479  001D04  EFCC  F00E         	goto	l1023
  5480  001D08                     u1970:
  5481  001D08  0E01               	movlw	1
  5482  001D0A  6E17               	movwf	___lomod@counter^0,c
  5483  001D0C  EF92  F00E         	goto	l3039
  5484  001D10                     l3037:
  5485  001D10  90D8               	bcf	status,0,c
  5486  001D12  360F               	rlcf	___lomod@divisor^0,f,c
  5487  001D14  3610               	rlcf	(___lomod@divisor+1)^0,f,c
  5488  001D16  3611               	rlcf	(___lomod@divisor+2)^0,f,c
  5489  001D18  3612               	rlcf	(___lomod@divisor+3)^0,f,c
  5490  001D1A  3613               	rlcf	(___lomod@divisor+4)^0,f,c
  5491  001D1C  3614               	rlcf	(___lomod@divisor+5)^0,f,c
  5492  001D1E  3615               	rlcf	(___lomod@divisor+6)^0,f,c
  5493  001D20  3616               	rlcf	(___lomod@divisor+7)^0,f,c
  5494  001D22  2A17               	incf	___lomod@counter^0,f,c
  5495  001D24                     l3039:
  5496  001D24  AE16               	btfss	(___lomod@divisor+7)^0,7,c
  5497  001D26  EF97  F00E         	goto	u1981
  5498  001D2A  EF99  F00E         	goto	u1980
  5499  001D2E                     u1981:
  5500  001D2E  EF88  F00E         	goto	l3037
  5501  001D32                     u1980:
  5502  001D32                     l3041:
  5503  001D32  500F               	movf	___lomod@divisor^0,w,c
  5504  001D34  5C07               	subwf	___lomod@dividend^0,w,c
  5505  001D36  5010               	movf	(___lomod@divisor+1)^0,w,c
  5506  001D38  5808               	subwfb	(___lomod@dividend+1)^0,w,c
  5507  001D3A  5011               	movf	(___lomod@divisor+2)^0,w,c
  5508  001D3C  5809               	subwfb	(___lomod@dividend+2)^0,w,c
  5509  001D3E  5012               	movf	(___lomod@divisor+3)^0,w,c
  5510  001D40  580A               	subwfb	(___lomod@dividend+3)^0,w,c
  5511  001D42  5013               	movf	(___lomod@divisor+4)^0,w,c
  5512  001D44  580B               	subwfb	(___lomod@dividend+4)^0,w,c
  5513  001D46  5014               	movf	(___lomod@divisor+5)^0,w,c
  5514  001D48  580C               	subwfb	(___lomod@dividend+5)^0,w,c
  5515  001D4A  5015               	movf	(___lomod@divisor+6)^0,w,c
  5516  001D4C  580D               	subwfb	(___lomod@dividend+6)^0,w,c
  5517  001D4E  5016               	movf	(___lomod@divisor+7)^0,w,c
  5518  001D50  580E               	subwfb	(___lomod@dividend+7)^0,w,c
  5519  001D52  A0D8               	btfss	status,0,c
  5520  001D54  EFAE  F00E         	goto	u1991
  5521  001D58  EFB0  F00E         	goto	u1990
  5522  001D5C                     u1991:
  5523  001D5C  EFC0  F00E         	goto	l3045
  5524  001D60                     u1990:
  5525  001D60  500F               	movf	___lomod@divisor^0,w,c
  5526  001D62  5E07               	subwf	___lomod@dividend^0,f,c
  5527  001D64  5010               	movf	(___lomod@divisor+1)^0,w,c
  5528  001D66  5A08               	subwfb	(___lomod@dividend+1)^0,f,c
  5529  001D68  5011               	movf	(___lomod@divisor+2)^0,w,c
  5530  001D6A  5A09               	subwfb	(___lomod@dividend+2)^0,f,c
  5531  001D6C  5012               	movf	(___lomod@divisor+3)^0,w,c
  5532  001D6E  5A0A               	subwfb	(___lomod@dividend+3)^0,f,c
  5533  001D70  5013               	movf	(___lomod@divisor+4)^0,w,c
  5534  001D72  5A0B               	subwfb	(___lomod@dividend+4)^0,f,c
  5535  001D74  5014               	movf	(___lomod@divisor+5)^0,w,c
  5536  001D76  5A0C               	subwfb	(___lomod@dividend+5)^0,f,c
  5537  001D78  5015               	movf	(___lomod@divisor+6)^0,w,c
  5538  001D7A  5A0D               	subwfb	(___lomod@dividend+6)^0,f,c
  5539  001D7C  5016               	movf	(___lomod@divisor+7)^0,w,c
  5540  001D7E  5A0E               	subwfb	(___lomod@dividend+7)^0,f,c
  5541  001D80                     l3045:
  5542  001D80  90D8               	bcf	status,0,c
  5543  001D82  3216               	rrcf	(___lomod@divisor+7)^0,f,c
  5544  001D84  3215               	rrcf	(___lomod@divisor+6)^0,f,c
  5545  001D86  3214               	rrcf	(___lomod@divisor+5)^0,f,c
  5546  001D88  3213               	rrcf	(___lomod@divisor+4)^0,f,c
  5547  001D8A  3212               	rrcf	(___lomod@divisor+3)^0,f,c
  5548  001D8C  3211               	rrcf	(___lomod@divisor+2)^0,f,c
  5549  001D8E  3210               	rrcf	(___lomod@divisor+1)^0,f,c
  5550  001D90  320F               	rrcf	___lomod@divisor^0,f,c
  5551  001D92  2E17               	decfsz	___lomod@counter^0,f,c
  5552  001D94  EF99  F00E         	goto	l3041
  5553  001D98                     l1023:
  5554  001D98  C007  F007         	movff	___lomod@dividend,?___lomod
  5555  001D9C  C008  F008         	movff	___lomod@dividend+1,?___lomod+1
  5556  001DA0  C009  F009         	movff	___lomod@dividend+2,?___lomod+2
  5557  001DA4  C00A  F00A         	movff	___lomod@dividend+3,?___lomod+3
  5558  001DA8  C00B  F00B         	movff	___lomod@dividend+4,?___lomod+4
  5559  001DAC  C00C  F00C         	movff	___lomod@dividend+5,?___lomod+5
  5560  001DB0  C00D  F00D         	movff	___lomod@dividend+6,?___lomod+6
  5561  001DB4  C00E  F00E         	movff	___lomod@dividend+7,?___lomod+7
  5562  001DB8  0012               	return		;funcret
  5563  001DBA                     __end_of___lomod:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function ___lodiv *****************
  5567 ;; Defined at:
  5568 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  dividend        8    6[COMRAM] unsigned long long 
  5571 ;;  divisor         8   14[COMRAM] unsigned long long 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  quotient        8   22[COMRAM] unsigned long long 
  5574 ;;  counter         1   30[COMRAM] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  8    6[COMRAM] unsigned long long 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:       25 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_utoa
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text15
  5599  001B12                     __ptext15:
  5600                           	callstack 0
  5601  001B12                     ___lodiv:
  5602                           	callstack 22
  5603  001B12  EE20  F017         	lfsr	2,___lodiv@quotient
  5604  001B16  0E07               	movlw	7
  5605  001B18                     u1931:
  5606  001B18  6ADE               	clrf	postinc2,c
  5607  001B1A  06E8               	decf	wreg,f,c
  5608  001B1C  E2FD               	bc	u1931
  5609  001B1E  500F               	movf	___lodiv@divisor^0,w,c
  5610  001B20  1010               	iorwf	(___lodiv@divisor+1)^0,w,c
  5611  001B22  1011               	iorwf	(___lodiv@divisor+2)^0,w,c
  5612  001B24  1012               	iorwf	(___lodiv@divisor+3)^0,w,c
  5613  001B26  1013               	iorwf	(___lodiv@divisor+4)^0,w,c
  5614  001B28  1014               	iorwf	(___lodiv@divisor+5)^0,w,c
  5615  001B2A  1015               	iorwf	(___lodiv@divisor+6)^0,w,c
  5616  001B2C  1016               	iorwf	(___lodiv@divisor+7)^0,w,c
  5617  001B2E  B4D8               	btfsc	status,2,c
  5618  001B30  EF9C  F00D         	goto	u1941
  5619  001B34  EF9E  F00D         	goto	u1940
  5620  001B38                     u1941:
  5621  001B38  EFF0  F00D         	goto	l1013
  5622  001B3C                     u1940:
  5623  001B3C  0E01               	movlw	1
  5624  001B3E  6E1F               	movwf	___lodiv@counter^0,c
  5625  001B40  EFAC  F00D         	goto	l3019
  5626  001B44                     l3017:
  5627  001B44  90D8               	bcf	status,0,c
  5628  001B46  360F               	rlcf	___lodiv@divisor^0,f,c
  5629  001B48  3610               	rlcf	(___lodiv@divisor+1)^0,f,c
  5630  001B4A  3611               	rlcf	(___lodiv@divisor+2)^0,f,c
  5631  001B4C  3612               	rlcf	(___lodiv@divisor+3)^0,f,c
  5632  001B4E  3613               	rlcf	(___lodiv@divisor+4)^0,f,c
  5633  001B50  3614               	rlcf	(___lodiv@divisor+5)^0,f,c
  5634  001B52  3615               	rlcf	(___lodiv@divisor+6)^0,f,c
  5635  001B54  3616               	rlcf	(___lodiv@divisor+7)^0,f,c
  5636  001B56  2A1F               	incf	___lodiv@counter^0,f,c
  5637  001B58                     l3019:
  5638  001B58  AE16               	btfss	(___lodiv@divisor+7)^0,7,c
  5639  001B5A  EFB1  F00D         	goto	u1951
  5640  001B5E  EFB3  F00D         	goto	u1950
  5641  001B62                     u1951:
  5642  001B62  EFA2  F00D         	goto	l3017
  5643  001B66                     u1950:
  5644  001B66                     l3021:
  5645  001B66  90D8               	bcf	status,0,c
  5646  001B68  3617               	rlcf	___lodiv@quotient^0,f,c
  5647  001B6A  3618               	rlcf	(___lodiv@quotient+1)^0,f,c
  5648  001B6C  3619               	rlcf	(___lodiv@quotient+2)^0,f,c
  5649  001B6E  361A               	rlcf	(___lodiv@quotient+3)^0,f,c
  5650  001B70  361B               	rlcf	(___lodiv@quotient+4)^0,f,c
  5651  001B72  361C               	rlcf	(___lodiv@quotient+5)^0,f,c
  5652  001B74  361D               	rlcf	(___lodiv@quotient+6)^0,f,c
  5653  001B76  361E               	rlcf	(___lodiv@quotient+7)^0,f,c
  5654  001B78  500F               	movf	___lodiv@divisor^0,w,c
  5655  001B7A  5C07               	subwf	___lodiv@dividend^0,w,c
  5656  001B7C  5010               	movf	(___lodiv@divisor+1)^0,w,c
  5657  001B7E  5808               	subwfb	(___lodiv@dividend+1)^0,w,c
  5658  001B80  5011               	movf	(___lodiv@divisor+2)^0,w,c
  5659  001B82  5809               	subwfb	(___lodiv@dividend+2)^0,w,c
  5660  001B84  5012               	movf	(___lodiv@divisor+3)^0,w,c
  5661  001B86  580A               	subwfb	(___lodiv@dividend+3)^0,w,c
  5662  001B88  5013               	movf	(___lodiv@divisor+4)^0,w,c
  5663  001B8A  580B               	subwfb	(___lodiv@dividend+4)^0,w,c
  5664  001B8C  5014               	movf	(___lodiv@divisor+5)^0,w,c
  5665  001B8E  580C               	subwfb	(___lodiv@dividend+5)^0,w,c
  5666  001B90  5015               	movf	(___lodiv@divisor+6)^0,w,c
  5667  001B92  580D               	subwfb	(___lodiv@dividend+6)^0,w,c
  5668  001B94  5016               	movf	(___lodiv@divisor+7)^0,w,c
  5669  001B96  580E               	subwfb	(___lodiv@dividend+7)^0,w,c
  5670  001B98  A0D8               	btfss	status,0,c
  5671  001B9A  EFD1  F00D         	goto	u1961
  5672  001B9E  EFD3  F00D         	goto	u1960
  5673  001BA2                     u1961:
  5674  001BA2  EFE4  F00D         	goto	l3029
  5675  001BA6                     u1960:
  5676  001BA6  500F               	movf	___lodiv@divisor^0,w,c
  5677  001BA8  5E07               	subwf	___lodiv@dividend^0,f,c
  5678  001BAA  5010               	movf	(___lodiv@divisor+1)^0,w,c
  5679  001BAC  5A08               	subwfb	(___lodiv@dividend+1)^0,f,c
  5680  001BAE  5011               	movf	(___lodiv@divisor+2)^0,w,c
  5681  001BB0  5A09               	subwfb	(___lodiv@dividend+2)^0,f,c
  5682  001BB2  5012               	movf	(___lodiv@divisor+3)^0,w,c
  5683  001BB4  5A0A               	subwfb	(___lodiv@dividend+3)^0,f,c
  5684  001BB6  5013               	movf	(___lodiv@divisor+4)^0,w,c
  5685  001BB8  5A0B               	subwfb	(___lodiv@dividend+4)^0,f,c
  5686  001BBA  5014               	movf	(___lodiv@divisor+5)^0,w,c
  5687  001BBC  5A0C               	subwfb	(___lodiv@dividend+5)^0,f,c
  5688  001BBE  5015               	movf	(___lodiv@divisor+6)^0,w,c
  5689  001BC0  5A0D               	subwfb	(___lodiv@dividend+6)^0,f,c
  5690  001BC2  5016               	movf	(___lodiv@divisor+7)^0,w,c
  5691  001BC4  5A0E               	subwfb	(___lodiv@dividend+7)^0,f,c
  5692  001BC6  8017               	bsf	___lodiv@quotient^0,0,c
  5693  001BC8                     l3029:
  5694  001BC8  90D8               	bcf	status,0,c
  5695  001BCA  3216               	rrcf	(___lodiv@divisor+7)^0,f,c
  5696  001BCC  3215               	rrcf	(___lodiv@divisor+6)^0,f,c
  5697  001BCE  3214               	rrcf	(___lodiv@divisor+5)^0,f,c
  5698  001BD0  3213               	rrcf	(___lodiv@divisor+4)^0,f,c
  5699  001BD2  3212               	rrcf	(___lodiv@divisor+3)^0,f,c
  5700  001BD4  3211               	rrcf	(___lodiv@divisor+2)^0,f,c
  5701  001BD6  3210               	rrcf	(___lodiv@divisor+1)^0,f,c
  5702  001BD8  320F               	rrcf	___lodiv@divisor^0,f,c
  5703  001BDA  2E1F               	decfsz	___lodiv@counter^0,f,c
  5704  001BDC  EFB3  F00D         	goto	l3021
  5705  001BE0                     l1013:
  5706  001BE0  C017  F007         	movff	___lodiv@quotient,?___lodiv
  5707  001BE4  C018  F008         	movff	___lodiv@quotient+1,?___lodiv+1
  5708  001BE8  C019  F009         	movff	___lodiv@quotient+2,?___lodiv+2
  5709  001BEC  C01A  F00A         	movff	___lodiv@quotient+3,?___lodiv+3
  5710  001BF0  C01B  F00B         	movff	___lodiv@quotient+4,?___lodiv+4
  5711  001BF4  C01C  F00C         	movff	___lodiv@quotient+5,?___lodiv+5
  5712  001BF8  C01D  F00D         	movff	___lodiv@quotient+6,?___lodiv+6
  5713  001BFC  C01E  F00E         	movff	___lodiv@quotient+7,?___lodiv+7
  5714  001C00  0012               	return		;funcret
  5715  001C02                     __end_of___lodiv:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _stoa *****************
  5719 ;; Defined at:
  5720 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5723 ;;		 -> NULL(0), 
  5724 ;;  s               2   19[COMRAM] PTR unsigned char 
  5725 ;;		 -> ?_printf(2), IRreceiveBuffer(25), IRtransmitBuffer(25), 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  nuls            7   22[COMRAM] unsigned char [7]
  5728 ;;  l               2   37[COMRAM] int 
  5729 ;;  p               2   35[COMRAM] int 
  5730 ;;  cp              2   33[COMRAM] PTR unsigned char 
  5731 ;;		 -> stoa@nuls(7), ?_printf(2), IRreceiveBuffer(25), IRtransmitBuffer(25), 
  5732 ;;  w               2   31[COMRAM] int 
  5733 ;;  i               2   29[COMRAM] int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  2   17[COMRAM] int 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;Total ram usage:       22 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    7
  5750 ;; This function calls:
  5751 ;;		_fputc
  5752 ;;		_strlen
  5753 ;; This function is called by:
  5754 ;;		_vfpfcnvrt
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text16
  5759  00182C                     __ptext16:
  5760                           	callstack 0
  5761  00182C                     _stoa:
  5762                           	callstack 20
  5763  00182C                     
  5764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  5765  00182C  EE20  F0F1         	lfsr	2,stoa@F1144
  5766  001830  EE10  F017         	lfsr	1,stoa@nuls
  5767  001834  0E06               	movlw	6
  5768  001836                     u2321:
  5769  001836  CFDB FFE3          	movff	plusw2,plusw1
  5770  00183A  06E8               	decf	wreg,f,c
  5771  00183C  E2FC               	bc	u2321
  5772  00183E                     
  5773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  5774  00183E  C014  F022         	movff	stoa@s,stoa@cp
  5775  001842  C015  F023         	movff	stoa@s+1,stoa@cp+1
  5776  001846                     
  5777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  5778  001846  5022               	movf	stoa@cp^0,w,c
  5779  001848  1023               	iorwf	(stoa@cp+1)^0,w,c
  5780  00184A  A4D8               	btfss	status,2,c
  5781  00184C  EF2A  F00C         	goto	u2331
  5782  001850  EF2C  F00C         	goto	u2330
  5783  001854                     u2331:
  5784  001854  EF30  F00C         	goto	l3193
  5785  001858                     u2330:
  5786  001858                     
  5787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  5788  001858  0E17               	movlw	low stoa@nuls
  5789  00185A  6E22               	movwf	stoa@cp^0,c
  5790  00185C  0E00               	movlw	high stoa@nuls
  5791  00185E  6E23               	movwf	(stoa@cp+1)^0,c
  5792  001860                     l3193:
  5793                           
  5794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  5795  001860  C022  F007         	movff	stoa@cp,strlen@s
  5796  001864  C023  F008         	movff	stoa@cp+1,strlen@s+1
  5797  001868  EC74  F012         	call	_strlen	;wreg free
  5798  00186C  C007  F026         	movff	?_strlen,stoa@l
  5799  001870  C008  F027         	movff	?_strlen+1,stoa@l+1
  5800  001874                     
  5801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  5802  001874  C053  F024         	movff	_prec,stoa@p
  5803  001878  C054  F025         	movff	_prec+1,stoa@p+1
  5804  00187C                     
  5805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5806  00187C  BE25               	btfsc	(stoa@p+1)^0,7,c
  5807  00187E  EF43  F00C         	goto	u2341
  5808  001882  EF45  F00C         	goto	u2340
  5809  001886                     u2341:
  5810  001886  EF5A  F00C         	goto	l1337
  5811  00188A                     u2340:
  5812  00188A  5026               	movf	stoa@l^0,w,c
  5813  00188C  5C24               	subwf	stoa@p^0,w,c
  5814  00188E  5025               	movf	(stoa@p+1)^0,w,c
  5815  001890  0A80               	xorlw	128
  5816  001892  6E16               	movwf	??_stoa^0,c
  5817  001894  5027               	movf	(stoa@l+1)^0,w,c
  5818  001896  0A80               	xorlw	128
  5819  001898  5816               	subwfb	??_stoa^0,w,c
  5820  00189A  A0D8               	btfss	status,0,c
  5821  00189C  EF52  F00C         	goto	u2351
  5822  0018A0  EF54  F00C         	goto	u2350
  5823  0018A4                     u2351:
  5824  0018A4  EF56  F00C         	goto	l1335
  5825  0018A8                     u2350:
  5826  0018A8  EF5A  F00C         	goto	l1337
  5827  0018AC                     l1335:
  5828  0018AC  C024  F026         	movff	stoa@p,stoa@l
  5829  0018B0  C025  F027         	movff	stoa@p+1,stoa@l+1
  5830  0018B4                     l1337:
  5831                           
  5832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  5833  0018B4  C026  F024         	movff	stoa@l,stoa@p
  5834  0018B8  C027  F025         	movff	stoa@l+1,stoa@p+1
  5835                           
  5836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  5837  0018BC  C07A  F020         	movff	_width,stoa@w
  5838  0018C0  C07B  F021         	movff	_width+1,stoa@w+1
  5839                           
  5840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  5841  0018C4  B055               	btfsc	_flags^0,0,c
  5842  0018C6  EF67  F00C         	goto	u2361
  5843  0018CA  EF69  F00C         	goto	u2360
  5844  0018CE                     u2361:
  5845  0018CE  EF86  F00C         	goto	l3209
  5846  0018D2                     u2360:
  5847  0018D2  EF77  F00C         	goto	l3207
  5848  0018D6                     l3203:
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  5851  0018D6  0E00               	movlw	0
  5852  0018D8  6E0A               	movwf	(fputc@c+1)^0,c
  5853  0018DA  0E20               	movlw	32
  5854  0018DC  6E09               	movwf	fputc@c^0,c
  5855  0018DE  C012  F00B         	movff	stoa@fp,fputc@fp
  5856  0018E2  C013  F00C         	movff	stoa@fp+1,fputc@fp+1
  5857  0018E6  ECF4  F00F         	call	_fputc	;wreg free
  5858  0018EA                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  5860  0018EA  4A26               	infsnz	stoa@l^0,f,c
  5861  0018EC  2A27               	incf	(stoa@l+1)^0,f,c
  5862  0018EE                     l3207:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  5865  0018EE  5020               	movf	stoa@w^0,w,c
  5866  0018F0  5C26               	subwf	stoa@l^0,w,c
  5867  0018F2  5027               	movf	(stoa@l+1)^0,w,c
  5868  0018F4  0A80               	xorlw	128
  5869  0018F6  6E16               	movwf	??_stoa^0,c
  5870  0018F8  5021               	movf	(stoa@w+1)^0,w,c
  5871  0018FA  0A80               	xorlw	128
  5872  0018FC  5816               	subwfb	??_stoa^0,w,c
  5873  0018FE  A0D8               	btfss	status,0,c
  5874  001900  EF84  F00C         	goto	u2371
  5875  001904  EF86  F00C         	goto	u2370
  5876  001908                     u2371:
  5877  001908  EF6B  F00C         	goto	l3203
  5878  00190C                     u2370:
  5879  00190C                     l3209:
  5880                           
  5881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  5882  00190C  0E00               	movlw	0
  5883  00190E  6E1F               	movwf	(stoa@i+1)^0,c
  5884  001910  0E00               	movlw	0
  5885  001912  6E1E               	movwf	stoa@i^0,c
  5886                           
  5887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  5888  001914  EF9F  F00C         	goto	l3217
  5889  001918                     l3211:
  5890                           
  5891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  5892  001918  C022  FFD9         	movff	stoa@cp,fsr2l
  5893  00191C  C023  FFDA         	movff	stoa@cp+1,fsr2h
  5894  001920  50DF               	movf	indf2,w,c
  5895  001922  6E16               	movwf	??_stoa^0,c
  5896  001924  5016               	movf	??_stoa^0,w,c
  5897  001926  6E09               	movwf	fputc@c^0,c
  5898  001928  6A0A               	clrf	(fputc@c+1)^0,c
  5899  00192A  C012  F00B         	movff	stoa@fp,fputc@fp
  5900  00192E  C013  F00C         	movff	stoa@fp+1,fputc@fp+1
  5901  001932  ECF4  F00F         	call	_fputc	;wreg free
  5902  001936                     
  5903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  5904  001936  4A22               	infsnz	stoa@cp^0,f,c
  5905  001938  2A23               	incf	(stoa@cp+1)^0,f,c
  5906  00193A                     
  5907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  5908  00193A  4A1E               	infsnz	stoa@i^0,f,c
  5909  00193C  2A1F               	incf	(stoa@i+1)^0,f,c
  5910  00193E                     l3217:
  5911                           
  5912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  5913  00193E  5024               	movf	stoa@p^0,w,c
  5914  001940  5C1E               	subwf	stoa@i^0,w,c
  5915  001942  501F               	movf	(stoa@i+1)^0,w,c
  5916  001944  0A80               	xorlw	128
  5917  001946  6E16               	movwf	??_stoa^0,c
  5918  001948  5025               	movf	(stoa@p+1)^0,w,c
  5919  00194A  0A80               	xorlw	128
  5920  00194C  5816               	subwfb	??_stoa^0,w,c
  5921  00194E  A0D8               	btfss	status,0,c
  5922  001950  EFAC  F00C         	goto	u2381
  5923  001954  EFAE  F00C         	goto	u2380
  5924  001958                     u2381:
  5925  001958  EF8C  F00C         	goto	l3211
  5926  00195C                     u2380:
  5927  00195C                     
  5928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  5929  00195C  A055               	btfss	_flags^0,0,c
  5930  00195E  EFB3  F00C         	goto	u2391
  5931  001962  EFB5  F00C         	goto	u2390
  5932  001966                     u2391:
  5933  001966  EFD2  F00C         	goto	l1347
  5934  00196A                     u2390:
  5935  00196A  EFC3  F00C         	goto	l3225
  5936  00196E                     l3221:
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  5939  00196E  0E00               	movlw	0
  5940  001970  6E0A               	movwf	(fputc@c+1)^0,c
  5941  001972  0E20               	movlw	32
  5942  001974  6E09               	movwf	fputc@c^0,c
  5943  001976  C012  F00B         	movff	stoa@fp,fputc@fp
  5944  00197A  C013  F00C         	movff	stoa@fp+1,fputc@fp+1
  5945  00197E  ECF4  F00F         	call	_fputc	;wreg free
  5946  001982                     
  5947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  5948  001982  4A26               	infsnz	stoa@l^0,f,c
  5949  001984  2A27               	incf	(stoa@l+1)^0,f,c
  5950  001986                     l3225:
  5951                           
  5952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  5953  001986  5020               	movf	stoa@w^0,w,c
  5954  001988  5C26               	subwf	stoa@l^0,w,c
  5955  00198A  5027               	movf	(stoa@l+1)^0,w,c
  5956  00198C  0A80               	xorlw	128
  5957  00198E  6E16               	movwf	??_stoa^0,c
  5958  001990  5021               	movf	(stoa@w+1)^0,w,c
  5959  001992  0A80               	xorlw	128
  5960  001994  5816               	subwfb	??_stoa^0,w,c
  5961  001996  A0D8               	btfss	status,0,c
  5962  001998  EFD0  F00C         	goto	u2401
  5963  00199C  EFD2  F00C         	goto	u2400
  5964  0019A0                     u2401:
  5965  0019A0  EFB7  F00C         	goto	l3221
  5966  0019A4                     u2400:
  5967  0019A4                     l1347:
  5968                           
  5969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  5970  0019A4  C026  F012         	movff	stoa@l,?_stoa
  5971  0019A8  C027  F013         	movff	stoa@l+1,?_stoa+1
  5972  0019AC  0012               	return		;funcret
  5973  0019AE                     __end_of_stoa:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _dtoa *****************
  5977 ;; Defined at:
  5978 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5981 ;;		 -> NULL(0), 
  5982 ;;  d               8   37[COMRAM] long long 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  n               8   61[COMRAM] long long 
  5985 ;;  i               2   69[COMRAM] int 
  5986 ;;  s               2   59[COMRAM] int 
  5987 ;;  w               2   57[COMRAM] int 
  5988 ;;  p               2   55[COMRAM] int 
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  2   35[COMRAM] int 
  5991 ;; Registers used:
  5992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5998 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;Total ram usage:       36 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:    9
  6005 ;; This function calls:
  6006 ;;		___aodiv
  6007 ;;		___aomod
  6008 ;;		_abs
  6009 ;;		_pad
  6010 ;; This function is called by:
  6011 ;;		_vfpfcnvrt
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text17
  6016  000D58                     __ptext17:
  6017                           	callstack 0
  6018  000D58                     _dtoa:
  6019                           	callstack 18
  6020  000D58                     
  6021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  6022  000D58  C026  F03E         	movff	dtoa@d,dtoa@n
  6023  000D5C  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  6024  000D60  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  6025  000D64  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  6026  000D68  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  6027  000D6C  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  6028  000D70  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  6029  000D74  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  6030  000D78                     
  6031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  6032  000D78  BE45               	btfsc	(dtoa@n+7)^0,7,c
  6033  000D7A  EFC1  F006         	goto	u2171
  6034  000D7E  EFC4  F006         	goto	u2170
  6035  000D82                     u2171:
  6036  000D82  0E01               	movlw	1
  6037  000D84  EFC5  F006         	goto	u2180
  6038  000D88                     u2170:
  6039  000D88  0E00               	movlw	0
  6040  000D8A                     u2180:
  6041  000D8A  6E3C               	movwf	dtoa@s^0,c
  6042  000D8C  6A3D               	clrf	(dtoa@s+1)^0,c
  6043                           
  6044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  6045  000D8E  503C               	movf	dtoa@s^0,w,c
  6046  000D90  103D               	iorwf	(dtoa@s+1)^0,w,c
  6047  000D92  B4D8               	btfsc	status,2,c
  6048  000D94  EFCE  F006         	goto	u2191
  6049  000D98  EFD0  F006         	goto	u2190
  6050  000D9C                     u2191:
  6051  000D9C  EFE0  F006         	goto	l3129
  6052  000DA0                     u2190:
  6053  000DA0                     
  6054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  6055  000DA0  1E45               	comf	(dtoa@n+7)^0,f,c
  6056  000DA2  1E44               	comf	(dtoa@n+6)^0,f,c
  6057  000DA4  1E43               	comf	(dtoa@n+5)^0,f,c
  6058  000DA6  1E42               	comf	(dtoa@n+4)^0,f,c
  6059  000DA8  1E41               	comf	(dtoa@n+3)^0,f,c
  6060  000DAA  1E40               	comf	(dtoa@n+2)^0,f,c
  6061  000DAC  1E3F               	comf	(dtoa@n+1)^0,f,c
  6062  000DAE  6C3E               	negf	dtoa@n^0,c
  6063  000DB0  0E00               	movlw	0
  6064  000DB2  223F               	addwfc	(dtoa@n+1)^0,f,c
  6065  000DB4  2240               	addwfc	(dtoa@n+2)^0,f,c
  6066  000DB6  2241               	addwfc	(dtoa@n+3)^0,f,c
  6067  000DB8  2242               	addwfc	(dtoa@n+4)^0,f,c
  6068  000DBA  2243               	addwfc	(dtoa@n+5)^0,f,c
  6069  000DBC  2244               	addwfc	(dtoa@n+6)^0,f,c
  6070  000DBE  2245               	addwfc	(dtoa@n+7)^0,f,c
  6071  000DC0                     l3129:
  6072                           
  6073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  6074  000DC0  BE54               	btfsc	(_prec+1)^0,7,c
  6075  000DC2  EFE5  F006         	goto	u2201
  6076  000DC6  EFE7  F006         	goto	u2200
  6077  000DCA                     u2201:
  6078  000DCA  EFE8  F006         	goto	l3133
  6079  000DCE                     u2200:
  6080  000DCE                     
  6081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  6082  000DCE  9255               	bcf	_flags^0,1,c
  6083  000DD0                     l3133:
  6084                           
  6085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  6086  000DD0  BE54               	btfsc	(_prec+1)^0,7,c
  6087  000DD2  EFF5  F006         	goto	u2210
  6088  000DD6  5054               	movf	(_prec+1)^0,w,c
  6089  000DD8  E106               	bnz	u2211
  6090  000DDA  0453               	decf	_prec^0,w,c
  6091  000DDC  B0D8               	btfsc	status,0,c
  6092  000DDE  EFF3  F006         	goto	u2211
  6093  000DE2  EFF5  F006         	goto	u2210
  6094  000DE6                     u2211:
  6095  000DE6  EFFB  F006         	goto	l1308
  6096  000DEA                     u2210:
  6097  000DEA  0E00               	movlw	0
  6098  000DEC  6E39               	movwf	(dtoa@p+1)^0,c
  6099  000DEE  0E01               	movlw	1
  6100  000DF0  6E38               	movwf	dtoa@p^0,c
  6101  000DF2  EFFF  F006         	goto	l1310
  6102  000DF6                     l1308:
  6103  000DF6  C053  F038         	movff	_prec,dtoa@p
  6104  000DFA  C054  F039         	movff	_prec+1,dtoa@p+1
  6105  000DFE                     l1310:
  6106                           
  6107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  6108  000DFE  C07A  F03A         	movff	_width,dtoa@w
  6109  000E02  C07B  F03B         	movff	_width+1,dtoa@w+1
  6110  000E06                     
  6111                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  6112  000E06  503C               	movf	dtoa@s^0,w,c
  6113  000E08  103D               	iorwf	(dtoa@s+1)^0,w,c
  6114  000E0A  A4D8               	btfss	status,2,c
  6115  000E0C  EF0A  F007         	goto	u2221
  6116  000E10  EF0C  F007         	goto	u2220
  6117  000E14                     u2221:
  6118  000E14  EF13  F007         	goto	l3141
  6119  000E18                     u2220:
  6120  000E18  A455               	btfss	_flags^0,2,c
  6121  000E1A  EF11  F007         	goto	u2231
  6122  000E1E  EF13  F007         	goto	u2230
  6123  000E22                     u2231:
  6124  000E22  EF16  F007         	goto	l3143
  6125  000E26                     u2230:
  6126  000E26                     l3141:
  6127                           
  6128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  6129  000E26  063A               	decf	dtoa@w^0,f,c
  6130  000E28  A0D8               	btfss	status,0,c
  6131  000E2A  063B               	decf	(dtoa@w+1)^0,f,c
  6132  000E2C                     l3143:
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  6135  000E2C  0E00               	movlw	0
  6136  000E2E  6E47               	movwf	(dtoa@i+1)^0,c
  6137  000E30  0E1F               	movlw	31
  6138  000E32  6E46               	movwf	dtoa@i^0,c
  6139  000E34                     
  6140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  6141  000E34  0E00               	movlw	0
  6142  000E36  0101               	movlb	1	; () banked
  6143  000E38  6F1F               	movwf	(_dbuf+31)& (0+255),b
  6144                           
  6145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6146  000E3A  EF9B  F007         	goto	l3157
  6147  000E3E                     l3147:
  6148                           
  6149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  6150  000E3E  0646               	decf	dtoa@i^0,f,c
  6151  000E40  A0D8               	btfss	status,0,c
  6152  000E42  0647               	decf	(dtoa@i+1)^0,f,c
  6153  000E44                     
  6154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  6155  000E44  0E00               	movlw	low _dbuf
  6156  000E46  2446               	addwf	dtoa@i^0,w,c
  6157  000E48  6ED9               	movwf	fsr2l,c
  6158  000E4A  0E01               	movlw	high _dbuf
  6159  000E4C  2047               	addwfc	(dtoa@i+1)^0,w,c
  6160  000E4E  6EDA               	movwf	fsr2h,c
  6161  000E50  C03E  F007         	movff	dtoa@n,___aomod@dividend
  6162  000E54  C03F  F008         	movff	dtoa@n+1,___aomod@dividend+1
  6163  000E58  C040  F009         	movff	dtoa@n+2,___aomod@dividend+2
  6164  000E5C  C041  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  6165  000E60  C042  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  6166  000E64  C043  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  6167  000E68  C044  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  6168  000E6C  C045  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  6169  000E70  0E0A               	movlw	10
  6170  000E72  6E0F               	movwf	___aomod@divisor^0,c
  6171  000E74  0E00               	movlw	0
  6172  000E76  6E10               	movwf	(___aomod@divisor+1)^0,c
  6173  000E78  0E00               	movlw	0
  6174  000E7A  6E11               	movwf	(___aomod@divisor+2)^0,c
  6175  000E7C  0E00               	movlw	0
  6176  000E7E  6E12               	movwf	(___aomod@divisor+3)^0,c
  6177  000E80  0E00               	movlw	0
  6178  000E82  6E13               	movwf	(___aomod@divisor+4)^0,c
  6179  000E84  0E00               	movlw	0
  6180  000E86  6E14               	movwf	(___aomod@divisor+5)^0,c
  6181  000E88  0E00               	movlw	0
  6182  000E8A  6E15               	movwf	(___aomod@divisor+6)^0,c
  6183  000E8C  0E00               	movlw	0
  6184  000E8E  6E16               	movwf	(___aomod@divisor+7)^0,c
  6185  000E90  ECD7  F00C         	call	___aomod	;wreg free
  6186  000E94  C007  F02E         	movff	?___aomod,??_dtoa
  6187  000E98  C008  F02F         	movff	?___aomod+1,??_dtoa+1
  6188  000E9C  C009  F030         	movff	?___aomod+2,??_dtoa+2
  6189  000EA0  C00A  F031         	movff	?___aomod+3,??_dtoa+3
  6190  000EA4  C00B  F032         	movff	?___aomod+4,??_dtoa+4
  6191  000EA8  C00C  F033         	movff	?___aomod+5,??_dtoa+5
  6192  000EAC  C00D  F034         	movff	?___aomod+6,??_dtoa+6
  6193  000EB0  C00E  F035         	movff	?___aomod+7,??_dtoa+7
  6194  000EB4  C02E  F019         	movff	??_dtoa,abs@a
  6195  000EB8  C030  F01A         	movff	??_dtoa+2,abs@a+1
  6196  000EBC  ECC2  F011         	call	_abs	;wreg free
  6197  000EC0  5019               	movf	?_abs^0,w,c
  6198  000EC2  0F30               	addlw	48
  6199  000EC4  6EDF               	movwf	indf2,c
  6200  000EC6                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  6202  000EC6  0638               	decf	dtoa@p^0,f,c
  6203  000EC8  A0D8               	btfss	status,0,c
  6204  000ECA  0639               	decf	(dtoa@p+1)^0,f,c
  6205  000ECC                     
  6206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  6207  000ECC  063A               	decf	dtoa@w^0,f,c
  6208  000ECE  A0D8               	btfss	status,0,c
  6209  000ED0  063B               	decf	(dtoa@w+1)^0,f,c
  6210  000ED2                     
  6211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  6212  000ED2  C03E  F007         	movff	dtoa@n,___aodiv@dividend
  6213  000ED6  C03F  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  6214  000EDA  C040  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  6215  000EDE  C041  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  6216  000EE2  C042  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  6217  000EE6  C043  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  6218  000EEA  C044  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  6219  000EEE  C045  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  6220  000EF2  0E0A               	movlw	10
  6221  000EF4  6E0F               	movwf	___aodiv@divisor^0,c
  6222  000EF6  0E00               	movlw	0
  6223  000EF8  6E10               	movwf	(___aodiv@divisor+1)^0,c
  6224  000EFA  0E00               	movlw	0
  6225  000EFC  6E11               	movwf	(___aodiv@divisor+2)^0,c
  6226  000EFE  0E00               	movlw	0
  6227  000F00  6E12               	movwf	(___aodiv@divisor+3)^0,c
  6228  000F02  0E00               	movlw	0
  6229  000F04  6E13               	movwf	(___aodiv@divisor+4)^0,c
  6230  000F06  0E00               	movlw	0
  6231  000F08  6E14               	movwf	(___aodiv@divisor+5)^0,c
  6232  000F0A  0E00               	movlw	0
  6233  000F0C  6E15               	movwf	(___aodiv@divisor+6)^0,c
  6234  000F0E  0E00               	movlw	0
  6235  000F10  6E16               	movwf	(___aodiv@divisor+7)^0,c
  6236  000F12  EC52  F00B         	call	___aodiv	;wreg free
  6237  000F16  C007  F03E         	movff	?___aodiv,dtoa@n
  6238  000F1A  C008  F03F         	movff	?___aodiv+1,dtoa@n+1
  6239  000F1E  C009  F040         	movff	?___aodiv+2,dtoa@n+2
  6240  000F22  C00A  F041         	movff	?___aodiv+3,dtoa@n+3
  6241  000F26  C00B  F042         	movff	?___aodiv+4,dtoa@n+4
  6242  000F2A  C00C  F043         	movff	?___aodiv+5,dtoa@n+5
  6243  000F2E  C00D  F044         	movff	?___aodiv+6,dtoa@n+6
  6244  000F32  C00E  F045         	movff	?___aodiv+7,dtoa@n+7
  6245  000F36                     l3157:
  6246                           
  6247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6248  000F36  BE47               	btfsc	(dtoa@i+1)^0,7,c
  6249  000F38  EFA6  F007         	goto	u2241
  6250  000F3C  5047               	movf	(dtoa@i+1)^0,w,c
  6251  000F3E  E108               	bnz	u2240
  6252  000F40  0446               	decf	dtoa@i^0,w,c
  6253  000F42  A0D8               	btfss	status,0,c
  6254  000F44  EFA6  F007         	goto	u2241
  6255  000F48  EFA8  F007         	goto	u2240
  6256  000F4C                     u2241:
  6257  000F4C  EFD8  F007         	goto	l3167
  6258  000F50                     u2240:
  6259  000F50  503E               	movf	dtoa@n^0,w,c
  6260  000F52  103F               	iorwf	(dtoa@n+1)^0,w,c
  6261  000F54  1040               	iorwf	(dtoa@n+2)^0,w,c
  6262  000F56  1041               	iorwf	(dtoa@n+3)^0,w,c
  6263  000F58  1042               	iorwf	(dtoa@n+4)^0,w,c
  6264  000F5A  1043               	iorwf	(dtoa@n+5)^0,w,c
  6265  000F5C  1044               	iorwf	(dtoa@n+6)^0,w,c
  6266  000F5E  1045               	iorwf	(dtoa@n+7)^0,w,c
  6267  000F60  A4D8               	btfss	status,2,c
  6268  000F62  EFB5  F007         	goto	u2251
  6269  000F66  EFB7  F007         	goto	u2250
  6270  000F6A                     u2251:
  6271  000F6A  EF1F  F007         	goto	l3147
  6272  000F6E                     u2250:
  6273  000F6E  BE39               	btfsc	(dtoa@p+1)^0,7,c
  6274  000F70  EFC4  F007         	goto	u2260
  6275  000F74  5039               	movf	(dtoa@p+1)^0,w,c
  6276  000F76  E106               	bnz	u2261
  6277  000F78  0438               	decf	dtoa@p^0,w,c
  6278  000F7A  B0D8               	btfsc	status,0,c
  6279  000F7C  EFC2  F007         	goto	u2261
  6280  000F80  EFC4  F007         	goto	u2260
  6281  000F84                     u2261:
  6282  000F84  EF1F  F007         	goto	l3147
  6283  000F88                     u2260:
  6284  000F88  BE3B               	btfsc	(dtoa@w+1)^0,7,c
  6285  000F8A  EFCF  F007         	goto	u2271
  6286  000F8E  503B               	movf	(dtoa@w+1)^0,w,c
  6287  000F90  E108               	bnz	u2270
  6288  000F92  043A               	decf	dtoa@w^0,w,c
  6289  000F94  A0D8               	btfss	status,0,c
  6290  000F96  EFCF  F007         	goto	u2271
  6291  000F9A  EFD1  F007         	goto	u2270
  6292  000F9E                     u2271:
  6293  000F9E  EFD8  F007         	goto	l3167
  6294  000FA2                     u2270:
  6295  000FA2  B255               	btfsc	_flags^0,1,c
  6296  000FA4  EFD6  F007         	goto	u2281
  6297  000FA8  EFD8  F007         	goto	u2280
  6298  000FAC                     u2281:
  6299  000FAC  EF1F  F007         	goto	l3147
  6300  000FB0                     u2280:
  6301  000FB0                     l3167:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  6304  000FB0  503C               	movf	dtoa@s^0,w,c
  6305  000FB2  103D               	iorwf	(dtoa@s+1)^0,w,c
  6306  000FB4  A4D8               	btfss	status,2,c
  6307  000FB6  EFDF  F007         	goto	u2291
  6308  000FBA  EFE1  F007         	goto	u2290
  6309  000FBE                     u2291:
  6310  000FBE  EFE8  F007         	goto	l3171
  6311  000FC2                     u2290:
  6312  000FC2  A455               	btfss	_flags^0,2,c
  6313  000FC4  EFE6  F007         	goto	u2301
  6314  000FC8  EFE8  F007         	goto	u2300
  6315  000FCC                     u2301:
  6316  000FCC  EF06  F008         	goto	l3181
  6317  000FD0                     u2300:
  6318  000FD0                     l3171:
  6319                           
  6320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  6321  000FD0  0646               	decf	dtoa@i^0,f,c
  6322  000FD2  A0D8               	btfss	status,0,c
  6323  000FD4  0647               	decf	(dtoa@i+1)^0,f,c
  6324  000FD6                     
  6325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  6326  000FD6  503C               	movf	dtoa@s^0,w,c
  6327  000FD8  103D               	iorwf	(dtoa@s+1)^0,w,c
  6328  000FDA  A4D8               	btfss	status,2,c
  6329  000FDC  EFF2  F007         	goto	u2311
  6330  000FE0  EFF4  F007         	goto	u2310
  6331  000FE4                     u2311:
  6332  000FE4  EFFA  F007         	goto	l3177
  6333  000FE8                     u2310:
  6334  000FE8  0E00               	movlw	0
  6335  000FEA  6E37               	movwf	(_dtoa$1918+1)^0,c
  6336  000FEC  0E2B               	movlw	43
  6337  000FEE  6E36               	movwf	_dtoa$1918^0,c
  6338  000FF0  EFFE  F007         	goto	l3179
  6339  000FF4                     l3177:
  6340  000FF4  0E00               	movlw	0
  6341  000FF6  6E37               	movwf	(_dtoa$1918+1)^0,c
  6342  000FF8  0E2D               	movlw	45
  6343  000FFA  6E36               	movwf	_dtoa$1918^0,c
  6344  000FFC                     l3179:
  6345  000FFC  0E00               	movlw	low _dbuf
  6346  000FFE  2446               	addwf	dtoa@i^0,w,c
  6347  001000  6ED9               	movwf	fsr2l,c
  6348  001002  0E01               	movlw	high _dbuf
  6349  001004  2047               	addwfc	(dtoa@i+1)^0,w,c
  6350  001006  6EDA               	movwf	fsr2h,c
  6351  001008  C036  FFDF         	movff	_dtoa$1918,indf2
  6352  00100C                     l3181:
  6353                           
  6354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  6355  00100C  C024  F019         	movff	dtoa@fp,pad@fp
  6356  001010  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  6357  001014  0E00               	movlw	low _dbuf
  6358  001016  2446               	addwf	dtoa@i^0,w,c
  6359  001018  6E1B               	movwf	pad@buf^0,c
  6360  00101A  0E01               	movlw	high _dbuf
  6361  00101C  2047               	addwfc	(dtoa@i+1)^0,w,c
  6362  00101E  6E1C               	movwf	(pad@buf+1)^0,c
  6363  001020  C03A  F01D         	movff	dtoa@w,pad@p
  6364  001024  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  6365  001028  ECDD  F00E         	call	_pad	;wreg free
  6366  00102C  C019  F024         	movff	?_pad,?_dtoa
  6367  001030  C01A  F025         	movff	?_pad+1,?_dtoa+1
  6368  001034  0012               	return		;funcret
  6369  001036                     __end_of_dtoa:
  6370                           	callstack 0
  6371                           
  6372 ;; *************** function _abs *****************
  6373 ;; Defined at:
  6374 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  a               2   24[COMRAM] int 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  2   24[COMRAM] int 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;Total ram usage:        4 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    4
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_dtoa
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text18
  6403  002384                     __ptext18:
  6404                           	callstack 0
  6405  002384                     _abs:
  6406                           	callstack 22
  6407  002384  BE1A               	btfsc	(abs@a+1)^0,7,c
  6408  002386  EFCF  F011         	goto	u2040
  6409  00238A  501A               	movf	(abs@a+1)^0,w,c
  6410  00238C  E106               	bnz	u2041
  6411  00238E  0419               	decf	abs@a^0,w,c
  6412  002390  B0D8               	btfsc	status,0,c
  6413  002392  EFCD  F011         	goto	u2041
  6414  002396  EFCF  F011         	goto	u2040
  6415  00239A                     u2041:
  6416  00239A  EFDD  F011         	goto	l1442
  6417  00239E                     u2040:
  6418  00239E  C019  F01B         	movff	abs@a,??_abs
  6419  0023A2  C01A  F01C         	movff	abs@a+1,??_abs+1
  6420  0023A6  1E1B               	comf	??_abs^0,f,c
  6421  0023A8  1E1C               	comf	(??_abs+1)^0,f,c
  6422  0023AA  4A1B               	infsnz	??_abs^0,f,c
  6423  0023AC  2A1C               	incf	(??_abs+1)^0,f,c
  6424  0023AE  C01B  F019         	movff	??_abs,?_abs
  6425  0023B2  C01C  F01A         	movff	??_abs+1,?_abs+1
  6426  0023B6  EFE1  F011         	goto	l1445
  6427  0023BA                     l1442:
  6428  0023BA  C019  F019         	movff	abs@a,?_abs
  6429  0023BE  C01A  F01A         	movff	abs@a+1,?_abs+1
  6430  0023C2                     l1445:
  6431  0023C2  0012               	return		;funcret
  6432  0023C4                     __end_of_abs:
  6433                           	callstack 0
  6434                           
  6435 ;; *************** function ___aomod *****************
  6436 ;; Defined at:
  6437 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  dividend        8    6[COMRAM] long long 
  6440 ;;  divisor         8   14[COMRAM] long long 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  sign            1   23[COMRAM] unsigned char 
  6443 ;;  counter         1   22[COMRAM] unsigned char 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  8    6[COMRAM] long long 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6453 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;Total ram usage:       18 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    4
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_dtoa
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text19
  6468  0019AE                     __ptext19:
  6469                           	callstack 0
  6470  0019AE                     ___aomod:
  6471                           	callstack 22
  6472  0019AE  0E00               	movlw	0
  6473  0019B0  6E18               	movwf	___aomod@sign^0,c
  6474  0019B2  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  6475  0019B4  EFE0  F00C         	goto	u1870
  6476  0019B8  EFDE  F00C         	goto	u1871
  6477  0019BC                     u1871:
  6478  0019BC  EFF2  F00C         	goto	l2983
  6479  0019C0                     u1870:
  6480  0019C0  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  6481  0019C2  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  6482  0019C4  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  6483  0019C6  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  6484  0019C8  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  6485  0019CA  1E09               	comf	(___aomod@dividend+2)^0,f,c
  6486  0019CC  1E08               	comf	(___aomod@dividend+1)^0,f,c
  6487  0019CE  6C07               	negf	___aomod@dividend^0,c
  6488  0019D0  0E00               	movlw	0
  6489  0019D2  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  6490  0019D4  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  6491  0019D6  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  6492  0019D8  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  6493  0019DA  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  6494  0019DC  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  6495  0019DE  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  6496  0019E0  0E01               	movlw	1
  6497  0019E2  6E18               	movwf	___aomod@sign^0,c
  6498  0019E4                     l2983:
  6499  0019E4  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  6500  0019E6  EFF9  F00C         	goto	u1880
  6501  0019EA  EFF7  F00C         	goto	u1881
  6502  0019EE                     u1881:
  6503  0019EE  EF09  F00D         	goto	l2987
  6504  0019F2                     u1880:
  6505  0019F2  1E16               	comf	(___aomod@divisor+7)^0,f,c
  6506  0019F4  1E15               	comf	(___aomod@divisor+6)^0,f,c
  6507  0019F6  1E14               	comf	(___aomod@divisor+5)^0,f,c
  6508  0019F8  1E13               	comf	(___aomod@divisor+4)^0,f,c
  6509  0019FA  1E12               	comf	(___aomod@divisor+3)^0,f,c
  6510  0019FC  1E11               	comf	(___aomod@divisor+2)^0,f,c
  6511  0019FE  1E10               	comf	(___aomod@divisor+1)^0,f,c
  6512  001A00  6C0F               	negf	___aomod@divisor^0,c
  6513  001A02  0E00               	movlw	0
  6514  001A04  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  6515  001A06  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  6516  001A08  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  6517  001A0A  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  6518  001A0C  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  6519  001A0E  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  6520  001A10  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  6521  001A12                     l2987:
  6522  001A12  500F               	movf	___aomod@divisor^0,w,c
  6523  001A14  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  6524  001A16  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  6525  001A18  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  6526  001A1A  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  6527  001A1C  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  6528  001A1E  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  6529  001A20  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  6530  001A22  B4D8               	btfsc	status,2,c
  6531  001A24  EF16  F00D         	goto	u1891
  6532  001A28  EF18  F00D         	goto	u1890
  6533  001A2C                     u1891:
  6534  001A2C  EF60  F00D         	goto	l3003
  6535  001A30                     u1890:
  6536  001A30  0E01               	movlw	1
  6537  001A32  6E17               	movwf	___aomod@counter^0,c
  6538  001A34  EF26  F00D         	goto	l2993
  6539  001A38                     l2991:
  6540  001A38  90D8               	bcf	status,0,c
  6541  001A3A  360F               	rlcf	___aomod@divisor^0,f,c
  6542  001A3C  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  6543  001A3E  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  6544  001A40  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  6545  001A42  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  6546  001A44  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  6547  001A46  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  6548  001A48  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  6549  001A4A  2A17               	incf	___aomod@counter^0,f,c
  6550  001A4C                     l2993:
  6551  001A4C  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  6552  001A4E  EF2B  F00D         	goto	u1901
  6553  001A52  EF2D  F00D         	goto	u1900
  6554  001A56                     u1901:
  6555  001A56  EF1C  F00D         	goto	l2991
  6556  001A5A                     u1900:
  6557  001A5A                     l2995:
  6558  001A5A  500F               	movf	___aomod@divisor^0,w,c
  6559  001A5C  5C07               	subwf	___aomod@dividend^0,w,c
  6560  001A5E  5010               	movf	(___aomod@divisor+1)^0,w,c
  6561  001A60  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  6562  001A62  5011               	movf	(___aomod@divisor+2)^0,w,c
  6563  001A64  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  6564  001A66  5012               	movf	(___aomod@divisor+3)^0,w,c
  6565  001A68  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  6566  001A6A  5013               	movf	(___aomod@divisor+4)^0,w,c
  6567  001A6C  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  6568  001A6E  5014               	movf	(___aomod@divisor+5)^0,w,c
  6569  001A70  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  6570  001A72  5015               	movf	(___aomod@divisor+6)^0,w,c
  6571  001A74  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  6572  001A76  5016               	movf	(___aomod@divisor+7)^0,w,c
  6573  001A78  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  6574  001A7A  A0D8               	btfss	status,0,c
  6575  001A7C  EF42  F00D         	goto	u1911
  6576  001A80  EF44  F00D         	goto	u1910
  6577  001A84                     u1911:
  6578  001A84  EF54  F00D         	goto	l2999
  6579  001A88                     u1910:
  6580  001A88  500F               	movf	___aomod@divisor^0,w,c
  6581  001A8A  5E07               	subwf	___aomod@dividend^0,f,c
  6582  001A8C  5010               	movf	(___aomod@divisor+1)^0,w,c
  6583  001A8E  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  6584  001A90  5011               	movf	(___aomod@divisor+2)^0,w,c
  6585  001A92  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  6586  001A94  5012               	movf	(___aomod@divisor+3)^0,w,c
  6587  001A96  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  6588  001A98  5013               	movf	(___aomod@divisor+4)^0,w,c
  6589  001A9A  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  6590  001A9C  5014               	movf	(___aomod@divisor+5)^0,w,c
  6591  001A9E  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  6592  001AA0  5015               	movf	(___aomod@divisor+6)^0,w,c
  6593  001AA2  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  6594  001AA4  5016               	movf	(___aomod@divisor+7)^0,w,c
  6595  001AA6  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  6596  001AA8                     l2999:
  6597  001AA8  90D8               	bcf	status,0,c
  6598  001AAA  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  6599  001AAC  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  6600  001AAE  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  6601  001AB0  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  6602  001AB2  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  6603  001AB4  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  6604  001AB6  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  6605  001AB8  320F               	rrcf	___aomod@divisor^0,f,c
  6606  001ABA  2E17               	decfsz	___aomod@counter^0,f,c
  6607  001ABC  EF2D  F00D         	goto	l2995
  6608  001AC0                     l3003:
  6609  001AC0  5018               	movf	___aomod@sign^0,w,c
  6610  001AC2  B4D8               	btfsc	status,2,c
  6611  001AC4  EF66  F00D         	goto	u1921
  6612  001AC8  EF68  F00D         	goto	u1920
  6613  001ACC                     u1921:
  6614  001ACC  EF78  F00D         	goto	l3007
  6615  001AD0                     u1920:
  6616  001AD0  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  6617  001AD2  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  6618  001AD4  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  6619  001AD6  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  6620  001AD8  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  6621  001ADA  1E09               	comf	(___aomod@dividend+2)^0,f,c
  6622  001ADC  1E08               	comf	(___aomod@dividend+1)^0,f,c
  6623  001ADE  6C07               	negf	___aomod@dividend^0,c
  6624  001AE0  0E00               	movlw	0
  6625  001AE2  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  6626  001AE4  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  6627  001AE6  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  6628  001AE8  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  6629  001AEA  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  6630  001AEC  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  6631  001AEE  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  6632  001AF0                     l3007:
  6633  001AF0  C007  F007         	movff	___aomod@dividend,?___aomod
  6634  001AF4  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  6635  001AF8  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  6636  001AFC  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  6637  001B00  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  6638  001B04  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  6639  001B08  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  6640  001B0C  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  6641  001B10  0012               	return		;funcret
  6642  001B12                     __end_of___aomod:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function ___aodiv *****************
  6646 ;; Defined at:
  6647 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  dividend        8    6[COMRAM] long long 
  6650 ;;  divisor         8   14[COMRAM] long long 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  quotient        8   24[COMRAM] long long 
  6653 ;;  sign            1   23[COMRAM] unsigned char 
  6654 ;;  counter         1   22[COMRAM] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  8    6[COMRAM] long long 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6664 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;Total ram usage:       26 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    4
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_dtoa
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text20
  6679  0016A4                     __ptext20:
  6680                           	callstack 0
  6681  0016A4                     ___aodiv:
  6682                           	callstack 22
  6683  0016A4  0E00               	movlw	0
  6684  0016A6  6E18               	movwf	___aodiv@sign^0,c
  6685  0016A8  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  6686  0016AA  EF5B  F00B         	goto	u1800
  6687  0016AE  EF59  F00B         	goto	u1801
  6688  0016B2                     u1801:
  6689  0016B2  EF6D  F00B         	goto	l2939
  6690  0016B6                     u1800:
  6691  0016B6  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  6692  0016B8  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  6693  0016BA  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  6694  0016BC  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  6695  0016BE  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  6696  0016C0  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  6697  0016C2  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  6698  0016C4  6C0F               	negf	___aodiv@divisor^0,c
  6699  0016C6  0E00               	movlw	0
  6700  0016C8  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  6701  0016CA  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  6702  0016CC  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  6703  0016CE  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  6704  0016D0  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  6705  0016D2  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  6706  0016D4  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  6707  0016D6  0E01               	movlw	1
  6708  0016D8  6E18               	movwf	___aodiv@sign^0,c
  6709  0016DA                     l2939:
  6710  0016DA  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  6711  0016DC  EF74  F00B         	goto	u1810
  6712  0016E0  EF72  F00B         	goto	u1811
  6713  0016E4                     u1811:
  6714  0016E4  EF86  F00B         	goto	l2945
  6715  0016E8                     u1810:
  6716  0016E8  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  6717  0016EA  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  6718  0016EC  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  6719  0016EE  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  6720  0016F0  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  6721  0016F2  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  6722  0016F4  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  6723  0016F6  6C07               	negf	___aodiv@dividend^0,c
  6724  0016F8  0E00               	movlw	0
  6725  0016FA  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  6726  0016FC  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  6727  0016FE  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  6728  001700  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  6729  001702  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  6730  001704  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  6731  001706  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  6732  001708  0E01               	movlw	1
  6733  00170A  1A18               	xorwf	___aodiv@sign^0,f,c
  6734  00170C                     l2945:
  6735  00170C  EE20  F019         	lfsr	2,___aodiv@quotient
  6736  001710  0E07               	movlw	7
  6737  001712                     u1821:
  6738  001712  6ADE               	clrf	postinc2,c
  6739  001714  06E8               	decf	wreg,f,c
  6740  001716  E2FD               	bc	u1821
  6741  001718  500F               	movf	___aodiv@divisor^0,w,c
  6742  00171A  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  6743  00171C  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  6744  00171E  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  6745  001720  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  6746  001722  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  6747  001724  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  6748  001726  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  6749  001728  B4D8               	btfsc	status,2,c
  6750  00172A  EF99  F00B         	goto	u1831
  6751  00172E  EF9B  F00B         	goto	u1830
  6752  001732                     u1831:
  6753  001732  EFED  F00B         	goto	l2967
  6754  001736                     u1830:
  6755  001736  0E01               	movlw	1
  6756  001738  6E17               	movwf	___aodiv@counter^0,c
  6757  00173A  EFA9  F00B         	goto	l2953
  6758  00173E                     l2951:
  6759  00173E  90D8               	bcf	status,0,c
  6760  001740  360F               	rlcf	___aodiv@divisor^0,f,c
  6761  001742  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  6762  001744  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  6763  001746  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  6764  001748  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  6765  00174A  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  6766  00174C  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  6767  00174E  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  6768  001750  2A17               	incf	___aodiv@counter^0,f,c
  6769  001752                     l2953:
  6770  001752  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  6771  001754  EFAE  F00B         	goto	u1841
  6772  001758  EFB0  F00B         	goto	u1840
  6773  00175C                     u1841:
  6774  00175C  EF9F  F00B         	goto	l2951
  6775  001760                     u1840:
  6776  001760                     l2955:
  6777  001760  90D8               	bcf	status,0,c
  6778  001762  3619               	rlcf	___aodiv@quotient^0,f,c
  6779  001764  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  6780  001766  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  6781  001768  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  6782  00176A  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  6783  00176C  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  6784  00176E  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  6785  001770  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  6786  001772  500F               	movf	___aodiv@divisor^0,w,c
  6787  001774  5C07               	subwf	___aodiv@dividend^0,w,c
  6788  001776  5010               	movf	(___aodiv@divisor+1)^0,w,c
  6789  001778  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  6790  00177A  5011               	movf	(___aodiv@divisor+2)^0,w,c
  6791  00177C  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  6792  00177E  5012               	movf	(___aodiv@divisor+3)^0,w,c
  6793  001780  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  6794  001782  5013               	movf	(___aodiv@divisor+4)^0,w,c
  6795  001784  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  6796  001786  5014               	movf	(___aodiv@divisor+5)^0,w,c
  6797  001788  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  6798  00178A  5015               	movf	(___aodiv@divisor+6)^0,w,c
  6799  00178C  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  6800  00178E  5016               	movf	(___aodiv@divisor+7)^0,w,c
  6801  001790  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  6802  001792  A0D8               	btfss	status,0,c
  6803  001794  EFCE  F00B         	goto	u1851
  6804  001798  EFD0  F00B         	goto	u1850
  6805  00179C                     u1851:
  6806  00179C  EFE1  F00B         	goto	l2963
  6807  0017A0                     u1850:
  6808  0017A0  500F               	movf	___aodiv@divisor^0,w,c
  6809  0017A2  5E07               	subwf	___aodiv@dividend^0,f,c
  6810  0017A4  5010               	movf	(___aodiv@divisor+1)^0,w,c
  6811  0017A6  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  6812  0017A8  5011               	movf	(___aodiv@divisor+2)^0,w,c
  6813  0017AA  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  6814  0017AC  5012               	movf	(___aodiv@divisor+3)^0,w,c
  6815  0017AE  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  6816  0017B0  5013               	movf	(___aodiv@divisor+4)^0,w,c
  6817  0017B2  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  6818  0017B4  5014               	movf	(___aodiv@divisor+5)^0,w,c
  6819  0017B6  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  6820  0017B8  5015               	movf	(___aodiv@divisor+6)^0,w,c
  6821  0017BA  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  6822  0017BC  5016               	movf	(___aodiv@divisor+7)^0,w,c
  6823  0017BE  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  6824  0017C0  8019               	bsf	___aodiv@quotient^0,0,c
  6825  0017C2                     l2963:
  6826  0017C2  90D8               	bcf	status,0,c
  6827  0017C4  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  6828  0017C6  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  6829  0017C8  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  6830  0017CA  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  6831  0017CC  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  6832  0017CE  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  6833  0017D0  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  6834  0017D2  320F               	rrcf	___aodiv@divisor^0,f,c
  6835  0017D4  2E17               	decfsz	___aodiv@counter^0,f,c
  6836  0017D6  EFB0  F00B         	goto	l2955
  6837  0017DA                     l2967:
  6838  0017DA  5018               	movf	___aodiv@sign^0,w,c
  6839  0017DC  B4D8               	btfsc	status,2,c
  6840  0017DE  EFF3  F00B         	goto	u1861
  6841  0017E2  EFF5  F00B         	goto	u1860
  6842  0017E6                     u1861:
  6843  0017E6  EF05  F00C         	goto	l2971
  6844  0017EA                     u1860:
  6845  0017EA  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  6846  0017EC  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  6847  0017EE  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  6848  0017F0  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  6849  0017F2  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  6850  0017F4  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  6851  0017F6  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  6852  0017F8  6C19               	negf	___aodiv@quotient^0,c
  6853  0017FA  0E00               	movlw	0
  6854  0017FC  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  6855  0017FE  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  6856  001800  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  6857  001802  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  6858  001804  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  6859  001806  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  6860  001808  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  6861  00180A                     l2971:
  6862  00180A  C019  F007         	movff	___aodiv@quotient,?___aodiv
  6863  00180E  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  6864  001812  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  6865  001816  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  6866  00181A  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  6867  00181E  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  6868  001822  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  6869  001826  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  6870  00182A  0012               	return		;funcret
  6871  00182C                     __end_of___aodiv:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function _ctoa *****************
  6875 ;; Defined at:
  6876 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  6879 ;;		 -> NULL(0), 
  6880 ;;  c               1   37[COMRAM] unsigned char 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  w               2   38[COMRAM] int 
  6883 ;;  l               2    0        int 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2   35[COMRAM] int 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        5 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    9
  6900 ;; This function calls:
  6901 ;;		_pad
  6902 ;; This function is called by:
  6903 ;;		_vfpfcnvrt
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text21
  6908  0021B6                     __ptext21:
  6909                           	callstack 0
  6910  0021B6                     _ctoa:
  6911                           	callstack 18
  6912  0021B6                     
  6913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6914  0021B6  0100               	movlb	0	; () banked
  6915  0021B8  517A               	movf	_width& (0+255),w,b
  6916  0021BA  117B               	iorwf	(_width+1)& (0+255),w,b
  6917  0021BC  A4D8               	btfss	status,2,c
  6918  0021BE  EFE3  F010         	goto	u2161
  6919  0021C2  EFE5  F010         	goto	u2160
  6920  0021C6                     u2161:
  6921  0021C6  EFEB  F010         	goto	l3113
  6922  0021CA                     u2160:
  6923  0021CA                     
  6924                           ; BSR set to: 0
  6925  0021CA  C07A  F027         	movff	_width,ctoa@w
  6926  0021CE  C07B  F028         	movff	_width+1,ctoa@w+1
  6927  0021D2  EFF1  F010         	goto	l3115
  6928  0021D6                     l3113:
  6929                           
  6930                           ; BSR set to: 0
  6931  0021D6  0EFF               	movlw	255
  6932  0021D8  257A               	addwf	_width& (0+255),w,b
  6933  0021DA  6E27               	movwf	ctoa@w^0,c
  6934  0021DC  0EFF               	movlw	255
  6935  0021DE  217B               	addwfc	(_width+1)& (0+255),w,b
  6936  0021E0  6E28               	movwf	(ctoa@w+1)^0,c
  6937  0021E2                     l3115:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  6941  0021E2  C026  F100         	movff	ctoa@c,_dbuf
  6942  0021E6                     
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  6945  0021E6  0E00               	movlw	0
  6946  0021E8  0101               	movlb	1	; () banked
  6947  0021EA  6F01               	movwf	(_dbuf+1)& (0+255),b
  6948  0021EC                     
  6949                           ; BSR set to: 1
  6950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  6951  0021EC  C024  F019         	movff	ctoa@fp,pad@fp
  6952  0021F0  C025  F01A         	movff	ctoa@fp+1,pad@fp+1
  6953  0021F4  0E00               	movlw	low _dbuf
  6954  0021F6  6E1B               	movwf	pad@buf^0,c
  6955  0021F8  0E01               	movlw	high _dbuf
  6956  0021FA  6E1C               	movwf	(pad@buf+1)^0,c
  6957  0021FC  C027  F01D         	movff	ctoa@w,pad@p
  6958  002200  C028  F01E         	movff	ctoa@w+1,pad@p+1
  6959  002204  ECDD  F00E         	call	_pad	;wreg free
  6960  002208  C019  F024         	movff	?_pad,?_ctoa
  6961  00220C  C01A  F025         	movff	?_pad+1,?_ctoa+1
  6962  002210  0012               	return		;funcret
  6963  002212                     __end_of_ctoa:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _pad *****************
  6967 ;; Defined at:
  6968 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  6971 ;;		 -> NULL(0), 
  6972 ;;  buf             2   26[COMRAM] PTR unsigned char 
  6973 ;;		 -> dbuf(32), 
  6974 ;;  p               2   28[COMRAM] int 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  w               2   33[COMRAM] int 
  6977 ;;  i               2   31[COMRAM] int 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  2   24[COMRAM] int 
  6980 ;; Registers used:
  6981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6987 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;Total ram usage:       11 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    8
  6994 ;; This function calls:
  6995 ;;		_fputc
  6996 ;;		_fputs
  6997 ;;		_strlen
  6998 ;; This function is called by:
  6999 ;;		_ctoa
  7000 ;;		_dtoa
  7001 ;;		_utoa
  7002 ;;		_xtoa
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text22
  7007  001DBA                     __ptext22:
  7008                           	callstack 0
  7009  001DBA                     _pad:
  7010                           	callstack 18
  7011  001DBA                     
  7012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7013  001DBA  A055               	btfss	_flags^0,0,c
  7014  001DBC  EFE2  F00E         	goto	u2001
  7015  001DC0  EFE4  F00E         	goto	u2000
  7016  001DC4                     u2001:
  7017  001DC4  EFEE  F00E         	goto	l3053
  7018  001DC8                     u2000:
  7019  001DC8                     
  7020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7021  001DC8  C01B  F012         	movff	pad@buf,fputs@s
  7022  001DCC  C01C  F013         	movff	pad@buf+1,fputs@s+1
  7023  001DD0  C019  F014         	movff	pad@fp,fputs@fp
  7024  001DD4  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  7025  001DD8  EC7F  F011         	call	_fputs	;wreg free
  7026  001DDC                     l3053:
  7027                           
  7028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7029  001DDC  BE1E               	btfsc	(pad@p+1)^0,7,c
  7030  001DDE  EFF3  F00E         	goto	u2011
  7031  001DE2  EFF5  F00E         	goto	u2010
  7032  001DE6                     u2011:
  7033  001DE6  EFFB  F00E         	goto	l3057
  7034  001DEA                     u2010:
  7035  001DEA  C01D  F022         	movff	pad@p,pad@w
  7036  001DEE  C01E  F023         	movff	pad@p+1,pad@w+1
  7037  001DF2  EFFF  F00E         	goto	l1290
  7038  001DF6                     l3057:
  7039  001DF6  0E00               	movlw	0
  7040  001DF8  6E23               	movwf	(pad@w+1)^0,c
  7041  001DFA  0E00               	movlw	0
  7042  001DFC  6E22               	movwf	pad@w^0,c
  7043  001DFE                     l1290:
  7044                           
  7045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7046  001DFE  0E00               	movlw	0
  7047  001E00  6E21               	movwf	(pad@i+1)^0,c
  7048  001E02  0E00               	movlw	0
  7049  001E04  6E20               	movwf	pad@i^0,c
  7050                           
  7051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7052  001E06  EF11  F00F         	goto	l3063
  7053  001E0A                     l3059:
  7054                           
  7055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7056  001E0A  0E00               	movlw	0
  7057  001E0C  6E0A               	movwf	(fputc@c+1)^0,c
  7058  001E0E  0E20               	movlw	32
  7059  001E10  6E09               	movwf	fputc@c^0,c
  7060  001E12  C019  F00B         	movff	pad@fp,fputc@fp
  7061  001E16  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  7062  001E1A  ECF4  F00F         	call	_fputc	;wreg free
  7063  001E1E                     
  7064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7065  001E1E  4A20               	infsnz	pad@i^0,f,c
  7066  001E20  2A21               	incf	(pad@i+1)^0,f,c
  7067  001E22                     l3063:
  7068                           
  7069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7070  001E22  5022               	movf	pad@w^0,w,c
  7071  001E24  5C20               	subwf	pad@i^0,w,c
  7072  001E26  5021               	movf	(pad@i+1)^0,w,c
  7073  001E28  0A80               	xorlw	128
  7074  001E2A  6E1F               	movwf	??_pad^0,c
  7075  001E2C  5023               	movf	(pad@w+1)^0,w,c
  7076  001E2E  0A80               	xorlw	128
  7077  001E30  581F               	subwfb	??_pad^0,w,c
  7078  001E32  A0D8               	btfss	status,0,c
  7079  001E34  EF1E  F00F         	goto	u2021
  7080  001E38  EF20  F00F         	goto	u2020
  7081  001E3C                     u2021:
  7082  001E3C  EF05  F00F         	goto	l3059
  7083  001E40                     u2020:
  7084  001E40                     
  7085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7086  001E40  B055               	btfsc	_flags^0,0,c
  7087  001E42  EF25  F00F         	goto	u2031
  7088  001E46  EF27  F00F         	goto	u2030
  7089  001E4A                     u2031:
  7090  001E4A  EF31  F00F         	goto	l3067
  7091  001E4E                     u2030:
  7092  001E4E                     
  7093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7094  001E4E  C01B  F012         	movff	pad@buf,fputs@s
  7095  001E52  C01C  F013         	movff	pad@buf+1,fputs@s+1
  7096  001E56  C019  F014         	movff	pad@fp,fputs@fp
  7097  001E5A  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  7098  001E5E  EC7F  F011         	call	_fputs	;wreg free
  7099  001E62                     l3067:
  7100                           
  7101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7102  001E62  C01B  F007         	movff	pad@buf,strlen@s
  7103  001E66  C01C  F008         	movff	pad@buf+1,strlen@s+1
  7104  001E6A  EC74  F012         	call	_strlen	;wreg free
  7105  001E6E  5022               	movf	pad@w^0,w,c
  7106  001E70  2407               	addwf	?_strlen^0,w,c
  7107  001E72  6E19               	movwf	?_pad^0,c
  7108  001E74  5023               	movf	(pad@w+1)^0,w,c
  7109  001E76  2008               	addwfc	(?_strlen+1)^0,w,c
  7110  001E78  6E1A               	movwf	(?_pad+1)^0,c
  7111  001E7A  0012               	return		;funcret
  7112  001E7C                     __end_of_pad:
  7113                           	callstack 0
  7114                           
  7115 ;; *************** function _strlen *****************
  7116 ;; Defined at:
  7117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7120 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), IRreceiveBuffer(25), 
  7121 ;;		 -> IRtransmitBuffer(25), 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7124 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), IRreceiveBuffer(25), 
  7125 ;;		 -> IRtransmitBuffer(25), 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  2    6[COMRAM] unsigned int 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        4 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    4
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_pad
  7146 ;;		_stoa
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text23
  7151  0024E8                     __ptext23:
  7152                           	callstack 0
  7153  0024E8                     _strlen:
  7154                           	callstack 21
  7155  0024E8  C007  F009         	movff	strlen@s,strlen@a
  7156  0024EC  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7157  0024F0  EF7C  F012         	goto	l2915
  7158  0024F4                     l2913:
  7159  0024F4  4A07               	infsnz	strlen@s^0,f,c
  7160  0024F6  2A08               	incf	(strlen@s+1)^0,f,c
  7161  0024F8                     l2915:
  7162  0024F8  C007  FFD9         	movff	strlen@s,fsr2l
  7163  0024FC  C008  FFDA         	movff	strlen@s+1,fsr2h
  7164  002500  50DF               	movf	indf2,w,c
  7165  002502  A4D8               	btfss	status,2,c
  7166  002504  EF86  F012         	goto	u1771
  7167  002508  EF88  F012         	goto	u1770
  7168  00250C                     u1771:
  7169  00250C  EF7A  F012         	goto	l2913
  7170  002510                     u1770:
  7171  002510  5009               	movf	strlen@a^0,w,c
  7172  002512  5C07               	subwf	strlen@s^0,w,c
  7173  002514  6E07               	movwf	?_strlen^0,c
  7174  002516  500A               	movf	(strlen@a+1)^0,w,c
  7175  002518  5808               	subwfb	(strlen@s+1)^0,w,c
  7176  00251A  6E08               	movwf	(?_strlen+1)^0,c
  7177  00251C  0012               	return		;funcret
  7178  00251E                     __end_of_strlen:
  7179                           	callstack 0
  7180                           
  7181 ;; *************** function _fputs *****************
  7182 ;; Defined at:
  7183 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  s               2   17[COMRAM] PTR const unsigned char 
  7186 ;;		 -> dbuf(32), 
  7187 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7188 ;;		 -> NULL(0), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  i               2   22[COMRAM] int 
  7191 ;;  c               1   21[COMRAM] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  2   17[COMRAM] int 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;Total ram usage:        7 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    7
  7208 ;; This function calls:
  7209 ;;		_fputc
  7210 ;; This function is called by:
  7211 ;;		_pad
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text24
  7216  0022FE                     __ptext24:
  7217                           	callstack 0
  7218  0022FE                     _fputs:
  7219                           	callstack 18
  7220  0022FE  0E00               	movlw	0
  7221  002300  6E18               	movwf	(fputs@i+1)^0,c
  7222  002302  0E00               	movlw	0
  7223  002304  6E17               	movwf	fputs@i^0,c
  7224  002306  EF90  F011         	goto	l2909
  7225  00230A                     l2905:
  7226  00230A  C016  F009         	movff	fputs@c,fputc@c
  7227  00230E  6A0A               	clrf	(fputc@c+1)^0,c
  7228  002310  C014  F00B         	movff	fputs@fp,fputc@fp
  7229  002314  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  7230  002318  ECF4  F00F         	call	_fputc	;wreg free
  7231  00231C  4A17               	infsnz	fputs@i^0,f,c
  7232  00231E  2A18               	incf	(fputs@i+1)^0,f,c
  7233  002320                     l2909:
  7234  002320  5017               	movf	fputs@i^0,w,c
  7235  002322  2412               	addwf	fputs@s^0,w,c
  7236  002324  6ED9               	movwf	fsr2l,c
  7237  002326  5018               	movf	(fputs@i+1)^0,w,c
  7238  002328  2013               	addwfc	(fputs@s+1)^0,w,c
  7239  00232A  6EDA               	movwf	fsr2h,c
  7240  00232C  50DF               	movf	indf2,w,c
  7241  00232E  6E16               	movwf	fputs@c^0,c
  7242  002330  5016               	movf	fputs@c^0,w,c
  7243  002332  A4D8               	btfss	status,2,c
  7244  002334  EF9E  F011         	goto	u1761
  7245  002338  EFA0  F011         	goto	u1760
  7246  00233C                     u1761:
  7247  00233C  EF85  F011         	goto	l2905
  7248  002340                     u1760:
  7249  002340  0012               	return		;funcret
  7250  002342                     __end_of_fputs:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function _fputc *****************
  7254 ;; Defined at:
  7255 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  c               2    8[COMRAM] int 
  7258 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  7259 ;;		 -> NULL(0), 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  2    8[COMRAM] int 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;Total ram usage:        9 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    6
  7278 ;; This function calls:
  7279 ;;		_putch
  7280 ;; This function is called by:
  7281 ;;		_pad
  7282 ;;		_stoa
  7283 ;;		_vfpfcnvrt
  7284 ;;		_fputs
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text25
  7289  001FE8                     __ptext25:
  7290                           	callstack 0
  7291  001FE8                     _fputc:
  7292                           	callstack 18
  7293  001FE8  500B               	movf	fputc@fp^0,w,c
  7294  001FEA  100C               	iorwf	(fputc@fp+1)^0,w,c
  7295  001FEC  B4D8               	btfsc	status,2,c
  7296  001FEE  EFFB  F00F         	goto	u1721
  7297  001FF2  EFFD  F00F         	goto	u1720
  7298  001FF6                     u1721:
  7299  001FF6  EF06  F010         	goto	l2893
  7300  001FFA                     u1720:
  7301  001FFA  500B               	movf	fputc@fp^0,w,c
  7302  001FFC  100C               	iorwf	(fputc@fp+1)^0,w,c
  7303  001FFE  A4D8               	btfss	status,2,c
  7304  002000  EF04  F010         	goto	u1731
  7305  002004  EF06  F010         	goto	u1730
  7306  002008                     u1731:
  7307  002008  EF0B  F010         	goto	l2895
  7308  00200C                     u1730:
  7309  00200C                     l2893:
  7310  00200C  5009               	movf	fputc@c^0,w,c
  7311  00200E  EC9C  F013         	call	_putch
  7312  002012  EF3E  F010         	goto	l1514
  7313  002016                     l2895:
  7314  002016  EE20 F004          	lfsr	2,4
  7315  00201A  500B               	movf	fputc@fp^0,w,c
  7316  00201C  26D9               	addwf	fsr2l,f,c
  7317  00201E  500C               	movf	(fputc@fp+1)^0,w,c
  7318  002020  22DA               	addwfc	fsr2h,f,c
  7319  002022  50DE               	movf	postinc2,w,c
  7320  002024  10DE               	iorwf	postinc2,w,c
  7321  002026  B4D8               	btfsc	status,2,c
  7322  002028  EF18  F010         	goto	u1741
  7323  00202C  EF1A  F010         	goto	u1740
  7324  002030                     u1741:
  7325  002030  EF35  F010         	goto	l2899
  7326  002034                     u1740:
  7327  002034  EE20 F004          	lfsr	2,4
  7328  002038  500B               	movf	fputc@fp^0,w,c
  7329  00203A  26D9               	addwf	fsr2l,f,c
  7330  00203C  500C               	movf	(fputc@fp+1)^0,w,c
  7331  00203E  22DA               	addwfc	fsr2h,f,c
  7332  002040  EE10 F002          	lfsr	1,2
  7333  002044  500B               	movf	fputc@fp^0,w,c
  7334  002046  26E1               	addwf	fsr1l,f,c
  7335  002048  500C               	movf	(fputc@fp+1)^0,w,c
  7336  00204A  22E2               	addwfc	fsr1h,f,c
  7337  00204C  50DE               	movf	postinc2,w,c
  7338  00204E  5CE6               	subwf	postinc1,w,c
  7339  002050  50E6               	movf	postinc1,w,c
  7340  002052  0A80               	xorlw	128
  7341  002054  6E11               	movwf	(??_fputc+4)^0,c
  7342  002056  50DE               	movf	postinc2,w,c
  7343  002058  0A80               	xorlw	128
  7344  00205A  5811               	subwfb	(??_fputc+4)^0,w,c
  7345  00205C  B0D8               	btfsc	status,0,c
  7346  00205E  EF33  F010         	goto	u1751
  7347  002062  EF35  F010         	goto	u1750
  7348  002066                     u1751:
  7349  002066  EF3E  F010         	goto	l1514
  7350  00206A                     u1750:
  7351  00206A                     l2899:
  7352  00206A  EE20 F002          	lfsr	2,2
  7353  00206E  500B               	movf	fputc@fp^0,w,c
  7354  002070  26D9               	addwf	fsr2l,f,c
  7355  002072  500C               	movf	(fputc@fp+1)^0,w,c
  7356  002074  22DA               	addwfc	fsr2h,f,c
  7357  002076  2ADE               	incf	postinc2,f,c
  7358  002078  0E00               	movlw	0
  7359  00207A  22DD               	addwfc	postdec2,f,c
  7360  00207C                     l1514:
  7361  00207C  0012               	return		;funcret
  7362  00207E                     __end_of_fputc:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function _putch *****************
  7366 ;; Defined at:
  7367 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  txData          1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  txData          1    7[COMRAM] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    5
  7388 ;; This function calls:
  7389 ;;		_EUSART1_Write
  7390 ;; This function is called by:
  7391 ;;		_fputc
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text26
  7396  002738                     __ptext26:
  7397                           	callstack 0
  7398  002738                     _putch:
  7399                           	callstack 18
  7400                           
  7401                           ;incstack = 0
  7402                           ;putch@txData stored from wreg
  7403  002738  6E08               	movwf	putch@txData^0,c
  7404  00273A                     
  7405                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  7406  00273A  5008               	movf	putch@txData^0,w,c
  7407  00273C  EC6C  F013         	call	_EUSART1_Write
  7408  002740  0012               	return		;funcret
  7409  002742                     __end_of_putch:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _EUSART1_Write *****************
  7413 ;; Defined at:
  7414 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  txData          1    wreg     unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  txData          1    6[COMRAM] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;Total ram usage:        1 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    4
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_putch
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text27
  7443  0026D8                     __ptext27:
  7444                           	callstack 0
  7445  0026D8                     _EUSART1_Write:
  7446                           	callstack 18
  7447                           
  7448                           ;incstack = 0
  7449                           ;EUSART1_Write@txData stored from wreg
  7450  0026D8  6E07               	movwf	EUSART1_Write@txData^0,c
  7451  0026DA                     l340:
  7452                           
  7453                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  7454  0026DA  A89E               	btfss	158,4,c	;volatile
  7455  0026DC  EF72  F013         	goto	u1711
  7456  0026E0  EF74  F013         	goto	u1710
  7457  0026E4                     u1711:
  7458  0026E4  EF6D  F013         	goto	l340
  7459  0026E8                     u1710:
  7460  0026E8                     
  7461                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  7462  0026E8  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  7463  0026EC  0012               	return		;funcret
  7464  0026EE                     __end_of_EUSART1_Write:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function _atoi *****************
  7468 ;; Defined at:
  7469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7472 ;;		 -> STR_49(17), STR_48(16), STR_47(15), STR_46(14), 
  7473 ;;		 -> STR_45(40), STR_44(16), STR_43(15), STR_42(11), 
  7474 ;;		 -> STR_41(16), STR_40(17), STR_39(3), STR_38(3), 
  7475 ;;		 -> STR_37(2), STR_36(41), STR_35(21), STR_34(31), 
  7476 ;;		 -> STR_33(16), STR_32(15), STR_31(15), STR_30(15), 
  7477 ;;		 -> STR_29(14), STR_28(43), STR_27(2), STR_26(2), 
  7478 ;;		 -> STR_25(8), STR_24(52), STR_23(54), STR_22(32), 
  7479 ;;		 -> STR_21(35), STR_20(19), STR_19(46), STR_18(24), 
  7480 ;;		 -> STR_17(21), STR_16(7), STR_15(15), STR_14(52), 
  7481 ;;		 -> STR_13(12), STR_12(13), STR_11(12), STR_10(12), 
  7482 ;;		 -> STR_9(12), STR_8(11), STR_7(52), STR_6(5), 
  7483 ;;		 -> STR_5(42), STR_4(70), STR_3(22), STR_2(34), 
  7484 ;;		 -> STR_1(8), 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  n               2   26[COMRAM] int 
  7487 ;;  neg             2   19[COMRAM] int 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2   13[COMRAM] int 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;Total ram usage:       15 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    5
  7504 ;; This function calls:
  7505 ;;		___wmul
  7506 ;;		_isdigit
  7507 ;;		_isspace
  7508 ;; This function is called by:
  7509 ;;		_vfpfcnvrt
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text28
  7514  00150A                     __ptext28:
  7515                           	callstack 0
  7516  00150A                     _atoi:
  7517                           	callstack 22
  7518  00150A  0E00               	movlw	0
  7519  00150C  6E1C               	movwf	(atoi@n+1)^0,c
  7520  00150E  0E00               	movlw	0
  7521  001510  6E1B               	movwf	atoi@n^0,c
  7522  001512  0E00               	movlw	0
  7523  001514  6E15               	movwf	(atoi@neg+1)^0,c
  7524  001516  0E00               	movlw	0
  7525  001518  6E14               	movwf	atoi@neg^0,c
  7526  00151A  EF91  F00A         	goto	l3333
  7527  00151E                     l3331:
  7528  00151E  4A0E               	infsnz	atoi@s^0,f,c
  7529  001520  2A0F               	incf	(atoi@s+1)^0,f,c
  7530  001522                     l3333:
  7531  001522  0E01               	movlw	1
  7532  001524  6E1A               	movwf	_atoi$1985^0,c
  7533  001526  C00E  FFF6         	movff	atoi@s,tblptrl
  7534  00152A  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7535  00152E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7536  00152E  6AF8               	clrf	tblptru,c
  7537  001530                     	endif
  7538  001530                     	if	0	;tblptru may be non-zero
  7539  001530                     	endif
  7540  001530  0008               	tblrd		*
  7541  001532  50F5               	movf	tablat,w,c
  7542  001534  0A20               	xorlw	32
  7543  001536  B4D8               	btfsc	status,2,c
  7544  001538  EFA0  F00A         	goto	u2651
  7545  00153C  EFA2  F00A         	goto	u2650
  7546  001540                     u2651:
  7547  001540  EFC0  F00A         	goto	l3341
  7548  001544                     u2650:
  7549  001544  0EF7               	movlw	247
  7550  001546  6E10               	movwf	??_atoi^0,c
  7551  001548  0EFF               	movlw	255
  7552  00154A  6E11               	movwf	(??_atoi+1)^0,c
  7553  00154C  C00E  FFF6         	movff	atoi@s,tblptrl
  7554  001550  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7555  001554                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7556  001554  6AF8               	clrf	tblptru,c
  7557  001556                     	endif
  7558  001556                     	if	0	;tblptru may be non-zero
  7559  001556                     	endif
  7560  001556  0008               	tblrd		*
  7561  001558  50F5               	movf	tablat,w,c
  7562  00155A  6E12               	movwf	(??_atoi+2)^0,c
  7563  00155C  6A13               	clrf	(??_atoi+3)^0,c
  7564  00155E  5010               	movf	??_atoi^0,w,c
  7565  001560  2612               	addwf	(??_atoi+2)^0,f,c
  7566  001562  5011               	movf	(??_atoi+1)^0,w,c
  7567  001564  2213               	addwfc	(??_atoi+3)^0,f,c
  7568  001566  5013               	movf	(??_atoi+3)^0,w,c
  7569  001568  E109               	bnz	u2660
  7570  00156A  0E05               	movlw	5
  7571  00156C  5C12               	subwf	(??_atoi+2)^0,w,c
  7572  00156E  A0D8               	btfss	status,0,c
  7573  001570  EFBC  F00A         	goto	u2661
  7574  001574  EFBE  F00A         	goto	u2660
  7575  001578                     u2661:
  7576  001578  EFC0  F00A         	goto	l3341
  7577  00157C                     u2660:
  7578  00157C  0E00               	movlw	0
  7579  00157E  6E1A               	movwf	_atoi$1985^0,c
  7580  001580                     l3341:
  7581  001580  C01A  F016         	movff	_atoi$1985,_atoi$1984
  7582  001584  6A17               	clrf	(_atoi$1984+1)^0,c
  7583  001586  5016               	movf	_atoi$1984^0,w,c
  7584  001588  1017               	iorwf	(_atoi$1984+1)^0,w,c
  7585  00158A  A4D8               	btfss	status,2,c
  7586  00158C  EFCA  F00A         	goto	u2671
  7587  001590  EFCC  F00A         	goto	u2670
  7588  001594                     u2671:
  7589  001594  EF8F  F00A         	goto	l3331
  7590  001598                     u2670:
  7591  001598  EFD6  F00A         	goto	l3351
  7592  00159C                     l3347:
  7593  00159C  0E00               	movlw	0
  7594  00159E  6E15               	movwf	(atoi@neg+1)^0,c
  7595  0015A0  0E01               	movlw	1
  7596  0015A2  6E14               	movwf	atoi@neg^0,c
  7597  0015A4                     l3349:
  7598  0015A4  4A0E               	infsnz	atoi@s^0,f,c
  7599  0015A6  2A0F               	incf	(atoi@s+1)^0,f,c
  7600  0015A8  EF0D  F00B         	goto	l3357
  7601  0015AC                     l3351:
  7602  0015AC  C00E  FFF6         	movff	atoi@s,tblptrl
  7603  0015B0  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7604  0015B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7605  0015B4  6AF8               	clrf	tblptru,c
  7606  0015B6                     	endif
  7607  0015B6                     	if	0	;tblptru may be non-zero
  7608  0015B6                     	endif
  7609  0015B6  0008               	tblrd		*
  7610  0015B8  50F5               	movf	tablat,w,c
  7611  0015BA  6E10               	movwf	??_atoi^0,c
  7612  0015BC  6A11               	clrf	(??_atoi+1)^0,c
  7613                           
  7614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7615                           ; Switch size 1, requested type "simple"
  7616                           ; Number of cases is 1, Range of values is 0 to 0
  7617                           ; switch strategies available:
  7618                           ; Name         Instructions Cycles
  7619                           ; simple_byte            4     3 (average)
  7620                           ;	Chosen strategy is simple_byte
  7621  0015BE  5011               	movf	(??_atoi+1)^0,w,c
  7622  0015C0  0A00               	xorlw	0	; case 0
  7623  0015C2  B4D8               	btfsc	status,2,c
  7624  0015C4  EFE6  F00A         	goto	l4727
  7625  0015C8  EF0D  F00B         	goto	l3357
  7626  0015CC                     l4727:
  7627                           
  7628                           ; Switch size 1, requested type "simple"
  7629                           ; Number of cases is 2, Range of values is 43 to 45
  7630                           ; switch strategies available:
  7631                           ; Name         Instructions Cycles
  7632                           ; simple_byte            7     4 (average)
  7633                           ;	Chosen strategy is simple_byte
  7634  0015CC  5010               	movf	??_atoi^0,w,c
  7635  0015CE  0A2B               	xorlw	43	; case 43
  7636  0015D0  B4D8               	btfsc	status,2,c
  7637  0015D2  EFD2  F00A         	goto	l3349
  7638  0015D6  0A06               	xorlw	6	; case 45
  7639  0015D8  B4D8               	btfsc	status,2,c
  7640  0015DA  EFCE  F00A         	goto	l3347
  7641  0015DE  EF0D  F00B         	goto	l3357
  7642  0015E2                     l3353:
  7643  0015E2  C01B  F007         	movff	atoi@n,___wmul@multiplier
  7644  0015E6  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  7645  0015EA  0E00               	movlw	0
  7646  0015EC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  7647  0015EE  0E0A               	movlw	10
  7648  0015F0  6E09               	movwf	___wmul@multiplicand^0,c
  7649  0015F2  EC10  F013         	call	___wmul	;wreg free
  7650  0015F6  C00E  FFF6         	movff	atoi@s,tblptrl
  7651  0015FA  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7652  0015FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7653  0015FE  6AF8               	clrf	tblptru,c
  7654  001600                     	endif
  7655  001600                     	if	0	;tblptru may be non-zero
  7656  001600                     	endif
  7657  001600  0008               	tblrd		*
  7658  001602  50F5               	movf	tablat,w,c
  7659  001604  5E07               	subwf	?___wmul^0,f,c
  7660  001606  0E00               	movlw	0
  7661  001608  5A08               	subwfb	(?___wmul+1)^0,f,c
  7662  00160A  0E30               	movlw	48
  7663  00160C  2407               	addwf	?___wmul^0,w,c
  7664  00160E  6E1B               	movwf	atoi@n^0,c
  7665  001610  0E00               	movlw	0
  7666  001612  2008               	addwfc	(?___wmul+1)^0,w,c
  7667  001614  6E1C               	movwf	(atoi@n+1)^0,c
  7668  001616  EFD2  F00A         	goto	l3349
  7669  00161A                     l3357:
  7670  00161A  0ED0               	movlw	208
  7671  00161C  6E10               	movwf	??_atoi^0,c
  7672  00161E  0EFF               	movlw	255
  7673  001620  6E11               	movwf	(??_atoi+1)^0,c
  7674  001622  C00E  FFF6         	movff	atoi@s,tblptrl
  7675  001626  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7676  00162A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7677  00162A  6AF8               	clrf	tblptru,c
  7678  00162C                     	endif
  7679  00162C                     	if	0	;tblptru may be non-zero
  7680  00162C                     	endif
  7681  00162C  0008               	tblrd		*
  7682  00162E  50F5               	movf	tablat,w,c
  7683  001630  6E12               	movwf	(??_atoi+2)^0,c
  7684  001632  6A13               	clrf	(??_atoi+3)^0,c
  7685  001634  5010               	movf	??_atoi^0,w,c
  7686  001636  2612               	addwf	(??_atoi+2)^0,f,c
  7687  001638  5011               	movf	(??_atoi+1)^0,w,c
  7688  00163A  2213               	addwfc	(??_atoi+3)^0,f,c
  7689  00163C  5013               	movf	(??_atoi+3)^0,w,c
  7690  00163E  E10A               	bnz	u2680
  7691  001640  0E0A               	movlw	10
  7692  001642  5C12               	subwf	(??_atoi+2)^0,w,c
  7693  001644  A0D8               	btfss	status,0,c
  7694  001646  EF27  F00B         	goto	u2681
  7695  00164A  EF2A  F00B         	goto	u2680
  7696  00164E                     u2681:
  7697  00164E  0E01               	movlw	1
  7698  001650  EF2B  F00B         	goto	u2690
  7699  001654                     u2680:
  7700  001654  0E00               	movlw	0
  7701  001656                     u2690:
  7702  001656  6E18               	movwf	_atoi$1986^0,c
  7703  001658  6A19               	clrf	(_atoi$1986+1)^0,c
  7704  00165A  5018               	movf	_atoi$1986^0,w,c
  7705  00165C  1019               	iorwf	(_atoi$1986+1)^0,w,c
  7706  00165E  A4D8               	btfss	status,2,c
  7707  001660  EF34  F00B         	goto	u2701
  7708  001664  EF36  F00B         	goto	u2700
  7709  001668                     u2701:
  7710  001668  EFF1  F00A         	goto	l3353
  7711  00166C                     u2700:
  7712  00166C  5014               	movf	atoi@neg^0,w,c
  7713  00166E  1015               	iorwf	(atoi@neg+1)^0,w,c
  7714  001670  A4D8               	btfss	status,2,c
  7715  001672  EF3D  F00B         	goto	u2711
  7716  001676  EF3F  F00B         	goto	u2710
  7717  00167A                     u2711:
  7718  00167A  EF4D  F00B         	goto	l1473
  7719  00167E                     u2710:
  7720  00167E  C01B  F010         	movff	atoi@n,??_atoi
  7721  001682  C01C  F011         	movff	atoi@n+1,??_atoi+1
  7722  001686  1E10               	comf	??_atoi^0,f,c
  7723  001688  1E11               	comf	(??_atoi+1)^0,f,c
  7724  00168A  4A10               	infsnz	??_atoi^0,f,c
  7725  00168C  2A11               	incf	(??_atoi+1)^0,f,c
  7726  00168E  C010  F00E         	movff	??_atoi,?_atoi
  7727  001692  C011  F00F         	movff	??_atoi+1,?_atoi+1
  7728  001696  EF51  F00B         	goto	l1476
  7729  00169A                     l1473:
  7730  00169A  C01B  F00E         	movff	atoi@n,?_atoi
  7731  00169E  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  7732  0016A2                     l1476:
  7733  0016A2  0012               	return		;funcret
  7734  0016A4                     __end_of_atoi:
  7735                           	callstack 0
  7736                           
  7737 ;; *************** function _isspace *****************
  7738 ;; Defined at:
  7739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  c               2    6[COMRAM] int 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  2    6[COMRAM] int 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;Total ram usage:        7 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    4
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_atoi
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text29
  7768  002212                     __ptext29:
  7769                           	callstack 0
  7770  002212                     _isspace:
  7771                           	callstack 22
  7772  002212  0E01               	movlw	1
  7773  002214  6E0D               	movwf	_isspace$2011^0,c
  7774  002216  0E20               	movlw	32
  7775  002218  1807               	xorwf	isspace@c^0,w,c
  7776  00221A  1008               	iorwf	(isspace@c+1)^0,w,c
  7777  00221C  B4D8               	btfsc	status,2,c
  7778  00221E  EF13  F011         	goto	u2141
  7779  002222  EF15  F011         	goto	u2140
  7780  002226                     u2141:
  7781  002226  EF2E  F011         	goto	l3105
  7782  00222A                     u2140:
  7783  00222A  0EF7               	movlw	247
  7784  00222C  6E09               	movwf	??_isspace^0,c
  7785  00222E  0EFF               	movlw	255
  7786  002230  6E0A               	movwf	(??_isspace+1)^0,c
  7787  002232  C007  F00B         	movff	isspace@c,??_isspace+2
  7788  002236  C008  F00C         	movff	isspace@c+1,??_isspace+3
  7789  00223A  5009               	movf	??_isspace^0,w,c
  7790  00223C  260B               	addwf	(??_isspace+2)^0,f,c
  7791  00223E  500A               	movf	(??_isspace+1)^0,w,c
  7792  002240  220C               	addwfc	(??_isspace+3)^0,f,c
  7793  002242  500C               	movf	(??_isspace+3)^0,w,c
  7794  002244  E109               	bnz	u2150
  7795  002246  0E05               	movlw	5
  7796  002248  5C0B               	subwf	(??_isspace+2)^0,w,c
  7797  00224A  A0D8               	btfss	status,0,c
  7798  00224C  EF2A  F011         	goto	u2151
  7799  002250  EF2C  F011         	goto	u2150
  7800  002254                     u2151:
  7801  002254  EF2E  F011         	goto	l3105
  7802  002258                     u2150:
  7803  002258  0E00               	movlw	0
  7804  00225A  6E0D               	movwf	_isspace$2011^0,c
  7805  00225C                     l3105:
  7806  00225C  C00D  F007         	movff	_isspace$2011,?_isspace
  7807  002260  6A08               	clrf	(?_isspace+1)^0,c
  7808  002262  0012               	return		;funcret
  7809  002264                     __end_of_isspace:
  7810                           	callstack 0
  7811                           
  7812 ;; *************** function _isdigit *****************
  7813 ;; Defined at:
  7814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  c               2    6[COMRAM] int 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  2    6[COMRAM] int 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;Total ram usage:        6 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    4
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_vfpfcnvrt
  7839 ;;		_atoi
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text30
  7844  0024B0                     __ptext30:
  7845                           	callstack 0
  7846  0024B0                     _isdigit:
  7847                           	callstack 23
  7848  0024B0  0ED0               	movlw	208
  7849  0024B2  6E09               	movwf	??_isdigit^0,c
  7850  0024B4  0EFF               	movlw	255
  7851  0024B6  6E0A               	movwf	(??_isdigit+1)^0,c
  7852  0024B8  C007  F00B         	movff	isdigit@c,??_isdigit+2
  7853  0024BC  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  7854  0024C0  5009               	movf	??_isdigit^0,w,c
  7855  0024C2  260B               	addwf	(??_isdigit+2)^0,f,c
  7856  0024C4  500A               	movf	(??_isdigit+1)^0,w,c
  7857  0024C6  220C               	addwfc	(??_isdigit+3)^0,f,c
  7858  0024C8  500C               	movf	(??_isdigit+3)^0,w,c
  7859  0024CA  E10A               	bnz	u2120
  7860  0024CC  0E0A               	movlw	10
  7861  0024CE  5C0B               	subwf	(??_isdigit+2)^0,w,c
  7862  0024D0  A0D8               	btfss	status,0,c
  7863  0024D2  EF6D  F012         	goto	u2121
  7864  0024D6  EF70  F012         	goto	u2120
  7865  0024DA                     u2121:
  7866  0024DA  0E01               	movlw	1
  7867  0024DC  EF71  F012         	goto	u2130
  7868  0024E0                     u2120:
  7869  0024E0  0E00               	movlw	0
  7870  0024E2                     u2130:
  7871  0024E2  6E07               	movwf	?_isdigit^0,c
  7872  0024E4  6A08               	clrf	(?_isdigit+1)^0,c
  7873  0024E6  0012               	return		;funcret
  7874  0024E8                     __end_of_isdigit:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function ___wmul *****************
  7878 ;; Defined at:
  7879 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  multiplier      2    6[COMRAM] unsigned int 
  7882 ;;  multiplicand    2    8[COMRAM] unsigned int 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  product         2   10[COMRAM] unsigned int 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  2    6[COMRAM] unsigned int 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0, prodl, prodh
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;Total ram usage:        6 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    4
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_atoi
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text31
  7909  002620                     __ptext31:
  7910                           	callstack 0
  7911  002620                     ___wmul:
  7912                           	callstack 22
  7913  002620  5007               	movf	___wmul@multiplier^0,w,c
  7914  002622  0209               	mulwf	___wmul@multiplicand^0,c
  7915  002624  CFF3 F00B          	movff	prodl,___wmul@product
  7916  002628  CFF4 F00C          	movff	prodh,___wmul@product+1
  7917  00262C  5007               	movf	___wmul@multiplier^0,w,c
  7918  00262E  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  7919  002630  50F3               	movf	243,w,c
  7920  002632  260C               	addwf	(___wmul@product+1)^0,f,c
  7921  002634  5008               	movf	(___wmul@multiplier+1)^0,w,c
  7922  002636  0209               	mulwf	___wmul@multiplicand^0,c
  7923  002638  50F3               	movf	243,w,c
  7924  00263A  260C               	addwf	(___wmul@product+1)^0,f,c
  7925  00263C  C00B  F007         	movff	___wmul@product,?___wmul
  7926  002640  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  7927  002644  0012               	return		;funcret
  7928  002646                     __end_of___wmul:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function _SYSTEM_Initialize *****************
  7932 ;; Defined at:
  7933 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    6
  7954 ;; This function calls:
  7955 ;;		_EPWM2_Initialize
  7956 ;;		_EUSART1_Initialize
  7957 ;;		_EUSART2_Initialize
  7958 ;;		_INTERRUPT_Initialize
  7959 ;;		_OSCILLATOR_Initialize
  7960 ;;		_PIN_MANAGER_Initialize
  7961 ;;		_TMR1_Initialize
  7962 ;;		_TMR2_Initialize
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text32
  7969  002646                     __ptext32:
  7970                           	callstack 0
  7971  002646                     _SYSTEM_Initialize:
  7972                           	callstack 24
  7973  002646                     
  7974                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7975  002646  ECCF  F013         	call	_INTERRUPT_Initialize	;wreg free
  7976  00264A                     
  7977                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7978  00264A  ECA7  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  7979  00264E                     
  7980                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7981  00264E  EC52  F013         	call	_OSCILLATOR_Initialize	;wreg free
  7982  002652                     
  7983                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  7984  002652  EC34  F013         	call	_EPWM2_Initialize	;wreg free
  7985  002656                     
  7986                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7987  002656  EC94  F013         	call	_TMR2_Initialize	;wreg free
  7988  00265A                     
  7989                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7990  00265A  EC44  F013         	call	_TMR1_Initialize	;wreg free
  7991  00265E                     
  7992                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  7993  00265E  ECE2  F011         	call	_EUSART1_Initialize	;wreg free
  7994  002662                     
  7995                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  7996  002662  EC3F  F010         	call	_EUSART2_Initialize	;wreg free
  7997  002666  0012               	return		;funcret
  7998  002668                     __end_of_SYSTEM_Initialize:
  7999                           	callstack 0
  8000                           
  8001 ;; *************** function _TMR2_Initialize *****************
  8002 ;; Defined at:
  8003 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    4
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_SYSTEM_Initialize
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text33
  8032  002728                     __ptext33:
  8033                           	callstack 0
  8034  002728                     _TMR2_Initialize:
  8035                           	callstack 25
  8036  002728                     
  8037                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x67;
  8038  002728  0E67               	movlw	103
  8039  00272A  6EBB               	movwf	187,c	;volatile
  8040                           
  8041                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8042  00272C  0E00               	movlw	0
  8043  00272E  6EBC               	movwf	188,c	;volatile
  8044  002730                     
  8045                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8046  002730  929E               	bcf	158,1,c	;volatile
  8047                           
  8048                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  8049  002732  0E05               	movlw	5
  8050  002734  6EBA               	movwf	186,c	;volatile
  8051  002736  0012               	return		;funcret
  8052  002738                     __end_of_TMR2_Initialize:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _TMR1_Initialize *****************
  8056 ;; Defined at:
  8057 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    4
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_SYSTEM_Initialize
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text34
  8086  002688                     __ptext34:
  8087                           	callstack 0
  8088  002688                     _TMR1_Initialize:
  8089                           	callstack 25
  8090  002688                     
  8091                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8092  002688  0E00               	movlw	0
  8093  00268A  6ECC               	movwf	204,c	;volatile
  8094                           
  8095                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8096  00268C  0E00               	movlw	0
  8097  00268E  6ECF               	movwf	207,c	;volatile
  8098                           
  8099                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8100  002690  0E00               	movlw	0
  8101  002692  6ECE               	movwf	206,c	;volatile
  8102  002694                     
  8103                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  8104  002694  CFCE F08C          	movff	4046,_timer1ReloadVal	;volatile
  8105  002698  CFCF F08D          	movff	4047,_timer1ReloadVal+1	;volatile
  8106  00269C                     
  8107                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  8108  00269C  909E               	bcf	158,0,c	;volatile
  8109                           
  8110                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  8111  00269E  0E01               	movlw	1
  8112  0026A0  6ECD               	movwf	205,c	;volatile
  8113  0026A2  0012               	return		;funcret
  8114  0026A4                     __end_of_TMR1_Initialize:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function _PIN_MANAGER_Initialize *****************
  8118 ;; Defined at:
  8119 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;		None
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;Total ram usage:        0 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    4
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_SYSTEM_Initialize
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text35
  8148  00254E                     __ptext35:
  8149                           	callstack 0
  8150  00254E                     _PIN_MANAGER_Initialize:
  8151                           	callstack 25
  8152  00254E                     
  8153                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8154  00254E  0E00               	movlw	0
  8155  002550  6E89               	movwf	137,c	;volatile
  8156                           
  8157                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8158  002552  0E00               	movlw	0
  8159  002554  6E8A               	movwf	138,c	;volatile
  8160                           
  8161                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8162  002556  0E00               	movlw	0
  8163  002558  6E8B               	movwf	139,c	;volatile
  8164  00255A                     
  8165                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8166  00255A  6892               	setf	146,c	;volatile
  8167                           
  8168                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  8169  00255C  0EBF               	movlw	191
  8170  00255E  6E93               	movwf	147,c	;volatile
  8171                           
  8172                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  8173  002560  0EBD               	movlw	189
  8174  002562  6E94               	movwf	148,c	;volatile
  8175                           
  8176                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8177  002564  0E3C               	movlw	60
  8178  002566  010F               	movlb	15	; () banked
  8179  002568  6F3A               	movwf	58,b	;volatile
  8180                           
  8181                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  8182  00256A  0E3F               	movlw	63
  8183  00256C  6F39               	movwf	57,b	;volatile
  8184                           
  8185                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8186  00256E  0E2F               	movlw	47
  8187  002570  6F38               	movwf	56,b	;volatile
  8188                           
  8189                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8190  002572  0E00               	movlw	0
  8191  002574  6E61               	movwf	97,c	;volatile
  8192  002576                     
  8193                           ; BSR set to: 15
  8194                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8195  002576  8EF1               	bsf	241,7,c	;volatile
  8196  002578                     
  8197                           ; BSR set to: 15
  8198  002578  0012               	return		;funcret
  8199  00257A                     __end_of_PIN_MANAGER_Initialize:
  8200                           	callstack 0
  8201                           
  8202 ;; *************** function _OSCILLATOR_Initialize *****************
  8203 ;; Defined at:
  8204 ;;		line 63 in file "mcc_generated_files/mcc.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;Total ram usage:        0 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    4
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_SYSTEM_Initialize
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text36
  8233  0026A4                     __ptext36:
  8234                           	callstack 0
  8235  0026A4                     _OSCILLATOR_Initialize:
  8236                           	callstack 25
  8237  0026A4                     
  8238                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  8239  0026A4  0E70               	movlw	112
  8240  0026A6  6ED3               	movwf	211,c	;volatile
  8241                           
  8242                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  8243  0026A8  0E04               	movlw	4
  8244  0026AA  6ED2               	movwf	210,c	;volatile
  8245                           
  8246                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  8247  0026AC  0E40               	movlw	64
  8248  0026AE  6E9B               	movwf	155,c	;volatile
  8249  0026B0                     l397:
  8250                           
  8251                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  8252  0026B0  AED2               	btfss	4050,7,c	;volatile
  8253  0026B2  EF5D  F013         	goto	u2911
  8254  0026B6  EF5F  F013         	goto	u2910
  8255  0026BA                     u2911:
  8256  0026BA  EF58  F013         	goto	l397
  8257  0026BE                     u2910:
  8258  0026BE  0012               	return		;funcret
  8259  0026C0                     __end_of_OSCILLATOR_Initialize:
  8260                           	callstack 0
  8261                           
  8262 ;; *************** function _INTERRUPT_Initialize *****************
  8263 ;; Defined at:
  8264 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		None
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    4
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_SYSTEM_Initialize
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text37
  8293  00279E                     __ptext37:
  8294                           	callstack 0
  8295  00279E                     _INTERRUPT_Initialize:
  8296                           	callstack 25
  8297  00279E                     
  8298                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8299  00279E  9ED0               	bcf	208,7,c	;volatile
  8300  0027A0  0012               	return		;funcret
  8301  0027A2                     __end_of_INTERRUPT_Initialize:
  8302                           	callstack 0
  8303                           
  8304 ;; *************** function _EUSART2_Initialize *****************
  8305 ;; Defined at:
  8306 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    5
  8327 ;; This function calls:
  8328 ;;		_EUSART2_SetErrorHandler
  8329 ;;		_EUSART2_SetFramingErrorHandler
  8330 ;;		_EUSART2_SetOverrunErrorHandler
  8331 ;;		_EUSART2_SetRxInterruptHandler
  8332 ;;		_EUSART2_SetTxInterruptHandler
  8333 ;; This function is called by:
  8334 ;;		_SYSTEM_Initialize
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text38
  8339  00207E                     __ptext38:
  8340                           	callstack 0
  8341  00207E                     _EUSART2_Initialize:
  8342                           	callstack 24
  8343  00207E                     
  8344                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  8345  00207E  9AA3               	bcf	163,5,c	;volatile
  8346  002080                     
  8347                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  8348  002080  0E7C               	movlw	low _EUSART2_Receive_ISR
  8349  002082  6E07               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  8350  002084  0E1E               	movlw	high _EUSART2_Receive_ISR
  8351  002086  6E08               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  8352  002088  ECA6  F013         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  8353  00208C                     
  8354                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  8355  00208C  98A3               	bcf	163,4,c	;volatile
  8356                           
  8357                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  8358  00208E  0E42               	movlw	low _EUSART2_Transmit_ISR
  8359  002090  6E07               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  8360  002092  0E23               	movlw	high _EUSART2_Transmit_ISR
  8361  002094  6E08               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  8362  002096  ECA1  F013         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  8363  00209A                     
  8364                           ;mcc_generated_files/eusart2.c: 98:     BAUDCON2 = 0x08;
  8365  00209A  0E08               	movlw	8
  8366  00209C  6E70               	movwf	112,c	;volatile
  8367  00209E                     
  8368                           ;mcc_generated_files/eusart2.c: 101:     RCSTA2 = 0x90;
  8369  00209E  0E90               	movlw	144
  8370  0020A0  6E71               	movwf	113,c	;volatile
  8371  0020A2                     
  8372                           ;mcc_generated_files/eusart2.c: 104:     TXSTA2 = 0x24;
  8373  0020A2  0E24               	movlw	36
  8374  0020A4  6E72               	movwf	114,c	;volatile
  8375  0020A6                     
  8376                           ;mcc_generated_files/eusart2.c: 107:     SPBRG2 = 0x14;
  8377  0020A6  0E14               	movlw	20
  8378  0020A8  6E75               	movwf	117,c	;volatile
  8379  0020AA                     
  8380                           ;mcc_generated_files/eusart2.c: 110:     SPBRGH2 = 0x34;
  8381  0020AA  0E34               	movlw	52
  8382  0020AC  6E76               	movwf	118,c	;volatile
  8383  0020AE                     
  8384                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  8385  0020AE  0EA2               	movlw	low _EUSART2_DefaultFramingErrorHandler
  8386  0020B0  6E07               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  8387  0020B2  0E27               	movlw	high _EUSART2_DefaultFramingErrorHandler
  8388  0020B4  6E08               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  8389  0020B6  ECB0  F013         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  8390  0020BA                     
  8391                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  8392  0020BA  0E92               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  8393  0020BC  6E07               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  8394  0020BE  0E27               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  8395  0020C0  6E08               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8396  0020C2  ECAB  F013         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  8397  0020C6                     
  8398                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  8399  0020C6  0E98               	movlw	low _EUSART2_DefaultErrorHandler
  8400  0020C8  6E07               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  8401  0020CA  0E27               	movlw	high _EUSART2_DefaultErrorHandler
  8402  0020CC  6E08               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  8403  0020CE  ECB5  F013         	call	_EUSART2_SetErrorHandler	;wreg free
  8404                           
  8405                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  8406  0020D2  0E00               	movlw	0
  8407  0020D4  0100               	movlb	0	; () banked
  8408  0020D6  6F96               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8409                           
  8410                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  8411  0020D8  0E00               	movlw	0
  8412  0020DA  6F9A               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8413                           
  8414                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  8415  0020DC  0E00               	movlw	0
  8416  0020DE  6F99               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8417                           
  8418                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  8419  0020E0  0E08               	movlw	8
  8420  0020E2  6F98               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8421                           
  8422                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  8423  0020E4  0E00               	movlw	0
  8424  0020E6  6E58               	movwf	_eusart2RxHead^0,c	;volatile
  8425                           
  8426                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  8427  0020E8  0E00               	movlw	0
  8428  0020EA  6E57               	movwf	_eusart2RxTail^0,c	;volatile
  8429                           
  8430                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  8431  0020EC  0E00               	movlw	0
  8432  0020EE  6F97               	movwf	_eusart2RxCount& (0+255),b	;volatile
  8433  0020F0                     
  8434                           ; BSR set to: 0
  8435                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  8436  0020F0  8AA3               	bsf	163,5,c	;volatile
  8437  0020F2                     
  8438                           ; BSR set to: 0
  8439  0020F2  0012               	return		;funcret
  8440  0020F4                     __end_of_EUSART2_Initialize:
  8441                           	callstack 0
  8442                           
  8443 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  8444 ;; Defined at:
  8445 ;;		line 276 in file "mcc_generated_files/eusart2.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8448 ;;		 -> EUSART2_Transmit_ISR(1), 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;Total ram usage:        2 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    4
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_EUSART2_Initialize
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text39
  8475  002742                     __ptext39:
  8476                           	callstack 0
  8477  002742                     _EUSART2_SetTxInterruptHandler:
  8478                           	callstack 24
  8479  002742                     
  8480                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8481  002742  C007  F08A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  8482  002746  C008  F08B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  8483  00274A  0012               	return		;funcret
  8484  00274C                     __end_of_EUSART2_SetTxInterruptHandler:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  8488 ;; Defined at:
  8489 ;;		line 280 in file "mcc_generated_files/eusart2.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8492 ;;		 -> myEUSART2ISR(1), EUSART2_Receive_ISR(1), 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;Total ram usage:        2 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    4
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_EUSART2_Initialize
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text40
  8520  00274C                     __ptext40:
  8521                           	callstack 0
  8522  00274C                     _EUSART2_SetRxInterruptHandler:
  8523                           	callstack 24
  8524  00274C                     
  8525                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8526  00274C  C007  F088         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  8527  002750  C008  F089         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  8528  002754  0012               	return		;funcret
  8529  002756                     __end_of_EUSART2_SetRxInterruptHandler:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  8533 ;; Defined at:
  8534 ;;		line 268 in file "mcc_generated_files/eusart2.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8537 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;Total ram usage:        2 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    4
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_EUSART2_Initialize
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text41
  8564  002756                     __ptext41:
  8565                           	callstack 0
  8566  002756                     _EUSART2_SetOverrunErrorHandler:
  8567                           	callstack 24
  8568  002756                     
  8569                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
  8570  002756  C007  F084         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  8571  00275A  C008  F085         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  8572  00275E  0012               	return		;funcret
  8573  002760                     __end_of_EUSART2_SetOverrunErrorHandler:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  8577 ;; Defined at:
  8578 ;;		line 264 in file "mcc_generated_files/eusart2.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8581 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;Total ram usage:        2 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    4
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_EUSART2_Initialize
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text42
  8608  002760                     __ptext42:
  8609                           	callstack 0
  8610  002760                     _EUSART2_SetFramingErrorHandler:
  8611                           	callstack 24
  8612  002760                     
  8613                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
  8614  002760  C007  F086         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  8615  002764  C008  F087         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  8616  002768  0012               	return		;funcret
  8617  00276A                     __end_of_EUSART2_SetFramingErrorHandler:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _EUSART2_SetErrorHandler *****************
  8621 ;; Defined at:
  8622 ;;		line 272 in file "mcc_generated_files/eusart2.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8625 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;Total ram usage:        2 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    4
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_EUSART2_Initialize
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text43
  8652  00276A                     __ptext43:
  8653                           	callstack 0
  8654  00276A                     _EUSART2_SetErrorHandler:
  8655                           	callstack 24
  8656  00276A                     
  8657                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
  8658  00276A  C007  F082         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  8659  00276E  C008  F083         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  8660  002772  0012               	return		;funcret
  8661  002774                     __end_of_EUSART2_SetErrorHandler:
  8662                           	callstack 0
  8663                           
  8664 ;; *************** function _EUSART1_Initialize *****************
  8665 ;; Defined at:
  8666 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;		None
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;		None
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1    wreg      void 
  8673 ;; Registers used:
  8674 ;;		wreg, status,2, status,0, cstack
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;Total ram usage:        0 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    5
  8687 ;; This function calls:
  8688 ;;		_EUSART1_SetErrorHandler
  8689 ;;		_EUSART1_SetFramingErrorHandler
  8690 ;;		_EUSART1_SetOverrunErrorHandler
  8691 ;; This function is called by:
  8692 ;;		_SYSTEM_Initialize
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text44
  8697  0023C4                     __ptext44:
  8698                           	callstack 0
  8699  0023C4                     _EUSART1_Initialize:
  8700                           	callstack 24
  8701  0023C4                     
  8702                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8703  0023C4  0E08               	movlw	8
  8704  0023C6  6EB8               	movwf	184,c	;volatile
  8705                           
  8706                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8707  0023C8  0E90               	movlw	144
  8708  0023CA  6EAB               	movwf	171,c	;volatile
  8709                           
  8710                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8711  0023CC  0E24               	movlw	36
  8712  0023CE  6EAC               	movwf	172,c	;volatile
  8713                           
  8714                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8715  0023D0  0E82               	movlw	130
  8716  0023D2  6EAF               	movwf	175,c	;volatile
  8717                           
  8718                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8719  0023D4  0E06               	movlw	6
  8720  0023D6  6EB0               	movwf	176,c	;volatile
  8721  0023D8                     
  8722                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8723  0023D8  0E00               	movlw	0
  8724  0023DA  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8725  0023DC  0E00               	movlw	0
  8726  0023DE  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8727  0023E0  ECBF  F013         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8728  0023E4                     
  8729                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8730  0023E4  0E00               	movlw	0
  8731  0023E6  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8732  0023E8  0E00               	movlw	0
  8733  0023EA  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8734  0023EC  ECBA  F013         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8735  0023F0                     
  8736                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8737  0023F0  0E00               	movlw	0
  8738  0023F2  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8739  0023F4  0E00               	movlw	0
  8740  0023F6  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8741  0023F8  ECC4  F013         	call	_EUSART1_SetErrorHandler	;wreg free
  8742  0023FC                     
  8743                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8744  0023FC  0E00               	movlw	0
  8745  0023FE  0100               	movlb	0	; () banked
  8746  002400  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8747  002402                     
  8748                           ; BSR set to: 0
  8749  002402  0012               	return		;funcret
  8750  002404                     __end_of_EUSART1_Initialize:
  8751                           	callstack 0
  8752                           
  8753 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8754 ;; Defined at:
  8755 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8758 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;Total ram usage:        2 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    4
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_EUSART1_Initialize
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text45
  8785  002774                     __ptext45:
  8786                           	callstack 0
  8787  002774                     _EUSART1_SetOverrunErrorHandler:
  8788                           	callstack 24
  8789  002774                     
  8790                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8791  002774  C007  F07E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8792  002778  C008  F07F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8793  00277C  0012               	return		;funcret
  8794  00277E                     __end_of_EUSART1_SetOverrunErrorHandler:
  8795                           	callstack 0
  8796                           
  8797 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8798 ;; Defined at:
  8799 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8802 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;Total ram usage:        2 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    4
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_EUSART1_Initialize
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text46
  8829  00277E                     __ptext46:
  8830                           	callstack 0
  8831  00277E                     _EUSART1_SetFramingErrorHandler:
  8832                           	callstack 24
  8833  00277E                     
  8834                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8835  00277E  C007  F080         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8836  002782  C008  F081         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8837  002786  0012               	return		;funcret
  8838  002788                     __end_of_EUSART1_SetFramingErrorHandler:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _EUSART1_SetErrorHandler *****************
  8842 ;; Defined at:
  8843 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  8846 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;Total ram usage:        2 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    4
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_EUSART1_Initialize
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text47
  8873  002788                     __ptext47:
  8874                           	callstack 0
  8875  002788                     _EUSART1_SetErrorHandler:
  8876                           	callstack 24
  8877  002788                     
  8878                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8879  002788  C007  F07C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8880  00278C  C008  F07D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8881  002790  0012               	return		;funcret
  8882  002792                     __end_of_EUSART1_SetErrorHandler:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function _EPWM2_Initialize *****************
  8886 ;; Defined at:
  8887 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;Total ram usage:        0 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    4
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		_SYSTEM_Initialize
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text48
  8916  002668                     __ptext48:
  8917                           	callstack 0
  8918  002668                     _EPWM2_Initialize:
  8919                           	callstack 25
  8920  002668                     
  8921                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x0C;
  8922  002668  0E0C               	movlw	12
  8923  00266A  6E66               	movwf	102,c	;volatile
  8924                           
  8925                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  8926  00266C  0E00               	movlw	0
  8927  00266E  6E64               	movwf	100,c	;volatile
  8928                           
  8929                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  8930  002670  0E80               	movlw	128
  8931  002672  6E65               	movwf	101,c	;volatile
  8932                           
  8933                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  8934  002674  0E01               	movlw	1
  8935  002676  6E63               	movwf	99,c	;volatile
  8936                           
  8937                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  8938  002678  0E00               	movlw	0
  8939  00267A  6E68               	movwf	104,c	;volatile
  8940                           
  8941                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  8942  00267C  0E00               	movlw	0
  8943  00267E  6E67               	movwf	103,c	;volatile
  8944                           
  8945                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  8946  002680  0EE7               	movlw	-25
  8947  002682  010F               	movlb	15	; () banked
  8948  002684  1749               	andwf	73,f,b	;volatile
  8949  002686                     
  8950                           ; BSR set to: 15
  8951  002686  0012               	return		;funcret
  8952  002688                     __end_of_EPWM2_Initialize:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function _EUSART2_is_rx_ready *****************
  8956 ;; Defined at:
  8957 ;;		line 137 in file "mcc_generated_files/eusart2.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      _Bool 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    4
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_main
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text49
  8986  0026C0                     __ptext49:
  8987                           	callstack 0
  8988  0026C0                     _EUSART2_is_rx_ready:
  8989                           	callstack 26
  8990  0026C0                     
  8991                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
  8992  0026C0  0100               	movlb	0	; () banked
  8993  0026C2  5197               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8994  0026C4  A4D8               	btfss	status,2,c
  8995  0026C6  EF67  F013         	goto	u2931
  8996  0026CA  EF6A  F013         	goto	u2930
  8997  0026CE                     u2931:
  8998  0026CE  0E01               	movlw	1
  8999  0026D0  EF6B  F013         	goto	u2940
  9000  0026D4                     u2930:
  9001  0026D4  0E00               	movlw	0
  9002  0026D6                     u2940:
  9003  0026D6                     
  9004                           ; BSR set to: 0
  9005  0026D6  0012               	return		;funcret
  9006  0026D8                     __end_of_EUSART2_is_rx_ready:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _EUSART2_Read *****************
  9010 ;; Defined at:
  9011 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  readValue       1    0        unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      unsigned char 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;Total ram usage:        1 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    4
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text50
  9040  0022B2                     __ptext50:
  9041                           	callstack 0
  9042  0022B2                     _EUSART2_Read:
  9043                           	callstack 26
  9044  0022B2                     l3631:
  9045                           
  9046                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
  9047  0022B2  0100               	movlb	0	; () banked
  9048  0022B4  5197               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  9049  0022B6  B4D8               	btfsc	status,2,c
  9050  0022B8  EF60  F011         	goto	u2951
  9051  0022BC  EF62  F011         	goto	u2950
  9052  0022C0                     u2951:
  9053  0022C0  EF59  F011         	goto	l3631
  9054  0022C4                     u2950:
  9055  0022C4                     
  9056                           ; BSR set to: 0
  9057                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  9058  0022C4  0E60               	movlw	low _eusart2RxStatusBuffer
  9059  0022C6  2457               	addwf	_eusart2RxTail^0,w,c	;volatile
  9060  0022C8  6ED9               	movwf	fsr2l,c
  9061  0022CA  6ADA               	clrf	fsr2h,c
  9062  0022CC  0E00               	movlw	high _eusart2RxStatusBuffer
  9063  0022CE  22DA               	addwfc	fsr2h,f,c
  9064  0022D0  50DF               	movf	indf2,w,c
  9065  0022D2  6F96               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  9066  0022D4  0E68               	movlw	low _eusart2RxBuffer
  9067  0022D6  2457               	addwf	_eusart2RxTail^0,w,c	;volatile
  9068  0022D8  6ED9               	movwf	fsr2l,c
  9069  0022DA  6ADA               	clrf	fsr2h,c
  9070  0022DC  0E00               	movlw	high _eusart2RxBuffer
  9071  0022DE  22DA               	addwfc	fsr2h,f,c
  9072  0022E0                     
  9073                           ; BSR set to: 0
  9074  0022E0  2A57               	incf	_eusart2RxTail^0,f,c	;volatile
  9075  0022E2                     
  9076                           ; BSR set to: 0
  9077                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  9078  0022E2  0E07               	movlw	7
  9079  0022E4  6457               	cpfsgt	_eusart2RxTail^0,c	;volatile
  9080  0022E6  EF77  F011         	goto	u2961
  9081  0022EA  EF79  F011         	goto	u2960
  9082  0022EE                     u2961:
  9083  0022EE  EF7B  F011         	goto	l3641
  9084  0022F2                     u2960:
  9085  0022F2                     
  9086                           ; BSR set to: 0
  9087                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
  9088  0022F2  0E00               	movlw	0
  9089  0022F4  6E57               	movwf	_eusart2RxTail^0,c	;volatile
  9090  0022F6                     l3641:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
  9094  0022F6  9AA3               	bcf	163,5,c	;volatile
  9095  0022F8                     
  9096                           ; BSR set to: 0
  9097                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
  9098  0022F8  0797               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  9099  0022FA                     
  9100                           ; BSR set to: 0
  9101                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
  9102  0022FA  8AA3               	bsf	163,5,c	;volatile
  9103  0022FC                     
  9104                           ; BSR set to: 0
  9105  0022FC  0012               	return		;funcret
  9106  0022FE                     __end_of_EUSART2_Read:
  9107                           	callstack 0
  9108                           
  9109 ;; *************** function _EUSART1_is_rx_ready *****************
  9110 ;; Defined at:
  9111 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;		None
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;		None
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  1    wreg      _Bool 
  9118 ;; Registers used:
  9119 ;;		wreg
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;Total ram usage:        0 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; Hardware stack levels required when called:    4
  9132 ;; This function calls:
  9133 ;;		Nothing
  9134 ;; This function is called by:
  9135 ;;		_main
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text51
  9140  002702                     __ptext51:
  9141                           	callstack 0
  9142  002702                     _EUSART1_is_rx_ready:
  9143                           	callstack 26
  9144  002702                     
  9145                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  9146  002702  BA9E               	btfsc	158,5,c	;volatile
  9147  002704  EF86  F013         	goto	u3051
  9148  002708  EF89  F013         	goto	u3050
  9149  00270C                     u3051:
  9150  00270C  0E01               	movlw	1
  9151  00270E  EF8A  F013         	goto	u3056
  9152  002712                     u3050:
  9153  002712  0E00               	movlw	0
  9154  002714                     u3056:
  9155  002714  0012               	return		;funcret
  9156  002716                     __end_of_EUSART1_is_rx_ready:
  9157                           	callstack 0
  9158                           
  9159 ;; *************** function _EUSART1_Read *****************
  9160 ;; Defined at:
  9161 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      unsigned char 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;Total ram usage:        0 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:    4
  9182 ;; This function calls:
  9183 ;;		Nothing
  9184 ;; This function is called by:
  9185 ;;		_main
  9186 ;;		_getch
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text52
  9191  0025A6                     __ptext52:
  9192                           	callstack 0
  9193  0025A6                     _EUSART1_Read:
  9194                           	callstack 26
  9195  0025A6                     l333:
  9196                           
  9197                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  9198  0025A6  AA9E               	btfss	158,5,c	;volatile
  9199  0025A8  EFD8  F012         	goto	u3061
  9200  0025AC  EFDA  F012         	goto	u3060
  9201  0025B0                     u3061:
  9202  0025B0  EFD3  F012         	goto	l333
  9203  0025B4                     u3060:
  9204  0025B4                     
  9205                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  9206  0025B4  0E00               	movlw	0
  9207  0025B6  0100               	movlb	0	; () banked
  9208  0025B8  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9209  0025BA                     
  9210                           ; BSR set to: 0
  9211                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  9212  0025BA  A2AB               	btfss	171,1,c	;volatile
  9213  0025BC  EFE2  F012         	goto	u3071
  9214  0025C0  EFE4  F012         	goto	u3070
  9215  0025C4                     u3071:
  9216  0025C4  EFE6  F012         	goto	l3693
  9217  0025C8                     u3070:
  9218  0025C8                     
  9219                           ; BSR set to: 0
  9220                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  9221  0025C8  98AB               	bcf	171,4,c	;volatile
  9222                           
  9223                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  9224  0025CA  88AB               	bsf	171,4,c	;volatile
  9225  0025CC                     l3693:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  9229  0025CC  50AE               	movf	174,w,c	;volatile
  9230  0025CE                     
  9231                           ; BSR set to: 0
  9232  0025CE  0012               	return		;funcret
  9233  0025D0                     __end_of_EUSART1_Read:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _INTERRUPT_InterruptManager *****************
  9237 ;; Defined at:
  9238 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;Total ram usage:        4 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    3
  9259 ;; This function calls:
  9260 ;;		Absolute function
  9261 ;;		_EUSART2_Receive_ISR
  9262 ;;		_EUSART2_Transmit_ISR
  9263 ;;		_myEUSART2ISR
  9264 ;; This function is called by:
  9265 ;;		Interrupt level 2
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	intcode
  9270  000008                     __pintcode:
  9271                           	callstack 0
  9272  000008                     _INTERRUPT_InterruptManager:
  9273                           	callstack 18
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;incstack = 0
  9277  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9278  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  9279  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9280  000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  9281  000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  9282  00001A                     
  9283                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9284  00001A  ACF2               	btfss	242,6,c	;volatile
  9285  00001C  EF12  F000         	goto	i2u317_41
  9286  000020  EF14  F000         	goto	i2u317_40
  9287  000024                     i2u317_41:
  9288  000024  EF4E  F000         	goto	i2l426
  9289  000028                     i2u317_40:
  9290  000028                     
  9291                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  9292  000028  A8A3               	btfss	163,4,c	;volatile
  9293  00002A  EF19  F000         	goto	i2u318_41
  9294  00002E  EF1B  F000         	goto	i2u318_40
  9295  000032                     i2u318_41:
  9296  000032  EF31  F000         	goto	i2l421
  9297  000036                     i2u318_40:
  9298  000036  A8A4               	btfss	164,4,c	;volatile
  9299  000038  EF20  F000         	goto	i2u319_41
  9300  00003C  EF22  F000         	goto	i2u319_40
  9301  000040                     i2u319_41:
  9302  000040  EF31  F000         	goto	i2l421
  9303  000044                     i2u319_40:
  9304  000044                     
  9305                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  9306  000044  D802               	call	i2u320_48
  9307  000046  EF2F  F000         	goto	i2u320_49
  9308  00004A                     i2u320_48:
  9309  00004A  0005               	push	
  9310  00004C  6EFA               	movwf	pclath,c
  9311  00004E  0100               	movlb	0	; () banked
  9312  000050  518A               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  9313  000052  6EFD               	movwf	tosl,c
  9314  000054  518B               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  9315  000056  6EFE               	movwf	tosh,c
  9316  000058  6AFF               	clrf	tosu,c
  9317  00005A  50FA               	movf	pclath,w,c
  9318  00005C  0012               	return		;indir
  9319  00005E                     i2u320_49:
  9320                           
  9321                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9322  00005E  EF4E  F000         	goto	i2l426
  9323  000062                     i2l421:
  9324  000062  AAA3               	btfss	163,5,c	;volatile
  9325  000064  EF36  F000         	goto	i2u321_41
  9326  000068  EF38  F000         	goto	i2u321_40
  9327  00006C                     i2u321_41:
  9328  00006C  EF4E  F000         	goto	i2l422
  9329  000070                     i2u321_40:
  9330  000070  AAA4               	btfss	164,5,c	;volatile
  9331  000072  EF3D  F000         	goto	i2u322_41
  9332  000076  EF3F  F000         	goto	i2u322_40
  9333  00007A                     i2u322_41:
  9334  00007A  EF4E  F000         	goto	i2l422
  9335  00007E                     i2u322_40:
  9336  00007E                     
  9337                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  9338  00007E  D802               	call	i2u323_48
  9339  000080  EF4C  F000         	goto	i2u323_49
  9340  000084                     i2u323_48:
  9341  000084  0005               	push	
  9342  000086  6EFA               	movwf	pclath,c
  9343  000088  0100               	movlb	0	; () banked
  9344  00008A  5188               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  9345  00008C  6EFD               	movwf	tosl,c
  9346  00008E  5189               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  9347  000090  6EFE               	movwf	tosh,c
  9348  000092  6AFF               	clrf	tosu,c
  9349  000094  50FA               	movf	pclath,w,c
  9350  000096  0012               	return		;indir
  9351  000098                     i2u323_49:
  9352                           
  9353                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9354  000098  EF4E  F000         	goto	i2l426
  9355  00009C                     i2l422:
  9356  00009C                     i2l426:
  9357  00009C  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9358  0000A0  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9359  0000A4  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9360  0000A8  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9361  0000AC  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9362  0000AE  0011               	retfie		f
  9363  0000B0                     __end_of_INTERRUPT_InterruptManager:
  9364                           	callstack 0
  9365                           
  9366 ;; *************** function _EUSART2_Receive_ISR *****************
  9367 ;; Defined at:
  9368 ;;		line 216 in file "mcc_generated_files/eusart2.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    2
  9389 ;; This function calls:
  9390 ;;		Absolute function
  9391 ;;		_EUSART2_DefaultErrorHandler
  9392 ;;		_EUSART2_DefaultFramingErrorHandler
  9393 ;;		_EUSART2_DefaultOverrunErrorHandler
  9394 ;;		_EUSART2_RxDataHandler
  9395 ;; This function is called by:
  9396 ;;		_EUSART2_Initialize
  9397 ;;		_INTERRUPT_InterruptManager
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text54
  9402  001E7C                     __ptext54:
  9403                           	callstack 0
  9404  001E7C                     _EUSART2_Receive_ISR:
  9405                           	callstack 18
  9406  001E7C                     
  9407                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  9408  001E7C  0E60               	movlw	low _eusart2RxStatusBuffer
  9409  001E7E  2458               	addwf	_eusart2RxHead^0,w,c	;volatile
  9410  001E80  6ED9               	movwf	fsr2l,c
  9411  001E82  6ADA               	clrf	fsr2h,c
  9412  001E84  0E00               	movlw	high _eusart2RxStatusBuffer
  9413  001E86  22DA               	addwfc	fsr2h,f,c
  9414  001E88  0E00               	movlw	0
  9415  001E8A  6EDF               	movwf	indf2,c
  9416  001E8C                     
  9417                           ;mcc_generated_files/eusart2.c: 221:     if(RCSTA2bits.FERR){
  9418  001E8C  A471               	btfss	113,2,c	;volatile
  9419  001E8E  EF4B  F00F         	goto	i2u299_41
  9420  001E92  EF4D  F00F         	goto	i2u299_40
  9421  001E96                     i2u299_41:
  9422  001E96  EF61  F00F         	goto	i2l3669
  9423  001E9A                     i2u299_40:
  9424  001E9A                     
  9425                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  9426  001E9A  0E60               	movlw	low _eusart2RxStatusBuffer
  9427  001E9C  2458               	addwf	_eusart2RxHead^0,w,c	;volatile
  9428  001E9E  6ED9               	movwf	fsr2l,c
  9429  001EA0  6ADA               	clrf	fsr2h,c
  9430  001EA2  0E00               	movlw	high _eusart2RxStatusBuffer
  9431  001EA4  22DA               	addwfc	fsr2h,f,c
  9432  001EA6  0100               	movlb	0	; () banked
  9433  001EA8  82DF               	bsf	indf2,1,c
  9434  001EAA                     
  9435                           ; BSR set to: 0
  9436                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
  9437  001EAA  D802               	call	i2u300_48
  9438  001EAC  EF61  F00F         	goto	i2u300_49
  9439  001EB0                     i2u300_48:
  9440  001EB0  0005               	push	
  9441  001EB2  6EFA               	movwf	pclath,c
  9442  001EB4  5186               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  9443  001EB6  6EFD               	movwf	tosl,c
  9444  001EB8  5187               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  9445  001EBA  6EFE               	movwf	tosh,c
  9446  001EBC  6AFF               	clrf	tosu,c
  9447  001EBE  50FA               	movf	pclath,w,c
  9448  001EC0  0012               	return		;indir
  9449  001EC2                     i2u300_49:
  9450  001EC2                     i2l3669:
  9451                           
  9452                           ;mcc_generated_files/eusart2.c: 226:     if(RCSTA2bits.OERR){
  9453  001EC2  A271               	btfss	113,1,c	;volatile
  9454  001EC4  EF66  F00F         	goto	i2u301_41
  9455  001EC8  EF68  F00F         	goto	i2u301_40
  9456  001ECC                     i2u301_41:
  9457  001ECC  EF7C  F00F         	goto	i2l3675
  9458  001ED0                     i2u301_40:
  9459  001ED0                     
  9460                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  9461  001ED0  0E60               	movlw	low _eusart2RxStatusBuffer
  9462  001ED2  2458               	addwf	_eusart2RxHead^0,w,c	;volatile
  9463  001ED4  6ED9               	movwf	fsr2l,c
  9464  001ED6  6ADA               	clrf	fsr2h,c
  9465  001ED8  0E00               	movlw	high _eusart2RxStatusBuffer
  9466  001EDA  22DA               	addwfc	fsr2h,f,c
  9467  001EDC  0100               	movlb	0	; () banked
  9468  001EDE  84DF               	bsf	indf2,2,c
  9469  001EE0                     
  9470                           ; BSR set to: 0
  9471                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
  9472  001EE0  D802               	call	i2u302_48
  9473  001EE2  EF7C  F00F         	goto	i2u302_49
  9474  001EE6                     i2u302_48:
  9475  001EE6  0005               	push	
  9476  001EE8  6EFA               	movwf	pclath,c
  9477  001EEA  5184               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  9478  001EEC  6EFD               	movwf	tosl,c
  9479  001EEE  5185               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  9480  001EF0  6EFE               	movwf	tosh,c
  9481  001EF2  6AFF               	clrf	tosu,c
  9482  001EF4  50FA               	movf	pclath,w,c
  9483  001EF6  0012               	return		;indir
  9484  001EF8                     i2u302_49:
  9485  001EF8                     i2l3675:
  9486                           
  9487                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  9488  001EF8  0E60               	movlw	low _eusart2RxStatusBuffer
  9489  001EFA  2458               	addwf	_eusart2RxHead^0,w,c	;volatile
  9490  001EFC  6ED9               	movwf	fsr2l,c
  9491  001EFE  6ADA               	clrf	fsr2h,c
  9492  001F00  0E00               	movlw	high _eusart2RxStatusBuffer
  9493  001F02  22DA               	addwfc	fsr2h,f,c
  9494  001F04  50DF               	movf	indf2,w,c
  9495  001F06  B4D8               	btfsc	status,2,c
  9496  001F08  EF88  F00F         	goto	i2u303_41
  9497  001F0C  EF8A  F00F         	goto	i2u303_40
  9498  001F10                     i2u303_41:
  9499  001F10  EF99  F00F         	goto	i2l3679
  9500  001F14                     i2u303_40:
  9501  001F14                     
  9502                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
  9503  001F14  D802               	call	i2u304_48
  9504  001F16  EF97  F00F         	goto	i2u304_49
  9505  001F1A                     i2u304_48:
  9506  001F1A  0005               	push	
  9507  001F1C  6EFA               	movwf	pclath,c
  9508  001F1E  0100               	movlb	0	; () banked
  9509  001F20  5182               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  9510  001F22  6EFD               	movwf	tosl,c
  9511  001F24  5183               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  9512  001F26  6EFE               	movwf	tosh,c
  9513  001F28  6AFF               	clrf	tosu,c
  9514  001F2A  50FA               	movf	pclath,w,c
  9515  001F2C  0012               	return		;indir
  9516  001F2E                     i2u304_49:
  9517                           
  9518                           ;mcc_generated_files/eusart2.c: 233:     } else {
  9519  001F2E  EF9B  F00F         	goto	i2l245
  9520  001F32                     i2l3679:
  9521                           
  9522                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
  9523  001F32  ECBD  F012         	call	_EUSART2_RxDataHandler	;wreg free
  9524  001F36                     i2l245:
  9525  001F36  0012               	return		;funcret
  9526  001F38                     __end_of_EUSART2_Receive_ISR:
  9527                           	callstack 0
  9528                           
  9529 ;; *************** function _myEUSART2ISR *****************
  9530 ;; Defined at:
  9531 ;;		line 277 in file "main.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      void 
  9538 ;; Registers used:
  9539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;Total ram usage:        2 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_main
  9555 ;;		_INTERRUPT_InterruptManager
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text55
  9560  001F38                     __ptext55:
  9561                           	callstack 0
  9562  001F38                     _myEUSART2ISR:
  9563                           	callstack 20
  9564  001F38                     
  9565                           ;main.c: 278: };main.c: 279: ;main.c: 280: void transmitCharacterOverIR(char letter, uin
      +                          t16_t baudRate) {
  9566  001F38  EFD9  F00F         	goto	i2l3779
  9567  001F3C                     i2l3753:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;main.c: 282:  EPWM2_LoadDutyValue(25);
  9571  001F3C  0E01               	movlw	1
  9572  001F3E  6F8F               	movwf	myEUSART2ISR@state& (0+255),b
  9573                           
  9574                           ;main.c: 283:  TMR1_WriteTimer(0x10000 - baudRate);
  9575  001F40  0E00               	movlw	0
  9576  001F42  6F8E               	movwf	myEUSART2ISR@Index& (0+255),b
  9577  001F44                     
  9578                           ; BSR set to: 0
  9579                           ;main.c: 284:  PIR1bits.TMR1IF = 0;
  9580  001F44  0E20               	movlw	low _IRreceiveBuffer
  9581  001F46  258E               	addwf	myEUSART2ISR@Index& (0+255),w,b
  9582  001F48  6ED9               	movwf	fsr2l,c
  9583  001F4A  6ADA               	clrf	fsr2h,c
  9584  001F4C  0E01               	movlw	high _IRreceiveBuffer
  9585  001F4E  22DA               	addwfc	fsr2h,f,c
  9586  001F50  CF74 FFDF          	movff	3956,indf2	;volatile
  9587  001F54                     
  9588                           ; BSR set to: 0
  9589  001F54  2B8E               	incf	myEUSART2ISR@Index& (0+255),f,b
  9590                           
  9591                           ;main.c: 285:  while (TMR1_HasOverflowOccured() == 0);
  9592  001F56  EFF3  F00F         	goto	i2l555
  9593  001F5A                     i2l3759:
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;main.c: 289:      else EPWM2_LoadDutyValue(25);
  9597  001F5A  0E20               	movlw	low _IRreceiveBuffer
  9598  001F5C  258E               	addwf	myEUSART2ISR@Index& (0+255),w,b
  9599  001F5E  6ED9               	movwf	fsr2l,c
  9600  001F60  6ADA               	clrf	fsr2h,c
  9601  001F62  0E01               	movlw	high _IRreceiveBuffer
  9602  001F64  22DA               	addwfc	fsr2h,f,c
  9603  001F66  CF74 FFDF          	movff	3956,indf2	;volatile
  9604  001F6A                     
  9605                           ; BSR set to: 0
  9606  001F6A  2B8E               	incf	myEUSART2ISR@Index& (0+255),f,b
  9607  001F6C                     
  9608                           ; BSR set to: 0
  9609                           ;main.c: 290:      mask = mask << 1;
  9610  001F6C  0E1F               	movlw	low (_IRreceiveBuffer+65535)
  9611  001F6E  258E               	addwf	myEUSART2ISR@Index& (0+255),w,b
  9612  001F70  6ED9               	movwf	fsr2l,c
  9613  001F72  6ADA               	clrf	fsr2h,c
  9614  001F74  0E01               	movlw	high (_IRreceiveBuffer+65535)
  9615  001F76  22DA               	addwfc	fsr2h,f,c
  9616  001F78  50DF               	movf	indf2,w,c
  9617  001F7A  A4D8               	btfss	status,2,c
  9618  001F7C  EFC2  F00F         	goto	i2u313_41
  9619  001F80  EFC4  F00F         	goto	i2u313_40
  9620  001F84                     i2u313_41:
  9621  001F84  EFF3  F00F         	goto	i2l555
  9622  001F88                     i2u313_40:
  9623  001F88                     
  9624                           ; BSR set to: 0
  9625                           ;main.c: 291:      TMR1_WriteTimer(0x10000 - baudRate);
  9626  001F88  0E02               	movlw	2
  9627  001F8A  6F8F               	movwf	myEUSART2ISR@state& (0+255),b
  9628  001F8C  EFF3  F00F         	goto	i2l555
  9629  001F90                     i2l3767:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;main.c: 297:  TMR1_WriteTimer(0x10000 - baudRate);
  9633  001F90  0E20               	movlw	low _IRreceiveBuffer
  9634  001F92  258E               	addwf	myEUSART2ISR@Index& (0+255),w,b
  9635  001F94  6ED9               	movwf	fsr2l,c
  9636  001F96  6ADA               	clrf	fsr2h,c
  9637  001F98  0E01               	movlw	high _IRreceiveBuffer
  9638  001F9A  22DA               	addwfc	fsr2h,f,c
  9639  001F9C  CF74 FFDF          	movff	3956,indf2	;volatile
  9640  001FA0                     
  9641                           ; BSR set to: 0
  9642  001FA0  2B8E               	incf	myEUSART2ISR@Index& (0+255),f,b
  9643  001FA2                     
  9644                           ; BSR set to: 0
  9645                           ;main.c: 298:  PIR1bits.TMR1IF = 0;
  9646  001FA2  0E00               	movlw	0
  9647  001FA4  6F94               	movwf	_receiveBusy& (0+255),b
  9648  001FA6                     
  9649                           ; BSR set to: 0
  9650                           ;main.c: 299:  while (TMR1_HasOverflowOccured() == 0);
  9651  001FA6  0E01               	movlw	1
  9652  001FA8  6F93               	movwf	_receiveNewMessage& (0+255),b
  9653  001FAA                     
  9654                           ; BSR set to: 0
  9655                           ;main.c: 300: }
  9656  001FAA  0E00               	movlw	0
  9657  001FAC  6F8F               	movwf	myEUSART2ISR@state& (0+255),b
  9658  001FAE  EFF3  F00F         	goto	i2l555
  9659  001FB2                     i2l3779:
  9660  001FB2  0100               	movlb	0	; () banked
  9661  001FB4  518F               	movf	myEUSART2ISR@state& (0+255),w,b
  9662  001FB6  6E01               	movwf	??_myEUSART2ISR^0,c
  9663  001FB8  6A02               	clrf	(??_myEUSART2ISR+1)^0,c
  9664                           
  9665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9666                           ; Switch size 1, requested type "simple"
  9667                           ; Number of cases is 1, Range of values is 0 to 0
  9668                           ; switch strategies available:
  9669                           ; Name         Instructions Cycles
  9670                           ; simple_byte            4     3 (average)
  9671                           ;	Chosen strategy is simple_byte
  9672  001FBA  5002               	movf	(??_myEUSART2ISR+1)^0,w,c
  9673  001FBC  0A00               	xorlw	0	; case 0
  9674  001FBE  B4D8               	btfsc	status,2,c
  9675  001FC0  EFE4  F00F         	goto	i2l4729
  9676  001FC4  EFF3  F00F         	goto	i2l555
  9677  001FC8                     i2l4729:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ; Switch size 1, requested type "simple"
  9681                           ; Number of cases is 3, Range of values is 0 to 2
  9682                           ; switch strategies available:
  9683                           ; Name         Instructions Cycles
  9684                           ; simple_byte           10     6 (average)
  9685                           ;	Chosen strategy is simple_byte
  9686  001FC8  5001               	movf	??_myEUSART2ISR^0,w,c
  9687  001FCA  0A00               	xorlw	0	; case 0
  9688  001FCC  B4D8               	btfsc	status,2,c
  9689  001FCE  EF9E  F00F         	goto	i2l3753
  9690  001FD2  0A01               	xorlw	1	; case 1
  9691  001FD4  B4D8               	btfsc	status,2,c
  9692  001FD6  EFAD  F00F         	goto	i2l3759
  9693  001FDA  0A03               	xorlw	3	; case 2
  9694  001FDC  B4D8               	btfsc	status,2,c
  9695  001FDE  EFC8  F00F         	goto	i2l3767
  9696  001FE2  EFF3  F00F         	goto	i2l555
  9697  001FE6                     i2l555:
  9698                           
  9699                           ; BSR set to: 0
  9700  001FE6  0012               	return		;funcret
  9701  001FE8                     __end_of_myEUSART2ISR:
  9702                           	callstack 0
  9703                           
  9704 ;; *************** function _EUSART2_Transmit_ISR *****************
  9705 ;; Defined at:
  9706 ;;		line 197 in file "mcc_generated_files/eusart2.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_EUSART2_Initialize
  9730 ;;		_INTERRUPT_InterruptManager
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text56
  9735  002342                     __ptext56:
  9736                           	callstack 0
  9737  002342                     _EUSART2_Transmit_ISR:
  9738                           	callstack 20
  9739  002342                     
  9740                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  9741  002342  0E08               	movlw	8
  9742  002344  0100               	movlb	0	; () banked
  9743  002346  6198               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9744  002348  EFA8  F011         	goto	i2u297_41
  9745  00234C  EFAA  F011         	goto	i2u297_40
  9746  002350                     i2u297_41:
  9747  002350  EFC0  F011         	goto	i2l235
  9748  002354                     i2u297_40:
  9749  002354                     
  9750                           ; BSR set to: 0
  9751                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          XREG2 = eusart2TxBuffer[eusart2TxTail++];
  9752  002354  0E70               	movlw	low _eusart2TxBuffer
  9753  002356  2599               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  9754  002358  6ED9               	movwf	fsr2l,c
  9755  00235A  6ADA               	clrf	fsr2h,c
  9756  00235C  0E00               	movlw	high _eusart2TxBuffer
  9757  00235E  22DA               	addwfc	fsr2h,f,c
  9758  002360  50DF               	movf	indf2,w,c
  9759  002362  6E73               	movwf	115,c	;volatile
  9760  002364                     
  9761                           ; BSR set to: 0
  9762  002364  2B99               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  9763  002366                     
  9764                           ; BSR set to: 0
  9765                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  9766  002366  0E07               	movlw	7
  9767  002368  6599               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  9768  00236A  EFB9  F011         	goto	i2u298_41
  9769  00236E  EFBB  F011         	goto	i2u298_40
  9770  002372                     i2u298_41:
  9771  002372  EFBD  F011         	goto	i2l3659
  9772  002376                     i2u298_40:
  9773  002376                     
  9774                           ; BSR set to: 0
  9775                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
  9776  002376  0E00               	movlw	0
  9777  002378  6F99               	movwf	_eusart2TxTail& (0+255),b	;volatile
  9778  00237A                     i2l3659:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
  9782  00237A  2B98               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  9783                           
  9784                           ;mcc_generated_files/eusart2.c: 209:     }
  9785  00237C  EFC1  F011         	goto	i2l238
  9786  002380                     i2l235:
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
  9790  002380  98A3               	bcf	163,4,c	;volatile
  9791  002382                     i2l238:
  9792                           
  9793                           ; BSR set to: 0
  9794  002382  0012               	return		;funcret
  9795  002384                     __end_of_EUSART2_Transmit_ISR:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  9799 ;; Defined at:
  9800 ;;		line 252 in file "mcc_generated_files/eusart2.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		None
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;Total ram usage:        0 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_EUSART2_Initialize
  9824 ;;		_EUSART2_Receive_ISR
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text57
  9829  002792                     __ptext57:
  9830                           	callstack 0
  9831  002792                     _EUSART2_DefaultOverrunErrorHandler:
  9832                           	callstack 19
  9833  002792                     
  9834                           ;mcc_generated_files/eusart2.c: 255:     RCSTA2bits.CREN = 0;
  9835  002792  9871               	bcf	113,4,c	;volatile
  9836                           
  9837                           ;mcc_generated_files/eusart2.c: 256:     RCSTA2bits.CREN = 1;
  9838  002794  8871               	bsf	113,4,c	;volatile
  9839  002796  0012               	return		;funcret
  9840  002798                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  9841                           	callstack 0
  9842                           
  9843 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  9844 ;; Defined at:
  9845 ;;		line 250 in file "mcc_generated_files/eusart2.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		None
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_EUSART2_Initialize
  9869 ;;		_EUSART2_Receive_ISR
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text58
  9874  0027A2                     __ptext58:
  9875                           	callstack 0
  9876  0027A2                     _EUSART2_DefaultFramingErrorHandler:
  9877                           	callstack 19
  9878  0027A2  0012               	return		;funcret
  9879  0027A4                     __end_of_EUSART2_DefaultFramingErrorHandler:
  9880                           	callstack 0
  9881                           
  9882 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  9883 ;; Defined at:
  9884 ;;		line 260 in file "mcc_generated_files/eusart2.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    1
  9905 ;; This function calls:
  9906 ;;		_EUSART2_RxDataHandler
  9907 ;; This function is called by:
  9908 ;;		_EUSART2_Initialize
  9909 ;;		_EUSART2_Receive_ISR
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text59
  9914  002798                     __ptext59:
  9915                           	callstack 0
  9916  002798                     _EUSART2_DefaultErrorHandler:
  9917                           	callstack 18
  9918  002798                     
  9919                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
  9920  002798  ECBD  F012         	call	_EUSART2_RxDataHandler	;wreg free
  9921  00279C  0012               	return		;funcret
  9922  00279E                     __end_of_EUSART2_DefaultErrorHandler:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _EUSART2_RxDataHandler *****************
  9926 ;; Defined at:
  9927 ;;		line 240 in file "mcc_generated_files/eusart2.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_EUSART2_Receive_ISR
  9951 ;;		_EUSART2_DefaultErrorHandler
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text60
  9956  00257A                     __ptext60:
  9957                           	callstack 0
  9958  00257A                     _EUSART2_RxDataHandler:
  9959                           	callstack 19
  9960  00257A                     
  9961                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  9962  00257A  0E68               	movlw	low _eusart2RxBuffer
  9963  00257C  2458               	addwf	_eusart2RxHead^0,w,c	;volatile
  9964  00257E  6ED9               	movwf	fsr2l,c
  9965  002580  6ADA               	clrf	fsr2h,c
  9966  002582  0E00               	movlw	high _eusart2RxBuffer
  9967  002584  22DA               	addwfc	fsr2h,f,c
  9968  002586  CF74 FFDF          	movff	3956,indf2	;volatile
  9969  00258A  2A58               	incf	_eusart2RxHead^0,f,c	;volatile
  9970  00258C                     
  9971                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  9972  00258C  0E07               	movlw	7
  9973  00258E  6458               	cpfsgt	_eusart2RxHead^0,c	;volatile
  9974  002590  EFCC  F012         	goto	i2u272_41
  9975  002594  EFCE  F012         	goto	i2u272_40
  9976  002598                     i2u272_41:
  9977  002598  EFD0  F012         	goto	i2l3389
  9978  00259C                     i2u272_40:
  9979  00259C                     
  9980                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
  9981  00259C  0E00               	movlw	0
  9982  00259E  6E58               	movwf	_eusart2RxHead^0,c	;volatile
  9983  0025A0                     i2l3389:
  9984                           
  9985                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
  9986  0025A0  0100               	movlb	0	; () banked
  9987  0025A2  2B97               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  9988  0025A4                     
  9989                           ; BSR set to: 0
  9990  0025A4  0012               	return		;funcret
  9991  0025A6                     __end_of_EUSART2_RxDataHandler:
  9992                           	callstack 0
  9993                           
  9994                           	psect	text61
  9995  000000                     __ptext61:
  9996                           	callstack 0
  9997  000000                     
  9998                           	psect	rparam
  9999  0000                     
 10000                           	psect	temp
 10001  000059                     btemp:
 10002                           	callstack 0
 10003  000059                     	ds	1
 10004  0000                     int$flags	set	btemp
 10005  0000                     wtemp8	set	btemp+1
 10006  0000                     ttemp5	set	btemp+1
 10007  0000                     ttemp6	set	btemp+4
 10008  0000                     ttemp7	set	btemp+8
 10009                           
 10010                           	psect	idloc
 10011                           
 10012                           ;Config register IDLOC0 @ 0x200000
 10013                           ;	unspecified, using default values
 10014  200000                     	org	2097152
 10015  200000  FF                 	db	255
 10016                           
 10017                           ;Config register IDLOC1 @ 0x200001
 10018                           ;	unspecified, using default values
 10019  200001                     	org	2097153
 10020  200001  FF                 	db	255
 10021                           
 10022                           ;Config register IDLOC2 @ 0x200002
 10023                           ;	unspecified, using default values
 10024  200002                     	org	2097154
 10025  200002  FF                 	db	255
 10026                           
 10027                           ;Config register IDLOC3 @ 0x200003
 10028                           ;	unspecified, using default values
 10029  200003                     	org	2097155
 10030  200003  FF                 	db	255
 10031                           
 10032                           ;Config register IDLOC4 @ 0x200004
 10033                           ;	unspecified, using default values
 10034  200004                     	org	2097156
 10035  200004  FF                 	db	255
 10036                           
 10037                           ;Config register IDLOC5 @ 0x200005
 10038                           ;	unspecified, using default values
 10039  200005                     	org	2097157
 10040  200005  FF                 	db	255
 10041                           
 10042                           ;Config register IDLOC6 @ 0x200006
 10043                           ;	unspecified, using default values
 10044  200006                     	org	2097158
 10045  200006  FF                 	db	255
 10046                           
 10047                           ;Config register IDLOC7 @ 0x200007
 10048                           ;	unspecified, using default values
 10049  200007                     	org	2097159
 10050  200007  FF                 	db	255
 10051                           
 10052                           	psect	config
 10053                           
 10054                           ; Padding undefined space
 10055  300000                     	org	3145728
 10056  300000  FF                 	db	255
 10057                           
 10058                           ;Config register CONFIG1H @ 0x300001
 10059                           ;	Oscillator Selection bits
 10060                           ;	FOSC = INTIO67, Internal oscillator block
 10061                           ;	4X PLL Enable
 10062                           ;	PLLCFG = OFF, Oscillator used directly
 10063                           ;	Primary clock enable bit
 10064                           ;	PRICLKEN = ON, Primary clock enabled
 10065                           ;	Fail-Safe Clock Monitor Enable bit
 10066                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10067                           ;	Internal/External Oscillator Switchover bit
 10068                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10069  300001                     	org	3145729
 10070  300001  28                 	db	40
 10071                           
 10072                           ;Config register CONFIG2L @ 0x300002
 10073                           ;	Power-up Timer Enable bit
 10074                           ;	PWRTEN = OFF, Power up timer disabled
 10075                           ;	Brown-out Reset Enable bits
 10076                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10077                           ;	Brown Out Reset Voltage bits
 10078                           ;	BORV = 190, VBOR set to 1.90 V nominal
 10079  300002                     	org	3145730
 10080  300002  1F                 	db	31
 10081                           
 10082                           ;Config register CONFIG2H @ 0x300003
 10083                           ;	Watchdog Timer Enable bits
 10084                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10085                           ;	Watchdog Timer Postscale Select bits
 10086                           ;	WDTPS = 32768, 1:32768
 10087  300003                     	org	3145731
 10088  300003  3C                 	db	60
 10089                           
 10090                           ; Padding undefined space
 10091  300004                     	org	3145732
 10092  300004  FF                 	db	255
 10093                           
 10094                           ;Config register CONFIG3H @ 0x300005
 10095                           ;	CCP2 MUX bit
 10096                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 10097                           ;	PORTB A/D Enable bit
 10098                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10099                           ;	P3A/CCP3 Mux bit
 10100                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 10101                           ;	HFINTOSC Fast Start-up
 10102                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 10103                           ;	Timer3 Clock input mux bit
 10104                           ;	T3CMX = PORTC0, T3CKI is on RC0
 10105                           ;	ECCP2 B output mux bit
 10106                           ;	P2BMX = PORTB5, P2B is on RB5
 10107                           ;	MCLR Pin Enable bit
 10108                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 10109  300005                     	org	3145733
 10110  300005  BF                 	db	191
 10111                           
 10112                           ;Config register CONFIG4L @ 0x300006
 10113                           ;	Stack Full/Underflow Reset Enable bit
 10114                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10115                           ;	Single-Supply ICSP Enable bit
 10116                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10117                           ;	Extended Instruction Set Enable bit
 10118                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10119                           ;	Background Debug
 10120                           ;	DEBUG = OFF, Disabled
 10121  300006                     	org	3145734
 10122  300006  85                 	db	133
 10123                           
 10124                           ; Padding undefined space
 10125  300007                     	org	3145735
 10126  300007  FF                 	db	255
 10127                           
 10128                           ;Config register CONFIG5L @ 0x300008
 10129                           ;	Code Protection Block 0
 10130                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10131                           ;	Code Protection Block 1
 10132                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10133                           ;	Code Protection Block 2
 10134                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10135                           ;	Code Protection Block 3
 10136                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10137  300008                     	org	3145736
 10138  300008  0F                 	db	15
 10139                           
 10140                           ;Config register CONFIG5H @ 0x300009
 10141                           ;	Boot Block Code Protection bit
 10142                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10143                           ;	Data EEPROM Code Protection bit
 10144                           ;	CPD = OFF, Data EEPROM not code-protected
 10145  300009                     	org	3145737
 10146  300009  C0                 	db	192
 10147                           
 10148                           ;Config register CONFIG6L @ 0x30000A
 10149                           ;	Write Protection Block 0
 10150                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10151                           ;	Write Protection Block 1
 10152                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10153                           ;	Write Protection Block 2
 10154                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10155                           ;	Write Protection Block 3
 10156                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10157  30000A                     	org	3145738
 10158  30000A  0F                 	db	15
 10159                           
 10160                           ;Config register CONFIG6H @ 0x30000B
 10161                           ;	Configuration Register Write Protection bit
 10162                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10163                           ;	Boot Block Write Protection bit
 10164                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10165                           ;	Data EEPROM Write Protection bit
 10166                           ;	WRTD = OFF, Data EEPROM not write-protected
 10167  30000B                     	org	3145739
 10168  30000B  E0                 	db	224
 10169                           
 10170                           ;Config register CONFIG7L @ 0x30000C
 10171                           ;	Table Read Protection Block 0
 10172                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10173                           ;	Table Read Protection Block 1
 10174                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10175                           ;	Table Read Protection Block 2
 10176                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10177                           ;	Table Read Protection Block 3
 10178                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10179  30000C                     	org	3145740
 10180  30000C  0F                 	db	15
 10181                           
 10182                           ;Config register CONFIG7H @ 0x30000D
 10183                           ;	Boot Block Table Read Protection bit
 10184                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10185  30000D                     	org	3145741
 10186  30000D  40                 	db	64
 10187                           tosu	equ	0xFFF
 10188                           tosh	equ	0xFFE
 10189                           tosl	equ	0xFFD
 10190                           stkptr	equ	0xFFC
 10191                           pclatu	equ	0xFFB
 10192                           pclath	equ	0xFFA
 10193                           pcl	equ	0xFF9
 10194                           tblptru	equ	0xFF8
 10195                           tblptrh	equ	0xFF7
 10196                           tblptrl	equ	0xFF6
 10197                           tablat	equ	0xFF5
 10198                           prodh	equ	0xFF4
 10199                           prodl	equ	0xFF3
 10200                           indf0	equ	0xFEF
 10201                           postinc0	equ	0xFEE
 10202                           postdec0	equ	0xFED
 10203                           preinc0	equ	0xFEC
 10204                           plusw0	equ	0xFEB
 10205                           fsr0h	equ	0xFEA
 10206                           fsr0l	equ	0xFE9
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postinc1	equ	0xFE6
 10210                           postdec1	equ	0xFE5
 10211                           preinc1	equ	0xFE4
 10212                           plusw1	equ	0xFE3
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           bsr	equ	0xFE0
 10216                           indf2	equ	0xFDF
 10217                           postinc2	equ	0xFDE
 10218                           postdec2	equ	0xFDD
 10219                           preinc2	equ	0xFDC
 10220                           plusw2	equ	0xFDB
 10221                           fsr2h	equ	0xFDA
 10222                           fsr2l	equ	0xFD9
 10223                           status	equ	0xFD8

Data Sizes:
    Strings     916
    Constant    0
    Data        18
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     51     153
    BANK1           256      0      57
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), IRreceiveBuffer(BANK1[25]), 
		 -> IRtransmitBuffer(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), IRreceiveBuffer(BANK1[25]), 
		 -> IRtransmitBuffer(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1823_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_49(CODE[17]), STR_48(CODE[16]), STR_47(CODE[15]), STR_46(CODE[14]), 
		 -> STR_45(CODE[40]), STR_44(CODE[16]), STR_43(CODE[15]), STR_42(CODE[11]), 
		 -> STR_41(CODE[16]), STR_40(CODE[17]), STR_39(CODE[3]), STR_38(CODE[3]), 
		 -> STR_37(CODE[2]), STR_36(CODE[41]), STR_35(CODE[21]), STR_34(CODE[31]), 
		 -> STR_33(CODE[16]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[14]), STR_28(CODE[43]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[8]), STR_24(CODE[52]), STR_23(CODE[54]), STR_22(CODE[32]), 
		 -> STR_21(CODE[35]), STR_20(CODE[19]), STR_19(CODE[46]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[52]), 
		 -> STR_13(CODE[12]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[52]), STR_6(CODE[5]), 
		 -> STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[34]), 
		 -> STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_49(CODE[17]), STR_48(CODE[16]), STR_47(CODE[15]), STR_46(CODE[14]), 
		 -> STR_45(CODE[40]), STR_44(CODE[16]), STR_43(CODE[15]), STR_42(CODE[11]), 
		 -> STR_41(CODE[16]), STR_40(CODE[17]), STR_39(CODE[3]), STR_38(CODE[3]), 
		 -> STR_37(CODE[2]), STR_36(CODE[41]), STR_35(CODE[21]), STR_34(CODE[31]), 
		 -> STR_33(CODE[16]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[14]), STR_28(CODE[43]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[8]), STR_24(CODE[52]), STR_23(CODE[54]), STR_22(CODE[32]), 
		 -> STR_21(CODE[35]), STR_20(CODE[19]), STR_19(CODE[46]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[52]), 
		 -> STR_13(CODE[12]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[52]), STR_6(CODE[5]), 
		 -> STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[34]), 
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_49(CODE[17]), STR_48(CODE[16]), STR_47(CODE[15]), STR_46(CODE[14]), 
		 -> STR_45(CODE[40]), STR_44(CODE[16]), STR_43(CODE[15]), STR_42(CODE[11]), 
		 -> STR_41(CODE[16]), STR_40(CODE[17]), STR_39(CODE[3]), STR_38(CODE[3]), 
		 -> STR_37(CODE[2]), STR_36(CODE[41]), STR_35(CODE[21]), STR_34(CODE[31]), 
		 -> STR_33(CODE[16]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[14]), STR_28(CODE[43]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[8]), STR_24(CODE[52]), STR_23(CODE[54]), STR_22(CODE[32]), 
		 -> STR_21(CODE[35]), STR_20(CODE[19]), STR_19(CODE[46]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[52]), 
		 -> STR_13(CODE[12]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[52]), STR_6(CODE[5]), 
		 -> STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[34]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), IRreceiveBuffer(BANK1[25]), IRtransmitBuffer(BANK0[25]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), IRreceiveBuffer(BANK1[25]), IRtransmitBuffer(BANK0[25]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), IRreceiveBuffer(BANK1[25]), IRtransmitBuffer(BANK0[25]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_49(CODE[17]), STR_48(CODE[16]), STR_47(CODE[15]), STR_46(CODE[14]), 
		 -> STR_45(CODE[40]), STR_44(CODE[16]), STR_43(CODE[15]), STR_42(CODE[11]), 
		 -> STR_41(CODE[16]), STR_40(CODE[17]), STR_39(CODE[3]), STR_38(CODE[3]), 
		 -> STR_37(CODE[2]), STR_36(CODE[41]), STR_35(CODE[21]), STR_34(CODE[31]), 
		 -> STR_33(CODE[16]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[14]), STR_28(CODE[43]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[8]), STR_24(CODE[52]), STR_23(CODE[54]), STR_22(CODE[32]), 
		 -> STR_21(CODE[35]), STR_20(CODE[19]), STR_19(CODE[46]), STR_18(CODE[24]), 
		 -> STR_17(CODE[21]), STR_16(CODE[7]), STR_15(CODE[15]), STR_14(CODE[52]), 
		 -> STR_13(CODE[12]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[12]), 
		 -> STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[52]), STR_6(CODE[5]), 
		 -> STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[34]), 
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), myEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _transmitCharacterOverIR->_EPWM2_LoadDutyValue
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_myEUSART2ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   37591
                                             43 BANK0      8     8      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
      _EUSART2_SetRxInterruptHandler
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                             _printf
            _transmitCharacterOverIR
 ---------------------------------------------------------------------------------
 (1) _transmitCharacterOverIR                              4     2      2    1200
                                             10 COMRAM     4     2      2
                _EPWM2_LoadDutyValue
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     468
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     424
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   33953
                                             33 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29432
                                             80 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   28860
                                             74 COMRAM     6     0      6
                                              0 BANK0     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5891
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5387
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              6 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              6 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2117
                                             17 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5986
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4557
                                             35 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4337
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1268
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1474
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     633
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     566
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0       8
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0       0
                                              2 COMRAM     4     4      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                       _myEUSART2ISR *
 ---------------------------------------------------------------------------------
 (11) _myEUSART2ISR                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_SetRxInterruptHandler
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _transmitCharacterOverIR
     _EPWM2_LoadDutyValue
     _TMR1_HasOverflowOccured
     _TMR1_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _myEUSART2ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      39       7       22.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      12        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Oct 08 17:09:17 2020

                  __size_of_EPWM2_LoadDutyValue 0030                          ?_EUSART2_RxDataHandler 0001  
                                            l50 254C                                              l27 2578  
                                            l47 2686                                              l63 2736  
                           ___wmul@multiplicand 0009                                             l103 26A2  
                                           l210 26D6                                             l204 20F2  
                                           l117 25F6                                             l223 22FC  
                                           l400 26BE                                             l129 2700  
                                           l324 2714                                             l316 2402  
                                           l340 26DA                                             l333 25A6  
                                           l261 2768                                             l270 274A  
                                           l415 27A0                                             l343 26EC  
                                           l264 275E                                             l337 25CE  
                                           l361 2786                                             l273 2754  
                                           l522 045C                                             l506 0320  
                                           l267 2772                                             l364 277C  
                                           l349 2740                                             l702 1B10  
                                           l367 2790                                             l394 2666  
                                           l572 1CE8                                             l397 26B0  
                                           l575 2644                                             l689 182A  
                                           _PR2 000FBB          __end_of_EUSART2_SetFramingErrorHandler 276A  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 2760  
                               _timer1ReloadVal 008C                                             _abs 2384  
                                           _ind 0092                                             _pad 1DBA  
                               _TMR2_Initialize 2728                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                      _TXSTA2bits 000F72  
                      __end_of_EPWM2_Initialize 2688                                  ??_myEUSART2ISR 0001  
                                          l1020 1C00                                            l1013 1BE0  
                                          l1030 1DB8                                            l1023 1D98  
                                          ?_abs 0019                                            l1302 2210  
                                          l1310 0DFE                                            l3001 1ABA  
                                          l1410 0850                                            l3003 1AC0  
                                          l3011 1B12                                            l1308 0DF6  
                                          l3101 222A                                            l3005 1AD0  
                                          l3021 1B66                                            l3013 1B1E  
                                          l1253 261E                                            l3103 2258  
                                          l3111 21CA                                            l3007 1AF0  
                                          l1351 19AC                                            l1335 18AC  
                                          l3031 1BDA                                            l3023 1B78  
                                          l3015 1B3C                                            l1423 0D56  
                                          l1328 1034                                            l3105 225C  
                                          l3113 21D6                                            l1337 18B4  
                                          l3025 1BA6                                            l3017 1B44  
                                          l3041 1D32                                            l3033 1CEA  
                                          l1514 207C                                            l1522 2340  
                                          l1290 1DFE                                            l1442 23BA  
                                          l1346 195C                                            l3051 1DC8  
                                          l3115 21E2                                            l3131 0DCE  
                                          l3123 0D58                                            l1347 19A4  
                                          l3211 1918                                            l3203 18D6  
                                          l3027 1BC6                                            l3019 1B58  
                                          l3043 1D60                                            l3035 1D08  
                                          l1371 106C                                            l1356 1340  
                                          l1380 110A                                            l1293 1E40  
                                          l3061 1E1E                                            l3053 1DDC  
                                          l3117 21E6                                            l3109 21B6  
                                          l1445 23C2                                            l3141 0E26  
                                          l3133 0DD0                                            l3125 0D78  
                                          l3221 196E                                            l3213 1936  
                                          l3205 18EA                                            l3029 1BC8  
                                          l3045 1D80                                            l3037 1D10  
                                          l1533 21AC                                            l3301 11B0  
                                          l1373 1074                                            l1437 214E  
                                          l1366 1508                                            l1358 1348  
                                          l1438 2156                                            l1295 1E7A  
                                          l3063 1E22                                            l3055 1DEA  
                                          l3119 21EC                                            l3071 2384  
                                          l3151 0EC6                                            l3143 0E2C  
                                          l3135 0DEA                                            l3127 0DA0  
                                          l3223 1982                                            l3215 193A  
                                          l3207 18EE                                            l3047 1D92  
                                          l3039 1D24                                            l3231 131A  
                                          l3311 1246                                            l3303 11C0  
                                          l1528 251C                                            l1544 2476  
                                          l1473 169A                                            l3065 1E4E  
                                          l3057 1DF6                                            l3049 1DBA  
                                          l3073 239E                                            l3161 0F6E  
                                          l3153 0ECC                                            l3145 0E34  
                                          l3137 0E06                                            l3129 0DC0  
                                          l3225 1986                                            l3217 193E  
                                          l3209 190C                                            l3241 1388  
                                          l3233 1334                                            l3321 12BA  
                                          l3313 1264                                            l3305 11C6  
                                          l4201 0780                                            l1538 21B4  
                                          l1394 12A6                                            l3331 151E  
                                          l3067 1E62                                            l3059 1E0A  
                                          l3171 0FD0                                            l3163 0F88  
                                          l3155 0ED2                                            l3147 0E3E  
                                          l3139 0E18                                            l3251 1480  
                                          l3243 13FE                                            l3235 1370  
                                          l3227 130A                                            l3075 2478  
                                          l3083 2158                                            l3323 12CA  
                                          l3315 127E                                            l3307 11CC  
                                          l4211 07B2                                            l4203 078E  
                                          l1476 16A2                                            l1396 1308  
                                          l1485 24E6                                            l3093 24B0  
                                          l1493 2262                                            l3341 1580  
                                          l3333 1522                                            l3173 0FD6  
                                          l3181 100C                                            l3165 0FA2  
                                          l3149 0E44                                            l3157 0F36  
                                          l3253 149E                                            l3245 1404  
                                          l3237 1378                                            l3229 1318  
                                          l3325 12E0                                            l3317 1298  
                                          l3309 122A                                            l4301 0C74  
                                          l4221 07D0                                            l4213 07C4  
                                          l4205 07A0                                            l3351 15AC  
                                          l3335 1526                                            l3175 0FE8  
                                          l3159 0F50                                            l3167 0FB0  
                                          l3191 1858                                            l3255 14B8  
                                          l3247 140A                                            l3239 1382  
                                          l1479 243E                                            l3079 2404  
                                          l3087 218E                                            l3319 12B4  
                                          l3271 108A                                            l3263 1036  
                                          l4311 0CF8                                            l4207 07A4  
                                          l3097 2212                                            l3361 165A  
                                          l3353 15E2                                            l3345 1586  
                                          l3337 1544                                            l3329 150A  
                                          l3177 0FF4                                            l3169 0FC2  
                                          l3193 1860                                            l3185 182C  
                                          l3257 14D2                                            l3249 146E  
                                          l3089 21A0                                            l3281 10CA  
                                          l3273 1092                                            l3265 1044  
                                          l4305 0CB0                                            l4241 0886  
                                          l4233 07E8                                            l4225 07D6  
                                          l4217 07CA                                            l4209 07B0  
                                          l4321 0D1E                                            l3611 23FC  
                                          l3603 23C4                                            l3371 274C  
                                          l3099 2216                                            l3363 166C  
                                          l3347 159C                                            l3339 157C  
                                          l3179 0FFC                                            l3195 1874  
                                          l3187 183E                                            l3259 14E0  
                                          l1499 24AE                                            l3291 113E  
                                          l3283 10D2                                            l3275 10B2  
                                          l3267 1046                                            l4323 0D44  
                                          l4307 0CD6                                            l4315 0D04  
                                          l4251 0906                                            l4243 08BC  
                                          l4235 083E                                            l4411 0326  
                                          l3605 23D8                                            l3373 2742  
                                          l3613 279E                                            l3541 2576  
                                          l3701 264E                                            l3365 167E  
                                          l3357 161A                                            l3349 15A4  
                                          l3197 187C                                            l3189 1846  
                                          l3293 1150                                            l3285 10EE  
                                          l3277 10BA                                            l3269 1060  
                                          l4317 0D12                                            l4309 0CE4  
                                          l4261 09BA                                            l4245 08CA  
                                          l4237 085E                                            l4229 07DC  
                                          l4341 210A                                            l4501 05F6  
                                          l4421 033A                                            l4405 0300  
                                          l3631 22B2                                            l3543 2668  
                                          l3391 277E                                            l3607 23E4  
                                          l3375 2760                                            l3615 26A4  
                                          l3551 2688                                            l3711 2662  
                                          l3703 2652                                            l2903 22FE  
                                          l2911 24E8                                            l3199 188A  
                                          l3287 10FE                                            l3279 10C4  
                                          l4271 0A6A                                            l4255 0950  
                                          l4247 08D8                                            l4239 0860  
                                          l4343 2130                                            l4511 063E  
                                          l4503 0608                                            l4431 03CE  
                                          l4423 034E                                            l4407 030C  
                                          l4351 00B4                                            l3641 22F6  
                                          l3633 22C4                                            l3625 26C0  
                                          l3393 2774                                            l3609 23F0  
                                          l3377 2756                                            l3537 254E  
                                          l3553 2694                                            l3705 2656  
                                          l2905 230A                                            l2913 24F4  
                                          l2921 2440                                            l3297 118A  
                                          l4265 09D6                                            l4249 08F8  
                                          l4257 0962                                            l4337 20F4  
                                          l4345 25F8                                            l3545 251E  
                                          l3561 25E0                                            l3721 1C08  
                                          l4521 069C                                            l4513 064E  
                                          l4505 0612                                            l4433 03DA  
                                          l4425 03A0                                            l4417 032A  
                                          l4409 0310                                            l4361 00EC  
                                          l4353 00C4                                            l3643 22F8  
                                          l3635 22E0                                            l3395 2788  
                                          l3379 276A                                            l3539 255A  
                                          l3555 269C                                            l3547 2728  
                                          l3707 265A                                            l2907 231C  
                                          l2915 24F8                                            l2931 16A4  
                                          l3299 119C                                            l4291 0BC6  
                                          l4283 0B1E                                            l4275 0AA2  
                                          l4267 09FC                                            l4259 0988  
                                          l4339 20FC                                            l4347 2602  
                                          l3571 26EE                                            l3563 25E4  
                                          l3731 1C56                                            l3723 1C14  
                                          l4523 06A2                                            l4515 065C  
                                          l4507 0622                                            l4451 0478  
                                          l4435 03E6                                            l4443 03FE  
                                          l4427 03B4                                            l4419 0336  
                                          l4371 0126                                            l4363 0100  
                                          l4355 00C6                                            l3645 22FA  
                                          l3637 22E2                                            l3629 22B2  
                                          l3581 209A                                            l3549 2730  
                                          l3709 265E                                            l2925 2620  
                                          l2909 2320                                            l2917 2510  
                                          l2941 16E8                                            l2933 16A8  
                                          l4293 0BEC                                            l4285 0B44  
                                          l4277 0AC8                                            l4269 0A22  
                                          l3565 25E8                                            l3557 25D0  
                                          l3741 1C8E                                            l3733 1C66  
                                          l3725 1C28                                            l4525 06DE  
                                          l4517 067A                                            l4509 063A  
                                          l4453 0484                                            l4437 03F2  
                                          l4445 0440                                            l4429 03C2  
                                          l4381 01BA                                            l4373 017A  
                                          l4365 0104                                            l4357 00D4  
                                          ?_pad 0019                                            l3639 22F2  
                                          l3591 20AE                                            l3583 209E  
                                          l3575 207E                                            l2927 263C  
                                          l2951 173E                                            l2943 1708  
                                          l2935 16B6                                            l4295 0C12  
                                          l4287 0B8E                                            l4279 0AFE  
                                          l4199 075A                                            l3559 25DE  
                                          l3567 25EE                                            l3735 1C72  
                                          l3743 1CA2                                            l3727 1C2A  
                                          l3719 1C04                                            l4519 068A  
                                          l4471 0512                                            l4463 04AC  
                                          l4455 0492                                            l4447 0460  
                                          l4383 01CA                                            l4375 018E  
                                          l4367 0110                                            l4359 00E8  
                                          l3681 2702                                            l3593 20BA  
                                          l3585 20A2                                            l3577 2080  
                                          l2961 17C0                                            l2953 1752  
                                          l2945 170C                                            l2937 16D6  
                                          l4297 0C2A                                            l3569 25F2  
                                          l3745 1CB2                                            l3737 1C78  
                                          l3729 1C42                                            l4481 055A  
                                          l4473 0516                                            l4465 04BE  
                                          l4457 04A6                                            l4449 0470  
                                          l4721 0412                                            l4385 01DA  
                                          l4393 020A                                            l4377 019A  
                                          l4529 06F4                                            l4369 0112  
                                          l3691 25C8                                            l3595 20C6  
                                          l3587 20A6                                            l3579 208C  
                                          l2883 26DA                                            l2891 1FFA  
                                          l2971 180A                                            l2963 17C2  
                                          l2955 1760                                            l2947 1718  
                                          l2939 16DA                                            l4299 0C38  
                                          l3747 1CD2                                            l3739 1C8C  
                                          l4723 0708                                            l4491 05BC  
                                          l4483 056E                                            l4475 0526  
                                          l4467 04D0                                            l4387 01EA  
                                          l4395 024E                                            l4379 01AA  
                                          l3693 25CC                                            l3685 25A6  
                                          l3597 20F0                                            l3589 20AA  
                                          l2885 26E8                                            l2893 200C  
                                          l2965 17D4                                            l2957 1772  
                                          l2949 1736                                            l2981 19E0  
                                          l4725 0810                                            l3749 1CD4  
                                          l4493 05C6                                            l4485 0586  
                                          l4477 0528                                            l4469 04F2  
                                          l4397 02EC                                            l4389 01FA  
                                          l3687 25B4                                            l4727 15CC  
                                          l2887 273A                                            l2895 2016  
                                          l2959 17A0                                            l2967 17DA  
                                          l2991 1A38                                            l2983 19E4  
                                          l2975 19AE                                            l4495 05C8  
                                          l4487 058A                                            l4479 0538  
                                          l4399 02FC                                            l4719 0220  
                                          l3689 25BA                                            l3697 2646  
                                          l2897 2034                                            l2889 1FE8  
                                          l2969 17EA                                            l2993 1A4C  
                                          l2985 19F2                                            l2977 19B2  
                                          l4497 05E4                                            l4489 059A  
                                          l3699 264A                                            l2899 206A  
                                          l2995 1A5A                                            l2987 1A12  
                                          l2979 19C0                                            l4499 05E6  
                                          l2997 1A88                                            l2989 1A30  
                                          l2999 1AA8                                            STR_1 FFDE  
                                          STR_2 FE12                                            STR_3 FE8B  
                                          STR_4 FC6B                                            STR_5 FD74  
                                          STR_6 FFF5                                            STR_7 FCE7  
                                          STR_8 FFD3                                            STR_9 FFA4  
                                          u2000 1DC8                                            u2001 1DC4  
                                          u2010 1DEA                                            u2011 1DE6  
                                          u2020 1E40                                            u2100 218A  
                                          u2021 1E3C                                            u2030 1E4E  
                                          u2110 21A0                                            u2031 1E4A  
                                          u2111 219C                                            u2120 24E0  
                                          u2040 239E                                            u2200 0DCE  
                                          u2121 24DA                                            u2041 239A  
                                          u2201 0DCA                                            u2130 24E2  
                                          u2210 0DEA                                            u2050 24A8  
                                          u2211 0DE6                                            u2051 24A2  
                                          u2140 222A                                            u2300 0FD0  
                                          u2220 0E18                                            u2060 24AA  
                                          u3100 1CA2                                            u2141 2226  
                                          u2301 0FCC                                            u2221 0E14  
                                          u3101 1C9E                                            _LATA 000F89  
                                          u2150 2258                                            u2310 0FE8  
                                          u2230 0E26                                            u2070 2438  
                                          u3110 1CB2                                            _LATB 000F8A  
                                          u2151 2254                                            u2311 0FE4  
                                          u2231 0E22                                            u2071 2432  
                                          u3111 1CAE                                            _LATC 000F8B  
                                          u2160 21CA                                            u2240 0F50  
                                          u2400 19A4                                            u2080 243A  
                                          u3120 1CE8                                            u2161 21C6  
                                          u2241 0F4C                                            u2401 19A0  
                                          u2321 1836                                            u3121 1CE4  
                                          u3050 2712                                            u2250 0F6E  
                                          u2170 0D88                                            u2330 1858  
                                          u2410 1318                                            u2090 2188  
                                          u3051 270C                                            u2251 0F6A  
                                          u2171 0D82                                            u2331 1854  
                                          u2411 1314                                            u2091 2182  
                                          u3060 25B4                                            u2260 0F88  
                                          u2180 0D8A                                            u2340 188A  
                                          u2420 1334                                            u2500 108A  
                                          u3061 25B0                                            u2261 0F84  
                                          u2341 1886                                            u2421 1330  
                                          u2501 1086                                            u3070 25C8  
                                          u1710 26E8                                            u2270 0FA2  
                                          u2190 0DA0                                            u2350 18A8  
                                          u2430 1480                                            u2510 10EE  
                                          u3071 25C4                                            u1711 26E4  
                                          u2271 0F9E                                            u2191 0D9C  
                                          u2351 18A4                                            u2431 147C  
                                          u2511 10EA                                            u3056 2714  
                                          u1720 1FFA                                            u1800 16B6  
                                          u2280 0FB0                                            u2360 18D2  
                                          u2440 149E                                            u2600 1264  
                                          u2520 1138                                            u3400 0886  
                                          u3080 1C3E                                            u1721 1FF6  
                                          u1801 16B2                                            u2281 0FAC  
                                          u2361 18CE                                            u2441 149A  
                                          u2601 1260                                            u2521 1132  
                                          u3401 0882                                            u3081 1C3A  
                                          u1730 200C                                            u1810 16E8  
                                          u2290 0FC2                                            u2370 190C  
                                          u2450 14B8                                            u2610 127E  
                                          u2530 113A                                            u3410 08CA  
                                          u3090 1C56                                            u1731 2008  
                                          u1811 16E4                                            u2291 0FBE  
                                          u2371 1908                                            u2451 14B4  
                                          u2611 127A                                            u3411 08C6  
                                          u3091 1C52                                            u2700 166C  
                                          u1740 2034                                            u1900 1A5A  
                                          u2380 195C                                            u2460 14D2  
                                          u2620 1298                                            u2540 1150  
                                          u3500 0BEC                                            u3420 094A  
                                          u2701 1668                                            u1741 2030  
                                          u1821 1712                                            u1901 1A56  
                                          u2381 1958                                            u2461 14CE  
                                          u2621 1294                                            u2541 114C  
                                          u3501 0BE8                                            u3421 0944  
                                          u2710 167E                                            u1750 206A  
                                          u1830 1736                                            u1910 1A88  
                                          u2390 196A                                            u2470 14E0  
                                          u2630 12A6                                            u2550 1184  
                                          u3510 0C12                                            u3430 094C  
                                          u2711 167A                                            u1751 2066  
                                          u1831 1732                                            u1911 1A84  
                                          u2391 1966                                            u2471 14DC  
                                          u2631 12A2                                            u2551 117E  
                                          u3511 0C0E                                            u1760 2340  
                                          u1840 1760                                            u1920 1AD0  
                                          u2640 12B4                                            u2560 1186  
                                          u2480 1044                                            u3520 0CD6  
                                          u3440 0962                                            u3600 03B4  
                                          u1761 233C                                            u1841 175C  
                                          u1921 1ACC                                            u2641 12B0  
                                          u2481 1040                                            u3521 0CD2  
                                          u3441 095E                                            u3601 03B0  
                                          u2650 1544                                            u1770 2510  
                                          u1850 17A0                                            u2570 119C  
                                          u2490 1060                                            u3450 0988  
                                          u3370 0780                                            u3530 214E  
                                          u3610 04A6                                            u2651 1540  
                                          u1771 250C                                            u1851 179C  
                                          u1931 1B18                                            u2571 1198  
                                          u2491 105C                                            u3451 0984  
                                          u3371 077C                                            u3531 214A  
                                          u3611 04A2                                            u2660 157C  
                                          u1860 17EA                                            u1940 1B3C  
                                          u1780 2470                                            u2580 1204  
                                          u3460 09FC                                            u3380 0850  
                                          u2900 26FE                                            u3620 0512  
                                          u3540 00E8                                            u2661 1578  
                                          u1861 17E6                                            u1941 1B38  
                                          u1781 246A                                            u3461 09F8  
                                          u3381 084C                                            u2901 26F8  
                                          u3621 050E                                            u3541 00E4  
                                          u2910 26BE                                            u2670 1598  
                                          u1870 19C0                                            u1950 1B66  
                                          u1790 2472                                            u2590 1246  
                                          u3470 0A22                                            u3390 085E  
                                          u3630 0538                                            u3550 0100  
                                          u2911 26BA                                            u2671 1594  
                                          u1871 19BC                                            u1951 1B62  
                                          u2591 1242                                            u3471 0A1E  
                                          u3391 085A                                            u3631 0534  
                                          u3551 00FC                                            u2680 1654  
                                          u1880 19F2                                            u1960 1BA6  
                                          u3480 0AC8                                            u3640 059A  
                                          u3560 0126                                            u2681 164E  
                                          u1881 19EE                                            u1961 1BA2  
                                          u2585 11F2                                            u3481 0AC4  
                                          u3641 0596                                            u3561 0122  
                                          u2930 26D4                                            u2690 1656  
                                          u1890 1A30                                            u1970 1D08  
                                          u3490 0B44                                            u2906 2700  
                                          u3650 05E4                                            u3570 018E  
                                          u2931 26CE                                            u1891 1A2C  
                                          u1971 1D04                                            u3491 0B40  
                                          u3651 05E0                                            u3571 018A  
                                          u2940 26D6                                            u1980 1D32  
                                          u3660 067A                                            u3580 0320  
                                          u1981 1D2E                                            u3661 0676  
                                          u3581 031C                                            u2950 22C4  
                                          u1990 1D60                                            u3590 034A  
                                          u2951 22C0                                            u1991 1D5C  
                                          u3591 0346                                            u2960 22F2  
                                          u2961 22EE                                            u2890 25DE  
                                          u2891 25DA                         _TMR1_HasOverflowOccured 26EE  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 26D8                                            abs@a 0019  
                                          _dbuf 0100                                            _atoi 150A  
                                          _ctoa 21B6                                            _main 00B4  
                                          _dtoa 0D58                                   ?_EUSART1_Read 0001  
                                          _prec 0053                                   ?_EUSART2_Read 0001  
                                          _nout 0078                                            pad@i 0020  
                                          pad@p 001D                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0022  
                                          fsr2l 000FD9                                            _stoa 182C  
                                          btemp 0059                                            _utoa 130A  
                                          _xtoa 1036                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00B0  
                  __end_of_EUSART2_Transmit_ISR 2384                                    ___param_bank 000000  
                                         ??_abs 001B                                           ??_pad 001F  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 26C0  
                               __end_of___aodiv 182C                                           ?_atoi 000E  
                                         ?_ctoa 0024                                           ?_main 0001  
                                         ?_dtoa 0024                                 __end_of___aomod 1B12  
                                         STR_10 FFB0                                           STR_11 FFBC  
                                         STR_12 FF97                                           STR_20 FECB  
                                         STR_13 FFA4                                           STR_21 FDEF  
                                         STR_14 FCE7                                           STR_30 FF30  
                                         STR_22 FE34                                           STR_15 FF6C  
                                         STR_31 FF3F                                           STR_23 FCB1  
                                         STR_24 FCE7                                           STR_16 FFEE  
                                         STR_32 FF4E                                           STR_40 FEEF  
                                         STR_25 FFE6                                           STR_33 FF10  
                                         STR_41 FF00                                           STR_17 FEB6  
                                         STR_26 FD19                                           STR_42 FFC8  
                                         STR_18 FE73                                           STR_34 FE54  
                                         STR_27 FD19                                           STR_43 FF5D  
                                         STR_35 FEA1                                           STR_19 FD1B  
                                         STR_44 FF20                                           STR_36 FD9E  
                                         STR_28 FD49                                           STR_37 FFFD  
                                         STR_29 FF89                                           STR_45 FDC7  
                                         STR_38 FFFA                                           STR_46 FF7B  
                                         STR_39 FD18                                           STR_47 FF5D  
                                         STR_48 FF20                                           STR_49 FEDE  
                                         ?_stoa 0012                                           ?_utoa 0024  
                               __end_of___lodiv 1C02                                           ?_xtoa 0024  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                               __end_of___lomod 1DBA                                           i2l235 2380  
                                         i2l252 27A2                                           i2l245 1F36  
                                         i2l421 0062                                           i2l238 2382  
                                         i2l422 009C                                           i2l255 2796  
                                         i2l249 25A4                                           i2l258 279C  
                                         i2l426 009C                                           i2l555 1FE6  
                                  vfpfcnvrt@fmt 004D                                    vfpfcnvrt@llu 00C6  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _flags 0055  
                                         _cksum 0091                                           _fputc 1FE8  
                               __end_of_isalpha 2440                                           _fputs 22FE  
                               __end_of_isdigit 24E8                                           atoi@n 001B  
                                         pad@fp 0019                                           atoi@s 000E  
                                         _width 007A                                           ctoa@c 0026  
                                         _putch 2738                                           ctoa@w 0027  
                                         main@i 00E6                                           dtoa@d 0026  
                                         dtoa@i 0046                                           dtoa@n 003E  
                                         dtoa@p 0038                                           dtoa@s 003C  
                                         dtoa@w 003A                                 __end_of_islower 2478  
                               __end_of_isspace 2264                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 26A4                                _baudRateSelected 00F8  
                               __end_of_isupper 24B0                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0007  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0007                                _IRtransmitBuffer 009B  
                                         stoa@i 001E                                           stoa@l 0026  
                                         stoa@p 0024                                           stoa@s 0014  
                                         stoa@w 0020                                           ttemp5 005A  
                                         ttemp6 005D                                           ttemp7 0061  
                                         utoa@d 0026                                           utoa@i 0042  
                                         utoa@n 003A                                           utoa@p 0036  
                                         utoa@w 0038                                           status 000FD8  
                                         wtemp8 005A                                           xtoa@c 0049  
                                         xtoa@d 0026                                           xtoa@i 0047  
                                         xtoa@n 003F                                           xtoa@p 003B  
                                         xtoa@w 003D                                           xtoa@x 002E  
                               __end_of_toupper 21B6                                ___lodiv@dividend 0007  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 25D0  
                                  _toupper$2060 0013           __end_of_EUSART2_SetTxInterruptHandler 274C  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 2742  
                               __initialization 2264                                   main@baud_rate 00E1  
                                  __end_of_atoi 16A4                                    __end_of_ctoa 2212  
                    __end_of_EUSART1_Initialize 2404                                    __end_of_main 075A  
                                  __end_of_dtoa 1036                                    __end_of_stoa 19AE  
                                  __end_of_utoa 150A                                    __end_of_xtoa 130A  
                       __end_of_TMR2_Initialize 2738                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 0010                                          ??_ctoa 0027  
                                        ??_main 00DF                                          ??_dtoa 002E  
                                        ??_stoa 0016                                          ??_utoa 002E  
                                        ??_xtoa 002F                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 279E                     _EUSART2_DefaultErrorHandler 2798  
                      ?_transmitCharacterOverIR 000B                                ___lodiv@quotient 0017  
                     ??_TMR1_HasOverflowOccured 0007                      __end_of_EUSART2_Initialize 20F4  
                      _eusart2TxBufferRemaining 0098                                          ?_fputc 0009  
                                        ?_fputs 0012                                          _CCPR2H 000F68  
                                        _CCPR2L 000F67                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                       TMR1_WriteTimer@timerVal 0007                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l3601 2798                                          i2l3381 257A  
                                        i2l3383 258A                                          i2l3385 258C  
                                        i2l3387 259C                                          i2l3651 2354  
                                        i2l3811 0028                                          i2l3389 25A0  
                                        i2l3653 2364                                          i2l3661 1E7C  
                                        i2l3813 0036                                          i2l3655 2366  
                                        i2l3751 1F38                                          i2l3671 1ED0  
                                        i2l3663 1E8C                                          i2l3815 0044  
                                        i2l3657 2376                                          i2l3649 2342  
                                        i2l3761 1F6A                                          i2l3753 1F3C  
                                        i2l3673 1EE0                                          i2l3665 1E9A  
                                        i2l3817 0070                                          i2l3809 001A  
                                        i2l3659 237A                                          i2l3771 1FA2  
                                        i2l3763 1F6C                                          i2l3755 1F44  
                                        i2l3675 1EF8                                          i2l3667 1EAA  
                                        i2l3819 007E                                          i2l3773 1FA6  
                                        i2l3765 1F88                                          i2l3757 1F54  
                                        i2l3677 1F14                                          i2l3669 1EC2  
                                        i2l3599 2792                                          i2l3775 1FAA  
                                        i2l3767 1F90                                          i2l3759 1F5A  
                                        i2l3679 1F32                                          i2l4729 1FC8  
                                        i2l3769 1FA0                                          i2l3779 1FB2  
                                        _RCREG1 000FAE                                          _RCREG2 000F74  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00C2                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 0051                                       ??___aodiv 0017  
                                     ??___aomod 0017                                          ___wmul 2620  
                          __end_of_myEUSART2ISR 1FE8                                       ??___lodiv 0017  
                                     ??___lomod 0017                        ?_EUSART1_SetErrorHandler 0007  
                                        clear_0 228A                                          clear_1 2296  
                   _EUSART2_FramingErrorHandler 0086                                          _printf 25F8  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          ctoa@fp 0024  
                                        dtoa@fp 0024                                          _strlen 24E8  
                                        fputc@c 0009                                          fputs@c 0016  
                                        fputs@i 0017                                          fputs@s 0012  
                                     ??_isalpha 0009                                       ??_isdigit 0009  
                                     ??_islower 0009                                    __mediumconst FC6A  
                                     ??_isspace 0009                                          tblptrh 000FF7  
                                     ??_isupper 0009                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 2342  
                                        stoa@cp 0022                                          stoa@fp 0012  
                              __end_of_vfprintf 2158                                 ??_EUSART1_Write 0007  
                           _EPWM2_LoadDutyValue 251E                                          utoa@fp 0024  
                       __end_of_TMR1_WriteTimer 25F8                                          xtoa@fp 0024  
                                     ??_toupper 000F                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0068                                ?_TMR1_Initialize 0001  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 2646  
                               _eusart2TxBuffer 0070                                      __accesstop 0060  
                       __end_of__initialization 22A8                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 0007  
                                  __pidataBANK0 2716                             ??_SYSTEM_Initialize 0009  
                                 __end_of_fputc 207E                                   __end_of_fputs 2342  
                ?_EUSART2_SetTxInterruptHandler 0007                                   __end_of_putch 2742  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 25D0  
                          __end_of_EUSART2_Read 22FE                        ?_EUSART2_SetErrorHandler 0007  
                         ?_EUSART2_Transmit_ISR 0001                               ?_EPWM2_Initialize 0001  
                                       ??_fputc 000D                       __end_of_SYSTEM_Initialize 2668  
                                       ??_fputs 0016                              ??_EPWM2_Initialize 0007  
                                       ??_putch 0008                                   _eusart2RxHead 0058  
                                 _eusart2TxHead 009A                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart2RxTail 0057  
                                 _eusart2TxTail 0099                ??_EUSART2_SetFramingErrorHandler 0009  
               ?_EUSART2_SetFramingErrorHandler 0007                 __end_of_EUSART1_SetErrorHandler 2792  
                         ??_EPWM2_LoadDutyValue 0009                                         ?___wmul 0007  
                                       _CCP2CON 000F66                                         _ECCP2AS 000F64  
                                       ?_printf 00D5                                         ?_strlen 0007  
        __end_of_EUSART1_SetFramingErrorHandler 2788         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 277E                           _eusart2RxStatusBuffer 0060  
                                       _OSCCON2 000FD2                     __end_of_EUSART2_Receive_ISR 1F38  
                            __size_of_vfpfcnvrt 05FE                                         _OSCTUNE 000F9B  
                                       _PWM2CON 000F65                                         _SPBRGH1 000FB0  
                                       _SPBRGH2 000F76                                ?_TMR1_WriteTimer 0007  
                              ___lomod@dividend 0007                           __size_of_myEUSART2ISR 00B0  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 16A4  
                                       ___aomod 19AE                                 __size_of___wmul 0026  
                                       ___lodiv 1B12                                         ___lomod 1CEA  
                                     ?_vfprintf 00CF                             _EUSART1_is_rx_ready 2702  
                                       __pcinit 2264                 __end_of_EUSART2_SetErrorHandler 2774  
                                       __ramtop 1000                                         __ptext0 00B4  
                                       __ptext1 1C02                                         __ptext2 25D0  
                                       __ptext3 26EE                                         __ptext4 251E  
                                       __ptext5 25F8                                         __ptext6 20F4  
                                       __ptext7 075A                                         __ptext8 1036  
                                       __ptext9 2158                                 __size_of_printf 0028  
                               __size_of_strlen 0036                                       _T1CONbits 000FCD  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 2798  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0006            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 2792  
                         _OSCILLATOR_Initialize 26A4                          ??_EUSART2_Transmit_ISR 0001  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 2404  
                                       _isdigit 24B0                              _EUSART1_Initialize 23C4  
                                       _islower 2440                        ??_PIN_MANAGER_Initialize 0007  
                                       _isspace 2212                                         _isupper 2478  
                                       atoi@neg 0014                                         main@cmd 00E3  
                    __size_of_SYSTEM_Initialize 0022                                    _myEUSART2ISR 1F38  
                                       _toupper 2158                            end_of_initialization 22A8  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000B                     _EUSART1_OverrunErrorHandler 007E  
                                       fputs@fp 0014                __size_of_transmitCharacterOverIR 00E8  
                            _EUSART2_Initialize 207E                               __end_of_vfpfcnvrt 0D58  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                         __size_of_EUSART2_Read 004C                                      ??_vfprintf 0051  
                          ??_EUSART1_Initialize 0009                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0009                             _EUSART2_is_rx_ready 26C0  
                                       strlen@s 0007                                      main@i_1370 00E5  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0007  
                         ??_EUSART1_is_rx_ready 0007                            ??_EUSART2_Initialize 0009  
                          ?_EUSART2_is_rx_ready 0001                                    _EUSART1_Read 25A6  
                                  _EUSART2_Read 22B2                                      main@letter 00E4  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 25A6  
                  __end_of_INTERRUPT_Initialize 27A2                                     vfpfcnvrt@ap 004F  
                                   vfpfcnvrt@cp 00C0                                     vfpfcnvrt@fp 004B  
                                   vfpfcnvrt@ll 00B8                                  __end_of___wmul 2646  
                        ?_OSCILLATOR_Initialize 0001                        ?_TMR1_HasOverflowOccured 0001  
                                __end_of_printf 2620                                  __end_of_strlen 251E  
                           start_initialization 2264                                 ___lodiv@divisor 000F  
                               ___lodiv@counter 001F                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 23C4                                     __end_of_pad 1E7C  
 EUSART2_SetRxInterruptHandler@interruptHandler 0007   EUSART2_SetTxInterruptHandler@interruptHandler 0007  
                             myEUSART2ISR@Index 008E                                     putch@txData 0008  
                         ??_EUSART2_is_rx_ready 0007                           __end_of_EUSART1_Write 26EE  
                             myEUSART2ISR@state 008F                __size_of_EUSART2_SetErrorHandler 000A  
        __end_of_EUSART2_SetOverrunErrorHandler 2760         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 2756                       __size_of_EPWM2_Initialize 0020  
                      __size_of_TMR1_Initialize 001C                                     vfprintf@fmt 00D1  
                                      ??___wmul 000B                                     __pdataBANK0 00E7  
                                      ??_printf 0053                                        ??_strlen 0009  
                                _eusart2RxCount 0097                                     __pbssCOMRAM 0053  
                                 __pcstackBANK0 00B4                                ___aodiv@dividend 0007  
                      __size_of_TMR2_Initialize 0010                         fp__EUSART2_Transmit_ISR 0000  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
               ??_EUSART2_SetRxInterruptHandler 0009                         _transmitCharacterOverIR 1C02  
                   __end_of_EPWM2_LoadDutyValue 254E                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$1984 0016                                       _atoi$1985 001A  
                                     _atoi$1986 0018                                       _bitPeriod 00E7  
                        _PIN_MANAGER_Initialize 254E                                       _dtoa$1918 0036  
                                     __pintcode 0008                                   __pmediumconst FC6A  
                                      ?___aodiv 0007                                        ?___aomod 0007  
                              ___aodiv@quotient 0019                                        ?___lodiv 0007  
                                      ?___lomod 0007                 __end_of_TMR1_HasOverflowOccured 2702  
             _EUSART2_TxDefaultInterruptHandler 008A                    ??_INTERRUPT_InterruptManager 0003  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 000F  
                               ___lomod@counter 0017                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0007                                        ?_isdigit 0007  
                          _EUSART1_ErrorHandler 007C                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0007                                        ?_isspace 0007  
               transmitCharacterOverIR@baudRate 000B                                        ?_isupper 0007  
                       _EUSART1_SetErrorHandler 2788                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000D  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 279E  
                  __size_of_EUSART2_Receive_ISR 00BC                                  ___wmul@product 000B  
       EUSART1_SetErrorHandler@interruptHandler 0007         EUSART2_SetErrorHandler@interruptHandler 0007  
                                      _PIE3bits 000FA3                        __size_of_TMR1_WriteTimer 0028  
                                      i2u301_40 1ED0                                        i2u300_48 1EB0  
                                      i2u301_41 1ECC                                        i2u300_49 1EC2  
                                      i2u303_40 1F14                                        i2u302_48 1EE6  
                                      i2u303_41 1F10                                        i2u302_49 1EF8  
           __size_of_INTERRUPT_InterruptManager 00A8                                        i2u313_40 1F88  
                                      i2u304_48 1F1A                                        i2u321_40 0070  
                                      i2u320_48 004A                                        i2u313_41 1F84  
                                      i2u304_49 1F2E                                        i2u321_41 006C  
                                      i2u320_49 005E                                        i2u322_40 007E  
                                      i2u322_41 007A                                        i2u323_48 0084  
                                      i2u323_49 0098                                        i2u317_40 0028  
                                      i2u317_41 0024                                        i2u318_40 0036  
                                      i2u318_41 0032                                        i2u319_40 0044  
                                      i2u319_41 0040                                        i2u272_40 259C  
                                      i2u272_41 2598                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                        i2u297_40 2354  
                                      i2u297_41 2350                                        i2u298_40 2376  
                                      i2u298_41 2372                                        i2u299_40 1E9A  
                                      i2u299_41 1E96                                        _RCONbits 000FD0  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 075A  
                                     _xtoa$1945 0037                                       _xtoa$1946 0039  
                             ??_TMR1_Initialize 0007                               ___wmul@multiplier 0007  
                 __size_of_EUSART2_Transmit_ISR 0042                                    _isspace$2011 000D  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00CE  
                                   _INTCON2bits 000FF1                       ??_transmitCharacterOverIR 000D  
                                     copy_data0 2278                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 276A                               ??_TMR2_Initialize 0007  
                   _EUSART2_OverrunErrorHandler 0084                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 2756          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 274C                                _EPWM2_Initialize 2668  
                                    vfprintf@ap 00D3                                        __Lrparam 0000  
                                    vfprintf@fp 00CF                         ??_OSCILLATOR_Initialize 0007  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 0040  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 004B  
                               ___aodiv@divisor 000F                                 ___aodiv@counter 0017  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2716                                        _checksum 0090  
                          _EUSART2_ErrorHandler 0082                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 2440  
                                      __ptext11 2478                                        __ptext20 16A4  
                                      __ptext12 2404                                        __ptext21 21B6  
                                      __ptext13 130A                                      _T1GCONbits 000FCC  
                                      __ptext30 24B0                                        __ptext22 1DBA  
                                      __ptext14 1CEA                                        __ptext31 2620  
                                      __ptext23 24E8                                        __ptext15 1B12  
                                      __ptext40 274C                                        __ptext32 2646  
                                      __ptext24 22FE                                        __ptext16 182C  
                                      __ptext41 2756                                        __ptext33 2728  
                                      __ptext25 1FE8                                        __ptext17 0D58  
                                      __ptext50 22B2                                        __ptext42 2760  
                                      __ptext34 2688                                        __ptext26 2738  
                                      __ptext18 2384                                        __ptext51 2702  
                                      __ptext43 276A                                        __ptext35 254E  
                                      __ptext27 26D8                                        __ptext19 19AE  
                                      __ptext60 257A                                        __ptext52 25A6  
                                      __ptext44 23C4                                        __ptext36 26A4  
                                      __ptext28 150A                                        __ptext61 0000  
                                      __ptext45 2774                                        __ptext37 279E  
                                      __ptext29 2212                                        __ptext54 1E7C  
                                      __ptext46 277E                                        __ptext38 207E  
                                      __ptext55 1F38                                        __ptext47 2788  
                                      __ptext39 2742                                        __ptext56 2342  
                                      __ptext48 2668                                        __ptext57 2792  
                                      __ptext49 26C0                                        __ptext58 27A2  
                                      __ptext59 2798                                __size_of_isupper 0038  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 0076  
              __size_of_TMR1_HasOverflowOccured 0014                                   __size_of_atoi 019A  
                                 __size_of_ctoa 005C                                   __size_of_main 06A6  
                                 __size_of_dtoa 02DE                                   __size_of_stoa 0182  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 27A4  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 27A2  
                                 __size_of_utoa 0200                                   __size_of_xtoa 02D4  
                                   _receiveBusy 0094            __size_of_EUSART2_DefaultErrorHandler 0006  
                                     stoa@F1144 00F1  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
EUSART2_SetOverrunErrorHandler@interruptHandler 0007                 __end_of_transmitCharacterOverIR 1CEA  
                                      int$flags 0059                                        _vfprintf 20F4  
            __end_of_INTERRUPT_InterruptManager 00B0                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 257A                                       printf@fmt 00D5  
                             ??_TMR1_WriteTimer 0009                     _EUSART1_FramingErrorHandler 0080  
                              ___aomod@dividend 0007                ??_EUSART2_SetOverrunErrorHandler 0009  
               ?_EUSART2_SetOverrunErrorHandler 0007                               _receiveNewMessage 0093  
                               fp__myEUSART2ISR 0000                                  _vfpfcnvrt$1960 00C4  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 26D8  
                               _IRreceiveBuffer 0120                                        isalpha@c 0007  
                                      isdigit@c 0007                          ??_INTERRUPT_Initialize 0007  
                     ??_EUSART2_SetErrorHandler 0009                                        intlevel2 0000  
                                      islower@c 0007                    EPWM2_LoadDutyValue@dutyValue 0007  
                                      isspace@c 0007                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 277E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2774                                      _RCSTA1bits 000FAB  
                                    _RCSTA2bits 000F71                                        isupper@c 0007  
                 transmitCharacterOverIR@letter 000D                                        printf@ap 00DD  
EUSART1_SetFramingErrorHandler@interruptHandler 0007  EUSART2_SetFramingErrorHandler@interruptHandler 0007  
                ?_EUSART2_SetRxInterruptHandler 0007                                 ___aomod@divisor 000F  
                                   ??_vfpfcnvrt 00B4                                        stoa@nuls 0017  
                               ___aomod@counter 0017                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0095                             _EUSART2_Receive_ISR 1E7C  
                                      toupper@c 000D                                   ?_myEUSART2ISR 0001  
                                  ___aodiv@sign 0018                  __end_of_PIN_MANAGER_Initialize 257A  
                   transmitCharacterOverIR@mask 000E                 ??_EUSART2_SetTxInterruptHandler 0009  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 0096  
                                  ___aomod@sign 0018                                 _TMR1_Initialize 2688  
             _EUSART2_RxDefaultInterruptHandler 0088  
