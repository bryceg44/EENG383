

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Oct 12 21:05:01 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 05/05/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F26K22 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   104  0000                     
   105 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   106  0000                     
   107 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   108  0000                     
   109 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   110  0000                     
   111 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   112  0000                     
   113 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   114  0000                     
   115                           	psect	idataCOMRAM
   116  0016CE                     __pidataCOMRAM:
   117                           	callstack 0
   118                           
   119                           ;initializer for myTMR1ISR@mask
   120  0016CE  01                 	db	1
   121                           
   122                           	psect	idataBANK0
   123  0016CA                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _bitPeriodInTMR1Counts
   127  0016CA  3415               	dw	13333
   128  0000                     _ANSELA	set	3896
   129  0000                     _ANSELB	set	3897
   130  0000                     _ANSELC	set	3898
   131  0000                     _CCPTMRS0bits	set	3913
   132  0000                     _TMR1	set	4046
   133  0000                     _TXREG1	set	4013
   134  0000                     _RCREG1	set	4014
   135  0000                     _RCSTA1bits	set	4011
   136  0000                     _TXSTA1bits	set	4012
   137  0000                     _SPBRGH1	set	4016
   138  0000                     _SPBRG1	set	4015
   139  0000                     _TXSTA1	set	4012
   140  0000                     _RCSTA1	set	4011
   141  0000                     _BAUDCON1	set	4024
   142  0000                     _TXREG2	set	3955
   143  0000                     _RCREG2	set	3956
   144  0000                     _TXSTA2bits	set	3954
   145  0000                     _SPBRGH2	set	3958
   146  0000                     _SPBRG2	set	3957
   147  0000                     _TXSTA2	set	3954
   148  0000                     _RCSTA2	set	3953
   149  0000                     _BAUDCON2	set	3952
   150  0000                     _RCSTA2bits	set	3953
   151  0000                     _PIR3bits	set	4004
   152  0000                     _RCONbits	set	4048
   153  0000                     _T2CONbits	set	4026
   154  0000                     _T2CON	set	4026
   155  0000                     _TMR2	set	4028
   156  0000                     _PR2	set	4027
   157  0000                     _INTCONbits	set	4082
   158  0000                     _INTCON2bits	set	4081
   159  0000                     _WPUB	set	3937
   160  0000                     _TRISC	set	3988
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _LATC	set	3979
   164  0000                     _LATB	set	3978
   165  0000                     _LATA	set	3977
   166  0000                     _T1GCONbits	set	4044
   167  0000                     _T1CONbits	set	4045
   168  0000                     _T1CON	set	4045
   169  0000                     _PIE1bits	set	3997
   170  0000                     _PIR1bits	set	3998
   171  0000                     _TMR1L	set	4046
   172  0000                     _TMR1H	set	4047
   173  0000                     _T1GCON	set	4044
   174  0000                     _CCPR2L	set	3943
   175  0000                     _CCPR2H	set	3944
   176  0000                     _PSTR2CON	set	3939
   177  0000                     _PWM2CON	set	3941
   178  0000                     _ECCP2AS	set	3940
   179  0000                     _CCP2CON	set	3942
   180  0000                     _OSCTUNE	set	3995
   181  0000                     _OSCCON2	set	4050
   182  0000                     _OSCCON	set	4051
   183  0000                     _PLLRDY	set	32407
   184                           
   185                           	psect	mediumconst
   186  00FC98                     __pmediumconst:
   187                           	callstack 0
   188  00FC98  00                 	db	0
   189  00FC99                     STR_4:
   190  00FC99  49                 	db	73	;'I'
   191  00FC9A  6E                 	db	110	;'n'
   192  00FC9B  73                 	db	115	;'s'
   193  00FC9C  74                 	db	116	;'t'
   194  00FC9D  61                 	db	97	;'a'
   195  00FC9E  6C                 	db	108	;'l'
   196  00FC9F  6C                 	db	108	;'l'
   197  00FCA0  20                 	db	32
   198  00FCA1  61                 	db	97	;'a'
   199  00FCA2  20                 	db	32
   200  00FCA3  6A                 	db	106	;'j'
   201  00FCA4  75                 	db	117	;'u'
   202  00FCA5  6D                 	db	109	;'m'
   203  00FCA6  70                 	db	112	;'p'
   204  00FCA7  65                 	db	101	;'e'
   205  00FCA8  72                 	db	114	;'r'
   206  00FCA9  20                 	db	32
   207  00FCAA  77                 	db	119	;'w'
   208  00FCAB  69                 	db	105	;'i'
   209  00FCAC  72                 	db	114	;'r'
   210  00FCAD  65                 	db	101	;'e'
   211  00FCAE  20                 	db	32
   212  00FCAF  66                 	db	102	;'f'
   213  00FCB0  72                 	db	114	;'r'
   214  00FCB1  6F                 	db	111	;'o'
   215  00FCB2  6D                 	db	109	;'m'
   216  00FCB3  20                 	db	32
   217  00FCB4  52                 	db	82	;'R'
   218  00FCB5  43                 	db	67	;'C'
   219  00FCB6  30                 	db	48	;'0'
   220  00FCB7  20                 	db	32
   221  00FCB8  74                 	db	116	;'t'
   222  00FCB9  6F                 	db	111	;'o'
   223  00FCBA  20                 	db	32
   224  00FCBB  52                 	db	82	;'R'
   225  00FCBC  42                 	db	66	;'B'
   226  00FCBD  37                 	db	55	;'7'
   227  00FCBE  20                 	db	32
   228  00FCBF  4F                 	db	79	;'O'
   229  00FCC0  4E                 	db	78	;'N'
   230  00FCC1  4C                 	db	76	;'L'
   231  00FCC2  59                 	db	89	;'Y'
   232  00FCC3  20                 	db	32
   233  00FCC4  41                 	db	65	;'A'
   234  00FCC5  46                 	db	70	;'F'
   235  00FCC6  54                 	db	84	;'T'
   236  00FCC7  45                 	db	69	;'E'
   237  00FCC8  52                 	db	82	;'R'
   238  00FCC9  20                 	db	32
   239  00FCCA  75                 	db	117	;'u'
   240  00FCCB  6E                 	db	110	;'n'
   241  00FCCC  70                 	db	112	;'p'
   242  00FCCD  6C                 	db	108	;'l'
   243  00FCCE  75                 	db	117	;'u'
   244  00FCCF  67                 	db	103	;'g'
   245  00FCD0  67                 	db	103	;'g'
   246  00FCD1  69                 	db	105	;'i'
   247  00FCD2  6E                 	db	110	;'n'
   248  00FCD3  67                 	db	103	;'g'
   249  00FCD4  20                 	db	32
   250  00FCD5  50                 	db	80	;'P'
   251  00FCD6  49                 	db	73	;'I'
   252  00FCD7  43                 	db	67	;'C'
   253  00FCD8  4B                 	db	75	;'K'
   254  00FCD9  69                 	db	105	;'i'
   255  00FCDA  74                 	db	116	;'t'
   256  00FCDB  33                 	db	51	;'3'
   257  00FCDC  0D                 	db	13
   258  00FCDD  0A                 	db	10
   259  00FCDE  00                 	db	0
   260  00FCDF                     STR_16:
   261  00FCDF  6D                 	db	109	;'m'
   262  00FCE0  3A                 	db	58	;':'
   263  00FCE1  20                 	db	32
   264  00FCE2  63                 	db	99	;'c'
   265  00FCE3  72                 	db	114	;'r'
   266  00FCE4  65                 	db	101	;'e'
   267  00FCE5  61                 	db	97	;'a'
   268  00FCE6  74                 	db	116	;'t'
   269  00FCE7  65                 	db	101	;'e'
   270  00FCE8  20                 	db	32
   271  00FCE9  61                 	db	97	;'a'
   272  00FCEA  20                 	db	32
   273  00FCEB  4E                 	db	78	;'N'
   274  00FCEC  55                 	db	85	;'U'
   275  00FCED  4C                 	db	76	;'L'
   276  00FCEE  4C                 	db	76	;'L'
   277  00FCEF  20                 	db	32
   278  00FCF0  74                 	db	116	;'t'
   279  00FCF1  65                 	db	101	;'e'
   280  00FCF2  72                 	db	114	;'r'
   281  00FCF3  6D                 	db	109	;'m'
   282  00FCF4  69                 	db	105	;'i'
   283  00FCF5  6E                 	db	110	;'n'
   284  00FCF6  61                 	db	97	;'a'
   285  00FCF7  74                 	db	116	;'t'
   286  00FCF8  65                 	db	101	;'e'
   287  00FCF9  64                 	db	100	;'d'
   288  00FCFA  20                 	db	32
   289  00FCFB  6D                 	db	109	;'m'
   290  00FCFC  65                 	db	101	;'e'
   291  00FCFD  73                 	db	115	;'s'
   292  00FCFE  73                 	db	115	;'s'
   293  00FCFF  61                 	db	97	;'a'
   294  00FD00  67                 	db	103	;'g'
   295  00FD01  65                 	db	101	;'e'
   296  00FD02  20                 	db	32
   297  00FD03  77                 	db	119	;'w'
   298  00FD04  69                 	db	105	;'i'
   299  00FD05  74                 	db	116	;'t'
   300  00FD06  68                 	db	104	;'h'
   301  00FD07  20                 	db	32
   302  00FD08  53                 	db	83	;'S'
   303  00FD09  52                 	db	82	;'R'
   304  00FD0A  43                 	db	67	;'C'
   305  00FD0B  20                 	db	32
   306  00FD0C  61                 	db	97	;'a'
   307  00FD0D  6E                 	db	110	;'n'
   308  00FD0E  64                 	db	100	;'d'
   309  00FD0F  20                 	db	32
   310  00FD10  44                 	db	68	;'D'
   311  00FD11  45                 	db	69	;'E'
   312  00FD12  53                 	db	83	;'S'
   313  00FD13  54                 	db	84	;'T'
   314  00FD14  20                 	db	32
   315  00FD15  70                 	db	112	;'p'
   316  00FD16  72                 	db	114	;'r'
   317  00FD17  65                 	db	101	;'e'
   318  00FD18  66                 	db	102	;'f'
   319  00FD19  69                 	db	105	;'i'
   320  00FD1A  78                 	db	120	;'x'
   321  00FD1B  2E                 	db	46
   322  00FD1C  0D                 	db	13
   323  00FD1D  0A                 	db	10
   324  00FD1E  00                 	db	0
   325  00FD1F                     STR_7:
   326  00FD1F  2D                 	db	45
   327  00FD20  2D                 	db	45
   328  00FD21  2D                 	db	45
   329  00FD22  2D                 	db	45
   330  00FD23  2D                 	db	45
   331  00FD24  2D                 	db	45
   332  00FD25  2D                 	db	45
   333  00FD26  2D                 	db	45
   334  00FD27  2D                 	db	45
   335  00FD28  2D                 	db	45
   336  00FD29  2D                 	db	45
   337  00FD2A  2D                 	db	45
   338  00FD2B  2D                 	db	45
   339  00FD2C  2D                 	db	45
   340  00FD2D  2D                 	db	45
   341  00FD2E  2D                 	db	45
   342  00FD2F  2D                 	db	45
   343  00FD30  2D                 	db	45
   344  00FD31  2D                 	db	45
   345  00FD32  2D                 	db	45
   346  00FD33  2D                 	db	45
   347  00FD34  2D                 	db	45
   348  00FD35  2D                 	db	45
   349  00FD36  2D                 	db	45
   350  00FD37  2D                 	db	45
   351  00FD38  2D                 	db	45
   352  00FD39  2D                 	db	45
   353  00FD3A  2D                 	db	45
   354  00FD3B  2D                 	db	45
   355  00FD3C  2D                 	db	45
   356  00FD3D  2D                 	db	45
   357  00FD3E  2D                 	db	45
   358  00FD3F  2D                 	db	45
   359  00FD40  2D                 	db	45
   360  00FD41  2D                 	db	45
   361  00FD42  2D                 	db	45
   362  00FD43  2D                 	db	45
   363  00FD44  2D                 	db	45
   364  00FD45  2D                 	db	45
   365  00FD46  2D                 	db	45
   366  00FD47  2D                 	db	45
   367  00FD48  2D                 	db	45
   368  00FD49  2D                 	db	45
   369  00FD4A  2D                 	db	45
   370  00FD4B  2D                 	db	45
   371  00FD4C  2D                 	db	45
   372  00FD4D  2D                 	db	45
   373  00FD4E  2D                 	db	45
   374  00FD4F  2D                 	db	45
   375  00FD50  0D                 	db	13
   376  00FD51  0A                 	db	10
   377  00FD52  00                 	db	0
   378  00FD53                     STR_20:
   379  00FD53  52                 	db	82	;'R'
   380  00FD54  3A                 	db	58	;':'
   381  00FD55  20                 	db	32
   382  00FD56  52                 	db	82	;'R'
   383  00FD57  65                 	db	101	;'e'
   384  00FD58  63                 	db	99	;'c'
   385  00FD59  65                 	db	101	;'e'
   386  00FD5A  69                 	db	105	;'i'
   387  00FD5B  76                 	db	118	;'v'
   388  00FD5C  65                 	db	101	;'e'
   389  00FD5D  20                 	db	32
   390  00FD5E  6D                 	db	109	;'m'
   391  00FD5F  65                 	db	101	;'e'
   392  00FD60  73                 	db	115	;'s'
   393  00FD61  73                 	db	115	;'s'
   394  00FD62  61                 	db	97	;'a'
   395  00FD63  67                 	db	103	;'g'
   396  00FD64  65                 	db	101	;'e'
   397  00FD65  20                 	db	32
   398  00FD66  75                 	db	117	;'u'
   399  00FD67  73                 	db	115	;'s'
   400  00FD68  69                 	db	105	;'i'
   401  00FD69  6E                 	db	110	;'n'
   402  00FD6A  67                 	db	103	;'g'
   403  00FD6B  20                 	db	32
   404  00FD6C  45                 	db	69	;'E'
   405  00FD6D  55                 	db	85	;'U'
   406  00FD6E  53                 	db	83	;'S'
   407  00FD6F  41                 	db	65	;'A'
   408  00FD70  52                 	db	82	;'R'
   409  00FD71  54                 	db	84	;'T'
   410  00FD72  32                 	db	50	;'2'
   411  00FD73  20                 	db	32
   412  00FD74  76                 	db	118	;'v'
   413  00FD75  69                 	db	105	;'i'
   414  00FD76  61                 	db	97	;'a'
   415  00FD77  20                 	db	32
   416  00FD78  49                 	db	73	;'I'
   417  00FD79  52                 	db	82	;'R'
   418  00FD7A  20                 	db	32
   419  00FD7B  64                 	db	100	;'d'
   420  00FD7C  65                 	db	101	;'e'
   421  00FD7D  63                 	db	99	;'c'
   422  00FD7E  6F                 	db	111	;'o'
   423  00FD7F  64                 	db	100	;'d'
   424  00FD80  65                 	db	101	;'e'
   425  00FD81  72                 	db	114	;'r'
   426  00FD82  0D                 	db	13
   427  00FD83  0A                 	db	10
   428  00FD84  00                 	db	0
   429  00FD85                     STR_5:
   430  00FD85  49                 	db	73	;'I'
   431  00FD86  6E                 	db	110	;'n'
   432  00FD87  73                 	db	115	;'s'
   433  00FD88  74                 	db	116	;'t'
   434  00FD89  61                 	db	97	;'a'
   435  00FD8A  6C                 	db	108	;'l'
   436  00FD8B  6C                 	db	108	;'l'
   437  00FD8C  20                 	db	32
   438  00FD8D  61                 	db	97	;'a'
   439  00FD8E  20                 	db	32
   440  00FD8F  6A                 	db	106	;'j'
   441  00FD90  75                 	db	117	;'u'
   442  00FD91  6D                 	db	109	;'m'
   443  00FD92  70                 	db	112	;'p'
   444  00FD93  65                 	db	101	;'e'
   445  00FD94  72                 	db	114	;'r'
   446  00FD95  20                 	db	32
   447  00FD96  6F                 	db	111	;'o'
   448  00FD97  76                 	db	118	;'v'
   449  00FD98  65                 	db	101	;'e'
   450  00FD99  72                 	db	114	;'r'
   451  00FD9A  20                 	db	32
   452  00FD9B  49                 	db	73	;'I'
   453  00FD9C  52                 	db	82	;'R'
   454  00FD9D  5F                 	db	95	;'_'
   455  00FD9E  54                 	db	84	;'T'
   456  00FD9F  58                 	db	88	;'X'
   457  00FDA0  20                 	db	32
   458  00FDA1  68                 	db	104	;'h'
   459  00FDA2  65                 	db	101	;'e'
   460  00FDA3  61                 	db	97	;'a'
   461  00FDA4  64                 	db	100	;'d'
   462  00FDA5  65                 	db	101	;'e'
   463  00FDA6  72                 	db	114	;'r'
   464  00FDA7  20                 	db	32
   465  00FDA8  70                 	db	112	;'p'
   466  00FDA9  69                 	db	105	;'i'
   467  00FDAA  6E                 	db	110	;'n'
   468  00FDAB  73                 	db	115	;'s'
   469  00FDAC  0D                 	db	13
   470  00FDAD  0A                 	db	10
   471  00FDAE  00                 	db	0
   472  00FDAF                     STR_27:
   473  00FDAF  45                 	db	69	;'E'
   474  00FDB0  6E                 	db	110	;'n'
   475  00FDB1  74                 	db	116	;'t'
   476  00FDB2  65                 	db	101	;'e'
   477  00FDB3  72                 	db	114	;'r'
   478  00FDB4  20                 	db	32
   479  00FDB5  61                 	db	97	;'a'
   480  00FDB6  20                 	db	32
   481  00FDB7  6D                 	db	109	;'m'
   482  00FDB8  65                 	db	101	;'e'
   483  00FDB9  73                 	db	115	;'s'
   484  00FDBA  73                 	db	115	;'s'
   485  00FDBB  61                 	db	97	;'a'
   486  00FDBC  67                 	db	103	;'g'
   487  00FDBD  65                 	db	101	;'e'
   488  00FDBE  2C                 	db	44
   489  00FDBF  20                 	db	32
   490  00FDC0  68                 	db	104	;'h'
   491  00FDC1  69                 	db	105	;'i'
   492  00FDC2  74                 	db	116	;'t'
   493  00FDC3  20                 	db	32
   494  00FDC4  72                 	db	114	;'r'
   495  00FDC5  65                 	db	101	;'e'
   496  00FDC6  74                 	db	116	;'t'
   497  00FDC7  75                 	db	117	;'u'
   498  00FDC8  72                 	db	114	;'r'
   499  00FDC9  6E                 	db	110	;'n'
   500  00FDCA  20                 	db	32
   501  00FDCB  77                 	db	119	;'w'
   502  00FDCC  68                 	db	104	;'h'
   503  00FDCD  65                 	db	101	;'e'
   504  00FDCE  6E                 	db	110	;'n'
   505  00FDCF  20                 	db	32
   506  00FDD0  64                 	db	100	;'d'
   507  00FDD1  6F                 	db	111	;'o'
   508  00FDD2  6E                 	db	110	;'n'
   509  00FDD3  65                 	db	101	;'e'
   510  00FDD4  2E                 	db	46
   511  00FDD5  0D                 	db	13
   512  00FDD6  0A                 	db	10
   513  00FDD7  00                 	db	0
   514  00FDD8                     STR_2:
   515  00FDD8  52                 	db	82	;'R'
   516  00FDD9  65                 	db	101	;'e'
   517  00FDDA  63                 	db	99	;'c'
   518  00FDDB  65                 	db	101	;'e'
   519  00FDDC  69                 	db	105	;'i'
   520  00FDDD  76                 	db	118	;'v'
   521  00FDDE  65                 	db	101	;'e'
   522  00FDDF  20                 	db	32
   523  00FDE0  61                 	db	97	;'a'
   524  00FDE1  6E                 	db	110	;'n'
   525  00FDE2  64                 	db	100	;'d'
   526  00FDE3  20                 	db	32
   527  00FDE4  64                 	db	100	;'d'
   528  00FDE5  65                 	db	101	;'e'
   529  00FDE6  63                 	db	99	;'c'
   530  00FDE7  6F                 	db	111	;'o'
   531  00FDE8  64                 	db	100	;'d'
   532  00FDE9  65                 	db	101	;'e'
   533  00FDEA  20                 	db	32
   534  00FDEB  61                 	db	97	;'a'
   535  00FDEC  6E                 	db	110	;'n'
   536  00FDED  20                 	db	32
   537  00FDEE  49                 	db	73	;'I'
   538  00FDEF  52                 	db	82	;'R'
   539  00FDF0  20                 	db	32
   540  00FDF1  63                 	db	99	;'c'
   541  00FDF2  68                 	db	104	;'h'
   542  00FDF3  61                 	db	97	;'a'
   543  00FDF4  72                 	db	114	;'r'
   544  00FDF5  61                 	db	97	;'a'
   545  00FDF6  63                 	db	99	;'c'
   546  00FDF7  74                 	db	116	;'t'
   547  00FDF8  65                 	db	101	;'e'
   548  00FDF9  72                 	db	114	;'r'
   549  00FDFA  0D                 	db	13
   550  00FDFB  0A                 	db	10
   551  00FDFC  00                 	db	0
   552  00FDFD                     STR_18:
   553  00FDFD  64                 	db	100	;'d'
   554  00FDFE  3A                 	db	58	;':'
   555  00FDFF  20                 	db	32
   556  00FE00  73                 	db	115	;'s'
   557  00FE01  65                 	db	101	;'e'
   558  00FE02  74                 	db	116	;'t'
   559  00FE03  20                 	db	32
   560  00FE04  44                 	db	68	;'D'
   561  00FE05  65                 	db	101	;'e'
   562  00FE06  73                 	db	115	;'s'
   563  00FE07  74                 	db	116	;'t'
   564  00FE08  69                 	db	105	;'i'
   565  00FE09  6E                 	db	110	;'n'
   566  00FE0A  61                 	db	97	;'a'
   567  00FE0B  74                 	db	116	;'t'
   568  00FE0C  69                 	db	105	;'i'
   569  00FE0D  6F                 	db	111	;'o'
   570  00FE0E  6E                 	db	110	;'n'
   571  00FE0F  20                 	db	32
   572  00FE10  74                 	db	116	;'t'
   573  00FE11  72                 	db	114	;'r'
   574  00FE12  61                 	db	97	;'a'
   575  00FE13  6E                 	db	110	;'n'
   576  00FE14  73                 	db	115	;'s'
   577  00FE15  6D                 	db	109	;'m'
   578  00FE16  69                 	db	105	;'i'
   579  00FE17  74                 	db	116	;'t'
   580  00FE18  20                 	db	32
   581  00FE19  74                 	db	116	;'t'
   582  00FE1A  61                 	db	97	;'a'
   583  00FE1B  72                 	db	114	;'r'
   584  00FE1C  67                 	db	103	;'g'
   585  00FE1D  65                 	db	101	;'e'
   586  00FE1E  74                 	db	116	;'t'
   587  00FE1F  0D                 	db	13
   588  00FE20  0A                 	db	10
   589  00FE21  00                 	db	0
   590  00FE22                     STR_17:
   591  00FE22  73                 	db	115	;'s'
   592  00FE23  3A                 	db	58	;':'
   593  00FE24  20                 	db	32
   594  00FE25  73                 	db	115	;'s'
   595  00FE26  65                 	db	101	;'e'
   596  00FE27  74                 	db	116	;'t'
   597  00FE28  20                 	db	32
   598  00FE29  73                 	db	115	;'s'
   599  00FE2A  6F                 	db	111	;'o'
   600  00FE2B  75                 	db	117	;'u'
   601  00FE2C  72                 	db	114	;'r'
   602  00FE2D  63                 	db	99	;'c'
   603  00FE2E  65                 	db	101	;'e'
   604  00FE2F  20                 	db	32
   605  00FE30  74                 	db	116	;'t'
   606  00FE31  72                 	db	114	;'r'
   607  00FE32  61                 	db	97	;'a'
   608  00FE33  6E                 	db	110	;'n'
   609  00FE34  73                 	db	115	;'s'
   610  00FE35  6D                 	db	109	;'m'
   611  00FE36  69                 	db	105	;'i'
   612  00FE37  74                 	db	116	;'t'
   613  00FE38  20                 	db	32
   614  00FE39  69                 	db	105	;'i'
   615  00FE3A  64                 	db	100	;'d'
   616  00FE3B  65                 	db	101	;'e'
   617  00FE3C  6E                 	db	110	;'n'
   618  00FE3D  74                 	db	116	;'t'
   619  00FE3E  69                 	db	105	;'i'
   620  00FE3F  74                 	db	116	;'t'
   621  00FE40  79                 	db	121	;'y'
   622  00FE41  0D                 	db	13
   623  00FE42  0A                 	db	10
   624  00FE43  00                 	db	0
   625  00FE44                     STR_19:
   626  00FE44  53                 	db	83	;'S'
   627  00FE45  3A                 	db	58	;':'
   628  00FE46  20                 	db	32
   629  00FE47  53                 	db	83	;'S'
   630  00FE48  65                 	db	101	;'e'
   631  00FE49  6E                 	db	110	;'n'
   632  00FE4A  64                 	db	100	;'d'
   633  00FE4B  20                 	db	32
   634  00FE4C  6D                 	db	109	;'m'
   635  00FE4D  65                 	db	101	;'e'
   636  00FE4E  73                 	db	115	;'s'
   637  00FE4F  73                 	db	115	;'s'
   638  00FE50  61                 	db	97	;'a'
   639  00FE51  67                 	db	103	;'g'
   640  00FE52  65                 	db	101	;'e'
   641  00FE53  20                 	db	32
   642  00FE54  75                 	db	117	;'u'
   643  00FE55  73                 	db	115	;'s'
   644  00FE56  69                 	db	105	;'i'
   645  00FE57  6E                 	db	110	;'n'
   646  00FE58  67                 	db	103	;'g'
   647  00FE59  20                 	db	32
   648  00FE5A  54                 	db	84	;'T'
   649  00FE5B  4D                 	db	77	;'M'
   650  00FE5C  52                 	db	82	;'R'
   651  00FE5D  31                 	db	49	;'1'
   652  00FE5E  20                 	db	32
   653  00FE5F  49                 	db	73	;'I'
   654  00FE60  53                 	db	83	;'S'
   655  00FE61  52                 	db	82	;'R'
   656  00FE62  0D                 	db	13
   657  00FE63  0A                 	db	10
   658  00FE64  00                 	db	0
   659  00FE65                     STR_42:
   660  00FE65  4E                 	db	78	;'N'
   661  00FE66  6F                 	db	111	;'o'
   662  00FE67  74                 	db	116	;'t'
   663  00FE68  68                 	db	104	;'h'
   664  00FE69  69                 	db	105	;'i'
   665  00FE6A  6E                 	db	110	;'n'
   666  00FE6B  67                 	db	103	;'g'
   667  00FE6C  20                 	db	32
   668  00FE6D  72                 	db	114	;'r'
   669  00FE6E  65                 	db	101	;'e'
   670  00FE6F  63                 	db	99	;'c'
   671  00FE70  65                 	db	101	;'e'
   672  00FE71  69                 	db	105	;'i'
   673  00FE72  76                 	db	118	;'v'
   674  00FE73  65                 	db	101	;'e'
   675  00FE74  64                 	db	100	;'d'
   676  00FE75  20                 	db	32
   677  00FE76  66                 	db	102	;'f'
   678  00FE77  72                 	db	114	;'r'
   679  00FE78  6F                 	db	111	;'o'
   680  00FE79  6D                 	db	109	;'m'
   681  00FE7A  20                 	db	32
   682  00FE7B  45                 	db	69	;'E'
   683  00FE7C  55                 	db	85	;'U'
   684  00FE7D  53                 	db	83	;'S'
   685  00FE7E  41                 	db	65	;'A'
   686  00FE7F  52                 	db	82	;'R'
   687  00FE80  54                 	db	84	;'T'
   688  00FE81  32                 	db	50	;'2'
   689  00FE82  0D                 	db	13
   690  00FE83  0A                 	db	10
   691  00FE84  00                 	db	0
   692  00FE85                     STR_21:
   693  00FE85  4D                 	db	77	;'M'
   694  00FE86  3A                 	db	58	;':'
   695  00FE87  20                 	db	32
   696  00FE88  4D                 	db	77	;'M'
   697  00FE89  6F                 	db	111	;'o'
   698  00FE8A  6E                 	db	110	;'n'
   699  00FE8B  69                 	db	105	;'i'
   700  00FE8C  74                 	db	116	;'t'
   701  00FE8D  6F                 	db	111	;'o'
   702  00FE8E  72                 	db	114	;'r'
   703  00FE8F  20                 	db	32
   704  00FE90  61                 	db	97	;'a'
   705  00FE91  6C                 	db	108	;'l'
   706  00FE92  6C                 	db	108	;'l'
   707  00FE93  20                 	db	32
   708  00FE94  49                 	db	73	;'I'
   709  00FE95  52                 	db	82	;'R'
   710  00FE96  20                 	db	32
   711  00FE97  74                 	db	116	;'t'
   712  00FE98  72                 	db	114	;'r'
   713  00FE99  61                 	db	97	;'a'
   714  00FE9A  66                 	db	102	;'f'
   715  00FE9B  66                 	db	102	;'f'
   716  00FE9C  69                 	db	105	;'i'
   717  00FE9D  63                 	db	99	;'c'
   718  00FE9E  2E                 	db	46
   719  00FE9F  0D                 	db	13
   720  00FEA0  0A                 	db	10
   721  00FEA1  00                 	db	0
   722  00FEA2                     STR_22:
   723  00FEA2  78                 	db	120	;'x'
   724  00FEA3  2F                 	db	47
   725  00FEA4  58                 	db	88	;'X'
   726  00FEA5  3A                 	db	58	;':'
   727  00FEA6  20                 	db	32
   728  00FEA7  64                 	db	100	;'d'
   729  00FEA8  65                 	db	101	;'e'
   730  00FEA9  63                 	db	99	;'c'
   731  00FEAA  6F                 	db	111	;'o'
   732  00FEAB  64                 	db	100	;'d'
   733  00FEAC  65                 	db	101	;'e'
   734  00FEAD  20                 	db	32
   735  00FEAE  74                 	db	116	;'t'
   736  00FEAF  78                 	db	120	;'x'
   737  00FEB0  2F                 	db	47
   738  00FEB1  52                 	db	82	;'R'
   739  00FEB2  58                 	db	88	;'X'
   740  00FEB3  20                 	db	32
   741  00FEB4  6D                 	db	109	;'m'
   742  00FEB5  65                 	db	101	;'e'
   743  00FEB6  73                 	db	115	;'s'
   744  00FEB7  73                 	db	115	;'s'
   745  00FEB8  61                 	db	97	;'a'
   746  00FEB9  67                 	db	103	;'g'
   747  00FEBA  65                 	db	101	;'e'
   748  00FEBB  2E                 	db	46
   749  00FEBC  0D                 	db	13
   750  00FEBD  0A                 	db	10
   751  00FEBE  00                 	db	0
   752  00FEBF                     STR_39:
   753  00FEBF  45                 	db	69	;'E'
   754  00FEC0  6E                 	db	110	;'n'
   755  00FEC1  74                 	db	116	;'t'
   756  00FEC2  65                 	db	101	;'e'
   757  00FEC3  72                 	db	114	;'r'
   758  00FEC4  20                 	db	32
   759  00FEC5  64                 	db	100	;'d'
   760  00FEC6  65                 	db	101	;'e'
   761  00FEC7  73                 	db	115	;'s'
   762  00FEC8  74                 	db	116	;'t'
   763  00FEC9  69                 	db	105	;'i'
   764  00FECA  6E                 	db	110	;'n'
   765  00FECB  61                 	db	97	;'a'
   766  00FECC  74                 	db	116	;'t'
   767  00FECD  69                 	db	105	;'i'
   768  00FECE  6F                 	db	111	;'o'
   769  00FECF  6E                 	db	110	;'n'
   770  00FED0  20                 	db	32
   771  00FED1  61                 	db	97	;'a'
   772  00FED2  64                 	db	100	;'d'
   773  00FED3  64                 	db	100	;'d'
   774  00FED4  72                 	db	114	;'r'
   775  00FED5  65                 	db	101	;'e'
   776  00FED6  73                 	db	115	;'s'
   777  00FED7  73                 	db	115	;'s'
   778  00FED8  3A                 	db	58	;':'
   779  00FED9  20                 	db	32
   780  00FEDA  00                 	db	0
   781  00FEDB                     STR_14:
   782  00FEDB  7A                 	db	122	;'z'
   783  00FEDC  3A                 	db	58	;':'
   784  00FEDD  20                 	db	32
   785  00FEDE  43                 	db	67	;'C'
   786  00FEDF  6C                 	db	108	;'l'
   787  00FEE0  65                 	db	101	;'e'
   788  00FEE1  61                 	db	97	;'a'
   789  00FEE2  72                 	db	114	;'r'
   790  00FEE3  20                 	db	32
   791  00FEE4  74                 	db	116	;'t'
   792  00FEE5  68                 	db	104	;'h'
   793  00FEE6  65                 	db	101	;'e'
   794  00FEE7  20                 	db	32
   795  00FEE8  74                 	db	116	;'t'
   796  00FEE9  65                 	db	101	;'e'
   797  00FEEA  72                 	db	114	;'r'
   798  00FEEB  6D                 	db	109	;'m'
   799  00FEEC  69                 	db	105	;'i'
   800  00FEED  6E                 	db	110	;'n'
   801  00FEEE  61                 	db	97	;'a'
   802  00FEEF  6C                 	db	108	;'l'
   803  00FEF0  0D                 	db	13
   804  00FEF1  0A                 	db	10
   805  00FEF2  00                 	db	0
   806  00FEF3                     STR_37:
   807  00FEF3  45                 	db	69	;'E'
   808  00FEF4  6E                 	db	110	;'n'
   809  00FEF5  74                 	db	116	;'t'
   810  00FEF6  65                 	db	101	;'e'
   811  00FEF7  72                 	db	114	;'r'
   812  00FEF8  20                 	db	32
   813  00FEF9  73                 	db	115	;'s'
   814  00FEFA  6F                 	db	111	;'o'
   815  00FEFB  75                 	db	117	;'u'
   816  00FEFC  72                 	db	114	;'r'
   817  00FEFD  63                 	db	99	;'c'
   818  00FEFE  65                 	db	101	;'e'
   819  00FEFF  20                 	db	32
   820  00FF00  61                 	db	97	;'a'
   821  00FF01  64                 	db	100	;'d'
   822  00FF02  64                 	db	100	;'d'
   823  00FF03  72                 	db	114	;'r'
   824  00FF04  65                 	db	101	;'e'
   825  00FF05  73                 	db	115	;'s'
   826  00FF06  73                 	db	115	;'s'
   827  00FF07  3A                 	db	58	;':'
   828  00FF08  20                 	db	32
   829  00FF09  00                 	db	0
   830  00FF0A                     STR_3:
   831  00FF0A  44                 	db	68	;'D'
   832  00FF0B  65                 	db	101	;'e'
   833  00FF0C  76                 	db	118	;'v'
   834  00FF0D  27                 	db	39
   835  00FF0E  32                 	db	50	;'2'
   836  00FF0F  31                 	db	49	;'1'
   837  00FF10  20                 	db	32
   838  00FF11  42                 	db	66	;'B'
   839  00FF12  6F                 	db	111	;'o'
   840  00FF13  61                 	db	97	;'a'
   841  00FF14  72                 	db	114	;'r'
   842  00FF15  64                 	db	100	;'d'
   843  00FF16  20                 	db	32
   844  00FF17  77                 	db	119	;'w'
   845  00FF18  69                 	db	105	;'i'
   846  00FF19  72                 	db	114	;'r'
   847  00FF1A  69                 	db	105	;'i'
   848  00FF1B  6E                 	db	110	;'n'
   849  00FF1C  67                 	db	103	;'g'
   850  00FF1D  0D                 	db	13
   851  00FF1E  0A                 	db	10
   852  00FF1F  00                 	db	0
   853  00FF20                     STR_43:
   854  00FF20  4A                 	db	74	;'J'
   855  00FF21  75                 	db	117	;'u'
   856  00FF22  73                 	db	115	;'s'
   857  00FF23  74                 	db	116	;'t'
   858  00FF24  20                 	db	32
   859  00FF25  72                 	db	114	;'r'
   860  00FF26  65                 	db	101	;'e'
   861  00FF27  73                 	db	115	;'s'
   862  00FF28  65                 	db	101	;'e'
   863  00FF29  74                 	db	116	;'t'
   864  00FF2A  20                 	db	32
   865  00FF2B  45                 	db	69	;'E'
   866  00FF2C  55                 	db	85	;'U'
   867  00FF2D  53                 	db	83	;'S'
   868  00FF2E  41                 	db	65	;'A'
   869  00FF2F  52                 	db	82	;'R'
   870  00FF30  54                 	db	84	;'T'
   871  00FF31  32                 	db	50	;'2'
   872  00FF32  0D                 	db	13
   873  00FF33  0A                 	db	10
   874  00FF34  00                 	db	0
   875  00FF35                     STR_13:
   876  00FF35  5A                 	db	90	;'Z'
   877  00FF36  3A                 	db	58	;':'
   878  00FF37  20                 	db	32
   879  00FF38  52                 	db	82	;'R'
   880  00FF39  65                 	db	101	;'e'
   881  00FF3A  73                 	db	115	;'s'
   882  00FF3B  65                 	db	101	;'e'
   883  00FF3C  74                 	db	116	;'t'
   884  00FF3D  20                 	db	32
   885  00FF3E  70                 	db	112	;'p'
   886  00FF3F  72                 	db	114	;'r'
   887  00FF40  6F                 	db	111	;'o'
   888  00FF41  63                 	db	99	;'c'
   889  00FF42  65                 	db	101	;'e'
   890  00FF43  73                 	db	115	;'s'
   891  00FF44  73                 	db	115	;'s'
   892  00FF45  6F                 	db	111	;'o'
   893  00FF46  72                 	db	114	;'r'
   894  00FF47  0D                 	db	13
   895  00FF48  0A                 	db	10
   896  00FF49  00                 	db	0
   897  00FF4A                     STR_15:
   898  00FF4A  62                 	db	98	;'b'
   899  00FF4B  3A                 	db	58	;':'
   900  00FF4C  20                 	db	32
   901  00FF4D  73                 	db	115	;'s'
   902  00FF4E  65                 	db	101	;'e'
   903  00FF4F  74                 	db	116	;'t'
   904  00FF50  20                 	db	32
   905  00FF51  42                 	db	66	;'B'
   906  00FF52  61                 	db	97	;'a'
   907  00FF53  75                 	db	117	;'u'
   908  00FF54  64                 	db	100	;'d'
   909  00FF55  20                 	db	32
   910  00FF56  72                 	db	114	;'r'
   911  00FF57  61                 	db	97	;'a'
   912  00FF58  74                 	db	116	;'t'
   913  00FF59  65                 	db	101	;'e'
   914  00FF5A  0D                 	db	13
   915  00FF5B  0A                 	db	10
   916  00FF5C  00                 	db	0
   917  00FF5D                     STR_44:
   918  00FF5D  55                 	db	85	;'U'
   919  00FF5E  6E                 	db	110	;'n'
   920  00FF5F  6B                 	db	107	;'k'
   921  00FF60  6E                 	db	110	;'n'
   922  00FF61  6F                 	db	111	;'o'
   923  00FF62  77                 	db	119	;'w'
   924  00FF63  6E                 	db	110	;'n'
   925  00FF64  20                 	db	32
   926  00FF65  6B                 	db	107	;'k'
   927  00FF66  65                 	db	101	;'e'
   928  00FF67  79                 	db	121	;'y'
   929  00FF68  20                 	db	32
   930  00FF69  25                 	db	37
   931  00FF6A  63                 	db	99	;'c'
   932  00FF6B  0D                 	db	13
   933  00FF6C  0A                 	db	10
   934  00FF6D  00                 	db	0
   935  00FF6E                     STR_34:
   936  00FF6E  09                 	db	9
   937  00FF6F  63                 	db	99	;'c'
   938  00FF70  68                 	db	104	;'h'
   939  00FF71  65                 	db	101	;'e'
   940  00FF72  63                 	db	99	;'c'
   941  00FF73  6B                 	db	107	;'k'
   942  00FF74  73                 	db	115	;'s'
   943  00FF75  75                 	db	117	;'u'
   944  00FF76  6D                 	db	109	;'m'
   945  00FF77  3A                 	db	58	;':'
   946  00FF78  20                 	db	32
   947  00FF79  25                 	db	37
   948  00FF7A  64                 	db	100	;'d'
   949  00FF7B  0D                 	db	13
   950  00FF7C  0A                 	db	10
   951  00FF7D  00                 	db	0
   952  00FF7E                     STR_41:
   953  00FF7E  54                 	db	84	;'T'
   954  00FF7F  72                 	db	114	;'r'
   955  00FF80  61                 	db	97	;'a'
   956  00FF81  6E                 	db	110	;'n'
   957  00FF82  73                 	db	115	;'s'
   958  00FF83  6D                 	db	109	;'m'
   959  00FF84  69                 	db	105	;'i'
   960  00FF85  74                 	db	116	;'t'
   961  00FF86  74                 	db	116	;'t'
   962  00FF87  65                 	db	101	;'e'
   963  00FF88  64                 	db	100	;'d'
   964  00FF89  2E                 	db	46
   965  00FF8A  0D                 	db	13
   966  00FF8B  0A                 	db	10
   967  00FF8C  00                 	db	0
   968  00FF8D                     STR_11:
   969  00FF8D  3F                 	db	63	;'?'
   970  00FF8E  3A                 	db	58	;':'
   971  00FF8F  20                 	db	32
   972  00FF90  68                 	db	104	;'h'
   973  00FF91  65                 	db	101	;'e'
   974  00FF92  6C                 	db	108	;'l'
   975  00FF93  70                 	db	112	;'p'
   976  00FF94  20                 	db	32
   977  00FF95  6D                 	db	109	;'m'
   978  00FF96  65                 	db	101	;'e'
   979  00FF97  6E                 	db	110	;'n'
   980  00FF98  75                 	db	117	;'u'
   981  00FF99  0D                 	db	13
   982  00FF9A  0A                 	db	10
   983  00FF9B  00                 	db	0
   984  00FF9C                     STR_8:
   985  00FF9C  32                 	db	50	;'2'
   986  00FF9D  34                 	db	52	;'4'
   987  00FF9E  30                 	db	48	;'0'
   988  00FF9F  30                 	db	48	;'0'
   989  00FFA0  20                 	db	32
   990  00FFA1  42                 	db	66	;'B'
   991  00FFA2  61                 	db	97	;'a'
   992  00FFA3  75                 	db	117	;'u'
   993  00FFA4  64                 	db	100	;'d'
   994  00FFA5  0D                 	db	13
   995  00FFA6  0A                 	db	10
   996  00FFA7  00                 	db	0
   997  00FFA8                     STR_35:
   998  00FFA8  09                 	db	9
   999  00FFA9  53                 	db	83	;'S'
  1000  00FFAA  52                 	db	82	;'R'
  1001  00FFAB  43                 	db	67	;'C'
  1002  00FFAC  3A                 	db	58	;':'
  1003  00FFAD  20                 	db	32
  1004  00FFAE  25                 	db	37
  1005  00FFAF  64                 	db	100	;'d'
  1006  00FFB0  0D                 	db	13
  1007  00FFB1  0A                 	db	10
  1008  00FFB2  00                 	db	0
  1009  00FFB3                     STR_36:
  1010  00FFB3  09                 	db	9
  1011  00FFB4  44                 	db	68	;'D'
  1012  00FFB5  45                 	db	69	;'E'
  1013  00FFB6  53                 	db	83	;'S'
  1014  00FFB7  3A                 	db	58	;':'
  1015  00FFB8  20                 	db	32
  1016  00FFB9  25                 	db	37
  1017  00FFBA  64                 	db	100	;'d'
  1018  00FFBB  0D                 	db	13
  1019  00FFBC  0A                 	db	10
  1020  00FFBD  00                 	db	0
  1021  00FFBE                     STR_31:
  1022  00FFBE  09                 	db	9
  1023  00FFBF  4D                 	db	77	;'M'
  1024  00FFC0  65                 	db	101	;'e'
  1025  00FFC1  73                 	db	115	;'s'
  1026  00FFC2  73                 	db	115	;'s'
  1027  00FFC3  61                 	db	97	;'a'
  1028  00FFC4  67                 	db	103	;'g'
  1029  00FFC5  65                 	db	101	;'e'
  1030  00FFC6  3A                 	db	58	;':'
  1031  00FFC7  20                 	db	32
  1032  00FFC8  00                 	db	0
  1033  00FFC9                     STR_9:
  1034  00FFC9  50                 	db	80	;'P'
  1035  00FFCA  52                 	db	82	;'R'
  1036  00FFCB  32                 	db	50	;'2'
  1037  00FFCC  3A                 	db	58	;':'
  1038  00FFCD  20                 	db	32
  1039  00FFCE  25                 	db	37
  1040  00FFCF  64                 	db	100	;'d'
  1041  00FFD0  0D                 	db	13
  1042  00FFD1  0A                 	db	10
  1043  00FFD2  00                 	db	0
  1044  00FFD3                     STR_1:
  1045  00FFD3  4C                 	db	76	;'L'
  1046  00FFD4  61                 	db	97	;'a'
  1047  00FFD5  62                 	db	98	;'b'
  1048  00FFD6  20                 	db	32
  1049  00FFD7  37                 	db	55	;'7'
  1050  00FFD8  0D                 	db	13
  1051  00FFD9  0A                 	db	10
  1052  00FFDA  00                 	db	0
  1053  00FFDB                     STR_24:
  1054  00FFDB  6F                 	db	111	;'o'
  1055  00FFDC  3A                 	db	58	;':'
  1056  00FFDD  09                 	db	9
  1057  00FFDE  6F                 	db	111	;'o'
  1058  00FFDF  6B                 	db	107	;'k'
  1059  00FFE0  0D                 	db	13
  1060  00FFE1  0A                 	db	10
  1061  00FFE2  00                 	db	0
  1062  00FFE3                     STR_12:
  1063  00FFE3  6F                 	db	111	;'o'
  1064  00FFE4  3A                 	db	58	;':'
  1065  00FFE5  20                 	db	32
  1066  00FFE6  6B                 	db	107	;'k'
  1067  00FFE7  0D                 	db	13
  1068  00FFE8  0A                 	db	10
  1069  00FFE9  00                 	db	0
  1070  00FFEA                     STR_6:
  1071  00FFEA  0D                 	db	13
  1072  00FFEB  0A                 	db	10
  1073  00FFEC  3E                 	db	62	;'>'
  1074  00FFED  20                 	db	32
  1075  00FFEE  00                 	db	0
  1076  00FFEF                     STR_47:
  1077  00FFEF  09                 	db	9
  1078  00FFF0  25                 	db	37
  1079  00FFF1  64                 	db	100	;'d'
  1080  00FFF2  3A                 	db	58	;':'
  1081  00FFF3  00                 	db	0
  1082  00FFF4                     STR_49:
  1083  00FFF4  09                 	db	9
  1084  00FFF5  25                 	db	37
  1085  00FFF6  63                 	db	99	;'c'
  1086  00FFF7  00                 	db	0
  1087  00FFF8                     STR_48:
  1088  00FFF8  09                 	db	9
  1089  00FFF9  25                 	db	37
  1090  00FFFA  68                 	db	104	;'h'
  1091  00FFFB  00                 	db	0
  1092  00FFFC                     STR_28:
  1093  00FFFC  3E                 	db	62	;'>'
  1094  00FFFD  00                 	db	0
  1095  00FFFE  00                 	db	0	; dummy byte at the end
  1096  0000                     
  1097                           ; #config settings
  1098                           
  1099                           	psect	cinit
  1100  00127A                     __pcinit:
  1101                           	callstack 0
  1102  00127A                     start_initialization:
  1103                           	callstack 0
  1104  00127A                     __initialization:
  1105                           	callstack 0
  1106                           
  1107                           ; Initialize objects allocated to BANK0 (2 bytes)
  1108                           ; load TBLPTR registers with __pidataBANK0
  1109  00127A  0ECA               	movlw	low __pidataBANK0
  1110  00127C  6EF6               	movwf	tblptrl,c
  1111  00127E  0E16               	movlw	high __pidataBANK0
  1112  001280  6EF7               	movwf	tblptrh,c
  1113  001282  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1114  001284  6EF8               	movwf	tblptru,c
  1115  001286  0009               	tblrd		*+	;fetch initializer
  1116  001288  CFF5 F0EC          	movff	tablat,__pdataBANK0
  1117  00128C  0009               	tblrd		*+	;fetch initializer
  1118  00128E  CFF5 F0ED          	movff	tablat,__pdataBANK0+1
  1119                           
  1120                           ; Initialize objects allocated to COMRAM (1 bytes)
  1121                           ; load TBLPTR registers with __pidataCOMRAM
  1122  001292  0ECE               	movlw	low __pidataCOMRAM
  1123  001294  6EF6               	movwf	tblptrl,c
  1124  001296  0E16               	movlw	high __pidataCOMRAM
  1125  001298  6EF7               	movwf	tblptrh,c
  1126  00129A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1127  00129C  6EF8               	movwf	tblptru,c
  1128  00129E  0009               	tblrd		*+	;fetch initializer
  1129  0012A0  CFF5 F054          	movff	tablat,__pdataCOMRAM
  1130                           
  1131                           ; Clear objects allocated to BANK1 (32 bytes)
  1132  0012A4  EE01  F000         	lfsr	0,__pbssBANK1
  1133  0012A8  0E20               	movlw	32
  1134  0012AA                     clear_0:
  1135  0012AA  6AEE               	clrf	postinc0,c
  1136  0012AC  06E8               	decf	wreg,f,c
  1137  0012AE  E1FD               	bnz	clear_0
  1138                           
  1139                           ; Clear objects allocated to BANK0 (92 bytes)
  1140  0012B0  EE00  F060         	lfsr	0,__pbssBANK0
  1141  0012B4  0E5C               	movlw	92
  1142  0012B6                     clear_1:
  1143  0012B6  6AEE               	clrf	postinc0,c
  1144  0012B8  06E8               	decf	wreg,f,c
  1145  0012BA  E1FD               	bnz	clear_1
  1146                           
  1147                           ; Clear objects allocated to COMRAM (9 bytes)
  1148  0012BC  EE00  F04B         	lfsr	0,__pbssCOMRAM
  1149  0012C0  0E09               	movlw	9
  1150  0012C2                     clear_2:
  1151  0012C2  6AEE               	clrf	postinc0,c
  1152  0012C4  06E8               	decf	wreg,f,c
  1153  0012C6  E1FD               	bnz	clear_2
  1154  0012C8                     end_of_initialization:
  1155                           	callstack 0
  1156  0012C8                     __end_of__initialization:
  1157                           	callstack 0
  1158  0012C8  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1159  0012CA  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1160  0012CC  0100               	movlb	0
  1161  0012CE  EF30  F000         	goto	_main	;jump to C main() function
  1162                           
  1163                           	psect	bssCOMRAM
  1164  00004B                     __pbssCOMRAM:
  1165                           	callstack 0
  1166  00004B                     _width:
  1167                           	callstack 0
  1168  00004B                     	ds	2
  1169  00004D                     _flags:
  1170                           	callstack 0
  1171  00004D                     	ds	2
  1172  00004F                     _timer1ReloadVal:
  1173                           	callstack 0
  1174  00004F                     	ds	2
  1175  000051                     myTMR1ISR@letter:
  1176                           	callstack 0
  1177  000051                     	ds	1
  1178  000052                     myTMR1ISR@tmr1ISRstate:
  1179                           	callstack 0
  1180  000052                     	ds	1
  1181  000053                     _transmitStart:
  1182                           	callstack 0
  1183  000053                     	ds	1
  1184                           
  1185                           	psect	dataCOMRAM
  1186  000054                     __pdataCOMRAM:
  1187                           	callstack 0
  1188  000054                     myTMR1ISR@mask:
  1189                           	callstack 0
  1190  000054                     	ds	1
  1191                           
  1192                           	psect	bssBANK0
  1193  000060                     __pbssBANK0:
  1194                           	callstack 0
  1195  000060                     	ds	3
  1196  000063                     _nout:
  1197                           	callstack 0
  1198  000063                     	ds	2
  1199  000065                     _prec:
  1200                           	callstack 0
  1201  000065                     	ds	2
  1202  000067                     _EUSART1_ErrorHandler:
  1203                           	callstack 0
  1204  000067                     	ds	2
  1205  000069                     _EUSART1_OverrunErrorHandler:
  1206                           	callstack 0
  1207  000069                     	ds	2
  1208  00006B                     _EUSART1_FramingErrorHandler:
  1209                           	callstack 0
  1210  00006B                     	ds	2
  1211  00006D                     _EUSART2_ErrorHandler:
  1212                           	callstack 0
  1213  00006D                     	ds	2
  1214  00006F                     _EUSART2_OverrunErrorHandler:
  1215                           	callstack 0
  1216  00006F                     	ds	2
  1217  000071                     _EUSART2_FramingErrorHandler:
  1218                           	callstack 0
  1219  000071                     	ds	2
  1220  000073                     _TMR1_InterruptHandler:
  1221                           	callstack 0
  1222  000073                     	ds	2
  1223  000075                     _eusart1RxLastError:
  1224                           	callstack 0
  1225  000075                     	ds	1
  1226  000076                     _eusart2RxLastError:
  1227                           	callstack 0
  1228  000076                     	ds	1
  1229  000077                     myTMR1ISR@checkSumSent:
  1230                           	callstack 0
  1231  000077                     	ds	1
  1232  000078                     myTMR1ISR@transmitIndex:
  1233                           	callstack 0
  1234  000078                     	ds	1
  1235  000079                     _receiveNewMessage:
  1236                           	callstack 0
  1237  000079                     	ds	1
  1238  00007A                     _receiveBusy:
  1239                           	callstack 0
  1240  00007A                     	ds	1
  1241  00007B                     _transmitBusy:
  1242                           	callstack 0
  1243  00007B                     	ds	1
  1244  00007C                     _dbuf:
  1245                           	callstack 0
  1246  00007C                     	ds	32
  1247  00009C                     _transmitIRBuffer:
  1248                           	callstack 0
  1249  00009C                     	ds	32
  1250                           
  1251                           	psect	dataBANK0
  1252  0000EC                     __pdataBANK0:
  1253                           	callstack 0
  1254  0000EC                     _bitPeriodInTMR1Counts:
  1255                           	callstack 0
  1256  0000EC                     	ds	2
  1257                           
  1258                           	psect	bssBANK1
  1259  000100                     __pbssBANK1:
  1260                           	callstack 0
  1261  000100                     _recieveIRBuffer:
  1262                           	callstack 0
  1263  000100                     	ds	32
  1264                           
  1265                           	psect	cstackBANK0
  1266  0000BC                     __pcstackBANK0:
  1267                           	callstack 0
  1268  0000BC                     _dtoa$1894:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x0
  1272  0000BC                     	ds	2
  1273  0000BE                     dtoa@p:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x2
  1277  0000BE                     	ds	2
  1278  0000C0                     dtoa@w:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x4
  1282  0000C0                     	ds	2
  1283  0000C2                     dtoa@s:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x6
  1287  0000C2                     	ds	2
  1288  0000C4                     dtoa@n:
  1289                           	callstack 0
  1290                           
  1291                           ; 8 bytes @ 0x8
  1292  0000C4                     	ds	8
  1293  0000CC                     dtoa@i:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x10
  1297  0000CC                     	ds	2
  1298  0000CE                     ?_vfprintf:
  1299                           	callstack 0
  1300  0000CE                     vfprintf@fp:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x12
  1304  0000CE                     	ds	2
  1305  0000D0                     vfprintf@fmt:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x14
  1309  0000D0                     	ds	2
  1310  0000D2                     vfprintf@ap:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x16
  1314  0000D2                     	ds	2
  1315  0000D4                     vfprintf@cfmt:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x18
  1319  0000D4                     	ds	2
  1320  0000D6                     ?_printf:
  1321                           	callstack 0
  1322  0000D6                     printf@fmt:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x1A
  1326  0000D6                     	ds	6
  1327  0000DC                     printf@ap:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x20
  1331  0000DC                     	ds	2
  1332  0000DE                     ??_userEnter8bit:
  1333  0000DE                     decodeIntoASCII@msg:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x22
  1337  0000DE                     	ds	2
  1338  0000E0                     ??_decodeIntoASCII:
  1339  0000E0                     userEnter8bit@num:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x24
  1343  0000E0                     	ds	1
  1344  0000E1                     userEnter8bit@userNum:
  1345                           	callstack 0
  1346                           
  1347                           ; 3 bytes @ 0x25
  1348  0000E1                     	ds	1
  1349  0000E2                     decodeIntoASCII@i:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x26
  1353  0000E2                     	ds	2
  1354  0000E4                     userEnter8bit@cmd:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x28
  1358  0000E4                     	ds	1
  1359  0000E5                     userEnter8bit@i:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x29
  1363  0000E5                     	ds	1
  1364  0000E6                     ??_main:
  1365                           
  1366                           ; 1 bytes @ 0x2A
  1367  0000E6                     	ds	2
  1368  0000E8                     main@cksum:
  1369                           	callstack 0
  1370                           
  1371                           ; 1 bytes @ 0x2C
  1372  0000E8                     	ds	1
  1373  0000E9                     main@cmd:
  1374                           	callstack 0
  1375                           
  1376                           ; 1 bytes @ 0x2D
  1377  0000E9                     	ds	1
  1378  0000EA                     main@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x2E
  1382  0000EA                     	ds	1
  1383  0000EB                     main@ind:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x2F
  1387  0000EB                     	ds	1
  1388                           
  1389                           	psect	cstackCOMRAM
  1390  000001                     __pcstackCOMRAM:
  1391                           	callstack 0
  1392  000001                     i2EPWM2_LoadDutyValue@dutyValue:
  1393                           	callstack 0
  1394  000001                     i2TMR1_WriteTimer@timerVal:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x0
  1398  000001                     	ds	2
  1399  000003                     ??i2_EPWM2_LoadDutyValue:
  1400  000003                     
  1401                           ; 1 bytes @ 0x2
  1402  000003                     	ds	2
  1403  000005                     ??_myTMR1ISR:
  1404                           
  1405                           ; 1 bytes @ 0x4
  1406  000005                     	ds	2
  1407  000007                     ??_INTERRUPT_InterruptManager:
  1408                           
  1409                           ; 1 bytes @ 0x6
  1410  000007                     	ds	4
  1411  00000B                     ?_strlen:
  1412                           	callstack 0
  1413  00000B                     ?___aodiv:
  1414                           	callstack 0
  1415  00000B                     ?___aomod:
  1416                           	callstack 0
  1417  00000B                     EUSART1_Write@txData:
  1418                           	callstack 0
  1419  00000B                     EPWM2_LoadDutyValue@dutyValue:
  1420                           	callstack 0
  1421  00000B                     TMR1_WriteTimer@timerVal:
  1422                           	callstack 0
  1423  00000B                     TMR1_SetInterruptHandler@InterruptHandler:
  1424                           	callstack 0
  1425  00000B                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1426                           	callstack 0
  1427  00000B                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1428                           	callstack 0
  1429  00000B                     EUSART2_SetErrorHandler@interruptHandler:
  1430                           	callstack 0
  1431  00000B                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1432                           	callstack 0
  1433  00000B                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1434                           	callstack 0
  1435  00000B                     EUSART1_SetErrorHandler@interruptHandler:
  1436                           	callstack 0
  1437  00000B                     strlen@s:
  1438                           	callstack 0
  1439  00000B                     ___aodiv@dividend:
  1440                           	callstack 0
  1441  00000B                     ___aomod@dividend:
  1442                           	callstack 0
  1443                           
  1444                           ; 8 bytes @ 0xA
  1445  00000B                     	ds	1
  1446  00000C                     putch@txData:
  1447                           	callstack 0
  1448                           
  1449                           ; 1 bytes @ 0xB
  1450  00000C                     	ds	1
  1451  00000D                     ??_EPWM2_LoadDutyValue:
  1452  00000D                     fputc@c:
  1453                           	callstack 0
  1454  00000D                     strlen@a:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0xC
  1458  00000D                     	ds	2
  1459  00000F                     fputc@fp:
  1460                           	callstack 0
  1461                           
  1462                           ; 2 bytes @ 0xE
  1463  00000F                     	ds	2
  1464  000011                     ??_fputc:
  1465                           
  1466                           ; 1 bytes @ 0x10
  1467  000011                     	ds	2
  1468  000013                     ___aodiv@divisor:
  1469                           	callstack 0
  1470  000013                     ___aomod@divisor:
  1471                           	callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x12
  1474  000013                     	ds	3
  1475  000016                     fputs@s:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x15
  1479  000016                     	ds	2
  1480  000018                     fputs@fp:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x17
  1484  000018                     	ds	2
  1485  00001A                     fputs@c:
  1486                           	callstack 0
  1487                           
  1488                           ; 1 bytes @ 0x19
  1489  00001A                     	ds	1
  1490  00001B                     ___aodiv@counter:
  1491                           	callstack 0
  1492  00001B                     ___aomod@counter:
  1493                           	callstack 0
  1494  00001B                     fputs@i:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x1A
  1498  00001B                     	ds	1
  1499  00001C                     ___aodiv@sign:
  1500                           	callstack 0
  1501  00001C                     ___aomod@sign:
  1502                           	callstack 0
  1503                           
  1504                           ; 1 bytes @ 0x1B
  1505  00001C                     	ds	1
  1506  00001D                     ?_abs:
  1507                           	callstack 0
  1508  00001D                     ?_pad:
  1509                           	callstack 0
  1510  00001D                     pad@fp:
  1511                           	callstack 0
  1512  00001D                     abs@a:
  1513                           	callstack 0
  1514  00001D                     ___aodiv@quotient:
  1515                           	callstack 0
  1516                           
  1517                           ; 8 bytes @ 0x1C
  1518  00001D                     	ds	2
  1519  00001F                     ??_abs:
  1520  00001F                     pad@buf:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x1E
  1524  00001F                     	ds	2
  1525  000021                     pad@p:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x20
  1529  000021                     	ds	2
  1530  000023                     ??_pad:
  1531                           
  1532                           ; 1 bytes @ 0x22
  1533  000023                     	ds	1
  1534  000024                     pad@i:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x23
  1538  000024                     	ds	2
  1539  000026                     pad@w:
  1540                           	callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x25
  1543  000026                     	ds	2
  1544  000028                     ?_ctoa:
  1545                           	callstack 0
  1546  000028                     ?_dtoa:
  1547                           	callstack 0
  1548  000028                     ctoa@fp:
  1549                           	callstack 0
  1550  000028                     dtoa@fp:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x27
  1554  000028                     	ds	2
  1555  00002A                     ctoa@c:
  1556                           	callstack 0
  1557  00002A                     dtoa@d:
  1558                           	callstack 0
  1559                           
  1560                           ; 8 bytes @ 0x29
  1561  00002A                     	ds	1
  1562  00002B                     ctoa@w:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x2A
  1566  00002B                     	ds	7
  1567  000032                     ??_dtoa:
  1568                           
  1569                           ; 1 bytes @ 0x31
  1570  000032                     	ds	8
  1571  00003A                     ?_vfpfcnvrt:
  1572                           	callstack 0
  1573  00003A                     vfpfcnvrt@fp:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x39
  1577  00003A                     	ds	2
  1578  00003C                     vfpfcnvrt@fmt:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x3B
  1582  00003C                     	ds	2
  1583  00003E                     vfpfcnvrt@ap:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x3D
  1587  00003E                     	ds	2
  1588  000040                     ??_vfpfcnvrt:
  1589                           
  1590                           ; 1 bytes @ 0x3F
  1591  000040                     	ds	2
  1592  000042                     vfpfcnvrt@ll:
  1593                           	callstack 0
  1594                           
  1595                           ; 8 bytes @ 0x41
  1596  000042                     	ds	8
  1597  00004A                     vfpfcnvrt@c:
  1598                           	callstack 0
  1599                           
  1600                           ; 1 bytes @ 0x49
  1601  00004A                     	ds	1
  1602  00004B                     
  1603                           ; 1 bytes @ 0x4A
  1604 ;;
  1605 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1606 ;;
  1607 ;; *************** function _main *****************
  1608 ;; Defined at:
  1609 ;;		line 47 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  ind             1   47[BANK0 ] unsigned char 
  1614 ;;  cksum           1   44[BANK0 ] unsigned char 
  1615 ;;  i               1   46[BANK0 ] unsigned char 
  1616 ;;  cmd             1   45[BANK0 ] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;Total ram usage:        6 bytes
  1631 ;; Hardware stack levels required when called:   14
  1632 ;; This function calls:
  1633 ;;		_EPWM2_LoadDutyValue
  1634 ;;		_EUSART1_Read
  1635 ;;		_EUSART1_is_rx_ready
  1636 ;;		_EUSART2_Read
  1637 ;;		_EUSART2_is_rx_ready
  1638 ;;		_SYSTEM_Initialize
  1639 ;;		_TMR1_SetInterruptHandler
  1640 ;;		_TMR1_WriteTimer
  1641 ;;		_decodeIntoASCII
  1642 ;;		_printf
  1643 ;;		_userEnter8bit
  1644 ;; This function is called by:
  1645 ;;		Startup code after reset
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text0
  1650  000060                     __ptext0:
  1651                           	callstack 0
  1652  000060                     _main:
  1653                           	callstack 17
  1654  000060                     
  1655                           ;main.c: 49:     printf("Dev'21 Board wiring\r\n");;main.c: 50:     printf("Install a ju
      +                          mper wire from RC0 to RB7 ONLY AFTER unplugging PICKit3\r\n");;main.c: 52:     printf("\
      +                          r\n> ");
  1656  000060  ECE5  F00A         	call	_SYSTEM_Initialize	;wreg free
  1657                           
  1658                           ;main.c: 53: 
  1659  000064  0E00               	movlw	0
  1660  000066  6E0C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1661  000068  0E00               	movlw	0
  1662  00006A  6E0B               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1663  00006C  EC24  F00A         	call	_EPWM2_LoadDutyValue	;wreg free
  1664  000070                     
  1665                           ;main.c: 58:             switch (cmd) {
  1666  000070  0E00               	movlw	0
  1667  000072  6E0C               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  1668  000074  0E00               	movlw	0
  1669  000076  6E0B               	movwf	TMR1_WriteTimer@timerVal^0,c
  1670  000078  ECBD  F00A         	call	_TMR1_WriteTimer	;wreg free
  1671  00007C                     
  1672                           ;main.c: 59: 
  1673  00007C  909E               	bcf	158,0,c	;volatile
  1674  00007E                     l252:
  1675  00007E  A09E               	btfss	158,0,c	;volatile
  1676  000080  EF44  F000         	goto	u2231
  1677  000084  EF46  F000         	goto	u2230
  1678  000088                     u2231:
  1679  000088  EF3F  F000         	goto	l252
  1680  00008C                     u2230:
  1681  00008C                     
  1682                           ;main.c: 63:                 case '?':
  1683  00008C  EC29  F00B         	call	_EUSART2_is_rx_ready	;wreg free
  1684  000090  0900               	iorlw	0
  1685  000092  B4D8               	btfsc	status,2,c
  1686  000094  EF4E  F000         	goto	u2241
  1687  000098  EF50  F000         	goto	u2240
  1688  00009C                     u2241:
  1689  00009C  EF52  F000         	goto	l255
  1690  0000A0                     u2240:
  1691  0000A0  EC94  F00A         	call	_EUSART2_Read	;wreg free
  1692  0000A4                     l255:
  1693                           
  1694                           ;main.c: 64:                     printf("-----------------------------------------------
      +                          --\r\n");
  1695  0000A4  EC29  F00B         	call	_EUSART2_is_rx_ready	;wreg free
  1696  0000A8  0900               	iorlw	0
  1697  0000AA  B4D8               	btfsc	status,2,c
  1698  0000AC  EF5A  F000         	goto	u2251
  1699  0000B0  EF5C  F000         	goto	u2250
  1700  0000B4                     u2251:
  1701  0000B4  EF5E  F000         	goto	l3296
  1702  0000B8                     u2250:
  1703  0000B8  EC94  F00A         	call	_EUSART2_Read	;wreg free
  1704  0000BC                     l3296:
  1705                           
  1706                           ;main.c: 66:                     printf("PR2: %d\r\n", PR2);
  1707  0000BC  0E9E               	movlw	low _myTMR1ISR
  1708  0000BE  6E0B               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1709  0000C0  0E0D               	movlw	high _myTMR1ISR
  1710  0000C2  6E0C               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1711  0000C4  EC40  F00B         	call	_TMR1_SetInterruptHandler	;wreg free
  1712  0000C8                     
  1713                           ;main.c: 67:                     printf("-----------------------------------------------
      +                          --\r\n");
  1714  0000C8  8CF2               	bsf	242,6,c	;volatile
  1715  0000CA                     
  1716                           ;main.c: 68:                     printf("?: help menu\r\n");
  1717  0000CA  8EF2               	bsf	242,7,c	;volatile
  1718  0000CC                     
  1719                           ;main.c: 71:                     printf("z: Clear the terminal\r\n");
  1720  0000CC  0ED3               	movlw	low STR_1
  1721  0000CE  0100               	movlb	0	; () banked
  1722  0000D0  6FD6               	movwf	printf@fmt& (0+255),b
  1723  0000D2  0EFF               	movlw	high STR_1
  1724  0000D4  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1725  0000D6  ECA9  F00A         	call	_printf	;wreg free
  1726  0000DA                     
  1727                           ;main.c: 72:                     printf("b: set Baud rate\r\n");
  1728  0000DA  0ED8               	movlw	low STR_2
  1729  0000DC  0100               	movlb	0	; () banked
  1730  0000DE  6FD6               	movwf	printf@fmt& (0+255),b
  1731  0000E0  0EFD               	movlw	high STR_2
  1732  0000E2  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1733  0000E4  ECA9  F00A         	call	_printf	;wreg free
  1734  0000E8                     
  1735                           ;main.c: 73:                     printf("m: create a NULL terminated message with SRC an
      +                          d DEST prefix.\r\n");
  1736  0000E8  0E0A               	movlw	low STR_3
  1737  0000EA  0100               	movlb	0	; () banked
  1738  0000EC  6FD6               	movwf	printf@fmt& (0+255),b
  1739  0000EE  0EFF               	movlw	high STR_3
  1740  0000F0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1741  0000F2  ECA9  F00A         	call	_printf	;wreg free
  1742  0000F6                     
  1743                           ;main.c: 74:                     printf("s: set source transmit identity\r\n");
  1744  0000F6  0E99               	movlw	low STR_4
  1745  0000F8  0100               	movlb	0	; () banked
  1746  0000FA  6FD6               	movwf	printf@fmt& (0+255),b
  1747  0000FC  0EFC               	movlw	high STR_4
  1748  0000FE  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1749  000100  ECA9  F00A         	call	_printf	;wreg free
  1750  000104                     
  1751                           ;main.c: 75:                     printf("d: set Destination transmit target\r\n");
  1752  000104  0E85               	movlw	low STR_5
  1753  000106  0100               	movlb	0	; () banked
  1754  000108  6FD6               	movwf	printf@fmt& (0+255),b
  1755  00010A  0EFD               	movlw	high STR_5
  1756  00010C  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1757  00010E  ECA9  F00A         	call	_printf	;wreg free
  1758  000112                     
  1759                           ;main.c: 76:                     printf("S: Send message using TMR1 ISR\r\n");
  1760  000112  0EEA               	movlw	low STR_6
  1761  000114  0100               	movlb	0	; () banked
  1762  000116  6FD6               	movwf	printf@fmt& (0+255),b
  1763  000118  0EFF               	movlw	high STR_6
  1764  00011A  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1765  00011C  ECA9  F00A         	call	_printf	;wreg free
  1766  000120                     l3314:
  1767                           
  1768                           ;main.c: 80:                     printf("-----------------------------------------------
      +                          --\r\n");
  1769  000120  EC1F  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1770  000124  0900               	iorlw	0
  1771  000126  B4D8               	btfsc	status,2,c
  1772  000128  EF98  F000         	goto	u2261
  1773  00012C  EF9A  F000         	goto	u2260
  1774  000130                     u2261:
  1775  000130  EF90  F000         	goto	l3314
  1776  000134                     u2260:
  1777  000134                     
  1778                           ;main.c: 81:                     break;
  1779  000134  EC6A  F00A         	call	_EUSART1_Read	;wreg free
  1780  000138  0100               	movlb	0	; () banked
  1781  00013A  6FE9               	movwf	main@cmd& (0+255),b
  1782                           
  1783                           ;main.c: 82: 
  1784  00013C  EF88  F002         	goto	l3428
  1785  000140                     l3318:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 88:                     break;
  1789  000140  0E1F               	movlw	low STR_7
  1790  000142  6FD6               	movwf	printf@fmt& (0+255),b
  1791  000144  0EFD               	movlw	high STR_7
  1792  000146  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1793  000148  ECA9  F00A         	call	_printf	;wreg free
  1794                           
  1795                           ;main.c: 89: 
  1796  00014C  0E9C               	movlw	low STR_8
  1797  00014E  0100               	movlb	0	; () banked
  1798  000150  6FD6               	movwf	printf@fmt& (0+255),b
  1799  000152  0EFF               	movlw	high STR_8
  1800  000154  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1801  000156  ECA9  F00A         	call	_printf	;wreg free
  1802                           
  1803                           ;main.c: 90: 
  1804  00015A  0EC9               	movlw	low STR_9
  1805  00015C  0100               	movlb	0	; () banked
  1806  00015E  6FD6               	movwf	printf@fmt& (0+255),b
  1807  000160  0EFF               	movlw	high STR_9
  1808  000162  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1809  000164  CFBB F0D8          	movff	4027,?_printf+2	;volatile
  1810  000168  6BD9               	clrf	(?_printf+3)& (0+255),b
  1811  00016A  ECA9  F00A         	call	_printf	;wreg free
  1812                           
  1813                           ;main.c: 91: 
  1814  00016E  0E1F               	movlw	low STR_7
  1815  000170  0100               	movlb	0	; () banked
  1816  000172  6FD6               	movwf	printf@fmt& (0+255),b
  1817  000174  0EFD               	movlw	high STR_7
  1818  000176  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1819  000178  ECA9  F00A         	call	_printf	;wreg free
  1820                           
  1821                           ;main.c: 92: 
  1822  00017C  0E8D               	movlw	low STR_11
  1823  00017E  0100               	movlb	0	; () banked
  1824  000180  6FD6               	movwf	printf@fmt& (0+255),b
  1825  000182  0EFF               	movlw	high STR_11
  1826  000184  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1827  000186  ECA9  F00A         	call	_printf	;wreg free
  1828                           
  1829                           ;main.c: 93:                 case 'Z':
  1830  00018A  0EE3               	movlw	low STR_12
  1831  00018C  0100               	movlb	0	; () banked
  1832  00018E  6FD6               	movwf	printf@fmt& (0+255),b
  1833  000190  0EFF               	movlw	high STR_12
  1834  000192  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1835  000194  ECA9  F00A         	call	_printf	;wreg free
  1836                           
  1837                           ;main.c: 94:                     for (i = 0; i < 40; i++) printf("\n");
  1838  000198  0E35               	movlw	low STR_13
  1839  00019A  0100               	movlb	0	; () banked
  1840  00019C  6FD6               	movwf	printf@fmt& (0+255),b
  1841  00019E  0EFF               	movlw	high STR_13
  1842  0001A0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1843  0001A2  ECA9  F00A         	call	_printf	;wreg free
  1844                           
  1845                           ;main.c: 95:                     __asm("reset");
  1846  0001A6  0EDB               	movlw	low STR_14
  1847  0001A8  0100               	movlb	0	; () banked
  1848  0001AA  6FD6               	movwf	printf@fmt& (0+255),b
  1849  0001AC  0EFE               	movlw	high STR_14
  1850  0001AE  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1851  0001B0  ECA9  F00A         	call	_printf	;wreg free
  1852                           
  1853                           ;main.c: 96:                     break;
  1854  0001B4  0E4A               	movlw	low STR_15
  1855  0001B6  0100               	movlb	0	; () banked
  1856  0001B8  6FD6               	movwf	printf@fmt& (0+255),b
  1857  0001BA  0EFF               	movlw	high STR_15
  1858  0001BC  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1859  0001BE  ECA9  F00A         	call	_printf	;wreg free
  1860                           
  1861                           ;main.c: 97: 
  1862  0001C2  0EDF               	movlw	low STR_16
  1863  0001C4  0100               	movlb	0	; () banked
  1864  0001C6  6FD6               	movwf	printf@fmt& (0+255),b
  1865  0001C8  0EFC               	movlw	high STR_16
  1866  0001CA  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1867  0001CC  ECA9  F00A         	call	_printf	;wreg free
  1868                           
  1869                           ;main.c: 98: 
  1870  0001D0  0E22               	movlw	low STR_17
  1871  0001D2  0100               	movlb	0	; () banked
  1872  0001D4  6FD6               	movwf	printf@fmt& (0+255),b
  1873  0001D6  0EFE               	movlw	high STR_17
  1874  0001D8  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1875  0001DA  ECA9  F00A         	call	_printf	;wreg free
  1876                           
  1877                           ;main.c: 99: 
  1878  0001DE  0EFD               	movlw	low STR_18
  1879  0001E0  0100               	movlb	0	; () banked
  1880  0001E2  6FD6               	movwf	printf@fmt& (0+255),b
  1881  0001E4  0EFD               	movlw	high STR_18
  1882  0001E6  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1883  0001E8  ECA9  F00A         	call	_printf	;wreg free
  1884                           
  1885                           ;main.c: 100: 
  1886  0001EC  0E44               	movlw	low STR_19
  1887  0001EE  0100               	movlb	0	; () banked
  1888  0001F0  6FD6               	movwf	printf@fmt& (0+255),b
  1889  0001F2  0EFE               	movlw	high STR_19
  1890  0001F4  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1891  0001F6  ECA9  F00A         	call	_printf	;wreg free
  1892                           
  1893                           ;main.c: 101:                 case 'z':
  1894  0001FA  0E53               	movlw	low STR_20
  1895  0001FC  0100               	movlb	0	; () banked
  1896  0001FE  6FD6               	movwf	printf@fmt& (0+255),b
  1897  000200  0EFD               	movlw	high STR_20
  1898  000202  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1899  000204  ECA9  F00A         	call	_printf	;wreg free
  1900                           
  1901                           ;main.c: 102:                     for (i = 0; i < 40; i++) printf("\n");
  1902  000208  0E85               	movlw	low STR_21
  1903  00020A  0100               	movlb	0	; () banked
  1904  00020C  6FD6               	movwf	printf@fmt& (0+255),b
  1905  00020E  0EFE               	movlw	high STR_21
  1906  000210  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1907  000212  ECA9  F00A         	call	_printf	;wreg free
  1908                           
  1909                           ;main.c: 103:                     break;
  1910  000216  0EA2               	movlw	low STR_22
  1911  000218  0100               	movlb	0	; () banked
  1912  00021A  6FD6               	movwf	printf@fmt& (0+255),b
  1913  00021C  0EFE               	movlw	high STR_22
  1914  00021E  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1915  000220  ECA9  F00A         	call	_printf	;wreg free
  1916                           
  1917                           ;main.c: 104: 
  1918  000224  0E1F               	movlw	low STR_7
  1919  000226  0100               	movlb	0	; () banked
  1920  000228  6FD6               	movwf	printf@fmt& (0+255),b
  1921  00022A  0EFD               	movlw	high STR_7
  1922  00022C  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1923  00022E  ECA9  F00A         	call	_printf	;wreg free
  1924                           
  1925                           ;main.c: 105: 
  1926  000232  EF90  F000         	goto	l3314
  1927  000236                     l3320:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 111: 
  1931  000236  0EDB               	movlw	low STR_24
  1932  000238  6FD6               	movwf	printf@fmt& (0+255),b
  1933  00023A  0EFF               	movlw	high STR_24
  1934  00023C  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1935  00023E  ECA9  F00A         	call	_printf	;wreg free
  1936                           
  1937                           ;main.c: 112: 
  1938  000242  EF90  F000         	goto	l3314
  1939  000246                     l3322:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 118:                     printf(">");
  1943  000246  0E00               	movlw	0
  1944  000248  6FEA               	movwf	main@i& (0+255),b
  1945  00024A                     l3328:
  1946                           
  1947                           ; BSR set to: 0
  1948  00024A  0E51               	movlw	low (STR_7+50)
  1949  00024C  6FD6               	movwf	printf@fmt& (0+255),b
  1950  00024E  0EFD               	movlw	high (STR_7+50)
  1951  000250  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1952  000252  ECA9  F00A         	call	_printf	;wreg free
  1953  000256  0100               	movlb	0	; () banked
  1954  000258  2BEA               	incf	main@i& (0+255),f,b
  1955  00025A                     
  1956                           ; BSR set to: 0
  1957  00025A  0E27               	movlw	39
  1958  00025C  65EA               	cpfsgt	main@i& (0+255),b
  1959  00025E  EF33  F001         	goto	u2271
  1960  000262  EF35  F001         	goto	u2270
  1961  000266                     u2271:
  1962  000266  EF25  F001         	goto	l3328
  1963  00026A                     u2270:
  1964  00026A                     
  1965                           ; BSR set to: 0
  1966  00026A  00FF               	reset		;# 
  1967                           
  1968                           ;main.c: 120: 
  1969  00026C  EF90  F000         	goto	l3314
  1970  000270                     l3334:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;main.c: 126:                         if (transmitIRBuffer[ind] == '\r') {
  1974  000270  0E00               	movlw	0
  1975  000272  6FEA               	movwf	main@i& (0+255),b
  1976  000274                     l3340:
  1977                           
  1978                           ; BSR set to: 0
  1979  000274  0E51               	movlw	low (STR_7+50)
  1980  000276  6FD6               	movwf	printf@fmt& (0+255),b
  1981  000278  0EFD               	movlw	high (STR_7+50)
  1982  00027A  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1983  00027C  ECA9  F00A         	call	_printf	;wreg free
  1984  000280  0100               	movlb	0	; () banked
  1985  000282  2BEA               	incf	main@i& (0+255),f,b
  1986  000284                     
  1987                           ; BSR set to: 0
  1988  000284  0E27               	movlw	39
  1989  000286  65EA               	cpfsgt	main@i& (0+255),b
  1990  000288  EF48  F001         	goto	u2281
  1991  00028C  EF4A  F001         	goto	u2280
  1992  000290                     u2281:
  1993  000290  EF3A  F001         	goto	l3340
  1994  000294                     u2280:
  1995  000294  EF90  F000         	goto	l3314
  1996  000298                     l3346:
  1997                           
  1998                           ; BSR set to: 0
  1999  000298  0E00               	movlw	0
  2000  00029A  6FE8               	movwf	main@cksum& (0+255),b
  2001  00029C                     
  2002                           ; BSR set to: 0
  2003                           ;main.c: 141:                         if (transmitIRBuffer[ind] == '\0'){
  2004  00029C  0EAF               	movlw	low STR_27
  2005  00029E  6FD6               	movwf	printf@fmt& (0+255),b
  2006  0002A0  0EFD               	movlw	high STR_27
  2007  0002A2  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2008  0002A4  ECA9  F00A         	call	_printf	;wreg free
  2009  0002A8                     
  2010                           ;main.c: 142:                             printf("\r\n");
  2011  0002A8  0EFC               	movlw	low STR_28
  2012  0002AA  0100               	movlb	0	; () banked
  2013  0002AC  6FD6               	movwf	printf@fmt& (0+255),b
  2014  0002AE  0EFF               	movlw	high STR_28
  2015  0002B0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2016  0002B2  ECA9  F00A         	call	_printf	;wreg free
  2017  0002B6                     l3352:
  2018  0002B6  EC1F  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  2019  0002BA  0900               	iorlw	0
  2020  0002BC  A4D8               	btfss	status,2,c
  2021  0002BE  EF63  F001         	goto	u2291
  2022  0002C2  EF65  F001         	goto	u2290
  2023  0002C6                     u2291:
  2024  0002C6  EF5B  F001         	goto	l3352
  2025  0002CA                     u2290:
  2026  0002CA                     
  2027                           ;main.c: 146:                         printf("%c", transmitIRBuffer[ind]);
  2028  0002CA  0E02               	movlw	2
  2029  0002CC  0100               	movlb	0	; () banked
  2030  0002CE  6FEB               	movwf	main@ind& (0+255),b
  2031  0002D0                     l3360:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 147:                         ind++;
  2035  0002D0  0E9C               	movlw	low _transmitIRBuffer
  2036  0002D2  25EB               	addwf	main@ind& (0+255),w,b
  2037  0002D4  6ED9               	movwf	fsr2l,c
  2038  0002D6  6ADA               	clrf	fsr2h,c
  2039  0002D8  0E00               	movlw	high _transmitIRBuffer
  2040  0002DA  22DA               	addwfc	fsr2h,f,c
  2041  0002DC  EC6A  F00A         	call	_EUSART1_Read	;wreg free
  2042  0002E0  6EDF               	movwf	indf2,c
  2043  0002E2                     
  2044                           ;main.c: 148:                     }
  2045  0002E2  0E9C               	movlw	low _transmitIRBuffer
  2046  0002E4  0100               	movlb	0	; () banked
  2047  0002E6  25EB               	addwf	main@ind& (0+255),w,b
  2048  0002E8  6ED9               	movwf	fsr2l,c
  2049  0002EA  6ADA               	clrf	fsr2h,c
  2050  0002EC  0E00               	movlw	high _transmitIRBuffer
  2051  0002EE  22DA               	addwfc	fsr2h,f,c
  2052  0002F0  50DF               	movf	indf2,w,c
  2053  0002F2  27E8               	addwf	main@cksum& (0+255),f,b
  2054  0002F4                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 149:                     printf("\tchecksum: %d\r\n", transmitIRBuffer[ind]);
  2057  0002F4  0EF5               	movlw	low (STR_49+1)
  2058  0002F6  6FD6               	movwf	printf@fmt& (0+255),b
  2059  0002F8  0EFF               	movlw	high (STR_49+1)
  2060  0002FA  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2061  0002FC  0E9C               	movlw	low _transmitIRBuffer
  2062  0002FE  25EB               	addwf	main@ind& (0+255),w,b
  2063  000300  6ED9               	movwf	fsr2l,c
  2064  000302  6ADA               	clrf	fsr2h,c
  2065  000304  0E00               	movlw	high _transmitIRBuffer
  2066  000306  22DA               	addwfc	fsr2h,f,c
  2067  000308  50DF               	movf	indf2,w,c
  2068  00030A  6FE6               	movwf	??_main& (0+255),b
  2069  00030C  51E6               	movf	??_main& (0+255),w,b
  2070  00030E  6FD8               	movwf	(?_printf+2)& (0+255),b
  2071  000310  6BD9               	clrf	(?_printf+3)& (0+255),b
  2072  000312  ECA9  F00A         	call	_printf	;wreg free
  2073  000316                     
  2074                           ;main.c: 150:                     printf("\tSRC: %d\r\n", transmitIRBuffer[0]);
  2075  000316  0E9C               	movlw	low _transmitIRBuffer
  2076  000318  0100               	movlb	0	; () banked
  2077  00031A  25EB               	addwf	main@ind& (0+255),w,b
  2078  00031C  6ED9               	movwf	fsr2l,c
  2079  00031E  6ADA               	clrf	fsr2h,c
  2080  000320  0E00               	movlw	high _transmitIRBuffer
  2081  000322  22DA               	addwfc	fsr2h,f,c
  2082  000324  0E0D               	movlw	13
  2083  000326  18DE               	xorwf	postinc2,w,c
  2084  000328  A4D8               	btfss	status,2,c
  2085  00032A  EF99  F001         	goto	u2301
  2086  00032E  EF9B  F001         	goto	u2300
  2087  000332                     u2301:
  2088  000332  EFA5  F001         	goto	l3372
  2089  000336                     u2300:
  2090  000336                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 151:                     printf("\tDES: %d\r\n", transmitIRBuffer[1]);
  2093  000336  0E0D               	movlw	13
  2094  000338  5FE8               	subwf	main@cksum& (0+255),f,b
  2095  00033A                     
  2096                           ; BSR set to: 0
  2097                           ;main.c: 152:                     break;
  2098  00033A  0E50               	movlw	low (STR_7+49)
  2099  00033C  6FD6               	movwf	printf@fmt& (0+255),b
  2100  00033E  0EFD               	movlw	high (STR_7+49)
  2101  000340  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2102  000342  ECA9  F00A         	call	_printf	;wreg free
  2103                           
  2104                           ;main.c: 153:                 }
  2105  000346  EFAE  F001         	goto	l3376
  2106  00034A                     l3372:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 155: 
  2110  00034A  2BEB               	incf	main@ind& (0+255),f,b
  2111  00034C                     
  2112                           ; BSR set to: 0
  2113  00034C  0E1D               	movlw	29
  2114  00034E  65EB               	cpfsgt	main@ind& (0+255),b
  2115  000350  EFAC  F001         	goto	u2311
  2116  000354  EFAE  F001         	goto	u2310
  2117  000358                     u2311:
  2118  000358  EF68  F001         	goto	l3360
  2119  00035C                     u2310:
  2120  00035C                     l3376:
  2121                           
  2122                           ;main.c: 156: 
  2123  00035C  0E9D               	movlw	low (_transmitIRBuffer+1)
  2124  00035E  0100               	movlb	0	; () banked
  2125  000360  25EB               	addwf	main@ind& (0+255),w,b
  2126  000362  6ED9               	movwf	fsr2l,c
  2127  000364  6ADA               	clrf	fsr2h,c
  2128  000366  0E00               	movlw	high (_transmitIRBuffer+1)
  2129  000368  22DA               	addwfc	fsr2h,f,c
  2130  00036A  0E00               	movlw	0
  2131  00036C  6EDF               	movwf	indf2,c
  2132                           
  2133                           ;main.c: 157: 
  2134  00036E  0E9E               	movlw	low (_transmitIRBuffer+2)
  2135  000370  25EB               	addwf	main@ind& (0+255),w,b
  2136  000372  6ED9               	movwf	fsr2l,c
  2137  000374  6ADA               	clrf	fsr2h,c
  2138  000376  0E00               	movlw	high (_transmitIRBuffer+2)
  2139  000378  22DA               	addwfc	fsr2h,f,c
  2140  00037A  C0E8  FFDF         	movff	main@cksum,indf2
  2141  00037E                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 162:                     break;
  2144  00037E  0E02               	movlw	2
  2145  000380  6FEB               	movwf	main@ind& (0+255),b
  2146  000382                     
  2147                           ; BSR set to: 0
  2148                           ;main.c: 163: 
  2149  000382  0EBE               	movlw	low STR_31
  2150  000384  6FD6               	movwf	printf@fmt& (0+255),b
  2151  000386  0EFF               	movlw	high STR_31
  2152  000388  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2153  00038A  ECA9  F00A         	call	_printf	;wreg free
  2154  00038E                     l3382:
  2155                           
  2156                           ;main.c: 165: 
  2157  00038E  0E9C               	movlw	low _transmitIRBuffer
  2158  000390  0100               	movlb	0	; () banked
  2159  000392  25EB               	addwf	main@ind& (0+255),w,b
  2160  000394  6ED9               	movwf	fsr2l,c
  2161  000396  6ADA               	clrf	fsr2h,c
  2162  000398  0E00               	movlw	high _transmitIRBuffer
  2163  00039A  22DA               	addwfc	fsr2h,f,c
  2164  00039C  50DF               	movf	indf2,w,c
  2165  00039E  A4D8               	btfss	status,2,c
  2166  0003A0  EFD4  F001         	goto	u2321
  2167  0003A4  EFD6  F001         	goto	u2320
  2168  0003A8                     u2321:
  2169  0003A8  EFE0  F001         	goto	l3388
  2170  0003AC                     u2320:
  2171  0003AC                     
  2172                           ; BSR set to: 0
  2173                           ;main.c: 166: 
  2174  0003AC  0E50               	movlw	low (STR_7+49)
  2175  0003AE  6FD6               	movwf	printf@fmt& (0+255),b
  2176  0003B0  0EFD               	movlw	high (STR_7+49)
  2177  0003B2  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2178  0003B4  ECA9  F00A         	call	_printf	;wreg free
  2179  0003B8                     
  2180                           ;main.c: 167:                 case 'd':
  2181  0003B8  0100               	movlb	0	; () banked
  2182  0003BA  2BEB               	incf	main@ind& (0+255),f,b
  2183                           
  2184                           ;main.c: 168:                     printf("Enter destination address: ");
  2185  0003BC  EFF5  F001         	goto	l3392
  2186  0003C0                     l3388:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 170:                     printf("DES: %d\r\n", transmitIRBuffer[1]);
  2190  0003C0  0EF5               	movlw	low (STR_49+1)
  2191  0003C2  6FD6               	movwf	printf@fmt& (0+255),b
  2192  0003C4  0EFF               	movlw	high (STR_49+1)
  2193  0003C6  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2194  0003C8  0E9C               	movlw	low _transmitIRBuffer
  2195  0003CA  25EB               	addwf	main@ind& (0+255),w,b
  2196  0003CC  6ED9               	movwf	fsr2l,c
  2197  0003CE  6ADA               	clrf	fsr2h,c
  2198  0003D0  0E00               	movlw	high _transmitIRBuffer
  2199  0003D2  22DA               	addwfc	fsr2h,f,c
  2200  0003D4  50DF               	movf	indf2,w,c
  2201  0003D6  6FE6               	movwf	??_main& (0+255),b
  2202  0003D8  51E6               	movf	??_main& (0+255),w,b
  2203  0003DA  6FD8               	movwf	(?_printf+2)& (0+255),b
  2204  0003DC  6BD9               	clrf	(?_printf+3)& (0+255),b
  2205  0003DE  ECA9  F00A         	call	_printf	;wreg free
  2206  0003E2                     
  2207                           ;main.c: 171:                     break;
  2208  0003E2  0100               	movlb	0	; () banked
  2209  0003E4  2BEB               	incf	main@ind& (0+255),f,b
  2210                           
  2211                           ;main.c: 172: 
  2212  0003E6  EFC7  F001         	goto	l3382
  2213  0003EA                     l3392:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 173: 
  2217  0003EA  0E6E               	movlw	low STR_34
  2218  0003EC  6FD6               	movwf	printf@fmt& (0+255),b
  2219  0003EE  0EFF               	movlw	high STR_34
  2220  0003F0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2221  0003F2  0E9C               	movlw	low _transmitIRBuffer
  2222  0003F4  25EB               	addwf	main@ind& (0+255),w,b
  2223  0003F6  6ED9               	movwf	fsr2l,c
  2224  0003F8  6ADA               	clrf	fsr2h,c
  2225  0003FA  0E00               	movlw	high _transmitIRBuffer
  2226  0003FC  22DA               	addwfc	fsr2h,f,c
  2227  0003FE  50DF               	movf	indf2,w,c
  2228  000400  6FE6               	movwf	??_main& (0+255),b
  2229  000402  51E6               	movf	??_main& (0+255),w,b
  2230  000404  6FD8               	movwf	(?_printf+2)& (0+255),b
  2231  000406  6BD9               	clrf	(?_printf+3)& (0+255),b
  2232  000408  ECA9  F00A         	call	_printf	;wreg free
  2233                           
  2234                           ;main.c: 174: 
  2235  00040C  0EA8               	movlw	low STR_35
  2236  00040E  0100               	movlb	0	; () banked
  2237  000410  6FD6               	movwf	printf@fmt& (0+255),b
  2238  000412  0EFF               	movlw	high STR_35
  2239  000414  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2240  000416  C09C  F0D8         	movff	_transmitIRBuffer,?_printf+2
  2241  00041A  6BD9               	clrf	(?_printf+3)& (0+255),b
  2242  00041C  ECA9  F00A         	call	_printf	;wreg free
  2243                           
  2244                           ;main.c: 175: 
  2245  000420  0EB3               	movlw	low STR_36
  2246  000422  0100               	movlb	0	; () banked
  2247  000424  6FD6               	movwf	printf@fmt& (0+255),b
  2248  000426  0EFF               	movlw	high STR_36
  2249  000428  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2250  00042A  C09D  F0D8         	movff	_transmitIRBuffer+1,?_printf+2
  2251  00042E  6BD9               	clrf	(?_printf+3)& (0+255),b
  2252  000430  ECA9  F00A         	call	_printf	;wreg free
  2253                           
  2254                           ;main.c: 176:                 case 'S':
  2255  000434  EF90  F000         	goto	l3314
  2256  000438                     l3394:
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;main.c: 183: 
  2260  000438  0EF3               	movlw	low STR_37
  2261  00043A  6FD6               	movwf	printf@fmt& (0+255),b
  2262  00043C  0EFE               	movlw	high STR_37
  2263  00043E  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2264  000440  ECA9  F00A         	call	_printf	;wreg free
  2265  000444                     
  2266                           ;main.c: 184: 
  2267  000444  EC6D  F007         	call	_userEnter8bit	;wreg free
  2268  000448  0100               	movlb	0	; () banked
  2269  00044A  6F9C               	movwf	_transmitIRBuffer& (0+255),b
  2270  00044C                     
  2271                           ; BSR set to: 0
  2272                           ;main.c: 185:                 case 'R':
  2273  00044C  0EA9               	movlw	low (STR_35+1)
  2274  00044E  6FD6               	movwf	printf@fmt& (0+255),b
  2275  000450  0EFF               	movlw	high (STR_35+1)
  2276  000452  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2277  000454  C09C  F0D8         	movff	_transmitIRBuffer,?_printf+2
  2278  000458  6BD9               	clrf	(?_printf+3)& (0+255),b
  2279  00045A  ECA9  F00A         	call	_printf	;wreg free
  2280                           
  2281                           ;main.c: 186:                     if (PIR3bits.RC2IF == 1);
  2282  00045E  EF90  F000         	goto	l3314
  2283  000462                     l3400:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;main.c: 192: 
  2287  000462  0EBF               	movlw	low STR_39
  2288  000464  6FD6               	movwf	printf@fmt& (0+255),b
  2289  000466  0EFE               	movlw	high STR_39
  2290  000468  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2291  00046A  ECA9  F00A         	call	_printf	;wreg free
  2292  00046E                     
  2293                           ;main.c: 193: 
  2294  00046E  EC6D  F007         	call	_userEnter8bit	;wreg free
  2295  000472  0100               	movlb	0	; () banked
  2296  000474  6F9D               	movwf	(_transmitIRBuffer+1)& (0+255),b
  2297  000476                     
  2298                           ; BSR set to: 0
  2299                           ;main.c: 194:                 case 'M':
  2300  000476  0EB4               	movlw	low (STR_36+1)
  2301  000478  6FD6               	movwf	printf@fmt& (0+255),b
  2302  00047A  0EFF               	movlw	high (STR_36+1)
  2303  00047C  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2304  00047E  C09D  F0D8         	movff	_transmitIRBuffer+1,?_printf+2
  2305  000482  6BD9               	clrf	(?_printf+3)& (0+255),b
  2306  000484  ECA9  F00A         	call	_printf	;wreg free
  2307                           
  2308                           ;main.c: 195: 
  2309  000488  EF90  F000         	goto	l3314
  2310  00048C                     l3406:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 201: 
  2314  00048C  0E01               	movlw	1
  2315  00048E  6E53               	movwf	_transmitStart^0,c
  2316  000490                     l3408:
  2317                           
  2318                           ; BSR set to: 0
  2319  000490  517B               	movf	_transmitBusy& (0+255),w,b
  2320  000492  A4D8               	btfss	status,2,c
  2321  000494  EF4E  F002         	goto	u2331
  2322  000498  EF50  F002         	goto	u2330
  2323  00049C                     u2331:
  2324  00049C  EF48  F002         	goto	l3408
  2325  0004A0                     u2330:
  2326  0004A0                     
  2327                           ; BSR set to: 0
  2328                           ;main.c: 203: 
  2329  0004A0  0E7E               	movlw	low STR_41
  2330  0004A2  6FD6               	movwf	printf@fmt& (0+255),b
  2331  0004A4  0EFF               	movlw	high STR_41
  2332  0004A6  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2333  0004A8  ECA9  F00A         	call	_printf	;wreg free
  2334                           
  2335                           ;main.c: 204: 
  2336  0004AC  EF90  F000         	goto	l3314
  2337  0004B0                     l286:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;main.c: 210:                     RCSTA2bits.CREN = 1;
  2341  0004B0  AAA4               	btfss	164,5,c	;volatile
  2342  0004B2  EF5D  F002         	goto	u2341
  2343  0004B6  EF5F  F002         	goto	u2340
  2344  0004BA                     u2341:
  2345  0004BA  EF61  F002         	goto	l3414
  2346  0004BE                     u2340:
  2347  0004BE  EF90  F000         	goto	l3314
  2348  0004C2                     l3414:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 212:                     break;
  2352  0004C2  0E65               	movlw	low STR_42
  2353  0004C4  6FD6               	movwf	printf@fmt& (0+255),b
  2354  0004C6  0EFE               	movlw	high STR_42
  2355  0004C8  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2356  0004CA  ECA9  F00A         	call	_printf	;wreg free
  2357  0004CE  EF90  F000         	goto	l3314
  2358  0004D2                     l3416:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 220:                     break;
  2362  0004D2  0E9C               	movlw	low _transmitIRBuffer
  2363  0004D4  6FDE               	movwf	decodeIntoASCII@msg& (0+255),b
  2364  0004D6  0E00               	movlw	high _transmitIRBuffer
  2365  0004D8  6FDF               	movwf	(decodeIntoASCII@msg+1)& (0+255),b
  2366  0004DA  EC45  F008         	call	_decodeIntoASCII	;wreg free
  2367  0004DE  EF90  F000         	goto	l3314
  2368  0004E2                     l292:
  2369                           
  2370                           ; BSR set to: 0
  2371  0004E2  EF90  F000         	goto	l3314
  2372  0004E6                     l294:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;main.c: 233: 
  2376  0004E6  9871               	bcf	113,4,c	;volatile
  2377                           
  2378                           ;main.c: 234: void myTMR1ISR(void) {
  2379  0004E8  8871               	bsf	113,4,c	;volatile
  2380  0004EA                     
  2381                           ; BSR set to: 0
  2382                           ;main.c: 235: 
  2383  0004EA  0E20               	movlw	low STR_43
  2384  0004EC  6FD6               	movwf	printf@fmt& (0+255),b
  2385  0004EE  0EFF               	movlw	high STR_43
  2386  0004F0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2387  0004F2  ECA9  F00A         	call	_printf	;wreg free
  2388                           
  2389                           ;main.c: 236:     static myTXstates_t tmr1ISRstate = TX_IDLE;
  2390  0004F6  EF90  F000         	goto	l3314
  2391  0004FA                     l3424:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;main.c: 243: 
  2395  0004FA  0E5D               	movlw	low STR_44
  2396  0004FC  6FD6               	movwf	printf@fmt& (0+255),b
  2397  0004FE  0EFF               	movlw	high STR_44
  2398  000500  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2399  000502  C0E9  F0D8         	movff	main@cmd,?_printf+2
  2400  000506  6BD9               	clrf	(?_printf+3)& (0+255),b
  2401  000508  ECA9  F00A         	call	_printf	;wreg free
  2402                           
  2403                           ;main.c: 244:         switch (tmr1ISRstate) {
  2404  00050C  EF90  F000         	goto	l3314
  2405  000510                     l3428:
  2406                           
  2407                           ; BSR set to: 0
  2408  000510  51E9               	movf	main@cmd& (0+255),w,b
  2409  000512  6FE6               	movwf	??_main& (0+255),b
  2410  000514  6BE7               	clrf	(??_main+1)& (0+255),b
  2411                           
  2412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 1, Range of values is 0 to 0
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte            4     3 (average)
  2418                           ;	Chosen strategy is simple_byte
  2419  000516  51E7               	movf	(??_main+1)& (0+255),w,b
  2420  000518  0A00               	xorlw	0	; case 0
  2421  00051A  B4D8               	btfsc	status,2,c
  2422  00051C  EF92  F002         	goto	l3506
  2423  000520  EF7D  F002         	goto	l3424
  2424  000524                     l3506:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 14, Range of values is 63 to 122
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte           43    22 (average)
  2432                           ;	Chosen strategy is simple_byte
  2433  000524  51E6               	movf	??_main& (0+255),w,b
  2434  000526  0A3F               	xorlw	63	; case 63
  2435  000528  B4D8               	btfsc	status,2,c
  2436  00052A  EFA0  F000         	goto	l3318
  2437  00052E  0A72               	xorlw	114	; case 77
  2438  000530  B4D8               	btfsc	status,2,c
  2439  000532  EF69  F002         	goto	l3416
  2440  000536  0A1F               	xorlw	31	; case 82
  2441  000538  B4D8               	btfsc	status,2,c
  2442  00053A  EF58  F002         	goto	l286
  2443  00053E  0A01               	xorlw	1	; case 83
  2444  000540  B4D8               	btfsc	status,2,c
  2445  000542  EF46  F002         	goto	l3406
  2446  000546  0A0B               	xorlw	11	; case 88
  2447  000548  B4D8               	btfsc	status,2,c
  2448  00054A  EF71  F002         	goto	l292
  2449  00054E  0A02               	xorlw	2	; case 90
  2450  000550  B4D8               	btfsc	status,2,c
  2451  000552  EF23  F001         	goto	l3322
  2452  000556  0A38               	xorlw	56	; case 98
  2453  000558  B4D8               	btfsc	status,2,c
  2454  00055A  EF90  F000         	goto	l3314
  2455  00055E  0A06               	xorlw	6	; case 100
  2456  000560  B4D8               	btfsc	status,2,c
  2457  000562  EF31  F002         	goto	l3400
  2458  000566  0A09               	xorlw	9	; case 109
  2459  000568  B4D8               	btfsc	status,2,c
  2460  00056A  EF4C  F001         	goto	l3346
  2461  00056E  0A02               	xorlw	2	; case 111
  2462  000570  B4D8               	btfsc	status,2,c
  2463  000572  EF1B  F001         	goto	l3320
  2464  000576  0A1D               	xorlw	29	; case 114
  2465  000578  B4D8               	btfsc	status,2,c
  2466  00057A  EF73  F002         	goto	l294
  2467  00057E  0A01               	xorlw	1	; case 115
  2468  000580  B4D8               	btfsc	status,2,c
  2469  000582  EF1C  F002         	goto	l3394
  2470  000586  0A0B               	xorlw	11	; case 120
  2471  000588  B4D8               	btfsc	status,2,c
  2472  00058A  EF90  F000         	goto	l3314
  2473  00058E  0A02               	xorlw	2	; case 122
  2474  000590  B4D8               	btfsc	status,2,c
  2475  000592  EF38  F001         	goto	l3334
  2476  000596  EF7D  F002         	goto	l3424
  2477  00059A  EF2E  F000         	goto	start
  2478  00059E                     __end_of_main:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _userEnter8bit *****************
  2482 ;; Defined at:
  2483 ;;		line 324 in file "main.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  cmd             1   40[BANK0 ] unsigned char 
  2488 ;;  userNum         3   37[BANK0 ] unsigned char [3]
  2489 ;;  i               1   41[BANK0 ] unsigned char 
  2490 ;;  num             1   36[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;Total ram usage:        8 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:   13
  2507 ;; This function calls:
  2508 ;;		_EUSART1_Read
  2509 ;;		_EUSART1_is_rx_ready
  2510 ;;		_printf
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text1
  2517  000EDA                     __ptext1:
  2518                           	callstack 0
  2519  000EDA                     _userEnter8bit:
  2520                           	callstack 17
  2521  000EDA                     
  2522                           ;main.c: 326: void decodeIntoASCII(char msg[]) {
  2523  000EDA  0E00               	movlw	0
  2524  000EDC  0100               	movlb	0	; () banked
  2525  000EDE  6FE1               	movwf	userEnter8bit@userNum& (0+255),b
  2526  000EE0  0E00               	movlw	0
  2527  000EE2  6FE2               	movwf	(userEnter8bit@userNum+1)& (0+255),b
  2528  000EE4  0E00               	movlw	0
  2529  000EE6  6FE3               	movwf	(userEnter8bit@userNum+2)& (0+255),b
  2530                           
  2531                           ;main.c: 327:     uint8_t i = 0;;main.c: 328:     do {
  2532  000EE8  0E00               	movlw	0
  2533  000EEA  6FE5               	movwf	userEnter8bit@i& (0+255),b
  2534  000EEC                     l3234:
  2535  000EEC  EC1F  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  2536  000EF0  0900               	iorlw	0
  2537  000EF2  B4D8               	btfsc	status,2,c
  2538  000EF4  EF7E  F007         	goto	u2191
  2539  000EF8  EF80  F007         	goto	u2190
  2540  000EFC                     u2191:
  2541  000EFC  EF76  F007         	goto	l3234
  2542  000F00                     u2190:
  2543  000F00                     
  2544                           ;main.c: 330:         printf("\t%d:", i);
  2545  000F00  EC6A  F00A         	call	_EUSART1_Read	;wreg free
  2546  000F04  0100               	movlb	0	; () banked
  2547  000F06  6FE4               	movwf	userEnter8bit@cmd& (0+255),b
  2548  000F08                     
  2549                           ; BSR set to: 0
  2550                           ;main.c: 331:         printf("\t%h", msg[i]);
  2551  000F08  0E0D               	movlw	13
  2552  000F0A  19E4               	xorwf	userEnter8bit@cmd& (0+255),w,b
  2553  000F0C  A4D8               	btfss	status,2,c
  2554  000F0E  EF8B  F007         	goto	u2201
  2555  000F12  EF8D  F007         	goto	u2200
  2556  000F16                     u2201:
  2557  000F16  EF8F  F007         	goto	l3242
  2558  000F1A                     u2200:
  2559  000F1A  EFC6  F007         	goto	l3258
  2560  000F1E                     l3242:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;main.c: 332:         printf("\t%c", msg[i]);
  2564  000F1E  0EF5               	movlw	low (STR_49+1)
  2565  000F20  6FD6               	movwf	printf@fmt& (0+255),b
  2566  000F22  0EFF               	movlw	high (STR_49+1)
  2567  000F24  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2568  000F26  C0E4  F0D8         	movff	userEnter8bit@cmd,?_printf+2
  2569  000F2A  6BD9               	clrf	(?_printf+3)& (0+255),b
  2570  000F2C  ECA9  F00A         	call	_printf	;wreg free
  2571  000F30                     
  2572                           ;main.c: 333:         printf("\r\n");
  2573  000F30  0EE1               	movlw	low userEnter8bit@userNum
  2574  000F32  0100               	movlb	0	; () banked
  2575  000F34  25E5               	addwf	userEnter8bit@i& (0+255),w,b
  2576  000F36  6ED9               	movwf	fsr2l,c
  2577  000F38  6ADA               	clrf	fsr2h,c
  2578  000F3A  0E00               	movlw	high userEnter8bit@userNum
  2579  000F3C  22DA               	addwfc	fsr2h,f,c
  2580  000F3E  C0E4  FFDF         	movff	userEnter8bit@cmd,indf2
  2581  000F42                     
  2582                           ; BSR set to: 0
  2583                           ;main.c: 334:     } while (msg[i - 1] != '\0');
  2584  000F42  2BE5               	incf	userEnter8bit@i& (0+255),f,b
  2585  000F44                     
  2586                           ; BSR set to: 0
  2587  000F44  0E02               	movlw	2
  2588  000F46  65E5               	cpfsgt	userEnter8bit@i& (0+255),b
  2589  000F48  EFA8  F007         	goto	u2211
  2590  000F4C  EFAA  F007         	goto	u2210
  2591  000F50                     u2211:
  2592  000F50  EF76  F007         	goto	l3234
  2593  000F54                     u2210:
  2594  000F54  EFC6  F007         	goto	l3258
  2595  000F58                     l3250:
  2596                           
  2597                           ; BSR set to: 0
  2598  000F58  51E1               	movf	userEnter8bit@userNum& (0+255),w,b
  2599  000F5A  0FD0               	addlw	208
  2600  000F5C  6FE0               	movwf	userEnter8bit@num& (0+255),b
  2601  000F5E  EFDB  F007         	goto	l3260
  2602  000F62                     l3252:
  2603                           
  2604                           ; BSR set to: 0
  2605  000F62  51E1               	movf	userEnter8bit@userNum& (0+255),w,b
  2606  000F64  0D0A               	mullw	10
  2607  000F66  50F3               	movf	243,w,c
  2608  000F68  25E2               	addwf	(userEnter8bit@userNum+1)& (0+255),w,b
  2609  000F6A  0FF0               	addlw	240
  2610  000F6C  6FE0               	movwf	userEnter8bit@num& (0+255),b
  2611  000F6E  EFDB  F007         	goto	l3260
  2612  000F72                     l3254:
  2613                           
  2614                           ; BSR set to: 0
  2615  000F72  51E2               	movf	(userEnter8bit@userNum+1)& (0+255),w,b
  2616  000F74  0D0A               	mullw	10
  2617  000F76  CFF3 F0DE          	movff	prodl,??_userEnter8bit
  2618  000F7A  51E1               	movf	userEnter8bit@userNum& (0+255),w,b
  2619  000F7C  0D64               	mullw	100
  2620  000F7E  50F3               	movf	243,w,c
  2621  000F80  25DE               	addwf	??_userEnter8bit& (0+255),w,b
  2622  000F82  25E3               	addwf	(userEnter8bit@userNum+2)& (0+255),w,b
  2623  000F84  0F30               	addlw	48
  2624  000F86  6FE0               	movwf	userEnter8bit@num& (0+255),b
  2625  000F88  EFDB  F007         	goto	l3260
  2626  000F8C                     l3258:
  2627                           
  2628                           ; BSR set to: 0
  2629  000F8C  51E5               	movf	userEnter8bit@i& (0+255),w,b
  2630  000F8E  6FDE               	movwf	??_userEnter8bit& (0+255),b
  2631  000F90  6BDF               	clrf	(??_userEnter8bit+1)& (0+255),b
  2632                           
  2633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 1, Range of values is 0 to 0
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            4     3 (average)
  2639                           ;	Chosen strategy is simple_byte
  2640  000F92  51DF               	movf	(??_userEnter8bit+1)& (0+255),w,b
  2641  000F94  0A00               	xorlw	0	; case 0
  2642  000F96  B4D8               	btfsc	status,2,c
  2643  000F98  EFD0  F007         	goto	l3508
  2644  000F9C  EFB9  F007         	goto	l3254
  2645  000FA0                     l3508:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ; Switch size 1, requested type "simple"
  2649                           ; Number of cases is 2, Range of values is 1 to 2
  2650                           ; switch strategies available:
  2651                           ; Name         Instructions Cycles
  2652                           ; simple_byte            7     4 (average)
  2653                           ;	Chosen strategy is simple_byte
  2654  000FA0  51DE               	movf	??_userEnter8bit& (0+255),w,b
  2655  000FA2  0A01               	xorlw	1	; case 1
  2656  000FA4  B4D8               	btfsc	status,2,c
  2657  000FA6  EFAC  F007         	goto	l3250
  2658  000FAA  0A03               	xorlw	3	; case 2
  2659  000FAC  B4D8               	btfsc	status,2,c
  2660  000FAE  EFB1  F007         	goto	l3252
  2661  000FB2  EFB9  F007         	goto	l3254
  2662  000FB6                     l3260:
  2663                           
  2664                           ; BSR set to: 0
  2665  000FB6  0E50               	movlw	low (STR_7+49)
  2666  000FB8  6FD6               	movwf	printf@fmt& (0+255),b
  2667  000FBA  0EFD               	movlw	high (STR_7+49)
  2668  000FBC  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2669  000FBE  ECA9  F00A         	call	_printf	;wreg free
  2670  000FC2  0100               	movlb	0	; () banked
  2671  000FC4  51E0               	movf	userEnter8bit@num& (0+255),w,b
  2672  000FC6                     
  2673                           ; BSR set to: 0
  2674  000FC6  0012               	return		;funcret
  2675  000FC8                     __end_of_userEnter8bit:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _EUSART1_is_rx_ready *****************
  2679 ;; Defined at:
  2680 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      _Bool 
  2687 ;; Registers used:
  2688 ;;		wreg
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;;		_userEnter8bit
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text2
  2710  00163E                     __ptext2:
  2711                           	callstack 0
  2712  00163E                     _EUSART1_is_rx_ready:
  2713                           	callstack 25
  2714  00163E                     
  2715                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  2716  00163E  BA9E               	btfsc	158,5,c	;volatile
  2717  001640  EF24  F00B         	goto	u1391
  2718  001644  EF27  F00B         	goto	u1390
  2719  001648                     u1391:
  2720  001648  0E01               	movlw	1
  2721  00164A  EF28  F00B         	goto	u1396
  2722  00164E                     u1390:
  2723  00164E  0E00               	movlw	0
  2724  001650                     u1396:
  2725  001650  0012               	return		;funcret
  2726  001652                     __end_of_EUSART1_is_rx_ready:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _EUSART1_Read *****************
  2730 ;; Defined at:
  2731 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      unsigned char 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    4
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;;		_userEnter8bit
  2757 ;;		_getch
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text3
  2762  0014D4                     __ptext3:
  2763                           	callstack 0
  2764  0014D4                     _EUSART1_Read:
  2765                           	callstack 25
  2766  0014D4                     l494:
  2767                           
  2768                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  2769  0014D4  AA9E               	btfss	158,5,c	;volatile
  2770  0014D6  EF6F  F00A         	goto	u1401
  2771  0014DA  EF71  F00A         	goto	u1400
  2772  0014DE                     u1401:
  2773  0014DE  EF6A  F00A         	goto	l494
  2774  0014E2                     u1400:
  2775  0014E2                     
  2776                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  2777  0014E2  0E00               	movlw	0
  2778  0014E4  0100               	movlb	0	; () banked
  2779  0014E6  6F75               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2780  0014E8                     
  2781                           ; BSR set to: 0
  2782                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  2783  0014E8  A2AB               	btfss	171,1,c	;volatile
  2784  0014EA  EF79  F00A         	goto	u1411
  2785  0014EE  EF7B  F00A         	goto	u1410
  2786  0014F2                     u1411:
  2787  0014F2  EF7D  F00A         	goto	l2540
  2788  0014F6                     u1410:
  2789  0014F6                     
  2790                           ; BSR set to: 0
  2791                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  2792  0014F6  98AB               	bcf	171,4,c	;volatile
  2793                           
  2794                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  2795  0014F8  88AB               	bsf	171,4,c	;volatile
  2796  0014FA                     l2540:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  2800  0014FA  50AE               	movf	174,w,c	;volatile
  2801  0014FC                     
  2802                           ; BSR set to: 0
  2803  0014FC  0012               	return		;funcret
  2804  0014FE                     __end_of_EUSART1_Read:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _decodeIntoASCII *****************
  2808 ;; Defined at:
  2809 ;;		line 350 in file "main.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  msg             2   34[BANK0 ] PTR unsigned char 
  2812 ;;		 -> transmitIRBuffer(32), 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  i               1   38[BANK0 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        5 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:   13
  2831 ;; This function calls:
  2832 ;;		_printf
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text4
  2839  00108A                     __ptext4:
  2840                           	callstack 0
  2841  00108A                     _decodeIntoASCII:
  2842                           	callstack 17
  2843  00108A  0E00               	movlw	0
  2844  00108C  0100               	movlb	0	; () banked
  2845  00108E  6FE2               	movwf	decodeIntoASCII@i& (0+255),b
  2846  001090                     l3272:
  2847                           
  2848                           ; BSR set to: 0
  2849  001090  2BE2               	incf	decodeIntoASCII@i& (0+255),f,b
  2850  001092                     
  2851                           ; BSR set to: 0
  2852  001092  0EEF               	movlw	low STR_47
  2853  001094  6FD6               	movwf	printf@fmt& (0+255),b
  2854  001096  0EFF               	movlw	high STR_47
  2855  001098  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2856  00109A  C0E2  F0D8         	movff	decodeIntoASCII@i,?_printf+2
  2857  00109E  6BD9               	clrf	(?_printf+3)& (0+255),b
  2858  0010A0  ECA9  F00A         	call	_printf	;wreg free
  2859  0010A4  0EF8               	movlw	low STR_48
  2860  0010A6  0100               	movlb	0	; () banked
  2861  0010A8  6FD6               	movwf	printf@fmt& (0+255),b
  2862  0010AA  0EFF               	movlw	high STR_48
  2863  0010AC  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2864  0010AE  51E2               	movf	decodeIntoASCII@i& (0+255),w,b
  2865  0010B0  25DE               	addwf	decodeIntoASCII@msg& (0+255),w,b
  2866  0010B2  6ED9               	movwf	fsr2l,c
  2867  0010B4  0E00               	movlw	0
  2868  0010B6  21DF               	addwfc	(decodeIntoASCII@msg+1)& (0+255),w,b
  2869  0010B8  6EDA               	movwf	fsr2h,c
  2870  0010BA  50DF               	movf	indf2,w,c
  2871  0010BC  6FE0               	movwf	??_decodeIntoASCII& (0+255),b
  2872  0010BE  51E0               	movf	??_decodeIntoASCII& (0+255),w,b
  2873  0010C0  6FD8               	movwf	(?_printf+2)& (0+255),b
  2874  0010C2  6BD9               	clrf	(?_printf+3)& (0+255),b
  2875  0010C4  ECA9  F00A         	call	_printf	;wreg free
  2876  0010C8  0EF4               	movlw	low STR_49
  2877  0010CA  0100               	movlb	0	; () banked
  2878  0010CC  6FD6               	movwf	printf@fmt& (0+255),b
  2879  0010CE  0EFF               	movlw	high STR_49
  2880  0010D0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2881  0010D2  51E2               	movf	decodeIntoASCII@i& (0+255),w,b
  2882  0010D4  25DE               	addwf	decodeIntoASCII@msg& (0+255),w,b
  2883  0010D6  6ED9               	movwf	fsr2l,c
  2884  0010D8  0E00               	movlw	0
  2885  0010DA  21DF               	addwfc	(decodeIntoASCII@msg+1)& (0+255),w,b
  2886  0010DC  6EDA               	movwf	fsr2h,c
  2887  0010DE  50DF               	movf	indf2,w,c
  2888  0010E0  6FE0               	movwf	??_decodeIntoASCII& (0+255),b
  2889  0010E2  51E0               	movf	??_decodeIntoASCII& (0+255),w,b
  2890  0010E4  6FD8               	movwf	(?_printf+2)& (0+255),b
  2891  0010E6  6BD9               	clrf	(?_printf+3)& (0+255),b
  2892  0010E8  ECA9  F00A         	call	_printf	;wreg free
  2893  0010EC  0E50               	movlw	low (STR_7+49)
  2894  0010EE  0100               	movlb	0	; () banked
  2895  0010F0  6FD6               	movwf	printf@fmt& (0+255),b
  2896  0010F2  0EFD               	movlw	high (STR_7+49)
  2897  0010F4  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2898  0010F6  ECA9  F00A         	call	_printf	;wreg free
  2899  0010FA  0100               	movlb	0	; () banked
  2900  0010FC  51E2               	movf	decodeIntoASCII@i& (0+255),w,b
  2901  0010FE  25DE               	addwf	decodeIntoASCII@msg& (0+255),w,b
  2902  001100  6FE0               	movwf	??_decodeIntoASCII& (0+255),b
  2903  001102  0E00               	movlw	0
  2904  001104  21DF               	addwfc	(decodeIntoASCII@msg+1)& (0+255),w,b
  2905  001106  6FE1               	movwf	(??_decodeIntoASCII+1)& (0+255),b
  2906  001108  0EFF               	movlw	255
  2907  00110A  25E0               	addwf	??_decodeIntoASCII& (0+255),w,b
  2908  00110C  6ED9               	movwf	fsr2l,c
  2909  00110E  0EFF               	movlw	255
  2910  001110  21E1               	addwfc	(??_decodeIntoASCII+1)& (0+255),w,b
  2911  001112  6EDA               	movwf	fsr2h,c
  2912  001114  50DF               	movf	indf2,w,c
  2913  001116  A4D8               	btfss	status,2,c
  2914  001118  EF90  F008         	goto	u2221
  2915  00111C  EF92  F008         	goto	u2220
  2916  001120                     u2221:
  2917  001120  EF48  F008         	goto	l3272
  2918  001124                     u2220:
  2919  001124                     
  2920                           ; BSR set to: 0
  2921  001124  0012               	return		;funcret
  2922  001126                     __end_of_decodeIntoASCII:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _printf *****************
  2926 ;; Defined at:
  2927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  2930 ;;		 -> STR_50(3), STR_49(4), STR_48(4), STR_47(5), 
  2931 ;;		 -> STR_46(3), STR_45(3), STR_44(17), STR_43(21), 
  2932 ;;		 -> STR_42(32), STR_41(15), STR_40(10), STR_39(28), 
  2933 ;;		 -> STR_38(10), STR_37(23), STR_36(11), STR_35(11), 
  2934 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  2935 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  2936 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  2937 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  2938 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  2939 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  2940 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  2941 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  2942 ;;		 -> STR_2(37), STR_1(8), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  ap              2   32[BANK0 ] PTR void [1]
  2945 ;;		 -> ?_printf(2), 
  2946 ;;  ret             2    0        int 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2   26[BANK0 ] int 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;Total ram usage:        8 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:   12
  2963 ;; This function calls:
  2964 ;;		_vfprintf
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;;		_userEnter8bit
  2968 ;;		_decodeIntoASCII
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text5
  2973  001552                     __ptext5:
  2974                           	callstack 0
  2975  001552                     _printf:
  2976                           	callstack 17
  2977  001552  0ED8               	movlw	low (?_printf+2)
  2978  001554  0100               	movlb	0	; () banked
  2979  001556  6FDC               	movwf	printf@ap& (0+255),b
  2980  001558  0E00               	movlw	high (?_printf+2)
  2981  00155A  6FDD               	movwf	(printf@ap+1)& (0+255),b
  2982  00155C                     
  2983                           ; BSR set to: 0
  2984  00155C  0E00               	movlw	0
  2985  00155E  6FCE               	movwf	vfprintf@fp& (0+255),b
  2986  001560  0E00               	movlw	0
  2987  001562  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2988  001564  C0D6  F0D0         	movff	printf@fmt,vfprintf@fmt
  2989  001568  C0D7  F0D1         	movff	printf@fmt+1,vfprintf@fmt+1
  2990  00156C  0EDC               	movlw	low printf@ap
  2991  00156E  6FD2               	movwf	vfprintf@ap& (0+255),b
  2992  001570  0E00               	movlw	high printf@ap
  2993  001572  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  2994  001574  ECDE  F008         	call	_vfprintf	;wreg free
  2995  001578  0012               	return		;funcret
  2996  00157A                     __end_of_printf:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _vfprintf *****************
  3000 ;; Defined at:
  3001 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  3004 ;;		 -> NULL(0), 
  3005 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  3006 ;;		 -> STR_50(3), STR_49(4), STR_48(4), STR_47(5), 
  3007 ;;		 -> STR_46(3), STR_45(3), STR_44(17), STR_43(21), 
  3008 ;;		 -> STR_42(32), STR_41(15), STR_40(10), STR_39(28), 
  3009 ;;		 -> STR_38(10), STR_37(23), STR_36(11), STR_35(11), 
  3010 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  3011 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  3012 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  3013 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  3014 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  3015 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  3016 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  3017 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  3018 ;;		 -> STR_2(37), STR_1(8), 
  3019 ;;  ap              2   22[BANK0 ] PTR PTR void 
  3020 ;;		 -> printf@ap(2), 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  cfmt            2   24[BANK0 ] PTR unsigned char 
  3023 ;;		 -> STR_50(3), STR_49(4), STR_48(4), STR_47(5), 
  3024 ;;		 -> STR_46(3), STR_45(3), STR_44(17), STR_43(21), 
  3025 ;;		 -> STR_42(32), STR_41(15), STR_40(10), STR_39(28), 
  3026 ;;		 -> STR_38(10), STR_37(23), STR_36(11), STR_35(11), 
  3027 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  3028 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  3029 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  3030 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  3031 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  3032 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  3033 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  3034 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  3035 ;;		 -> STR_2(37), STR_1(8), 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2   18[BANK0 ] int 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;Total ram usage:        8 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:   11
  3052 ;; This function calls:
  3053 ;;		_vfpfcnvrt
  3054 ;; This function is called by:
  3055 ;;		_printf
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text6
  3060  0011BC                     __ptext6:
  3061                           	callstack 0
  3062  0011BC                     _vfprintf:
  3063                           	callstack 17
  3064  0011BC                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3066  0011BC  C0D0  F0D4         	movff	vfprintf@fmt,vfprintf@cfmt
  3067  0011C0  C0D1  F0D5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3068  0011C4                     
  3069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3070  0011C4  0E00               	movlw	0
  3071  0011C6  0100               	movlb	0	; () banked
  3072  0011C8  6F64               	movwf	(_nout+1)& (0+255),b
  3073  0011CA  0E00               	movlw	0
  3074  0011CC  6F63               	movwf	_nout& (0+255),b
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3077  0011CE  EFFC  F008         	goto	l3220
  3078  0011D2                     l3218:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3082  0011D2  C0CE  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  3083  0011D6  C0CF  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3084  0011DA  0ED4               	movlw	low vfprintf@cfmt
  3085  0011DC  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  3086  0011DE  0E00               	movlw	high vfprintf@cfmt
  3087  0011E0  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3088  0011E2  C0D2  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3089  0011E6  C0D3  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3090  0011EA  EC40  F004         	call	_vfpfcnvrt	;wreg free
  3091  0011EE  503A               	movf	?_vfpfcnvrt^0,w,c
  3092  0011F0  0100               	movlb	0	; () banked
  3093  0011F2  2763               	addwf	_nout& (0+255),f,b
  3094  0011F4  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  3095  0011F6  2364               	addwfc	(_nout+1)& (0+255),f,b
  3096  0011F8                     l3220:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3100  0011F8  C0D4  FFF6         	movff	vfprintf@cfmt,tblptrl
  3101  0011FC  C0D5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3102  001200                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3103  001200  6AF8               	clrf	tblptru,c
  3104  001202                     	endif
  3105  001202                     	if	0	;tblptru may be non-zero
  3106  001202                     	endif
  3107  001202  0008               	tblrd		*
  3108  001204  50F5               	movf	tablat,w,c
  3109  001206  0900               	iorlw	0
  3110  001208  A4D8               	btfss	status,2,c
  3111  00120A  EF09  F009         	goto	u2181
  3112  00120E  EF0B  F009         	goto	u2180
  3113  001212                     u2181:
  3114  001212  EFE9  F008         	goto	l3218
  3115  001216                     u2180:
  3116  001216                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3119  001216  C063  F0CE         	movff	_nout,?_vfprintf
  3120  00121A  C064  F0CF         	movff	_nout+1,?_vfprintf+1
  3121  00121E                     
  3122                           ; BSR set to: 0
  3123  00121E  0012               	return		;funcret
  3124  001220                     __end_of_vfprintf:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _vfpfcnvrt *****************
  3128 ;; Defined at:
  3129 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  3132 ;;		 -> NULL(0), 
  3133 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  3134 ;;		 -> vfprintf@cfmt(2), 
  3135 ;;  ap              2   61[COMRAM] PTR PTR void 
  3136 ;;		 -> printf@ap(2), 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  ll              8   65[COMRAM] long long 
  3139 ;;  llu             8    0        unsigned long long 
  3140 ;;  f               4    0        unsigned long long 
  3141 ;;  vp              3    0        PTR void 
  3142 ;;  ct              3    0        unsigned char [3]
  3143 ;;  cp              3    0        PTR unsigned char 
  3144 ;;  i               2    0        int 
  3145 ;;  done            2    0        int 
  3146 ;;  c               1   73[COMRAM] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2   57[COMRAM] int 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:       17 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:   10
  3163 ;; This function calls:
  3164 ;;		_ctoa
  3165 ;;		_dtoa
  3166 ;;		_fputc
  3167 ;; This function is called by:
  3168 ;;		_vfprintf
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text7
  3173  000880                     __ptext7:
  3174                           	callstack 0
  3175  000880                     _vfpfcnvrt:
  3176                           	callstack 17
  3177  000880                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3179  000880  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3180  000884  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3181  000888  CFDE FFF6          	movff	postinc2,tblptrl
  3182  00088C  CFDD FFF7          	movff	postdec2,tblptrh
  3183  000890                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3184  000890  6AF8               	clrf	tblptru,c
  3185  000892                     	endif
  3186  000892                     	if	0	;tblptru may be non-zero
  3187  000892                     	endif
  3188  000892  0008               	tblrd		*
  3189  000894  50F5               	movf	tablat,w,c
  3190  000896  0A25               	xorlw	37
  3191  000898  A4D8               	btfss	status,2,c
  3192  00089A  EF51  F004         	goto	u2131
  3193  00089E  EF53  F004         	goto	u2130
  3194  0008A2                     u2131:
  3195  0008A2  EF3C  F005         	goto	l3206
  3196  0008A6                     u2130:
  3197  0008A6                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3199  0008A6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3200  0008AA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3201  0008AE  2ADE               	incf	postinc2,f,c
  3202  0008B0  0E00               	movlw	0
  3203  0008B2  22DD               	addwfc	postdec2,f,c
  3204  0008B4                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3206  0008B4  0E00               	movlw	0
  3207  0008B6  6E4C               	movwf	(_width+1)^0,c
  3208  0008B8  0E00               	movlw	0
  3209  0008BA  6E4B               	movwf	_width^0,c
  3210  0008BC  C04B  F04D         	movff	_width,_flags
  3211  0008C0  C04C  F04E         	movff	_width+1,_flags+1
  3212  0008C4                     
  3213                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3214  0008C4  0100               	movlb	0	; () banked
  3215  0008C6  6965               	setf	_prec& (0+255),b
  3216  0008C8  6966               	setf	(_prec+1)& (0+255),b
  3217  0008CA                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3220  0008CA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3221  0008CE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3222  0008D2  CFDE FFF6          	movff	postinc2,tblptrl
  3223  0008D6  CFDD FFF7          	movff	postdec2,tblptrh
  3224  0008DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3225  0008DA  6AF8               	clrf	tblptru,c
  3226  0008DC                     	endif
  3227  0008DC                     	if	0	;tblptru may be non-zero
  3228  0008DC                     	endif
  3229  0008DC  0008               	tblrd		*
  3230  0008DE  50F5               	movf	tablat,w,c
  3231  0008E0  0A63               	xorlw	99
  3232  0008E2  A4D8               	btfss	status,2,c
  3233  0008E4  EF76  F004         	goto	u2141
  3234  0008E8  EF78  F004         	goto	u2140
  3235  0008EC                     u2141:
  3236  0008EC  EF9F  F004         	goto	l3180
  3237  0008F0                     u2140:
  3238  0008F0                     
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3241  0008F0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3242  0008F4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3243  0008F8  2ADE               	incf	postinc2,f,c
  3244  0008FA  0E00               	movlw	0
  3245  0008FC  22DD               	addwfc	postdec2,f,c
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3248  0008FE  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3249  000902  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3250  000906  CFDF F040          	movff	indf2,??_vfpfcnvrt
  3251  00090A  0E02               	movlw	2
  3252  00090C  26DE               	addwf	postinc2,f,c
  3253  00090E  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  3254  000912  0E00               	movlw	0
  3255  000914  22DD               	addwfc	postdec2,f,c
  3256  000916  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3257  00091A  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3258  00091E  50DF               	movf	indf2,w,c
  3259  000920  6E4A               	movwf	vfpfcnvrt@c^0,c
  3260  000922                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3263  000922  C03A  F028         	movff	vfpfcnvrt@fp,ctoa@fp
  3264  000926  C03B  F029         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3265  00092A  C04A  F02A         	movff	vfpfcnvrt@c,ctoa@c
  3266  00092E  EC10  F009         	call	_ctoa	;wreg free
  3267  000932  C028  F03A         	movff	?_ctoa,?_vfpfcnvrt
  3268  000936  C029  F03B         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3269  00093A  EF58  F005         	goto	l1279
  3270  00093E                     l3180:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3274  00093E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3275  000942  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3276  000946  CFDE FFF6          	movff	postinc2,tblptrl
  3277  00094A  CFDD FFF7          	movff	postdec2,tblptrh
  3278  00094E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3279  00094E  6AF8               	clrf	tblptru,c
  3280  000950                     	endif
  3281  000950                     	if	0	;tblptru may be non-zero
  3282  000950                     	endif
  3283  000950  0008               	tblrd		*
  3284  000952  50F5               	movf	tablat,w,c
  3285  000954  0A64               	xorlw	100
  3286  000956  B4D8               	btfsc	status,2,c
  3287  000958  EFB0  F004         	goto	u2151
  3288  00095C  EFB2  F004         	goto	u2150
  3289  000960                     u2151:
  3290  000960  EFC5  F004         	goto	l3184
  3291  000964                     u2150:
  3292  000964                     
  3293                           ; BSR set to: 0
  3294  000964  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3295  000968  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3296  00096C  CFDE FFF6          	movff	postinc2,tblptrl
  3297  000970  CFDD FFF7          	movff	postdec2,tblptrh
  3298  000974                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3299  000974  6AF8               	clrf	tblptru,c
  3300  000976                     	endif
  3301  000976                     	if	0	;tblptru may be non-zero
  3302  000976                     	endif
  3303  000976  0008               	tblrd		*
  3304  000978  50F5               	movf	tablat,w,c
  3305  00097A  0A69               	xorlw	105
  3306  00097C  A4D8               	btfss	status,2,c
  3307  00097E  EFC3  F004         	goto	u2161
  3308  000982  EFC5  F004         	goto	u2160
  3309  000986                     u2161:
  3310  000986  EF05  F005         	goto	l3190
  3311  00098A                     u2160:
  3312  00098A                     l3184:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3316  00098A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3317  00098E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3318  000992  2ADE               	incf	postinc2,f,c
  3319  000994  0E00               	movlw	0
  3320  000996  22DD               	addwfc	postdec2,f,c
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3323  000998  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3324  00099C  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3325  0009A0  CFDF F040          	movff	indf2,??_vfpfcnvrt
  3326  0009A4  0E02               	movlw	2
  3327  0009A6  26DE               	addwf	postinc2,f,c
  3328  0009A8  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  3329  0009AC  0E00               	movlw	0
  3330  0009AE  22DD               	addwfc	postdec2,f,c
  3331  0009B0  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3332  0009B4  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3333  0009B8  CFDE F042          	movff	postinc2,vfpfcnvrt@ll
  3334  0009BC  CFDD F043          	movff	postdec2,vfpfcnvrt@ll+1
  3335  0009C0  0E00               	movlw	0
  3336  0009C2  BE43               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3337  0009C4  0EFF               	movlw	-1
  3338  0009C6  6E44               	movwf	(vfpfcnvrt@ll+2)^0,c
  3339  0009C8  6E45               	movwf	(vfpfcnvrt@ll+3)^0,c
  3340  0009CA  6E46               	movwf	(vfpfcnvrt@ll+4)^0,c
  3341  0009CC  6E47               	movwf	(vfpfcnvrt@ll+5)^0,c
  3342  0009CE  6E48               	movwf	(vfpfcnvrt@ll+6)^0,c
  3343  0009D0  6E49               	movwf	(vfpfcnvrt@ll+7)^0,c
  3344  0009D2                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  3347  0009D2  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  3348  0009D6  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3349  0009DA  C042  F02A         	movff	vfpfcnvrt@ll,dtoa@d
  3350  0009DE  C043  F02B         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3351  0009E2  C044  F02C         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3352  0009E6  C045  F02D         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3353  0009EA  C046  F02E         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3354  0009EE  C047  F02F         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3355  0009F2  C048  F030         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3356  0009F6  C049  F031         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3357  0009FA  ECCF  F002         	call	_dtoa	;wreg free
  3358  0009FE  C028  F03A         	movff	?_dtoa,?_vfpfcnvrt
  3359  000A02  C029  F03B         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3360  000A06  EF58  F005         	goto	l1279
  3361  000A0A                     l3190:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  3365  000A0A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3366  000A0E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3367  000A12  CFDE FFF6          	movff	postinc2,tblptrl
  3368  000A16  CFDD FFF7          	movff	postdec2,tblptrh
  3369  000A1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3370  000A1A  6AF8               	clrf	tblptru,c
  3371  000A1C                     	endif
  3372  000A1C                     	if	0	;tblptru may be non-zero
  3373  000A1C                     	endif
  3374  000A1C  0008               	tblrd		*
  3375  000A1E  50F5               	movf	tablat,w,c
  3376  000A20  0A25               	xorlw	37
  3377  000A22  A4D8               	btfss	status,2,c
  3378  000A24  EF16  F005         	goto	u2171
  3379  000A28  EF18  F005         	goto	u2170
  3380  000A2C                     u2171:
  3381  000A2C  EF2F  F005         	goto	l3200
  3382  000A30                     u2170:
  3383  000A30                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  3386  000A30  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3387  000A34  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3388  000A38  2ADE               	incf	postinc2,f,c
  3389  000A3A  0E00               	movlw	0
  3390  000A3C  22DD               	addwfc	postdec2,f,c
  3391  000A3E                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  3394  000A3E  0E00               	movlw	0
  3395  000A40  6E0E               	movwf	(fputc@c+1)^0,c
  3396  000A42  0E25               	movlw	37
  3397  000A44  6E0D               	movwf	fputc@c^0,c
  3398  000A46  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3399  000A4A  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3400  000A4E  EC93  F008         	call	_fputc	;wreg free
  3401  000A52                     l3196:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  3404  000A52  0E00               	movlw	0
  3405  000A54  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  3406  000A56  0E01               	movlw	1
  3407  000A58  6E3A               	movwf	?_vfpfcnvrt^0,c
  3408  000A5A  EF58  F005         	goto	l1279
  3409  000A5E                     l3200:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  3413  000A5E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3414  000A62  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3415  000A66  2ADE               	incf	postinc2,f,c
  3416  000A68  0E00               	movlw	0
  3417  000A6A  22DD               	addwfc	postdec2,f,c
  3418  000A6C                     
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  3421  000A6C  0E00               	movlw	0
  3422  000A6E  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  3423  000A70  0E00               	movlw	0
  3424  000A72  6E3A               	movwf	?_vfpfcnvrt^0,c
  3425  000A74  EF58  F005         	goto	l1279
  3426  000A78                     l3206:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3429  000A78  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3430  000A7C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3431  000A80  CFDE FFF6          	movff	postinc2,tblptrl
  3432  000A84  CFDD FFF7          	movff	postdec2,tblptrh
  3433  000A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3434  000A88  6AF8               	clrf	tblptru,c
  3435  000A8A                     	endif
  3436  000A8A                     	if	0	;tblptru may be non-zero
  3437  000A8A                     	endif
  3438  000A8A  0008               	tblrd		*
  3439  000A8C  50F5               	movf	tablat,w,c
  3440  000A8E  6E0D               	movwf	fputc@c^0,c
  3441  000A90  6A0E               	clrf	(fputc@c+1)^0,c
  3442  000A92  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3443  000A96  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3444  000A9A  EC93  F008         	call	_fputc	;wreg free
  3445  000A9E                     
  3446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3447  000A9E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3448  000AA2  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3449  000AA6  2ADE               	incf	postinc2,f,c
  3450  000AA8  0E00               	movlw	0
  3451  000AAA  22DD               	addwfc	postdec2,f,c
  3452  000AAC  EF29  F005         	goto	l3196
  3453  000AB0                     l1279:
  3454  000AB0  0012               	return		;funcret
  3455  000AB2                     __end_of_vfpfcnvrt:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _dtoa *****************
  3459 ;; Defined at:
  3460 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  3463 ;;		 -> NULL(0), 
  3464 ;;  d               8   41[COMRAM] long long 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  n               8    8[BANK0 ] long long 
  3467 ;;  i               2   16[BANK0 ] int 
  3468 ;;  s               2    6[BANK0 ] int 
  3469 ;;  w               2    4[BANK0 ] int 
  3470 ;;  p               2    2[BANK0 ] int 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2   39[COMRAM] int 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:       36 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    9
  3487 ;; This function calls:
  3488 ;;		___aodiv
  3489 ;;		___aomod
  3490 ;;		_abs
  3491 ;;		_pad
  3492 ;; This function is called by:
  3493 ;;		_vfpfcnvrt
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text8
  3498  00059E                     __ptext8:
  3499                           	callstack 0
  3500  00059E                     _dtoa:
  3501                           	callstack 17
  3502  00059E                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  3504  00059E  C02A  F0C4         	movff	dtoa@d,dtoa@n
  3505  0005A2  C02B  F0C5         	movff	dtoa@d+1,dtoa@n+1
  3506  0005A6  C02C  F0C6         	movff	dtoa@d+2,dtoa@n+2
  3507  0005AA  C02D  F0C7         	movff	dtoa@d+3,dtoa@n+3
  3508  0005AE  C02E  F0C8         	movff	dtoa@d+4,dtoa@n+4
  3509  0005B2  C02F  F0C9         	movff	dtoa@d+5,dtoa@n+5
  3510  0005B6  C030  F0CA         	movff	dtoa@d+6,dtoa@n+6
  3511  0005BA  C031  F0CB         	movff	dtoa@d+7,dtoa@n+7
  3512  0005BE                     
  3513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  3514  0005BE  0100               	movlb	0	; () banked
  3515  0005C0  BFCB               	btfsc	(dtoa@n+7)& (0+255),7,b
  3516  0005C2  EFE5  F002         	goto	u1981
  3517  0005C6  EFE8  F002         	goto	u1980
  3518  0005CA                     u1981:
  3519  0005CA  0E01               	movlw	1
  3520  0005CC  EFE9  F002         	goto	u1990
  3521  0005D0                     u1980:
  3522  0005D0  0E00               	movlw	0
  3523  0005D2                     u1990:
  3524  0005D2  6FC2               	movwf	dtoa@s& (0+255),b
  3525  0005D4  6BC3               	clrf	(dtoa@s+1)& (0+255),b
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  3528  0005D6  51C2               	movf	dtoa@s& (0+255),w,b
  3529  0005D8  11C3               	iorwf	(dtoa@s+1)& (0+255),w,b
  3530  0005DA  B4D8               	btfsc	status,2,c
  3531  0005DC  EFF2  F002         	goto	u2001
  3532  0005E0  EFF4  F002         	goto	u2000
  3533  0005E4                     u2001:
  3534  0005E4  EF04  F003         	goto	l3108
  3535  0005E8                     u2000:
  3536  0005E8                     
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  3539  0005E8  1FCB               	comf	(dtoa@n+7)& (0+255),f,b
  3540  0005EA  1FCA               	comf	(dtoa@n+6)& (0+255),f,b
  3541  0005EC  1FC9               	comf	(dtoa@n+5)& (0+255),f,b
  3542  0005EE  1FC8               	comf	(dtoa@n+4)& (0+255),f,b
  3543  0005F0  1FC7               	comf	(dtoa@n+3)& (0+255),f,b
  3544  0005F2  1FC6               	comf	(dtoa@n+2)& (0+255),f,b
  3545  0005F4  1FC5               	comf	(dtoa@n+1)& (0+255),f,b
  3546  0005F6  6DC4               	negf	dtoa@n& (0+255),b
  3547  0005F8  0E00               	movlw	0
  3548  0005FA  23C5               	addwfc	(dtoa@n+1)& (0+255),f,b
  3549  0005FC  23C6               	addwfc	(dtoa@n+2)& (0+255),f,b
  3550  0005FE  23C7               	addwfc	(dtoa@n+3)& (0+255),f,b
  3551  000600  23C8               	addwfc	(dtoa@n+4)& (0+255),f,b
  3552  000602  23C9               	addwfc	(dtoa@n+5)& (0+255),f,b
  3553  000604  23CA               	addwfc	(dtoa@n+6)& (0+255),f,b
  3554  000606  23CB               	addwfc	(dtoa@n+7)& (0+255),f,b
  3555  000608                     l3108:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  3559  000608  BF66               	btfsc	(_prec+1)& (0+255),7,b
  3560  00060A  EF09  F003         	goto	u2011
  3561  00060E  EF0B  F003         	goto	u2010
  3562  000612                     u2011:
  3563  000612  EF0C  F003         	goto	l3112
  3564  000616                     u2010:
  3565  000616                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  3568  000616  924D               	bcf	_flags^0,1,c
  3569  000618                     l3112:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  3573  000618  BF66               	btfsc	(_prec+1)& (0+255),7,b
  3574  00061A  EF19  F003         	goto	u2020
  3575  00061E  5166               	movf	(_prec+1)& (0+255),w,b
  3576  000620  E106               	bnz	u2021
  3577  000622  0565               	decf	_prec& (0+255),w,b
  3578  000624  B0D8               	btfsc	status,0,c
  3579  000626  EF17  F003         	goto	u2021
  3580  00062A  EF19  F003         	goto	u2020
  3581  00062E                     u2021:
  3582  00062E  EF1F  F003         	goto	l1254
  3583  000632                     u2020:
  3584  000632                     
  3585                           ; BSR set to: 0
  3586  000632  0E00               	movlw	0
  3587  000634  6FBF               	movwf	(dtoa@p+1)& (0+255),b
  3588  000636  0E01               	movlw	1
  3589  000638  6FBE               	movwf	dtoa@p& (0+255),b
  3590  00063A  EF23  F003         	goto	l1256
  3591  00063E                     l1254:
  3592                           
  3593                           ; BSR set to: 0
  3594  00063E  C065  F0BE         	movff	_prec,dtoa@p
  3595  000642  C066  F0BF         	movff	_prec+1,dtoa@p+1
  3596  000646                     l1256:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  3600  000646  C04B  F0C0         	movff	_width,dtoa@w
  3601  00064A  C04C  F0C1         	movff	_width+1,dtoa@w+1
  3602  00064E                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  3605  00064E  51C2               	movf	dtoa@s& (0+255),w,b
  3606  000650  11C3               	iorwf	(dtoa@s+1)& (0+255),w,b
  3607  000652  A4D8               	btfss	status,2,c
  3608  000654  EF2E  F003         	goto	u2031
  3609  000658  EF30  F003         	goto	u2030
  3610  00065C                     u2031:
  3611  00065C  EF37  F003         	goto	l3120
  3612  000660                     u2030:
  3613  000660                     
  3614                           ; BSR set to: 0
  3615  000660  A44D               	btfss	_flags^0,2,c
  3616  000662  EF35  F003         	goto	u2041
  3617  000666  EF37  F003         	goto	u2040
  3618  00066A                     u2041:
  3619  00066A  EF3A  F003         	goto	l3122
  3620  00066E                     u2040:
  3621  00066E                     l3120:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  3625  00066E  07C0               	decf	dtoa@w& (0+255),f,b
  3626  000670  A0D8               	btfss	status,0,c
  3627  000672  07C1               	decf	(dtoa@w+1)& (0+255),f,b
  3628  000674                     l3122:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  3632  000674  0E00               	movlw	0
  3633  000676  6FCD               	movwf	(dtoa@i+1)& (0+255),b
  3634  000678  0E1F               	movlw	31
  3635  00067A  6FCC               	movwf	dtoa@i& (0+255),b
  3636  00067C                     
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  3639  00067C  0E00               	movlw	0
  3640  00067E  6F9B               	movwf	(_dbuf+31)& (0+255),b
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3643  000680  EFBF  F003         	goto	l3136
  3644  000684                     l3126:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  3648  000684  07CC               	decf	dtoa@i& (0+255),f,b
  3649  000686  A0D8               	btfss	status,0,c
  3650  000688  07CD               	decf	(dtoa@i+1)& (0+255),f,b
  3651  00068A                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  3654  00068A  0E7C               	movlw	low _dbuf
  3655  00068C  25CC               	addwf	dtoa@i& (0+255),w,b
  3656  00068E  6ED9               	movwf	fsr2l,c
  3657  000690  0E00               	movlw	high _dbuf
  3658  000692  21CD               	addwfc	(dtoa@i+1)& (0+255),w,b
  3659  000694  6EDA               	movwf	fsr2h,c
  3660  000696  C0C4  F00B         	movff	dtoa@n,___aomod@dividend
  3661  00069A  C0C5  F00C         	movff	dtoa@n+1,___aomod@dividend+1
  3662  00069E  C0C6  F00D         	movff	dtoa@n+2,___aomod@dividend+2
  3663  0006A2  C0C7  F00E         	movff	dtoa@n+3,___aomod@dividend+3
  3664  0006A6  C0C8  F00F         	movff	dtoa@n+4,___aomod@dividend+4
  3665  0006AA  C0C9  F010         	movff	dtoa@n+5,___aomod@dividend+5
  3666  0006AE  C0CA  F011         	movff	dtoa@n+6,___aomod@dividend+6
  3667  0006B2  C0CB  F012         	movff	dtoa@n+7,___aomod@dividend+7
  3668  0006B6  0E0A               	movlw	10
  3669  0006B8  6E13               	movwf	___aomod@divisor^0,c
  3670  0006BA  0E00               	movlw	0
  3671  0006BC  6E14               	movwf	(___aomod@divisor+1)^0,c
  3672  0006BE  0E00               	movlw	0
  3673  0006C0  6E15               	movwf	(___aomod@divisor+2)^0,c
  3674  0006C2  0E00               	movlw	0
  3675  0006C4  6E16               	movwf	(___aomod@divisor+3)^0,c
  3676  0006C6  0E00               	movlw	0
  3677  0006C8  6E17               	movwf	(___aomod@divisor+4)^0,c
  3678  0006CA  0E00               	movlw	0
  3679  0006CC  6E18               	movwf	(___aomod@divisor+5)^0,c
  3680  0006CE  0E00               	movlw	0
  3681  0006D0  6E19               	movwf	(___aomod@divisor+6)^0,c
  3682  0006D2  0E00               	movlw	0
  3683  0006D4  6E1A               	movwf	(___aomod@divisor+7)^0,c
  3684  0006D6  EC1D  F006         	call	___aomod	;wreg free
  3685  0006DA  C00B  F032         	movff	?___aomod,??_dtoa
  3686  0006DE  C00C  F033         	movff	?___aomod+1,??_dtoa+1
  3687  0006E2  C00D  F034         	movff	?___aomod+2,??_dtoa+2
  3688  0006E6  C00E  F035         	movff	?___aomod+3,??_dtoa+3
  3689  0006EA  C00F  F036         	movff	?___aomod+4,??_dtoa+4
  3690  0006EE  C010  F037         	movff	?___aomod+5,??_dtoa+5
  3691  0006F2  C011  F038         	movff	?___aomod+6,??_dtoa+6
  3692  0006F6  C012  F039         	movff	?___aomod+7,??_dtoa+7
  3693  0006FA  C032  F01D         	movff	??_dtoa,abs@a
  3694  0006FE  C034  F01E         	movff	??_dtoa+2,abs@a+1
  3695  000702  EC8B  F009         	call	_abs	;wreg free
  3696  000706  501D               	movf	?_abs^0,w,c
  3697  000708  0F30               	addlw	48
  3698  00070A  6EDF               	movwf	indf2,c
  3699  00070C                     
  3700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  3701  00070C  0100               	movlb	0	; () banked
  3702  00070E  07BE               	decf	dtoa@p& (0+255),f,b
  3703  000710  A0D8               	btfss	status,0,c
  3704  000712  07BF               	decf	(dtoa@p+1)& (0+255),f,b
  3705  000714                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  3708  000714  07C0               	decf	dtoa@w& (0+255),f,b
  3709  000716  A0D8               	btfss	status,0,c
  3710  000718  07C1               	decf	(dtoa@w+1)& (0+255),f,b
  3711  00071A                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  3714  00071A  C0C4  F00B         	movff	dtoa@n,___aodiv@dividend
  3715  00071E  C0C5  F00C         	movff	dtoa@n+1,___aodiv@dividend+1
  3716  000722  C0C6  F00D         	movff	dtoa@n+2,___aodiv@dividend+2
  3717  000726  C0C7  F00E         	movff	dtoa@n+3,___aodiv@dividend+3
  3718  00072A  C0C8  F00F         	movff	dtoa@n+4,___aodiv@dividend+4
  3719  00072E  C0C9  F010         	movff	dtoa@n+5,___aodiv@dividend+5
  3720  000732  C0CA  F011         	movff	dtoa@n+6,___aodiv@dividend+6
  3721  000736  C0CB  F012         	movff	dtoa@n+7,___aodiv@dividend+7
  3722  00073A  0E0A               	movlw	10
  3723  00073C  6E13               	movwf	___aodiv@divisor^0,c
  3724  00073E  0E00               	movlw	0
  3725  000740  6E14               	movwf	(___aodiv@divisor+1)^0,c
  3726  000742  0E00               	movlw	0
  3727  000744  6E15               	movwf	(___aodiv@divisor+2)^0,c
  3728  000746  0E00               	movlw	0
  3729  000748  6E16               	movwf	(___aodiv@divisor+3)^0,c
  3730  00074A  0E00               	movlw	0
  3731  00074C  6E17               	movwf	(___aodiv@divisor+4)^0,c
  3732  00074E  0E00               	movlw	0
  3733  000750  6E18               	movwf	(___aodiv@divisor+5)^0,c
  3734  000752  0E00               	movlw	0
  3735  000754  6E19               	movwf	(___aodiv@divisor+6)^0,c
  3736  000756  0E00               	movlw	0
  3737  000758  6E1A               	movwf	(___aodiv@divisor+7)^0,c
  3738  00075A  EC59  F005         	call	___aodiv	;wreg free
  3739  00075E  C00B  F0C4         	movff	?___aodiv,dtoa@n
  3740  000762  C00C  F0C5         	movff	?___aodiv+1,dtoa@n+1
  3741  000766  C00D  F0C6         	movff	?___aodiv+2,dtoa@n+2
  3742  00076A  C00E  F0C7         	movff	?___aodiv+3,dtoa@n+3
  3743  00076E  C00F  F0C8         	movff	?___aodiv+4,dtoa@n+4
  3744  000772  C010  F0C9         	movff	?___aodiv+5,dtoa@n+5
  3745  000776  C011  F0CA         	movff	?___aodiv+6,dtoa@n+6
  3746  00077A  C012  F0CB         	movff	?___aodiv+7,dtoa@n+7
  3747  00077E                     l3136:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3750  00077E  0100               	movlb	0	; () banked
  3751  000780  BFCD               	btfsc	(dtoa@i+1)& (0+255),7,b
  3752  000782  EFCB  F003         	goto	u2051
  3753  000786  51CD               	movf	(dtoa@i+1)& (0+255),w,b
  3754  000788  E108               	bnz	u2050
  3755  00078A  05CC               	decf	dtoa@i& (0+255),w,b
  3756  00078C  A0D8               	btfss	status,0,c
  3757  00078E  EFCB  F003         	goto	u2051
  3758  000792  EFCD  F003         	goto	u2050
  3759  000796                     u2051:
  3760  000796  EFFD  F003         	goto	l3146
  3761  00079A                     u2050:
  3762  00079A                     
  3763                           ; BSR set to: 0
  3764  00079A  51C4               	movf	dtoa@n& (0+255),w,b
  3765  00079C  11C5               	iorwf	(dtoa@n+1)& (0+255),w,b
  3766  00079E  11C6               	iorwf	(dtoa@n+2)& (0+255),w,b
  3767  0007A0  11C7               	iorwf	(dtoa@n+3)& (0+255),w,b
  3768  0007A2  11C8               	iorwf	(dtoa@n+4)& (0+255),w,b
  3769  0007A4  11C9               	iorwf	(dtoa@n+5)& (0+255),w,b
  3770  0007A6  11CA               	iorwf	(dtoa@n+6)& (0+255),w,b
  3771  0007A8  11CB               	iorwf	(dtoa@n+7)& (0+255),w,b
  3772  0007AA  A4D8               	btfss	status,2,c
  3773  0007AC  EFDA  F003         	goto	u2061
  3774  0007B0  EFDC  F003         	goto	u2060
  3775  0007B4                     u2061:
  3776  0007B4  EF42  F003         	goto	l3126
  3777  0007B8                     u2060:
  3778  0007B8                     
  3779                           ; BSR set to: 0
  3780  0007B8  BFBF               	btfsc	(dtoa@p+1)& (0+255),7,b
  3781  0007BA  EFE9  F003         	goto	u2070
  3782  0007BE  51BF               	movf	(dtoa@p+1)& (0+255),w,b
  3783  0007C0  E106               	bnz	u2071
  3784  0007C2  05BE               	decf	dtoa@p& (0+255),w,b
  3785  0007C4  B0D8               	btfsc	status,0,c
  3786  0007C6  EFE7  F003         	goto	u2071
  3787  0007CA  EFE9  F003         	goto	u2070
  3788  0007CE                     u2071:
  3789  0007CE  EF42  F003         	goto	l3126
  3790  0007D2                     u2070:
  3791  0007D2                     
  3792                           ; BSR set to: 0
  3793  0007D2  BFC1               	btfsc	(dtoa@w+1)& (0+255),7,b
  3794  0007D4  EFF4  F003         	goto	u2081
  3795  0007D8  51C1               	movf	(dtoa@w+1)& (0+255),w,b
  3796  0007DA  E108               	bnz	u2080
  3797  0007DC  05C0               	decf	dtoa@w& (0+255),w,b
  3798  0007DE  A0D8               	btfss	status,0,c
  3799  0007E0  EFF4  F003         	goto	u2081
  3800  0007E4  EFF6  F003         	goto	u2080
  3801  0007E8                     u2081:
  3802  0007E8  EFFD  F003         	goto	l3146
  3803  0007EC                     u2080:
  3804  0007EC                     
  3805                           ; BSR set to: 0
  3806  0007EC  B24D               	btfsc	_flags^0,1,c
  3807  0007EE  EFFB  F003         	goto	u2091
  3808  0007F2  EFFD  F003         	goto	u2090
  3809  0007F6                     u2091:
  3810  0007F6  EF42  F003         	goto	l3126
  3811  0007FA                     u2090:
  3812  0007FA                     l3146:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  3816  0007FA  51C2               	movf	dtoa@s& (0+255),w,b
  3817  0007FC  11C3               	iorwf	(dtoa@s+1)& (0+255),w,b
  3818  0007FE  A4D8               	btfss	status,2,c
  3819  000800  EF04  F004         	goto	u2101
  3820  000804  EF06  F004         	goto	u2100
  3821  000808                     u2101:
  3822  000808  EF0D  F004         	goto	l3150
  3823  00080C                     u2100:
  3824  00080C                     
  3825                           ; BSR set to: 0
  3826  00080C  A44D               	btfss	_flags^0,2,c
  3827  00080E  EF0B  F004         	goto	u2111
  3828  000812  EF0D  F004         	goto	u2110
  3829  000816                     u2111:
  3830  000816  EF2B  F004         	goto	l3160
  3831  00081A                     u2110:
  3832  00081A                     l3150:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  3836  00081A  07CC               	decf	dtoa@i& (0+255),f,b
  3837  00081C  A0D8               	btfss	status,0,c
  3838  00081E  07CD               	decf	(dtoa@i+1)& (0+255),f,b
  3839  000820                     
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  3842  000820  51C2               	movf	dtoa@s& (0+255),w,b
  3843  000822  11C3               	iorwf	(dtoa@s+1)& (0+255),w,b
  3844  000824  A4D8               	btfss	status,2,c
  3845  000826  EF17  F004         	goto	u2121
  3846  00082A  EF19  F004         	goto	u2120
  3847  00082E                     u2121:
  3848  00082E  EF1F  F004         	goto	l3156
  3849  000832                     u2120:
  3850  000832                     
  3851                           ; BSR set to: 0
  3852  000832  0E00               	movlw	0
  3853  000834  6FBD               	movwf	(_dtoa$1894+1)& (0+255),b
  3854  000836  0E2B               	movlw	43
  3855  000838  6FBC               	movwf	_dtoa$1894& (0+255),b
  3856  00083A  EF23  F004         	goto	l3158
  3857  00083E                     l3156:
  3858                           
  3859                           ; BSR set to: 0
  3860  00083E  0E00               	movlw	0
  3861  000840  6FBD               	movwf	(_dtoa$1894+1)& (0+255),b
  3862  000842  0E2D               	movlw	45
  3863  000844  6FBC               	movwf	_dtoa$1894& (0+255),b
  3864  000846                     l3158:
  3865                           
  3866                           ; BSR set to: 0
  3867  000846  0E7C               	movlw	low _dbuf
  3868  000848  25CC               	addwf	dtoa@i& (0+255),w,b
  3869  00084A  6ED9               	movwf	fsr2l,c
  3870  00084C  0E00               	movlw	high _dbuf
  3871  00084E  21CD               	addwfc	(dtoa@i+1)& (0+255),w,b
  3872  000850  6EDA               	movwf	fsr2h,c
  3873  000852  C0BC  FFDF         	movff	_dtoa$1894,indf2
  3874  000856                     l3160:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  3878  000856  C028  F01D         	movff	dtoa@fp,pad@fp
  3879  00085A  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  3880  00085E  0E7C               	movlw	low _dbuf
  3881  000860  25CC               	addwf	dtoa@i& (0+255),w,b
  3882  000862  6E1F               	movwf	pad@buf^0,c
  3883  000864  0E00               	movlw	high _dbuf
  3884  000866  21CD               	addwfc	(dtoa@i+1)& (0+255),w,b
  3885  000868  6E20               	movwf	(pad@buf+1)^0,c
  3886  00086A  C0C0  F021         	movff	dtoa@w,pad@p
  3887  00086E  C0C1  F022         	movff	dtoa@w+1,pad@p+1
  3888  000872  ECE4  F007         	call	_pad	;wreg free
  3889  000876  C01D  F028         	movff	?_pad,?_dtoa
  3890  00087A  C01E  F029         	movff	?_pad+1,?_dtoa+1
  3891  00087E  0012               	return		;funcret
  3892  000880                     __end_of_dtoa:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _abs *****************
  3896 ;; Defined at:
  3897 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  a               2   28[COMRAM] int 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2   28[COMRAM] int 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    4
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_dtoa
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text9
  3926  001316                     __ptext9:
  3927                           	callstack 0
  3928  001316                     _abs:
  3929                           	callstack 21
  3930  001316  BE1E               	btfsc	(abs@a+1)^0,7,c
  3931  001318  EF98  F009         	goto	u1960
  3932  00131C  501E               	movf	(abs@a+1)^0,w,c
  3933  00131E  E106               	bnz	u1961
  3934  001320  041D               	decf	abs@a^0,w,c
  3935  001322  B0D8               	btfsc	status,0,c
  3936  001324  EF96  F009         	goto	u1961
  3937  001328  EF98  F009         	goto	u1960
  3938  00132C                     u1961:
  3939  00132C  EFA6  F009         	goto	l1293
  3940  001330                     u1960:
  3941  001330  C01D  F01F         	movff	abs@a,??_abs
  3942  001334  C01E  F020         	movff	abs@a+1,??_abs+1
  3943  001338  1E1F               	comf	??_abs^0,f,c
  3944  00133A  1E20               	comf	(??_abs+1)^0,f,c
  3945  00133C  4A1F               	infsnz	??_abs^0,f,c
  3946  00133E  2A20               	incf	(??_abs+1)^0,f,c
  3947  001340  C01F  F01D         	movff	??_abs,?_abs
  3948  001344  C020  F01E         	movff	??_abs+1,?_abs+1
  3949  001348  EFAA  F009         	goto	l1296
  3950  00134C                     l1293:
  3951  00134C  C01D  F01D         	movff	abs@a,?_abs
  3952  001350  C01E  F01E         	movff	abs@a+1,?_abs+1
  3953  001354                     l1296:
  3954  001354  0012               	return		;funcret
  3955  001356                     __end_of_abs:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function ___aomod *****************
  3959 ;; Defined at:
  3960 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  dividend        8   10[COMRAM] long long 
  3963 ;;  divisor         8   18[COMRAM] long long 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  sign            1   27[COMRAM] unsigned char 
  3966 ;;  counter         1   26[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  8   10[COMRAM] long long 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3976 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;Total ram usage:       18 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    4
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_dtoa
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text10
  3991  000C3A                     __ptext10:
  3992                           	callstack 0
  3993  000C3A                     ___aomod:
  3994                           	callstack 21
  3995  000C3A  0E00               	movlw	0
  3996  000C3C  6E1C               	movwf	___aomod@sign^0,c
  3997  000C3E  BE12               	btfsc	(___aomod@dividend+7)^0,7,c
  3998  000C40  EF26  F006         	goto	u1860
  3999  000C44  EF24  F006         	goto	u1861
  4000  000C48                     u1861:
  4001  000C48  EF38  F006         	goto	l3034
  4002  000C4C                     u1860:
  4003  000C4C  1E12               	comf	(___aomod@dividend+7)^0,f,c
  4004  000C4E  1E11               	comf	(___aomod@dividend+6)^0,f,c
  4005  000C50  1E10               	comf	(___aomod@dividend+5)^0,f,c
  4006  000C52  1E0F               	comf	(___aomod@dividend+4)^0,f,c
  4007  000C54  1E0E               	comf	(___aomod@dividend+3)^0,f,c
  4008  000C56  1E0D               	comf	(___aomod@dividend+2)^0,f,c
  4009  000C58  1E0C               	comf	(___aomod@dividend+1)^0,f,c
  4010  000C5A  6C0B               	negf	___aomod@dividend^0,c
  4011  000C5C  0E00               	movlw	0
  4012  000C5E  220C               	addwfc	(___aomod@dividend+1)^0,f,c
  4013  000C60  220D               	addwfc	(___aomod@dividend+2)^0,f,c
  4014  000C62  220E               	addwfc	(___aomod@dividend+3)^0,f,c
  4015  000C64  220F               	addwfc	(___aomod@dividend+4)^0,f,c
  4016  000C66  2210               	addwfc	(___aomod@dividend+5)^0,f,c
  4017  000C68  2211               	addwfc	(___aomod@dividend+6)^0,f,c
  4018  000C6A  2212               	addwfc	(___aomod@dividend+7)^0,f,c
  4019  000C6C  0E01               	movlw	1
  4020  000C6E  6E1C               	movwf	___aomod@sign^0,c
  4021  000C70                     l3034:
  4022  000C70  BE1A               	btfsc	(___aomod@divisor+7)^0,7,c
  4023  000C72  EF3F  F006         	goto	u1870
  4024  000C76  EF3D  F006         	goto	u1871
  4025  000C7A                     u1871:
  4026  000C7A  EF4F  F006         	goto	l3038
  4027  000C7E                     u1870:
  4028  000C7E  1E1A               	comf	(___aomod@divisor+7)^0,f,c
  4029  000C80  1E19               	comf	(___aomod@divisor+6)^0,f,c
  4030  000C82  1E18               	comf	(___aomod@divisor+5)^0,f,c
  4031  000C84  1E17               	comf	(___aomod@divisor+4)^0,f,c
  4032  000C86  1E16               	comf	(___aomod@divisor+3)^0,f,c
  4033  000C88  1E15               	comf	(___aomod@divisor+2)^0,f,c
  4034  000C8A  1E14               	comf	(___aomod@divisor+1)^0,f,c
  4035  000C8C  6C13               	negf	___aomod@divisor^0,c
  4036  000C8E  0E00               	movlw	0
  4037  000C90  2214               	addwfc	(___aomod@divisor+1)^0,f,c
  4038  000C92  2215               	addwfc	(___aomod@divisor+2)^0,f,c
  4039  000C94  2216               	addwfc	(___aomod@divisor+3)^0,f,c
  4040  000C96  2217               	addwfc	(___aomod@divisor+4)^0,f,c
  4041  000C98  2218               	addwfc	(___aomod@divisor+5)^0,f,c
  4042  000C9A  2219               	addwfc	(___aomod@divisor+6)^0,f,c
  4043  000C9C  221A               	addwfc	(___aomod@divisor+7)^0,f,c
  4044  000C9E                     l3038:
  4045  000C9E  5013               	movf	___aomod@divisor^0,w,c
  4046  000CA0  1014               	iorwf	(___aomod@divisor+1)^0,w,c
  4047  000CA2  1015               	iorwf	(___aomod@divisor+2)^0,w,c
  4048  000CA4  1016               	iorwf	(___aomod@divisor+3)^0,w,c
  4049  000CA6  1017               	iorwf	(___aomod@divisor+4)^0,w,c
  4050  000CA8  1018               	iorwf	(___aomod@divisor+5)^0,w,c
  4051  000CAA  1019               	iorwf	(___aomod@divisor+6)^0,w,c
  4052  000CAC  101A               	iorwf	(___aomod@divisor+7)^0,w,c
  4053  000CAE  B4D8               	btfsc	status,2,c
  4054  000CB0  EF5C  F006         	goto	u1881
  4055  000CB4  EF5E  F006         	goto	u1880
  4056  000CB8                     u1881:
  4057  000CB8  EFA6  F006         	goto	l3054
  4058  000CBC                     u1880:
  4059  000CBC  0E01               	movlw	1
  4060  000CBE  6E1B               	movwf	___aomod@counter^0,c
  4061  000CC0  EF6C  F006         	goto	l3044
  4062  000CC4                     l3042:
  4063  000CC4  90D8               	bcf	status,0,c
  4064  000CC6  3613               	rlcf	___aomod@divisor^0,f,c
  4065  000CC8  3614               	rlcf	(___aomod@divisor+1)^0,f,c
  4066  000CCA  3615               	rlcf	(___aomod@divisor+2)^0,f,c
  4067  000CCC  3616               	rlcf	(___aomod@divisor+3)^0,f,c
  4068  000CCE  3617               	rlcf	(___aomod@divisor+4)^0,f,c
  4069  000CD0  3618               	rlcf	(___aomod@divisor+5)^0,f,c
  4070  000CD2  3619               	rlcf	(___aomod@divisor+6)^0,f,c
  4071  000CD4  361A               	rlcf	(___aomod@divisor+7)^0,f,c
  4072  000CD6  2A1B               	incf	___aomod@counter^0,f,c
  4073  000CD8                     l3044:
  4074  000CD8  AE1A               	btfss	(___aomod@divisor+7)^0,7,c
  4075  000CDA  EF71  F006         	goto	u1891
  4076  000CDE  EF73  F006         	goto	u1890
  4077  000CE2                     u1891:
  4078  000CE2  EF62  F006         	goto	l3042
  4079  000CE6                     u1890:
  4080  000CE6                     l3046:
  4081  000CE6  5013               	movf	___aomod@divisor^0,w,c
  4082  000CE8  5C0B               	subwf	___aomod@dividend^0,w,c
  4083  000CEA  5014               	movf	(___aomod@divisor+1)^0,w,c
  4084  000CEC  580C               	subwfb	(___aomod@dividend+1)^0,w,c
  4085  000CEE  5015               	movf	(___aomod@divisor+2)^0,w,c
  4086  000CF0  580D               	subwfb	(___aomod@dividend+2)^0,w,c
  4087  000CF2  5016               	movf	(___aomod@divisor+3)^0,w,c
  4088  000CF4  580E               	subwfb	(___aomod@dividend+3)^0,w,c
  4089  000CF6  5017               	movf	(___aomod@divisor+4)^0,w,c
  4090  000CF8  580F               	subwfb	(___aomod@dividend+4)^0,w,c
  4091  000CFA  5018               	movf	(___aomod@divisor+5)^0,w,c
  4092  000CFC  5810               	subwfb	(___aomod@dividend+5)^0,w,c
  4093  000CFE  5019               	movf	(___aomod@divisor+6)^0,w,c
  4094  000D00  5811               	subwfb	(___aomod@dividend+6)^0,w,c
  4095  000D02  501A               	movf	(___aomod@divisor+7)^0,w,c
  4096  000D04  5812               	subwfb	(___aomod@dividend+7)^0,w,c
  4097  000D06  A0D8               	btfss	status,0,c
  4098  000D08  EF88  F006         	goto	u1901
  4099  000D0C  EF8A  F006         	goto	u1900
  4100  000D10                     u1901:
  4101  000D10  EF9A  F006         	goto	l3050
  4102  000D14                     u1900:
  4103  000D14  5013               	movf	___aomod@divisor^0,w,c
  4104  000D16  5E0B               	subwf	___aomod@dividend^0,f,c
  4105  000D18  5014               	movf	(___aomod@divisor+1)^0,w,c
  4106  000D1A  5A0C               	subwfb	(___aomod@dividend+1)^0,f,c
  4107  000D1C  5015               	movf	(___aomod@divisor+2)^0,w,c
  4108  000D1E  5A0D               	subwfb	(___aomod@dividend+2)^0,f,c
  4109  000D20  5016               	movf	(___aomod@divisor+3)^0,w,c
  4110  000D22  5A0E               	subwfb	(___aomod@dividend+3)^0,f,c
  4111  000D24  5017               	movf	(___aomod@divisor+4)^0,w,c
  4112  000D26  5A0F               	subwfb	(___aomod@dividend+4)^0,f,c
  4113  000D28  5018               	movf	(___aomod@divisor+5)^0,w,c
  4114  000D2A  5A10               	subwfb	(___aomod@dividend+5)^0,f,c
  4115  000D2C  5019               	movf	(___aomod@divisor+6)^0,w,c
  4116  000D2E  5A11               	subwfb	(___aomod@dividend+6)^0,f,c
  4117  000D30  501A               	movf	(___aomod@divisor+7)^0,w,c
  4118  000D32  5A12               	subwfb	(___aomod@dividend+7)^0,f,c
  4119  000D34                     l3050:
  4120  000D34  90D8               	bcf	status,0,c
  4121  000D36  321A               	rrcf	(___aomod@divisor+7)^0,f,c
  4122  000D38  3219               	rrcf	(___aomod@divisor+6)^0,f,c
  4123  000D3A  3218               	rrcf	(___aomod@divisor+5)^0,f,c
  4124  000D3C  3217               	rrcf	(___aomod@divisor+4)^0,f,c
  4125  000D3E  3216               	rrcf	(___aomod@divisor+3)^0,f,c
  4126  000D40  3215               	rrcf	(___aomod@divisor+2)^0,f,c
  4127  000D42  3214               	rrcf	(___aomod@divisor+1)^0,f,c
  4128  000D44  3213               	rrcf	___aomod@divisor^0,f,c
  4129  000D46  2E1B               	decfsz	___aomod@counter^0,f,c
  4130  000D48  EF73  F006         	goto	l3046
  4131  000D4C                     l3054:
  4132  000D4C  501C               	movf	___aomod@sign^0,w,c
  4133  000D4E  B4D8               	btfsc	status,2,c
  4134  000D50  EFAC  F006         	goto	u1911
  4135  000D54  EFAE  F006         	goto	u1910
  4136  000D58                     u1911:
  4137  000D58  EFBE  F006         	goto	l3058
  4138  000D5C                     u1910:
  4139  000D5C  1E12               	comf	(___aomod@dividend+7)^0,f,c
  4140  000D5E  1E11               	comf	(___aomod@dividend+6)^0,f,c
  4141  000D60  1E10               	comf	(___aomod@dividend+5)^0,f,c
  4142  000D62  1E0F               	comf	(___aomod@dividend+4)^0,f,c
  4143  000D64  1E0E               	comf	(___aomod@dividend+3)^0,f,c
  4144  000D66  1E0D               	comf	(___aomod@dividend+2)^0,f,c
  4145  000D68  1E0C               	comf	(___aomod@dividend+1)^0,f,c
  4146  000D6A  6C0B               	negf	___aomod@dividend^0,c
  4147  000D6C  0E00               	movlw	0
  4148  000D6E  220C               	addwfc	(___aomod@dividend+1)^0,f,c
  4149  000D70  220D               	addwfc	(___aomod@dividend+2)^0,f,c
  4150  000D72  220E               	addwfc	(___aomod@dividend+3)^0,f,c
  4151  000D74  220F               	addwfc	(___aomod@dividend+4)^0,f,c
  4152  000D76  2210               	addwfc	(___aomod@dividend+5)^0,f,c
  4153  000D78  2211               	addwfc	(___aomod@dividend+6)^0,f,c
  4154  000D7A  2212               	addwfc	(___aomod@dividend+7)^0,f,c
  4155  000D7C                     l3058:
  4156  000D7C  C00B  F00B         	movff	___aomod@dividend,?___aomod
  4157  000D80  C00C  F00C         	movff	___aomod@dividend+1,?___aomod+1
  4158  000D84  C00D  F00D         	movff	___aomod@dividend+2,?___aomod+2
  4159  000D88  C00E  F00E         	movff	___aomod@dividend+3,?___aomod+3
  4160  000D8C  C00F  F00F         	movff	___aomod@dividend+4,?___aomod+4
  4161  000D90  C010  F010         	movff	___aomod@dividend+5,?___aomod+5
  4162  000D94  C011  F011         	movff	___aomod@dividend+6,?___aomod+6
  4163  000D98  C012  F012         	movff	___aomod@dividend+7,?___aomod+7
  4164  000D9C  0012               	return		;funcret
  4165  000D9E                     __end_of___aomod:
  4166                           	callstack 0
  4167                           
  4168 ;; *************** function ___aodiv *****************
  4169 ;; Defined at:
  4170 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  dividend        8   10[COMRAM] long long 
  4173 ;;  divisor         8   18[COMRAM] long long 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  quotient        8   28[COMRAM] long long 
  4176 ;;  sign            1   27[COMRAM] unsigned char 
  4177 ;;  counter         1   26[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  8   10[COMRAM] long long 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4187 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;Total ram usage:       26 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    4
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_dtoa
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text11
  4202  000AB2                     __ptext11:
  4203                           	callstack 0
  4204  000AB2                     ___aodiv:
  4205                           	callstack 21
  4206  000AB2  0E00               	movlw	0
  4207  000AB4  6E1C               	movwf	___aodiv@sign^0,c
  4208  000AB6  BE1A               	btfsc	(___aodiv@divisor+7)^0,7,c
  4209  000AB8  EF62  F005         	goto	u1790
  4210  000ABC  EF60  F005         	goto	u1791
  4211  000AC0                     u1791:
  4212  000AC0  EF74  F005         	goto	l2990
  4213  000AC4                     u1790:
  4214  000AC4  1E1A               	comf	(___aodiv@divisor+7)^0,f,c
  4215  000AC6  1E19               	comf	(___aodiv@divisor+6)^0,f,c
  4216  000AC8  1E18               	comf	(___aodiv@divisor+5)^0,f,c
  4217  000ACA  1E17               	comf	(___aodiv@divisor+4)^0,f,c
  4218  000ACC  1E16               	comf	(___aodiv@divisor+3)^0,f,c
  4219  000ACE  1E15               	comf	(___aodiv@divisor+2)^0,f,c
  4220  000AD0  1E14               	comf	(___aodiv@divisor+1)^0,f,c
  4221  000AD2  6C13               	negf	___aodiv@divisor^0,c
  4222  000AD4  0E00               	movlw	0
  4223  000AD6  2214               	addwfc	(___aodiv@divisor+1)^0,f,c
  4224  000AD8  2215               	addwfc	(___aodiv@divisor+2)^0,f,c
  4225  000ADA  2216               	addwfc	(___aodiv@divisor+3)^0,f,c
  4226  000ADC  2217               	addwfc	(___aodiv@divisor+4)^0,f,c
  4227  000ADE  2218               	addwfc	(___aodiv@divisor+5)^0,f,c
  4228  000AE0  2219               	addwfc	(___aodiv@divisor+6)^0,f,c
  4229  000AE2  221A               	addwfc	(___aodiv@divisor+7)^0,f,c
  4230  000AE4  0E01               	movlw	1
  4231  000AE6  6E1C               	movwf	___aodiv@sign^0,c
  4232  000AE8                     l2990:
  4233  000AE8  BE12               	btfsc	(___aodiv@dividend+7)^0,7,c
  4234  000AEA  EF7B  F005         	goto	u1800
  4235  000AEE  EF79  F005         	goto	u1801
  4236  000AF2                     u1801:
  4237  000AF2  EF8D  F005         	goto	l2996
  4238  000AF6                     u1800:
  4239  000AF6  1E12               	comf	(___aodiv@dividend+7)^0,f,c
  4240  000AF8  1E11               	comf	(___aodiv@dividend+6)^0,f,c
  4241  000AFA  1E10               	comf	(___aodiv@dividend+5)^0,f,c
  4242  000AFC  1E0F               	comf	(___aodiv@dividend+4)^0,f,c
  4243  000AFE  1E0E               	comf	(___aodiv@dividend+3)^0,f,c
  4244  000B00  1E0D               	comf	(___aodiv@dividend+2)^0,f,c
  4245  000B02  1E0C               	comf	(___aodiv@dividend+1)^0,f,c
  4246  000B04  6C0B               	negf	___aodiv@dividend^0,c
  4247  000B06  0E00               	movlw	0
  4248  000B08  220C               	addwfc	(___aodiv@dividend+1)^0,f,c
  4249  000B0A  220D               	addwfc	(___aodiv@dividend+2)^0,f,c
  4250  000B0C  220E               	addwfc	(___aodiv@dividend+3)^0,f,c
  4251  000B0E  220F               	addwfc	(___aodiv@dividend+4)^0,f,c
  4252  000B10  2210               	addwfc	(___aodiv@dividend+5)^0,f,c
  4253  000B12  2211               	addwfc	(___aodiv@dividend+6)^0,f,c
  4254  000B14  2212               	addwfc	(___aodiv@dividend+7)^0,f,c
  4255  000B16  0E01               	movlw	1
  4256  000B18  1A1C               	xorwf	___aodiv@sign^0,f,c
  4257  000B1A                     l2996:
  4258  000B1A  EE20  F01D         	lfsr	2,___aodiv@quotient
  4259  000B1E  0E07               	movlw	7
  4260  000B20                     u1811:
  4261  000B20  6ADE               	clrf	postinc2,c
  4262  000B22  06E8               	decf	wreg,f,c
  4263  000B24  E2FD               	bc	u1811
  4264  000B26  5013               	movf	___aodiv@divisor^0,w,c
  4265  000B28  1014               	iorwf	(___aodiv@divisor+1)^0,w,c
  4266  000B2A  1015               	iorwf	(___aodiv@divisor+2)^0,w,c
  4267  000B2C  1016               	iorwf	(___aodiv@divisor+3)^0,w,c
  4268  000B2E  1017               	iorwf	(___aodiv@divisor+4)^0,w,c
  4269  000B30  1018               	iorwf	(___aodiv@divisor+5)^0,w,c
  4270  000B32  1019               	iorwf	(___aodiv@divisor+6)^0,w,c
  4271  000B34  101A               	iorwf	(___aodiv@divisor+7)^0,w,c
  4272  000B36  B4D8               	btfsc	status,2,c
  4273  000B38  EFA0  F005         	goto	u1821
  4274  000B3C  EFA2  F005         	goto	u1820
  4275  000B40                     u1821:
  4276  000B40  EFF4  F005         	goto	l3018
  4277  000B44                     u1820:
  4278  000B44  0E01               	movlw	1
  4279  000B46  6E1B               	movwf	___aodiv@counter^0,c
  4280  000B48  EFB0  F005         	goto	l3004
  4281  000B4C                     l3002:
  4282  000B4C  90D8               	bcf	status,0,c
  4283  000B4E  3613               	rlcf	___aodiv@divisor^0,f,c
  4284  000B50  3614               	rlcf	(___aodiv@divisor+1)^0,f,c
  4285  000B52  3615               	rlcf	(___aodiv@divisor+2)^0,f,c
  4286  000B54  3616               	rlcf	(___aodiv@divisor+3)^0,f,c
  4287  000B56  3617               	rlcf	(___aodiv@divisor+4)^0,f,c
  4288  000B58  3618               	rlcf	(___aodiv@divisor+5)^0,f,c
  4289  000B5A  3619               	rlcf	(___aodiv@divisor+6)^0,f,c
  4290  000B5C  361A               	rlcf	(___aodiv@divisor+7)^0,f,c
  4291  000B5E  2A1B               	incf	___aodiv@counter^0,f,c
  4292  000B60                     l3004:
  4293  000B60  AE1A               	btfss	(___aodiv@divisor+7)^0,7,c
  4294  000B62  EFB5  F005         	goto	u1831
  4295  000B66  EFB7  F005         	goto	u1830
  4296  000B6A                     u1831:
  4297  000B6A  EFA6  F005         	goto	l3002
  4298  000B6E                     u1830:
  4299  000B6E                     l3006:
  4300  000B6E  90D8               	bcf	status,0,c
  4301  000B70  361D               	rlcf	___aodiv@quotient^0,f,c
  4302  000B72  361E               	rlcf	(___aodiv@quotient+1)^0,f,c
  4303  000B74  361F               	rlcf	(___aodiv@quotient+2)^0,f,c
  4304  000B76  3620               	rlcf	(___aodiv@quotient+3)^0,f,c
  4305  000B78  3621               	rlcf	(___aodiv@quotient+4)^0,f,c
  4306  000B7A  3622               	rlcf	(___aodiv@quotient+5)^0,f,c
  4307  000B7C  3623               	rlcf	(___aodiv@quotient+6)^0,f,c
  4308  000B7E  3624               	rlcf	(___aodiv@quotient+7)^0,f,c
  4309  000B80  5013               	movf	___aodiv@divisor^0,w,c
  4310  000B82  5C0B               	subwf	___aodiv@dividend^0,w,c
  4311  000B84  5014               	movf	(___aodiv@divisor+1)^0,w,c
  4312  000B86  580C               	subwfb	(___aodiv@dividend+1)^0,w,c
  4313  000B88  5015               	movf	(___aodiv@divisor+2)^0,w,c
  4314  000B8A  580D               	subwfb	(___aodiv@dividend+2)^0,w,c
  4315  000B8C  5016               	movf	(___aodiv@divisor+3)^0,w,c
  4316  000B8E  580E               	subwfb	(___aodiv@dividend+3)^0,w,c
  4317  000B90  5017               	movf	(___aodiv@divisor+4)^0,w,c
  4318  000B92  580F               	subwfb	(___aodiv@dividend+4)^0,w,c
  4319  000B94  5018               	movf	(___aodiv@divisor+5)^0,w,c
  4320  000B96  5810               	subwfb	(___aodiv@dividend+5)^0,w,c
  4321  000B98  5019               	movf	(___aodiv@divisor+6)^0,w,c
  4322  000B9A  5811               	subwfb	(___aodiv@dividend+6)^0,w,c
  4323  000B9C  501A               	movf	(___aodiv@divisor+7)^0,w,c
  4324  000B9E  5812               	subwfb	(___aodiv@dividend+7)^0,w,c
  4325  000BA0  A0D8               	btfss	status,0,c
  4326  000BA2  EFD5  F005         	goto	u1841
  4327  000BA6  EFD7  F005         	goto	u1840
  4328  000BAA                     u1841:
  4329  000BAA  EFE8  F005         	goto	l3014
  4330  000BAE                     u1840:
  4331  000BAE  5013               	movf	___aodiv@divisor^0,w,c
  4332  000BB0  5E0B               	subwf	___aodiv@dividend^0,f,c
  4333  000BB2  5014               	movf	(___aodiv@divisor+1)^0,w,c
  4334  000BB4  5A0C               	subwfb	(___aodiv@dividend+1)^0,f,c
  4335  000BB6  5015               	movf	(___aodiv@divisor+2)^0,w,c
  4336  000BB8  5A0D               	subwfb	(___aodiv@dividend+2)^0,f,c
  4337  000BBA  5016               	movf	(___aodiv@divisor+3)^0,w,c
  4338  000BBC  5A0E               	subwfb	(___aodiv@dividend+3)^0,f,c
  4339  000BBE  5017               	movf	(___aodiv@divisor+4)^0,w,c
  4340  000BC0  5A0F               	subwfb	(___aodiv@dividend+4)^0,f,c
  4341  000BC2  5018               	movf	(___aodiv@divisor+5)^0,w,c
  4342  000BC4  5A10               	subwfb	(___aodiv@dividend+5)^0,f,c
  4343  000BC6  5019               	movf	(___aodiv@divisor+6)^0,w,c
  4344  000BC8  5A11               	subwfb	(___aodiv@dividend+6)^0,f,c
  4345  000BCA  501A               	movf	(___aodiv@divisor+7)^0,w,c
  4346  000BCC  5A12               	subwfb	(___aodiv@dividend+7)^0,f,c
  4347  000BCE  801D               	bsf	___aodiv@quotient^0,0,c
  4348  000BD0                     l3014:
  4349  000BD0  90D8               	bcf	status,0,c
  4350  000BD2  321A               	rrcf	(___aodiv@divisor+7)^0,f,c
  4351  000BD4  3219               	rrcf	(___aodiv@divisor+6)^0,f,c
  4352  000BD6  3218               	rrcf	(___aodiv@divisor+5)^0,f,c
  4353  000BD8  3217               	rrcf	(___aodiv@divisor+4)^0,f,c
  4354  000BDA  3216               	rrcf	(___aodiv@divisor+3)^0,f,c
  4355  000BDC  3215               	rrcf	(___aodiv@divisor+2)^0,f,c
  4356  000BDE  3214               	rrcf	(___aodiv@divisor+1)^0,f,c
  4357  000BE0  3213               	rrcf	___aodiv@divisor^0,f,c
  4358  000BE2  2E1B               	decfsz	___aodiv@counter^0,f,c
  4359  000BE4  EFB7  F005         	goto	l3006
  4360  000BE8                     l3018:
  4361  000BE8  501C               	movf	___aodiv@sign^0,w,c
  4362  000BEA  B4D8               	btfsc	status,2,c
  4363  000BEC  EFFA  F005         	goto	u1851
  4364  000BF0  EFFC  F005         	goto	u1850
  4365  000BF4                     u1851:
  4366  000BF4  EF0C  F006         	goto	l3022
  4367  000BF8                     u1850:
  4368  000BF8  1E24               	comf	(___aodiv@quotient+7)^0,f,c
  4369  000BFA  1E23               	comf	(___aodiv@quotient+6)^0,f,c
  4370  000BFC  1E22               	comf	(___aodiv@quotient+5)^0,f,c
  4371  000BFE  1E21               	comf	(___aodiv@quotient+4)^0,f,c
  4372  000C00  1E20               	comf	(___aodiv@quotient+3)^0,f,c
  4373  000C02  1E1F               	comf	(___aodiv@quotient+2)^0,f,c
  4374  000C04  1E1E               	comf	(___aodiv@quotient+1)^0,f,c
  4375  000C06  6C1D               	negf	___aodiv@quotient^0,c
  4376  000C08  0E00               	movlw	0
  4377  000C0A  221E               	addwfc	(___aodiv@quotient+1)^0,f,c
  4378  000C0C  221F               	addwfc	(___aodiv@quotient+2)^0,f,c
  4379  000C0E  2220               	addwfc	(___aodiv@quotient+3)^0,f,c
  4380  000C10  2221               	addwfc	(___aodiv@quotient+4)^0,f,c
  4381  000C12  2222               	addwfc	(___aodiv@quotient+5)^0,f,c
  4382  000C14  2223               	addwfc	(___aodiv@quotient+6)^0,f,c
  4383  000C16  2224               	addwfc	(___aodiv@quotient+7)^0,f,c
  4384  000C18                     l3022:
  4385  000C18  C01D  F00B         	movff	___aodiv@quotient,?___aodiv
  4386  000C1C  C01E  F00C         	movff	___aodiv@quotient+1,?___aodiv+1
  4387  000C20  C01F  F00D         	movff	___aodiv@quotient+2,?___aodiv+2
  4388  000C24  C020  F00E         	movff	___aodiv@quotient+3,?___aodiv+3
  4389  000C28  C021  F00F         	movff	___aodiv@quotient+4,?___aodiv+4
  4390  000C2C  C022  F010         	movff	___aodiv@quotient+5,?___aodiv+5
  4391  000C30  C023  F011         	movff	___aodiv@quotient+6,?___aodiv+6
  4392  000C34  C024  F012         	movff	___aodiv@quotient+7,?___aodiv+7
  4393  000C38  0012               	return		;funcret
  4394  000C3A                     __end_of___aodiv:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _ctoa *****************
  4398 ;; Defined at:
  4399 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  4402 ;;		 -> NULL(0), 
  4403 ;;  c               1   41[COMRAM] unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  w               2   42[COMRAM] int 
  4406 ;;  l               2    0        int 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  2   39[COMRAM] int 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        5 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    9
  4423 ;; This function calls:
  4424 ;;		_pad
  4425 ;; This function is called by:
  4426 ;;		_vfpfcnvrt
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text12
  4431  001220                     __ptext12:
  4432                           	callstack 0
  4433  001220                     _ctoa:
  4434                           	callstack 17
  4435  001220                     
  4436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4437  001220  504B               	movf	_width^0,w,c
  4438  001222  104C               	iorwf	(_width+1)^0,w,c
  4439  001224  A4D8               	btfss	status,2,c
  4440  001226  EF17  F009         	goto	u1971
  4441  00122A  EF19  F009         	goto	u1970
  4442  00122E                     u1971:
  4443  00122E  EF1F  F009         	goto	l3092
  4444  001232                     u1970:
  4445  001232  C04B  F02B         	movff	_width,ctoa@w
  4446  001236  C04C  F02C         	movff	_width+1,ctoa@w+1
  4447  00123A  EF25  F009         	goto	l3094
  4448  00123E                     l3092:
  4449  00123E  0EFF               	movlw	255
  4450  001240  244B               	addwf	_width^0,w,c
  4451  001242  6E2B               	movwf	ctoa@w^0,c
  4452  001244  0EFF               	movlw	255
  4453  001246  204C               	addwfc	(_width+1)^0,w,c
  4454  001248  6E2C               	movwf	(ctoa@w+1)^0,c
  4455  00124A                     l3094:
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  4458  00124A  C02A  F07C         	movff	ctoa@c,_dbuf
  4459  00124E                     
  4460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  4461  00124E  0E00               	movlw	0
  4462  001250  0100               	movlb	0	; () banked
  4463  001252  6F7D               	movwf	(_dbuf+1)& (0+255),b
  4464  001254                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  4467  001254  C028  F01D         	movff	ctoa@fp,pad@fp
  4468  001258  C029  F01E         	movff	ctoa@fp+1,pad@fp+1
  4469  00125C  0E7C               	movlw	low _dbuf
  4470  00125E  6E1F               	movwf	pad@buf^0,c
  4471  001260  0E00               	movlw	high _dbuf
  4472  001262  6E20               	movwf	(pad@buf+1)^0,c
  4473  001264  C02B  F021         	movff	ctoa@w,pad@p
  4474  001268  C02C  F022         	movff	ctoa@w+1,pad@p+1
  4475  00126C  ECE4  F007         	call	_pad	;wreg free
  4476  001270  C01D  F028         	movff	?_pad,?_ctoa
  4477  001274  C01E  F029         	movff	?_pad+1,?_ctoa+1
  4478  001278  0012               	return		;funcret
  4479  00127A                     __end_of_ctoa:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _pad *****************
  4483 ;; Defined at:
  4484 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4487 ;;		 -> NULL(0), 
  4488 ;;  buf             2   30[COMRAM] PTR unsigned char 
  4489 ;;		 -> dbuf(32), 
  4490 ;;  p               2   32[COMRAM] int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  w               2   37[COMRAM] int 
  4493 ;;  i               2   35[COMRAM] int 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2   28[COMRAM] int 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4503 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;Total ram usage:       11 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    8
  4510 ;; This function calls:
  4511 ;;		_fputc
  4512 ;;		_fputs
  4513 ;;		_strlen
  4514 ;; This function is called by:
  4515 ;;		_ctoa
  4516 ;;		_dtoa
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text13
  4521  000FC8                     __ptext13:
  4522                           	callstack 0
  4523  000FC8                     _pad:
  4524                           	callstack 17
  4525  000FC8                     
  4526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4527  000FC8  A04D               	btfss	_flags^0,0,c
  4528  000FCA  EFE9  F007         	goto	u1921
  4529  000FCE  EFEB  F007         	goto	u1920
  4530  000FD2                     u1921:
  4531  000FD2  EFF5  F007         	goto	l3066
  4532  000FD6                     u1920:
  4533  000FD6                     
  4534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4535  000FD6  C01F  F016         	movff	pad@buf,fputs@s
  4536  000FDA  C020  F017         	movff	pad@buf+1,fputs@s+1
  4537  000FDE  C01D  F018         	movff	pad@fp,fputs@fp
  4538  000FE2  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  4539  000FE6  EC69  F009         	call	_fputs	;wreg free
  4540  000FEA                     l3066:
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4543  000FEA  BE22               	btfsc	(pad@p+1)^0,7,c
  4544  000FEC  EFFA  F007         	goto	u1931
  4545  000FF0  EFFC  F007         	goto	u1930
  4546  000FF4                     u1931:
  4547  000FF4  EF02  F008         	goto	l3070
  4548  000FF8                     u1930:
  4549  000FF8  C021  F026         	movff	pad@p,pad@w
  4550  000FFC  C022  F027         	movff	pad@p+1,pad@w+1
  4551  001000  EF06  F008         	goto	l1236
  4552  001004                     l3070:
  4553  001004  0E00               	movlw	0
  4554  001006  6E27               	movwf	(pad@w+1)^0,c
  4555  001008  0E00               	movlw	0
  4556  00100A  6E26               	movwf	pad@w^0,c
  4557  00100C                     l1236:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4560  00100C  0E00               	movlw	0
  4561  00100E  6E25               	movwf	(pad@i+1)^0,c
  4562  001010  0E00               	movlw	0
  4563  001012  6E24               	movwf	pad@i^0,c
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4566  001014  EF18  F008         	goto	l3076
  4567  001018                     l3072:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4570  001018  0E00               	movlw	0
  4571  00101A  6E0E               	movwf	(fputc@c+1)^0,c
  4572  00101C  0E20               	movlw	32
  4573  00101E  6E0D               	movwf	fputc@c^0,c
  4574  001020  C01D  F00F         	movff	pad@fp,fputc@fp
  4575  001024  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  4576  001028  EC93  F008         	call	_fputc	;wreg free
  4577  00102C                     
  4578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4579  00102C  4A24               	infsnz	pad@i^0,f,c
  4580  00102E  2A25               	incf	(pad@i+1)^0,f,c
  4581  001030                     l3076:
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4584  001030  5026               	movf	pad@w^0,w,c
  4585  001032  5C24               	subwf	pad@i^0,w,c
  4586  001034  5025               	movf	(pad@i+1)^0,w,c
  4587  001036  0A80               	xorlw	128
  4588  001038  6E23               	movwf	??_pad^0,c
  4589  00103A  5027               	movf	(pad@w+1)^0,w,c
  4590  00103C  0A80               	xorlw	128
  4591  00103E  5823               	subwfb	??_pad^0,w,c
  4592  001040  A0D8               	btfss	status,0,c
  4593  001042  EF25  F008         	goto	u1941
  4594  001046  EF27  F008         	goto	u1940
  4595  00104A                     u1941:
  4596  00104A  EF0C  F008         	goto	l3072
  4597  00104E                     u1940:
  4598  00104E                     
  4599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4600  00104E  B04D               	btfsc	_flags^0,0,c
  4601  001050  EF2C  F008         	goto	u1951
  4602  001054  EF2E  F008         	goto	u1950
  4603  001058                     u1951:
  4604  001058  EF38  F008         	goto	l3080
  4605  00105C                     u1950:
  4606  00105C                     
  4607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4608  00105C  C01F  F016         	movff	pad@buf,fputs@s
  4609  001060  C020  F017         	movff	pad@buf+1,fputs@s+1
  4610  001064  C01D  F018         	movff	pad@fp,fputs@fp
  4611  001068  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  4612  00106C  EC69  F009         	call	_fputs	;wreg free
  4613  001070                     l3080:
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4616  001070  C01F  F00B         	movff	pad@buf,strlen@s
  4617  001074  C020  F00C         	movff	pad@buf+1,strlen@s+1
  4618  001078  EC09  F00A         	call	_strlen	;wreg free
  4619  00107C  5026               	movf	pad@w^0,w,c
  4620  00107E  240B               	addwf	?_strlen^0,w,c
  4621  001080  6E1D               	movwf	?_pad^0,c
  4622  001082  5027               	movf	(pad@w+1)^0,w,c
  4623  001084  200C               	addwfc	(?_strlen+1)^0,w,c
  4624  001086  6E1E               	movwf	(?_pad+1)^0,c
  4625  001088  0012               	return		;funcret
  4626  00108A                     __end_of_pad:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _strlen *****************
  4630 ;; Defined at:
  4631 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4634 ;;		 -> dbuf(32), 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  a               2   12[COMRAM] PTR const unsigned char 
  4637 ;;		 -> dbuf(32), 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2   10[COMRAM] unsigned int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        4 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    4
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_pad
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text14
  4662  001412                     __ptext14:
  4663                           	callstack 0
  4664  001412                     _strlen:
  4665                           	callstack 20
  4666  001412  C00B  F00D         	movff	strlen@s,strlen@a
  4667  001416  C00C  F00E         	movff	strlen@s+1,strlen@a+1
  4668  00141A  EF11  F00A         	goto	l2976
  4669  00141E                     l2974:
  4670  00141E  4A0B               	infsnz	strlen@s^0,f,c
  4671  001420  2A0C               	incf	(strlen@s+1)^0,f,c
  4672  001422                     l2976:
  4673  001422  C00B  FFD9         	movff	strlen@s,fsr2l
  4674  001426  C00C  FFDA         	movff	strlen@s+1,fsr2h
  4675  00142A  50DF               	movf	indf2,w,c
  4676  00142C  A4D8               	btfss	status,2,c
  4677  00142E  EF1B  F00A         	goto	u1781
  4678  001432  EF1D  F00A         	goto	u1780
  4679  001436                     u1781:
  4680  001436  EF0F  F00A         	goto	l2974
  4681  00143A                     u1780:
  4682  00143A  500D               	movf	strlen@a^0,w,c
  4683  00143C  5C0B               	subwf	strlen@s^0,w,c
  4684  00143E  6E0B               	movwf	?_strlen^0,c
  4685  001440  500E               	movf	(strlen@a+1)^0,w,c
  4686  001442  580C               	subwfb	(strlen@s+1)^0,w,c
  4687  001444  6E0C               	movwf	(?_strlen+1)^0,c
  4688  001446  0012               	return		;funcret
  4689  001448                     __end_of_strlen:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function _fputs *****************
  4693 ;; Defined at:
  4694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  s               2   21[COMRAM] PTR const unsigned char 
  4697 ;;		 -> dbuf(32), 
  4698 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  4699 ;;		 -> NULL(0), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  i               2   26[COMRAM] int 
  4702 ;;  c               1   25[COMRAM] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  2   21[COMRAM] int 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;Total ram usage:        7 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    7
  4719 ;; This function calls:
  4720 ;;		_fputc
  4721 ;; This function is called by:
  4722 ;;		_pad
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text15
  4727  0012D2                     __ptext15:
  4728                           	callstack 0
  4729  0012D2                     _fputs:
  4730                           	callstack 17
  4731  0012D2  0E00               	movlw	0
  4732  0012D4  6E1C               	movwf	(fputs@i+1)^0,c
  4733  0012D6  0E00               	movlw	0
  4734  0012D8  6E1B               	movwf	fputs@i^0,c
  4735  0012DA  EF7A  F009         	goto	l2970
  4736  0012DE                     l2966:
  4737  0012DE  C01A  F00D         	movff	fputs@c,fputc@c
  4738  0012E2  6A0E               	clrf	(fputc@c+1)^0,c
  4739  0012E4  C018  F00F         	movff	fputs@fp,fputc@fp
  4740  0012E8  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  4741  0012EC  EC93  F008         	call	_fputc	;wreg free
  4742  0012F0  4A1B               	infsnz	fputs@i^0,f,c
  4743  0012F2  2A1C               	incf	(fputs@i+1)^0,f,c
  4744  0012F4                     l2970:
  4745  0012F4  501B               	movf	fputs@i^0,w,c
  4746  0012F6  2416               	addwf	fputs@s^0,w,c
  4747  0012F8  6ED9               	movwf	fsr2l,c
  4748  0012FA  501C               	movf	(fputs@i+1)^0,w,c
  4749  0012FC  2017               	addwfc	(fputs@s+1)^0,w,c
  4750  0012FE  6EDA               	movwf	fsr2h,c
  4751  001300  50DF               	movf	indf2,w,c
  4752  001302  6E1A               	movwf	fputs@c^0,c
  4753  001304  501A               	movf	fputs@c^0,w,c
  4754  001306  A4D8               	btfss	status,2,c
  4755  001308  EF88  F009         	goto	u1771
  4756  00130C  EF8A  F009         	goto	u1770
  4757  001310                     u1771:
  4758  001310  EF6F  F009         	goto	l2966
  4759  001314                     u1770:
  4760  001314  0012               	return		;funcret
  4761  001316                     __end_of_fputs:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _fputc *****************
  4765 ;; Defined at:
  4766 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  c               2   12[COMRAM] int 
  4769 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4770 ;;		 -> NULL(0), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2   12[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        9 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    6
  4789 ;; This function calls:
  4790 ;;		_putch
  4791 ;; This function is called by:
  4792 ;;		_pad
  4793 ;;		_vfpfcnvrt
  4794 ;;		_fputs
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text16
  4799  001126                     __ptext16:
  4800                           	callstack 0
  4801  001126                     _fputc:
  4802                           	callstack 20
  4803  001126  500F               	movf	fputc@fp^0,w,c
  4804  001128  1010               	iorwf	(fputc@fp+1)^0,w,c
  4805  00112A  B4D8               	btfsc	status,2,c
  4806  00112C  EF9A  F008         	goto	u1731
  4807  001130  EF9C  F008         	goto	u1730
  4808  001134                     u1731:
  4809  001134  EFA5  F008         	goto	l2954
  4810  001138                     u1730:
  4811  001138  500F               	movf	fputc@fp^0,w,c
  4812  00113A  1010               	iorwf	(fputc@fp+1)^0,w,c
  4813  00113C  A4D8               	btfss	status,2,c
  4814  00113E  EFA3  F008         	goto	u1741
  4815  001142  EFA5  F008         	goto	u1740
  4816  001146                     u1741:
  4817  001146  EFAA  F008         	goto	l2956
  4818  00114A                     u1740:
  4819  00114A                     l2954:
  4820  00114A  500D               	movf	fputc@c^0,w,c
  4821  00114C  EC3B  F00B         	call	_putch
  4822  001150  EFDD  F008         	goto	l1308
  4823  001154                     l2956:
  4824  001154  EE20 F004          	lfsr	2,4
  4825  001158  500F               	movf	fputc@fp^0,w,c
  4826  00115A  26D9               	addwf	fsr2l,f,c
  4827  00115C  5010               	movf	(fputc@fp+1)^0,w,c
  4828  00115E  22DA               	addwfc	fsr2h,f,c
  4829  001160  50DE               	movf	postinc2,w,c
  4830  001162  10DE               	iorwf	postinc2,w,c
  4831  001164  B4D8               	btfsc	status,2,c
  4832  001166  EFB7  F008         	goto	u1751
  4833  00116A  EFB9  F008         	goto	u1750
  4834  00116E                     u1751:
  4835  00116E  EFD4  F008         	goto	l2960
  4836  001172                     u1750:
  4837  001172  EE20 F004          	lfsr	2,4
  4838  001176  500F               	movf	fputc@fp^0,w,c
  4839  001178  26D9               	addwf	fsr2l,f,c
  4840  00117A  5010               	movf	(fputc@fp+1)^0,w,c
  4841  00117C  22DA               	addwfc	fsr2h,f,c
  4842  00117E  EE10 F002          	lfsr	1,2
  4843  001182  500F               	movf	fputc@fp^0,w,c
  4844  001184  26E1               	addwf	fsr1l,f,c
  4845  001186  5010               	movf	(fputc@fp+1)^0,w,c
  4846  001188  22E2               	addwfc	fsr1h,f,c
  4847  00118A  50DE               	movf	postinc2,w,c
  4848  00118C  5CE6               	subwf	postinc1,w,c
  4849  00118E  50E6               	movf	postinc1,w,c
  4850  001190  0A80               	xorlw	128
  4851  001192  6E15               	movwf	(??_fputc+4)^0,c
  4852  001194  50DE               	movf	postinc2,w,c
  4853  001196  0A80               	xorlw	128
  4854  001198  5815               	subwfb	(??_fputc+4)^0,w,c
  4855  00119A  B0D8               	btfsc	status,0,c
  4856  00119C  EFD2  F008         	goto	u1761
  4857  0011A0  EFD4  F008         	goto	u1760
  4858  0011A4                     u1761:
  4859  0011A4  EFDD  F008         	goto	l1308
  4860  0011A8                     u1760:
  4861  0011A8                     l2960:
  4862  0011A8  EE20 F002          	lfsr	2,2
  4863  0011AC  500F               	movf	fputc@fp^0,w,c
  4864  0011AE  26D9               	addwf	fsr2l,f,c
  4865  0011B0  5010               	movf	(fputc@fp+1)^0,w,c
  4866  0011B2  22DA               	addwfc	fsr2h,f,c
  4867  0011B4  2ADE               	incf	postinc2,f,c
  4868  0011B6  0E00               	movlw	0
  4869  0011B8  22DD               	addwfc	postdec2,f,c
  4870  0011BA                     l1308:
  4871  0011BA  0012               	return		;funcret
  4872  0011BC                     __end_of_fputc:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _putch *****************
  4876 ;; Defined at:
  4877 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  txData          1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  txData          1   11[COMRAM] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    5
  4898 ;; This function calls:
  4899 ;;		_EUSART1_Write
  4900 ;; This function is called by:
  4901 ;;		_fputc
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text17
  4906  001676                     __ptext17:
  4907                           	callstack 0
  4908  001676                     _putch:
  4909                           	callstack 20
  4910                           
  4911                           ;incstack = 0
  4912                           ;putch@txData stored from wreg
  4913  001676  6E0C               	movwf	putch@txData^0,c
  4914  001678                     
  4915                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4916  001678  500C               	movf	putch@txData^0,w,c
  4917  00167A  EC14  F00B         	call	_EUSART1_Write
  4918  00167E  0012               	return		;funcret
  4919  001680                     __end_of_putch:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _EUSART1_Write *****************
  4923 ;; Defined at:
  4924 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  txData          1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  txData          1   10[COMRAM] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:        1 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    4
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_putch
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text18
  4953  001628                     __ptext18:
  4954                           	callstack 0
  4955  001628                     _EUSART1_Write:
  4956                           	callstack 20
  4957                           
  4958                           ;incstack = 0
  4959                           ;EUSART1_Write@txData stored from wreg
  4960  001628  6E0B               	movwf	EUSART1_Write@txData^0,c
  4961  00162A                     l501:
  4962                           
  4963                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4964  00162A  A89E               	btfss	158,4,c	;volatile
  4965  00162C  EF1A  F00B         	goto	u1721
  4966  001630  EF1C  F00B         	goto	u1720
  4967  001634                     u1721:
  4968  001634  EF15  F00B         	goto	l501
  4969  001638                     u1720:
  4970  001638                     
  4971                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4972  001638  C00B  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4973  00163C  0012               	return		;funcret
  4974  00163E                     __end_of_EUSART1_Write:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _TMR1_WriteTimer *****************
  4978 ;; Defined at:
  4979 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  timerVal        2   10[COMRAM] unsigned short 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;Total ram usage:        2 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    4
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;;		_TMR1_Reload
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text19
  5009  00157A                     __ptext19:
  5010                           	callstack 0
  5011  00157A                     _TMR1_WriteTimer:
  5012                           	callstack 26
  5013  00157A                     
  5014                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5015  00157A  A4CD               	btfss	205,2,c	;volatile
  5016  00157C  EFC2  F00A         	goto	u1471
  5017  001580  EFC4  F00A         	goto	u1470
  5018  001584                     u1471:
  5019  001584  EFCC  F00A         	goto	l2624
  5020  001588                     u1470:
  5021  001588                     
  5022                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5023  001588  90CD               	bcf	205,0,c	;volatile
  5024  00158A                     
  5025                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  5026  00158A  500C               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5027  00158C  6ECF               	movwf	207,c	;volatile
  5028  00158E                     
  5029                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  5030  00158E  C00B  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5031  001592                     
  5032                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5033  001592  80CD               	bsf	205,0,c	;volatile
  5034                           
  5035                           ;mcc_generated_files/tmr1.c: 134:     }
  5036  001594  EFD0  F00A         	goto	l96
  5037  001598                     l2624:
  5038                           
  5039                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  5040  001598  500C               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5041  00159A  6ECF               	movwf	207,c	;volatile
  5042  00159C                     
  5043                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  5044  00159C  C00B  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5045  0015A0                     l96:
  5046  0015A0  0012               	return		;funcret
  5047  0015A2                     __end_of_TMR1_WriteTimer:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _SYSTEM_Initialize *****************
  5051 ;; Defined at:
  5052 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    6
  5073 ;; This function calls:
  5074 ;;		_EPWM2_Initialize
  5075 ;;		_EUSART1_Initialize
  5076 ;;		_EUSART2_Initialize
  5077 ;;		_INTERRUPT_Initialize
  5078 ;;		_OSCILLATOR_Initialize
  5079 ;;		_PIN_MANAGER_Initialize
  5080 ;;		_TMR1_Initialize
  5081 ;;		_TMR2_Initialize
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text20
  5088  0015CA                     __ptext20:
  5089                           	callstack 0
  5090  0015CA                     _SYSTEM_Initialize:
  5091                           	callstack 24
  5092  0015CA                     
  5093                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5094  0015CA  EC63  F00B         	call	_INTERRUPT_Initialize	;wreg free
  5095  0015CE                     
  5096                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5097  0015CE  EC54  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  5098  0015D2                     
  5099                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5100  0015D2  EC06  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  5101  0015D6                     
  5102                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  5103  0015D6  ECF6  F00A         	call	_EPWM2_Initialize	;wreg free
  5104  0015DA                     
  5105                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  5106  0015DA  EC33  F00B         	call	_TMR2_Initialize	;wreg free
  5107  0015DE                     
  5108                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  5109  0015DE  EC7F  F00A         	call	_TMR1_Initialize	;wreg free
  5110  0015E2                     
  5111                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  5112  0015E2  ECCB  F009         	call	_EUSART1_Initialize	;wreg free
  5113  0015E6                     
  5114                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  5115  0015E6  ECAB  F009         	call	_EUSART2_Initialize	;wreg free
  5116  0015EA  0012               	return		;funcret
  5117  0015EC                     __end_of_SYSTEM_Initialize:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _TMR2_Initialize *****************
  5121 ;; Defined at:
  5122 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    4
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_SYSTEM_Initialize
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text21
  5151  001666                     __ptext21:
  5152                           	callstack 0
  5153  001666                     _TMR2_Initialize:
  5154                           	callstack 25
  5155  001666                     
  5156                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
  5157  001666  0E68               	movlw	104
  5158  001668  6EBB               	movwf	187,c	;volatile
  5159                           
  5160                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5161  00166A  0E00               	movlw	0
  5162  00166C  6EBC               	movwf	188,c	;volatile
  5163  00166E                     
  5164                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5165  00166E  929E               	bcf	158,1,c	;volatile
  5166                           
  5167                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  5168  001670  0E05               	movlw	5
  5169  001672  6EBA               	movwf	186,c	;volatile
  5170  001674  0012               	return		;funcret
  5171  001676                     __end_of_TMR2_Initialize:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function _TMR1_Initialize *****************
  5175 ;; Defined at:
  5176 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    5
  5197 ;; This function calls:
  5198 ;;		_TMR1_SetInterruptHandler
  5199 ;; This function is called by:
  5200 ;;		_SYSTEM_Initialize
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text22
  5205  0014FE                     __ptext22:
  5206                           	callstack 0
  5207  0014FE                     _TMR1_Initialize:
  5208                           	callstack 24
  5209  0014FE                     
  5210                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5211  0014FE  0E00               	movlw	0
  5212  001500  6ECC               	movwf	204,c	;volatile
  5213                           
  5214                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  5215  001502  0E00               	movlw	0
  5216  001504  6ECF               	movwf	207,c	;volatile
  5217                           
  5218                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  5219  001506  0E00               	movlw	0
  5220  001508  6ECE               	movwf	206,c	;volatile
  5221  00150A                     
  5222                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  5223  00150A  CFCE F04F          	movff	4046,_timer1ReloadVal	;volatile
  5224  00150E  CFCF F050          	movff	4047,_timer1ReloadVal+1	;volatile
  5225  001512                     
  5226                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  5227  001512  909E               	bcf	158,0,c	;volatile
  5228  001514                     
  5229                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5230  001514  809D               	bsf	157,0,c	;volatile
  5231  001516                     
  5232                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5233  001516  0ECC               	movlw	low _TMR1_DefaultInterruptHandler
  5234  001518  6E0B               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  5235  00151A  0E16               	movlw	high _TMR1_DefaultInterruptHandler
  5236  00151C  6E0C               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  5237  00151E  EC40  F00B         	call	_TMR1_SetInterruptHandler	;wreg free
  5238  001522                     
  5239                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  5240  001522  0E01               	movlw	1
  5241  001524  6ECD               	movwf	205,c	;volatile
  5242  001526  0012               	return		;funcret
  5243  001528                     __end_of_TMR1_Initialize:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _TMR1_SetInterruptHandler *****************
  5247 ;; Defined at:
  5248 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
  5251 ;;		 -> myTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    4
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_TMR1_Initialize
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text23
  5279  001680                     __ptext23:
  5280                           	callstack 0
  5281  001680                     _TMR1_SetInterruptHandler:
  5282                           	callstack 26
  5283  001680                     
  5284                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  5285  001680  C00B  F073         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5286  001684  C00C  F074         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5287  001688  0012               	return		;funcret
  5288  00168A                     __end_of_TMR1_SetInterruptHandler:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _PIN_MANAGER_Initialize *****************
  5292 ;; Defined at:
  5293 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    4
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_SYSTEM_Initialize
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text24
  5322  0014A8                     __ptext24:
  5323                           	callstack 0
  5324  0014A8                     _PIN_MANAGER_Initialize:
  5325                           	callstack 25
  5326  0014A8                     
  5327                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5328  0014A8  0E00               	movlw	0
  5329  0014AA  6E89               	movwf	137,c	;volatile
  5330                           
  5331                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5332  0014AC  0E00               	movlw	0
  5333  0014AE  6E8A               	movwf	138,c	;volatile
  5334                           
  5335                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5336  0014B0  0E00               	movlw	0
  5337  0014B2  6E8B               	movwf	139,c	;volatile
  5338  0014B4                     
  5339                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5340  0014B4  6892               	setf	146,c	;volatile
  5341                           
  5342                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  5343  0014B6  0EBF               	movlw	191
  5344  0014B8  6E93               	movwf	147,c	;volatile
  5345                           
  5346                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  5347  0014BA  0EBD               	movlw	189
  5348  0014BC  6E94               	movwf	148,c	;volatile
  5349                           
  5350                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5351  0014BE  0E3C               	movlw	60
  5352  0014C0  010F               	movlb	15	; () banked
  5353  0014C2  6F3A               	movwf	58,b	;volatile
  5354                           
  5355                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5356  0014C4  0E3F               	movlw	63
  5357  0014C6  6F39               	movwf	57,b	;volatile
  5358                           
  5359                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5360  0014C8  0E2F               	movlw	47
  5361  0014CA  6F38               	movwf	56,b	;volatile
  5362                           
  5363                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5364  0014CC  0E00               	movlw	0
  5365  0014CE  6E61               	movwf	97,c	;volatile
  5366  0014D0                     
  5367                           ; BSR set to: 15
  5368                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5369  0014D0  8EF1               	bsf	241,7,c	;volatile
  5370  0014D2                     
  5371                           ; BSR set to: 15
  5372  0014D2  0012               	return		;funcret
  5373  0014D4                     __end_of_PIN_MANAGER_Initialize:
  5374                           	callstack 0
  5375                           
  5376 ;; *************** function _OSCILLATOR_Initialize *****************
  5377 ;; Defined at:
  5378 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    4
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_SYSTEM_Initialize
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text25
  5407  00160C                     __ptext25:
  5408                           	callstack 0
  5409  00160C                     _OSCILLATOR_Initialize:
  5410                           	callstack 25
  5411  00160C                     
  5412                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  5413  00160C  0E70               	movlw	112
  5414  00160E  6ED3               	movwf	211,c	;volatile
  5415                           
  5416                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  5417  001610  0E04               	movlw	4
  5418  001612  6ED2               	movwf	210,c	;volatile
  5419                           
  5420                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  5421  001614  0E40               	movlw	64
  5422  001616  6E9B               	movwf	155,c	;volatile
  5423  001618                     l30:
  5424                           
  5425                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  5426  001618  AED2               	btfss	4050,7,c	;volatile
  5427  00161A  EF11  F00B         	goto	u1381
  5428  00161E  EF13  F00B         	goto	u1380
  5429  001622                     u1381:
  5430  001622  EF0C  F00B         	goto	l30
  5431  001626                     u1380:
  5432  001626  0012               	return		;funcret
  5433  001628                     __end_of_OSCILLATOR_Initialize:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _INTERRUPT_Initialize *****************
  5437 ;; Defined at:
  5438 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		None
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;Total ram usage:        0 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    4
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_SYSTEM_Initialize
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text26
  5467  0016C6                     __ptext26:
  5468                           	callstack 0
  5469  0016C6                     _INTERRUPT_Initialize:
  5470                           	callstack 25
  5471  0016C6                     
  5472                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5473  0016C6  9ED0               	bcf	208,7,c	;volatile
  5474  0016C8  0012               	return		;funcret
  5475  0016CA                     __end_of_INTERRUPT_Initialize:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _EUSART2_Initialize *****************
  5479 ;; Defined at:
  5480 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    5
  5501 ;; This function calls:
  5502 ;;		_EUSART2_SetErrorHandler
  5503 ;;		_EUSART2_SetFramingErrorHandler
  5504 ;;		_EUSART2_SetOverrunErrorHandler
  5505 ;; This function is called by:
  5506 ;;		_SYSTEM_Initialize
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text27
  5511  001356                     __ptext27:
  5512                           	callstack 0
  5513  001356                     _EUSART2_Initialize:
  5514                           	callstack 24
  5515  001356                     
  5516                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  5517  001356  0E08               	movlw	8
  5518  001358  6E70               	movwf	112,c	;volatile
  5519                           
  5520                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  5521  00135A  0E90               	movlw	144
  5522  00135C  6E71               	movwf	113,c	;volatile
  5523                           
  5524                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  5525  00135E  0E24               	movlw	36
  5526  001360  6E72               	movwf	114,c	;volatile
  5527                           
  5528                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0x0A;
  5529  001362  0E0A               	movlw	10
  5530  001364  6E75               	movwf	117,c	;volatile
  5531                           
  5532                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x1A;
  5533  001366  0E1A               	movlw	26
  5534  001368  6E76               	movwf	118,c	;volatile
  5535  00136A                     
  5536                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  5537  00136A  0E00               	movlw	0
  5538  00136C  6E0B               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5539  00136E  0E00               	movlw	0
  5540  001370  6E0C               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  5541  001372  EC4A  F00B         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  5542  001376                     
  5543                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  5544  001376  0E00               	movlw	0
  5545  001378  6E0B               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  5546  00137A  0E00               	movlw	0
  5547  00137C  6E0C               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5548  00137E  EC45  F00B         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  5549  001382                     
  5550                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  5551  001382  0E00               	movlw	0
  5552  001384  6E0B               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  5553  001386  0E00               	movlw	0
  5554  001388  6E0C               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  5555  00138A  EC4F  F00B         	call	_EUSART2_SetErrorHandler	;wreg free
  5556  00138E                     
  5557                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  5558  00138E  0E00               	movlw	0
  5559  001390  0100               	movlb	0	; () banked
  5560  001392  6F76               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5561  001394                     
  5562                           ; BSR set to: 0
  5563  001394  0012               	return		;funcret
  5564  001396                     __end_of_EUSART2_Initialize:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  5568 ;; Defined at:
  5569 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5572 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:        2 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_EUSART2_Initialize
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text28
  5599  00168A                     __ptext28:
  5600                           	callstack 0
  5601  00168A                     _EUSART2_SetOverrunErrorHandler:
  5602                           	callstack 24
  5603  00168A                     
  5604                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  5605  00168A  C00B  F06F         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  5606  00168E  C00C  F070         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  5607  001692  0012               	return		;funcret
  5608  001694                     __end_of_EUSART2_SetOverrunErrorHandler:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  5612 ;; Defined at:
  5613 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5616 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    4
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_EUSART2_Initialize
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text29
  5643  001694                     __ptext29:
  5644                           	callstack 0
  5645  001694                     _EUSART2_SetFramingErrorHandler:
  5646                           	callstack 24
  5647  001694                     
  5648                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  5649  001694  C00B  F071         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  5650  001698  C00C  F072         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  5651  00169C  0012               	return		;funcret
  5652  00169E                     __end_of_EUSART2_SetFramingErrorHandler:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _EUSART2_SetErrorHandler *****************
  5656 ;; Defined at:
  5657 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5660 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;Total ram usage:        2 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    4
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_EUSART2_Initialize
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text30
  5687  00169E                     __ptext30:
  5688                           	callstack 0
  5689  00169E                     _EUSART2_SetErrorHandler:
  5690                           	callstack 24
  5691  00169E                     
  5692                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  5693  00169E  C00B  F06D         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  5694  0016A2  C00C  F06E         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  5695  0016A6  0012               	return		;funcret
  5696  0016A8                     __end_of_EUSART2_SetErrorHandler:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _EUSART1_Initialize *****************
  5700 ;; Defined at:
  5701 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    5
  5722 ;; This function calls:
  5723 ;;		_EUSART1_SetErrorHandler
  5724 ;;		_EUSART1_SetFramingErrorHandler
  5725 ;;		_EUSART1_SetOverrunErrorHandler
  5726 ;; This function is called by:
  5727 ;;		_SYSTEM_Initialize
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text31
  5732  001396                     __ptext31:
  5733                           	callstack 0
  5734  001396                     _EUSART1_Initialize:
  5735                           	callstack 24
  5736  001396                     
  5737                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5738  001396  0E08               	movlw	8
  5739  001398  6EB8               	movwf	184,c	;volatile
  5740                           
  5741                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5742  00139A  0E90               	movlw	144
  5743  00139C  6EAB               	movwf	171,c	;volatile
  5744                           
  5745                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5746  00139E  0E24               	movlw	36
  5747  0013A0  6EAC               	movwf	172,c	;volatile
  5748                           
  5749                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5750  0013A2  0E82               	movlw	130
  5751  0013A4  6EAF               	movwf	175,c	;volatile
  5752                           
  5753                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5754  0013A6  0E06               	movlw	6
  5755  0013A8  6EB0               	movwf	176,c	;volatile
  5756  0013AA                     
  5757                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5758  0013AA  0E00               	movlw	0
  5759  0013AC  6E0B               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5760  0013AE  0E00               	movlw	0
  5761  0013B0  6E0C               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5762  0013B2  EC59  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5763  0013B6                     
  5764                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5765  0013B6  0E00               	movlw	0
  5766  0013B8  6E0B               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5767  0013BA  0E00               	movlw	0
  5768  0013BC  6E0C               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5769  0013BE  EC54  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5770  0013C2                     
  5771                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5772  0013C2  0E00               	movlw	0
  5773  0013C4  6E0B               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5774  0013C6  0E00               	movlw	0
  5775  0013C8  6E0C               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5776  0013CA  EC5E  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5777  0013CE                     
  5778                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5779  0013CE  0E00               	movlw	0
  5780  0013D0  0100               	movlb	0	; () banked
  5781  0013D2  6F75               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5782  0013D4                     
  5783                           ; BSR set to: 0
  5784  0013D4  0012               	return		;funcret
  5785  0013D6                     __end_of_EUSART1_Initialize:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5789 ;; Defined at:
  5790 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5793 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;Total ram usage:        2 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    4
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_EUSART1_Initialize
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text32
  5820  0016A8                     __ptext32:
  5821                           	callstack 0
  5822  0016A8                     _EUSART1_SetOverrunErrorHandler:
  5823                           	callstack 24
  5824  0016A8                     
  5825                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5826  0016A8  C00B  F069         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5827  0016AC  C00C  F06A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5828  0016B0  0012               	return		;funcret
  5829  0016B2                     __end_of_EUSART1_SetOverrunErrorHandler:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5833 ;; Defined at:
  5834 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5837 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;Total ram usage:        2 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    4
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_EUSART1_Initialize
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text33
  5864  0016B2                     __ptext33:
  5865                           	callstack 0
  5866  0016B2                     _EUSART1_SetFramingErrorHandler:
  5867                           	callstack 24
  5868  0016B2                     
  5869                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5870  0016B2  C00B  F06B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5871  0016B6  C00C  F06C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5872  0016BA  0012               	return		;funcret
  5873  0016BC                     __end_of_EUSART1_SetFramingErrorHandler:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function _EUSART1_SetErrorHandler *****************
  5877 ;; Defined at:
  5878 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  5881 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;Total ram usage:        2 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    4
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_EUSART1_Initialize
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text34
  5908  0016BC                     __ptext34:
  5909                           	callstack 0
  5910  0016BC                     _EUSART1_SetErrorHandler:
  5911                           	callstack 24
  5912  0016BC                     
  5913                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5914  0016BC  C00B  F067         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5915  0016C0  C00C  F068         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5916  0016C4  0012               	return		;funcret
  5917  0016C6                     __end_of_EUSART1_SetErrorHandler:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _EPWM2_Initialize *****************
  5921 ;; Defined at:
  5922 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    4
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_SYSTEM_Initialize
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text35
  5951  0015EC                     __ptext35:
  5952                           	callstack 0
  5953  0015EC                     _EPWM2_Initialize:
  5954                           	callstack 25
  5955  0015EC                     
  5956                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x1C;
  5957  0015EC  0E1C               	movlw	28
  5958  0015EE  6E66               	movwf	102,c	;volatile
  5959                           
  5960                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  5961  0015F0  0E00               	movlw	0
  5962  0015F2  6E64               	movwf	100,c	;volatile
  5963                           
  5964                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  5965  0015F4  0E80               	movlw	128
  5966  0015F6  6E65               	movwf	101,c	;volatile
  5967                           
  5968                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  5969  0015F8  0E01               	movlw	1
  5970  0015FA  6E63               	movwf	99,c	;volatile
  5971                           
  5972                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  5973  0015FC  0E00               	movlw	0
  5974  0015FE  6E68               	movwf	104,c	;volatile
  5975                           
  5976                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x34;
  5977  001600  0E34               	movlw	52
  5978  001602  6E67               	movwf	103,c	;volatile
  5979                           
  5980                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  5981  001604  0EE7               	movlw	-25
  5982  001606  010F               	movlb	15	; () banked
  5983  001608  1749               	andwf	73,f,b	;volatile
  5984  00160A                     
  5985                           ; BSR set to: 15
  5986  00160A  0012               	return		;funcret
  5987  00160C                     __end_of_EPWM2_Initialize:
  5988                           	callstack 0
  5989                           
  5990 ;; *************** function _EUSART2_is_rx_ready *****************
  5991 ;; Defined at:
  5992 ;;		line 99 in file "mcc_generated_files/eusart2.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      _Bool 
  5999 ;; Registers used:
  6000 ;;		wreg
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    4
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_main
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text36
  6021  001652                     __ptext36:
  6022                           	callstack 0
  6023  001652                     _EUSART2_is_rx_ready:
  6024                           	callstack 26
  6025  001652                     
  6026                           ;mcc_generated_files/eusart2.c: 101:     return (_Bool)(PIR3bits.RC2IF);
  6027  001652  BAA4               	btfsc	164,5,c	;volatile
  6028  001654  EF2E  F00B         	goto	u1501
  6029  001658  EF31  F00B         	goto	u1500
  6030  00165C                     u1501:
  6031  00165C  0E01               	movlw	1
  6032  00165E  EF32  F00B         	goto	u1506
  6033  001662                     u1500:
  6034  001662  0E00               	movlw	0
  6035  001664                     u1506:
  6036  001664  0012               	return		;funcret
  6037  001666                     __end_of_EUSART2_is_rx_ready:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _EUSART2_Read *****************
  6041 ;; Defined at:
  6042 ;;		line 113 in file "mcc_generated_files/eusart2.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    4
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text37
  6071  001528                     __ptext37:
  6072                           	callstack 0
  6073  001528                     _EUSART2_Read:
  6074                           	callstack 26
  6075  001528                     l406:
  6076                           
  6077                           ;mcc_generated_files/eusart2.c: 115:     while(!PIR3bits.RC2IF)
  6078  001528  AAA4               	btfss	164,5,c	;volatile
  6079  00152A  EF99  F00A         	goto	u1511
  6080  00152E  EF9B  F00A         	goto	u1510
  6081  001532                     u1511:
  6082  001532  EF94  F00A         	goto	l406
  6083  001536                     u1510:
  6084  001536                     
  6085                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6086  001536  0E00               	movlw	0
  6087  001538  0100               	movlb	0	; () banked
  6088  00153A  6F76               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6089  00153C                     
  6090                           ; BSR set to: 0
  6091                           ;mcc_generated_files/eusart2.c: 121:     if(1 == RCSTA2bits.OERR)
  6092  00153C  A271               	btfss	113,1,c	;volatile
  6093  00153E  EFA3  F00A         	goto	u1521
  6094  001542  EFA5  F00A         	goto	u1520
  6095  001546                     u1521:
  6096  001546  EFA7  F00A         	goto	l2648
  6097  00154A                     u1520:
  6098  00154A                     
  6099                           ; BSR set to: 0
  6100                           ;mcc_generated_files/eusart2.c: 122:     {;mcc_generated_files/eusart2.c: 125:         R
      +                          CSTA2bits.CREN = 0;
  6101  00154A  9871               	bcf	113,4,c	;volatile
  6102                           
  6103                           ;mcc_generated_files/eusart2.c: 126:         RCSTA2bits.CREN = 1;
  6104  00154C  8871               	bsf	113,4,c	;volatile
  6105  00154E                     l2648:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;mcc_generated_files/eusart2.c: 129:     return RCREG2;;	Return value of _EUSART2_Read i
      +                          s never used
  6109  00154E  5074               	movf	116,w,c	;volatile
  6110  001550                     
  6111                           ; BSR set to: 0
  6112  001550  0012               	return		;funcret
  6113  001552                     __end_of_EUSART2_Read:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _EPWM2_LoadDutyValue *****************
  6117 ;; Defined at:
  6118 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  dutyValue       2   10[COMRAM] unsigned short 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:        4 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    4
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text38
  6147  001448                     __ptext38:
  6148                           	callstack 0
  6149  001448                     _EPWM2_LoadDutyValue:
  6150                           	callstack 26
  6151  001448                     
  6152                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  6153  001448  C00B  F00D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6154  00144C  C00C  F00E         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  6155  001450  90D8               	bcf	status,0,c
  6156  001452  320E               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6157  001454  320D               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6158  001456  90D8               	bcf	status,0,c
  6159  001458  320E               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6160  00145A  320D               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6161  00145C  500D               	movf	??_EPWM2_LoadDutyValue^0,w,c
  6162  00145E  6E67               	movwf	103,c	;volatile
  6163                           
  6164                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6165  001460  C00B  F00D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6166  001464  0E03               	movlw	3
  6167  001466  160D               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6168  001468  3A0D               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  6169  00146A  0EF0               	movlw	240
  6170  00146C  160D               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6171  00146E  5066               	movf	102,w,c	;volatile
  6172  001470  0BCF               	andlw	207
  6173  001472  100D               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  6174  001474  6E66               	movwf	102,c	;volatile
  6175  001476  0012               	return		;funcret
  6176  001478                     __end_of_EPWM2_LoadDutyValue:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _INTERRUPT_InterruptManager *****************
  6180 ;; Defined at:
  6181 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;Total ram usage:        4 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    3
  6202 ;; This function calls:
  6203 ;;		_TMR1_ISR
  6204 ;; This function is called by:
  6205 ;;		Interrupt level 2
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	intcode
  6210  000008                     __pintcode:
  6211                           	callstack 0
  6212  000008                     _INTERRUPT_InterruptManager:
  6213                           	callstack 17
  6214                           
  6215                           ;incstack = 0
  6216  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6217  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  6218  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6219  000012  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6220  000016  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6221  00001A                     
  6222                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6223  00001A  ACF2               	btfss	242,6,c	;volatile
  6224  00001C  EF12  F000         	goto	i2u157_41
  6225  000020  EF14  F000         	goto	i2u157_40
  6226  000024                     i2u157_41:
  6227  000024  EF24  F000         	goto	i2l199
  6228  000028                     i2u157_40:
  6229  000028                     
  6230                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6231  000028  A09D               	btfss	157,0,c	;volatile
  6232  00002A  EF19  F000         	goto	i2u158_41
  6233  00002E  EF1B  F000         	goto	i2u158_40
  6234  000032                     i2u158_41:
  6235  000032  EF24  F000         	goto	i2l199
  6236  000036                     i2u158_40:
  6237  000036  A09E               	btfss	158,0,c	;volatile
  6238  000038  EF20  F000         	goto	i2u159_41
  6239  00003C  EF22  F000         	goto	i2u159_40
  6240  000040                     i2u159_41:
  6241  000040  EF24  F000         	goto	i2l199
  6242  000044                     i2u159_40:
  6243  000044                     
  6244                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6245  000044  ECEB  F009         	call	_TMR1_ISR	;wreg free
  6246  000048                     i2l199:
  6247  000048  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6248  00004C  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6249  000050  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6250  000054  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6251  000058  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6252  00005A  0011               	retfie		f
  6253  00005C                     __end_of_INTERRUPT_InterruptManager:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _TMR1_ISR *****************
  6257 ;; Defined at:
  6258 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    2
  6279 ;; This function calls:
  6280 ;;		Absolute function
  6281 ;;		_TMR1_DefaultInterruptHandler
  6282 ;;		_myTMR1ISR
  6283 ;;		i2_TMR1_WriteTimer
  6284 ;; This function is called by:
  6285 ;;		_INTERRUPT_InterruptManager
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text40
  6290  0013D6                     __ptext40:
  6291                           	callstack 0
  6292  0013D6                     _TMR1_ISR:
  6293                           	callstack 17
  6294  0013D6                     
  6295                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  6296  0013D6  909E               	bcf	158,0,c	;volatile
  6297  0013D8                     
  6298                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  6299  0013D8  C04F  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  6300  0013DC  C050  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  6301  0013E0  ECD1  F00A         	call	i2_TMR1_WriteTimer	;wreg free
  6302  0013E4                     
  6303                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  6304  0013E4  0100               	movlb	0	; () banked
  6305  0013E6  5173               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6306  0013E8  1174               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6307  0013EA  B4D8               	btfsc	status,2,c
  6308  0013EC  EFFA  F009         	goto	i2u148_41
  6309  0013F0  EFFC  F009         	goto	i2u148_40
  6310  0013F4                     i2u148_41:
  6311  0013F4  EF08  F00A         	goto	i2l109
  6312  0013F8                     i2u148_40:
  6313  0013F8                     
  6314                           ; BSR set to: 0
  6315                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  6316  0013F8  D802               	call	i2u149_48
  6317  0013FA  EF08  F00A         	goto	i2u149_49
  6318  0013FE                     i2u149_48:
  6319  0013FE  0005               	push	
  6320  001400  6EFA               	movwf	pclath,c
  6321  001402  5173               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6322  001404  6EFD               	movwf	tosl,c
  6323  001406  5174               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6324  001408  6EFE               	movwf	tosh,c
  6325  00140A  6AFF               	clrf	tosu,c
  6326  00140C  50FA               	movf	pclath,w,c
  6327  00140E  0012               	return		;indir
  6328  001410                     i2u149_49:
  6329  001410                     i2l109:
  6330  001410  0012               	return		;funcret
  6331  001412                     __end_of_TMR1_ISR:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6335 ;; Defined at:
  6336 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		None
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_TMR1_Initialize
  6360 ;;		_TMR1_ISR
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text41
  6365  0016CC                     __ptext41:
  6366                           	callstack 0
  6367  0016CC                     _TMR1_DefaultInterruptHandler:
  6368                           	callstack 18
  6369  0016CC  0012               	return		;funcret
  6370  0016CE                     __end_of_TMR1_DefaultInterruptHandler:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _myTMR1ISR *****************
  6374 ;; Defined at:
  6375 ;;		line 258 in file "main.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;Total ram usage:        2 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    1
  6396 ;; This function calls:
  6397 ;;		i2_EPWM2_LoadDutyValue
  6398 ;;		i2_TMR1_WriteTimer
  6399 ;; This function is called by:
  6400 ;;		_main
  6401 ;;		_TMR1_ISR
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text42
  6406  000D9E                     __ptext42:
  6407                           	callstack 0
  6408  000D9E                     _myTMR1ISR:
  6409                           	callstack 17
  6410  000D9E                     
  6411                           ;main.c: 260: ;main.c: 261: ;main.c: 262: ;main.c: 263:             case TX_DATA_BITS:;m
      +                          ain.c: 264:                 if (mask == 0) {;main.c: 266:                     EPWM2_Load
      +                          DutyValue(0);
  6412  000D9E  0453               	decf	_transmitStart^0,w,c
  6413  000DA0  A4D8               	btfss	status,2,c
  6414  000DA2  EFD5  F006         	goto	i2u142_41
  6415  000DA6  EFD7  F006         	goto	i2u142_40
  6416  000DAA                     i2u142_41:
  6417  000DAA  EF60  F007         	goto	i2l2588
  6418  000DAE                     i2u142_40:
  6419  000DAE  EF43  F007         	goto	i2l2586
  6420  000DB2                     i2l2548:
  6421                           
  6422                           ;main.c: 274:                 if (checkSumSent == 1) {
  6423  000DB2  0E01               	movlw	1
  6424  000DB4  0100               	movlb	0	; () banked
  6425  000DB6  6F7B               	movwf	_transmitBusy& (0+255),b
  6426                           
  6427                           ;main.c: 275:                     tmr1ISRstate = TX_IDLE;
  6428  000DB8  0E00               	movlw	0
  6429  000DBA  6F77               	movwf	myTMR1ISR@checkSumSent& (0+255),b
  6430                           
  6431                           ;main.c: 276:                     transmitBusy = 0;
  6432  000DBC  0E00               	movlw	0
  6433  000DBE  6F78               	movwf	myTMR1ISR@transmitIndex& (0+255),b
  6434                           
  6435                           ;main.c: 277:                     transmitStart = 0;
  6436  000DC0  0E01               	movlw	1
  6437  000DC2  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6438                           
  6439                           ;main.c: 278:                     break;
  6440  000DC4  EF60  F007         	goto	i2l2588
  6441  000DC8                     i2l2550:
  6442                           
  6443                           ;main.c: 280:                 else if (letter == '\0') {
  6444  000DC8  0E00               	movlw	0
  6445  000DCA  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6446  000DCC  0E19               	movlw	25
  6447  000DCE  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6448  000DD0  EC3C  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6449  000DD4                     
  6450                           ;main.c: 281:                     checkSumSent = 1;
  6451  000DD4  0E01               	movlw	1
  6452  000DD6  6E54               	movwf	myTMR1ISR@mask^0,c
  6453  000DD8                     
  6454                           ;main.c: 282:                 }
  6455  000DD8  0E02               	movlw	2
  6456  000DDA  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6457  000DDC                     
  6458                           ;main.c: 283:                 tmr1ISRstate = TX_START_BIT;
  6459  000DDC  0E9C               	movlw	low _transmitIRBuffer
  6460  000DDE  0100               	movlb	0	; () banked
  6461  000DE0  2578               	addwf	myTMR1ISR@transmitIndex& (0+255),w,b
  6462  000DE2  6ED9               	movwf	fsr2l,c
  6463  000DE4  6ADA               	clrf	fsr2h,c
  6464  000DE6  0E00               	movlw	high _transmitIRBuffer
  6465  000DE8  22DA               	addwfc	fsr2h,f,c
  6466  000DEA  50DF               	movf	indf2,w,c
  6467  000DEC  6E51               	movwf	myTMR1ISR@letter^0,c
  6468  000DEE                     i2l2558:
  6469                           
  6470                           ;main.c: 288:             default:
  6471  000DEE  5054               	movf	myTMR1ISR@mask^0,w,c
  6472  000DF0  A4D8               	btfss	status,2,c
  6473  000DF2  EFFD  F006         	goto	i2u143_41
  6474  000DF6  EFFF  F006         	goto	i2u143_40
  6475  000DFA                     i2u143_41:
  6476  000DFA  EF09  F007         	goto	i2l2564
  6477  000DFE                     i2u143_40:
  6478  000DFE                     
  6479                           ;main.c: 289:                 tmr1ISRstate = TX_IDLE;
  6480  000DFE  0E03               	movlw	3
  6481  000E00  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6482  000E02                     i2l2562:
  6483                           
  6484                           ;main.c: 290:                 break;
  6485  000E02  0E00               	movlw	0
  6486  000E04  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6487  000E06  0E00               	movlw	0
  6488  000E08  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6489  000E0A  EC3C  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6490                           
  6491                           ;main.c: 291:         }
  6492  000E0E  EF1B  F007         	goto	i2l2570
  6493  000E12                     i2l2564:
  6494                           
  6495                           ;main.c: 292:     }
  6496  000E12  5051               	movf	myTMR1ISR@letter^0,w,c
  6497  000E14  1454               	andwf	myTMR1ISR@mask^0,w,c
  6498  000E16  0900               	iorlw	0
  6499  000E18  B4D8               	btfsc	status,2,c
  6500  000E1A  EF11  F007         	goto	i2u144_41
  6501  000E1E  EF13  F007         	goto	i2u144_40
  6502  000E22                     i2u144_41:
  6503  000E22  EF15  F007         	goto	i2l2568
  6504  000E26                     i2u144_40:
  6505  000E26  EF01  F007         	goto	i2l2562
  6506  000E2A                     i2l2568:
  6507  000E2A  0E00               	movlw	0
  6508  000E2C  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6509  000E2E  0E19               	movlw	25
  6510  000E30  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6511  000E32  EC3C  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6512  000E36                     i2l2570:
  6513                           
  6514                           ;main.c: 295:     PIR1bits.TMR1IF = 0;
  6515  000E36  5054               	movf	myTMR1ISR@mask^0,w,c
  6516  000E38  2454               	addwf	myTMR1ISR@mask^0,w,c
  6517  000E3A  6E54               	movwf	myTMR1ISR@mask^0,c
  6518                           
  6519                           ;main.c: 296: }
  6520  000E3C  EF60  F007         	goto	i2l2588
  6521  000E40                     i2l2572:
  6522                           
  6523                           ;main.c: 298: 
  6524  000E40  0100               	movlb	0	; () banked
  6525  000E42  0577               	decf	myTMR1ISR@checkSumSent& (0+255),w,b
  6526  000E44  A4D8               	btfss	status,2,c
  6527  000E46  EF27  F007         	goto	i2u145_41
  6528  000E4A  EF29  F007         	goto	i2u145_40
  6529  000E4E                     i2u145_41:
  6530  000E4E  EF31  F007         	goto	i2l2578
  6531  000E52                     i2u145_40:
  6532  000E52                     
  6533                           ; BSR set to: 0
  6534                           ;main.c: 299: 
  6535  000E52  0E00               	movlw	0
  6536  000E54  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6537                           
  6538                           ;main.c: 300: uint8_t userEnter8bit() {
  6539  000E56  0E00               	movlw	0
  6540  000E58  6F7B               	movwf	_transmitBusy& (0+255),b
  6541                           
  6542                           ;main.c: 301:     uint8_t num = 0;
  6543  000E5A  0E00               	movlw	0
  6544  000E5C  6E53               	movwf	_transmitStart^0,c
  6545                           
  6546                           ;main.c: 302:     char userNum[3] = {0, 0, 0};
  6547  000E5E  EF60  F007         	goto	i2l2588
  6548  000E62                     i2l2578:
  6549                           
  6550                           ; BSR set to: 0
  6551  000E62  5051               	movf	myTMR1ISR@letter^0,w,c
  6552  000E64  A4D8               	btfss	status,2,c
  6553  000E66  EF37  F007         	goto	i2u146_41
  6554  000E6A  EF39  F007         	goto	i2u146_40
  6555  000E6E                     i2u146_41:
  6556  000E6E  EF3B  F007         	goto	i2l322
  6557  000E72                     i2u146_40:
  6558  000E72                     
  6559                           ; BSR set to: 0
  6560                           ;main.c: 305:         while(!(EUSART1_is_rx_ready()));
  6561  000E72  0E01               	movlw	1
  6562  000E74  6F77               	movwf	myTMR1ISR@checkSumSent& (0+255),b
  6563  000E76                     i2l322:
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;main.c: 307:         if (cmd == '\r') break;
  6567  000E76  0E01               	movlw	1
  6568  000E78  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6569                           
  6570                           ;main.c: 308:         printf("%c", cmd);
  6571  000E7A  EF60  F007         	goto	i2l2588
  6572  000E7E                     i2l2582:
  6573                           
  6574                           ;main.c: 313:             num = userNum[0] - 48;
  6575  000E7E  0E00               	movlw	0
  6576  000E80  6E52               	movwf	myTMR1ISR@tmr1ISRstate^0,c
  6577                           
  6578                           ;main.c: 314:             break;
  6579  000E82  EF60  F007         	goto	i2l2588
  6580  000E86                     i2l2586:
  6581  000E86  5052               	movf	myTMR1ISR@tmr1ISRstate^0,w,c
  6582  000E88  6E05               	movwf	??_myTMR1ISR^0,c
  6583  000E8A  6A06               	clrf	(??_myTMR1ISR+1)^0,c
  6584                           
  6585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6586                           ; Switch size 1, requested type "simple"
  6587                           ; Number of cases is 1, Range of values is 0 to 0
  6588                           ; switch strategies available:
  6589                           ; Name         Instructions Cycles
  6590                           ; simple_byte            4     3 (average)
  6591                           ;	Chosen strategy is simple_byte
  6592  000E8C  5006               	movf	(??_myTMR1ISR+1)^0,w,c
  6593  000E8E  0A00               	xorlw	0	; case 0
  6594  000E90  B4D8               	btfsc	status,2,c
  6595  000E92  EF4D  F007         	goto	i2l3510
  6596  000E96  EF3F  F007         	goto	i2l2582
  6597  000E9A                     i2l3510:
  6598                           
  6599                           ; Switch size 1, requested type "simple"
  6600                           ; Number of cases is 4, Range of values is 0 to 3
  6601                           ; switch strategies available:
  6602                           ; Name         Instructions Cycles
  6603                           ; simple_byte           13     7 (average)
  6604                           ;	Chosen strategy is simple_byte
  6605  000E9A  5005               	movf	??_myTMR1ISR^0,w,c
  6606  000E9C  0A00               	xorlw	0	; case 0
  6607  000E9E  B4D8               	btfsc	status,2,c
  6608  000EA0  EFD9  F006         	goto	i2l2548
  6609  000EA4  0A01               	xorlw	1	; case 1
  6610  000EA6  B4D8               	btfsc	status,2,c
  6611  000EA8  EFE4  F006         	goto	i2l2550
  6612  000EAC  0A03               	xorlw	3	; case 2
  6613  000EAE  B4D8               	btfsc	status,2,c
  6614  000EB0  EFF7  F006         	goto	i2l2558
  6615  000EB4  0A01               	xorlw	1	; case 3
  6616  000EB6  B4D8               	btfsc	status,2,c
  6617  000EB8  EF20  F007         	goto	i2l2572
  6618  000EBC  EF3F  F007         	goto	i2l2582
  6619  000EC0                     i2l2588:
  6620                           
  6621                           ;main.c: 318:         default:
  6622  000EC0  0100               	movlb	0	; () banked
  6623  000EC2  51EC               	movf	_bitPeriodInTMR1Counts& (0+255),w,b
  6624  000EC4  0800               	sublw	0
  6625  000EC6  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  6626  000EC8  51ED               	movf	(_bitPeriodInTMR1Counts+1)& (0+255),w,b
  6627  000ECA  A0D8               	btfss	status,0,c
  6628  000ECC  2AE8               	incf	wreg,f,c
  6629  000ECE  0800               	sublw	0
  6630  000ED0  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  6631  000ED2  ECD1  F00A         	call	i2_TMR1_WriteTimer	;wreg free
  6632  000ED6                     
  6633                           ;main.c: 319:             num = (100 * (userNum[0] - 48)) + (10*(userNum[1] - 48)) + (us
      +                          erNum[2] - 48);
  6634  000ED6  909E               	bcf	158,0,c	;volatile
  6635  000ED8  0012               	return		;funcret
  6636  000EDA                     __end_of_myTMR1ISR:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function i2_TMR1_WriteTimer *****************
  6640 ;; Defined at:
  6641 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  timerVal        2    0[COMRAM] unsigned short 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:        2 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_TMR1_ISR
  6665 ;;		_myTMR1ISR
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text43
  6670  0015A2                     __ptext43:
  6671                           	callstack 0
  6672  0015A2                     i2_TMR1_WriteTimer:
  6673                           	callstack 18
  6674  0015A2                     
  6675                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  6676  0015A2  A4CD               	btfss	205,2,c	;volatile
  6677  0015A4  EFD6  F00A         	goto	i2u137_41
  6678  0015A8  EFD8  F00A         	goto	i2u137_40
  6679  0015AC                     i2u137_41:
  6680  0015AC  EFE0  F00A         	goto	i2l2470
  6681  0015B0                     i2u137_40:
  6682  0015B0                     
  6683                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  6684  0015B0  90CD               	bcf	205,0,c	;volatile
  6685  0015B2                     
  6686                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  6687  0015B2  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  6688  0015B4  6ECF               	movwf	207,c	;volatile
  6689  0015B6                     
  6690                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  6691  0015B6  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  6692  0015BA                     
  6693                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  6694  0015BA  80CD               	bsf	205,0,c	;volatile
  6695                           
  6696                           ;mcc_generated_files/tmr1.c: 134:     }
  6697  0015BC  EFE4  F00A         	goto	i2l96
  6698  0015C0                     i2l2470:
  6699                           
  6700                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  6701  0015C0  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  6702  0015C2  6ECF               	movwf	207,c	;volatile
  6703  0015C4                     
  6704                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  6705  0015C4  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  6706  0015C8                     i2l96:
  6707  0015C8  0012               	return		;funcret
  6708  0015CA                     __end_ofi2_TMR1_WriteTimer:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function i2_EPWM2_LoadDutyValue *****************
  6712 ;; Defined at:
  6713 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  dutyValue       2    0[COMRAM] unsigned short 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_myTMR1ISR
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text44
  6741  001478                     __ptext44:
  6742                           	callstack 0
  6743  001478                     i2_EPWM2_LoadDutyValue:
  6744                           	callstack 17
  6745  001478                     
  6746                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  6747  001478  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  6748  00147C  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
  6749  001480  90D8               	bcf	status,0,c
  6750  001482  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  6751  001484  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  6752  001486  90D8               	bcf	status,0,c
  6753  001488  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  6754  00148A  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  6755  00148C  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
  6756  00148E  6E67               	movwf	103,c	;volatile
  6757                           
  6758                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6759  001490  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  6760  001494  0E03               	movlw	3
  6761  001496  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  6762  001498  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
  6763  00149A  0EF0               	movlw	240
  6764  00149C  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  6765  00149E  5066               	movf	102,w,c	;volatile
  6766  0014A0  0BCF               	andlw	207
  6767  0014A2  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
  6768  0014A4  6E66               	movwf	102,c	;volatile
  6769  0014A6  0012               	return		;funcret
  6770  0014A8                     __end_ofi2_EPWM2_LoadDutyValue:
  6771                           	callstack 0
  6772                           
  6773                           	psect	text45
  6774  000000                     __ptext45:
  6775                           	callstack 0
  6776  000000                     
  6777                           	psect	rparam
  6778  0000                     
  6779                           	psect	temp
  6780  000055                     btemp:
  6781                           	callstack 0
  6782  000055                     	ds	1
  6783  0000                     int$flags	set	btemp
  6784  0000                     wtemp8	set	btemp+1
  6785  0000                     ttemp5	set	btemp+1
  6786  0000                     ttemp6	set	btemp+4
  6787  0000                     ttemp7	set	btemp+8
  6788                           
  6789                           	psect	idloc
  6790                           
  6791                           ;Config register IDLOC0 @ 0x200000
  6792                           ;	unspecified, using default values
  6793  200000                     	org	2097152
  6794  200000  FF                 	db	255
  6795                           
  6796                           ;Config register IDLOC1 @ 0x200001
  6797                           ;	unspecified, using default values
  6798  200001                     	org	2097153
  6799  200001  FF                 	db	255
  6800                           
  6801                           ;Config register IDLOC2 @ 0x200002
  6802                           ;	unspecified, using default values
  6803  200002                     	org	2097154
  6804  200002  FF                 	db	255
  6805                           
  6806                           ;Config register IDLOC3 @ 0x200003
  6807                           ;	unspecified, using default values
  6808  200003                     	org	2097155
  6809  200003  FF                 	db	255
  6810                           
  6811                           ;Config register IDLOC4 @ 0x200004
  6812                           ;	unspecified, using default values
  6813  200004                     	org	2097156
  6814  200004  FF                 	db	255
  6815                           
  6816                           ;Config register IDLOC5 @ 0x200005
  6817                           ;	unspecified, using default values
  6818  200005                     	org	2097157
  6819  200005  FF                 	db	255
  6820                           
  6821                           ;Config register IDLOC6 @ 0x200006
  6822                           ;	unspecified, using default values
  6823  200006                     	org	2097158
  6824  200006  FF                 	db	255
  6825                           
  6826                           ;Config register IDLOC7 @ 0x200007
  6827                           ;	unspecified, using default values
  6828  200007                     	org	2097159
  6829  200007  FF                 	db	255
  6830                           
  6831                           	psect	config
  6832                           
  6833                           ; Padding undefined space
  6834  300000                     	org	3145728
  6835  300000  FF                 	db	255
  6836                           
  6837                           ;Config register CONFIG1H @ 0x300001
  6838                           ;	Oscillator Selection bits
  6839                           ;	FOSC = INTIO67, Internal oscillator block
  6840                           ;	4X PLL Enable
  6841                           ;	PLLCFG = OFF, Oscillator used directly
  6842                           ;	Primary clock enable bit
  6843                           ;	PRICLKEN = ON, Primary clock enabled
  6844                           ;	Fail-Safe Clock Monitor Enable bit
  6845                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6846                           ;	Internal/External Oscillator Switchover bit
  6847                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6848  300001                     	org	3145729
  6849  300001  28                 	db	40
  6850                           
  6851                           ;Config register CONFIG2L @ 0x300002
  6852                           ;	Power-up Timer Enable bit
  6853                           ;	PWRTEN = OFF, Power up timer disabled
  6854                           ;	Brown-out Reset Enable bits
  6855                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6856                           ;	Brown Out Reset Voltage bits
  6857                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6858  300002                     	org	3145730
  6859  300002  1F                 	db	31
  6860                           
  6861                           ;Config register CONFIG2H @ 0x300003
  6862                           ;	Watchdog Timer Enable bits
  6863                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6864                           ;	Watchdog Timer Postscale Select bits
  6865                           ;	WDTPS = 32768, 1:32768
  6866  300003                     	org	3145731
  6867  300003  3C                 	db	60
  6868                           
  6869                           ; Padding undefined space
  6870  300004                     	org	3145732
  6871  300004  FF                 	db	255
  6872                           
  6873                           ;Config register CONFIG3H @ 0x300005
  6874                           ;	CCP2 MUX bit
  6875                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6876                           ;	PORTB A/D Enable bit
  6877                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6878                           ;	P3A/CCP3 Mux bit
  6879                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6880                           ;	HFINTOSC Fast Start-up
  6881                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6882                           ;	Timer3 Clock input mux bit
  6883                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6884                           ;	ECCP2 B output mux bit
  6885                           ;	P2BMX = PORTB5, P2B is on RB5
  6886                           ;	MCLR Pin Enable bit
  6887                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6888  300005                     	org	3145733
  6889  300005  BF                 	db	191
  6890                           
  6891                           ;Config register CONFIG4L @ 0x300006
  6892                           ;	Stack Full/Underflow Reset Enable bit
  6893                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6894                           ;	Single-Supply ICSP Enable bit
  6895                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6896                           ;	Extended Instruction Set Enable bit
  6897                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6898                           ;	Background Debug
  6899                           ;	DEBUG = OFF, Disabled
  6900  300006                     	org	3145734
  6901  300006  85                 	db	133
  6902                           
  6903                           ; Padding undefined space
  6904  300007                     	org	3145735
  6905  300007  FF                 	db	255
  6906                           
  6907                           ;Config register CONFIG5L @ 0x300008
  6908                           ;	Code Protection Block 0
  6909                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6910                           ;	Code Protection Block 1
  6911                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6912                           ;	Code Protection Block 2
  6913                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6914                           ;	Code Protection Block 3
  6915                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6916  300008                     	org	3145736
  6917  300008  0F                 	db	15
  6918                           
  6919                           ;Config register CONFIG5H @ 0x300009
  6920                           ;	Boot Block Code Protection bit
  6921                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6922                           ;	Data EEPROM Code Protection bit
  6923                           ;	CPD = OFF, Data EEPROM not code-protected
  6924  300009                     	org	3145737
  6925  300009  C0                 	db	192
  6926                           
  6927                           ;Config register CONFIG6L @ 0x30000A
  6928                           ;	Write Protection Block 0
  6929                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6930                           ;	Write Protection Block 1
  6931                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6932                           ;	Write Protection Block 2
  6933                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6934                           ;	Write Protection Block 3
  6935                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6936  30000A                     	org	3145738
  6937  30000A  0F                 	db	15
  6938                           
  6939                           ;Config register CONFIG6H @ 0x30000B
  6940                           ;	Configuration Register Write Protection bit
  6941                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6942                           ;	Boot Block Write Protection bit
  6943                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6944                           ;	Data EEPROM Write Protection bit
  6945                           ;	WRTD = OFF, Data EEPROM not write-protected
  6946  30000B                     	org	3145739
  6947  30000B  E0                 	db	224
  6948                           
  6949                           ;Config register CONFIG7L @ 0x30000C
  6950                           ;	Table Read Protection Block 0
  6951                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6952                           ;	Table Read Protection Block 1
  6953                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6954                           ;	Table Read Protection Block 2
  6955                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6956                           ;	Table Read Protection Block 3
  6957                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6958  30000C                     	org	3145740
  6959  30000C  0F                 	db	15
  6960                           
  6961                           ;Config register CONFIG7H @ 0x30000D
  6962                           ;	Boot Block Table Read Protection bit
  6963                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6964  30000D                     	org	3145741
  6965  30000D  40                 	db	64
  6966                           tosu	equ	0xFFF
  6967                           tosh	equ	0xFFE
  6968                           tosl	equ	0xFFD
  6969                           stkptr	equ	0xFFC
  6970                           pclatu	equ	0xFFB
  6971                           pclath	equ	0xFFA
  6972                           pcl	equ	0xFF9
  6973                           tblptru	equ	0xFF8
  6974                           tblptrh	equ	0xFF7
  6975                           tblptrl	equ	0xFF6
  6976                           tablat	equ	0xFF5
  6977                           prodh	equ	0xFF4
  6978                           prodl	equ	0xFF3
  6979                           indf0	equ	0xFEF
  6980                           postinc0	equ	0xFEE
  6981                           postdec0	equ	0xFED
  6982                           preinc0	equ	0xFEC
  6983                           plusw0	equ	0xFEB
  6984                           fsr0h	equ	0xFEA
  6985                           fsr0l	equ	0xFE9
  6986                           wreg	equ	0xFE8
  6987                           indf1	equ	0xFE7
  6988                           postinc1	equ	0xFE6
  6989                           postdec1	equ	0xFE5
  6990                           preinc1	equ	0xFE4
  6991                           plusw1	equ	0xFE3
  6992                           fsr1h	equ	0xFE2
  6993                           fsr1l	equ	0xFE1
  6994                           bsr	equ	0xFE0
  6995                           indf2	equ	0xFDF
  6996                           postinc2	equ	0xFDE
  6997                           postdec2	equ	0xFDD
  6998                           preinc2	equ	0xFDC
  6999                           plusw2	equ	0xFDB
  7000                           fsr2h	equ	0xFDA
  7001                           fsr2l	equ	0xFD9
  7002                           status	equ	0xFD8

Data Sizes:
    Strings     869
    Constant    0
    Data        3
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      84
    BANK0           160     48     142
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1824_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_50(CODE[3]), STR_49(CODE[4]), STR_48(CODE[4]), STR_47(CODE[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[17]), STR_43(CODE[21]), 
		 -> STR_42(CODE[32]), STR_41(CODE[15]), STR_40(CODE[10]), STR_39(CODE[28]), 
		 -> STR_38(CODE[10]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_50(CODE[3]), STR_49(CODE[4]), STR_48(CODE[4]), STR_47(CODE[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[17]), STR_43(CODE[21]), 
		 -> STR_42(CODE[32]), STR_41(CODE[15]), STR_40(CODE[10]), STR_39(CODE[28]), 
		 -> STR_38(CODE[10]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_50(CODE[3]), STR_49(CODE[4]), STR_48(CODE[4]), STR_47(CODE[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[17]), STR_43(CODE[21]), 
		 -> STR_42(CODE[32]), STR_41(CODE[15]), STR_40(CODE[10]), STR_39(CODE[28]), 
		 -> STR_38(CODE[10]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    decodeIntoASCII@msg	PTR unsigned char  size(2) Largest target is 32
		 -> transmitIRBuffer(BANK0[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->i2_EPWM2_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_userEnter8bit
    _userEnter8bit->_printf
    _decodeIntoASCII->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   53373
                                             42 BANK0      6     6      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                    _decodeIntoASCII
                             _printf
                      _userEnter8bit
 ---------------------------------------------------------------------------------
 (1) _userEnter8bit                                        8     8      0   17270
                                             34 BANK0      8     8      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decodeIntoASCII                                      5     3      2   17079
                                             34 BANK0      5     3      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4   16766
                                             26 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   12179
                                             18 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6   11697
                                             57 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5891
                                             39 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             28 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             10 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             10 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    3904
                                             39 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3625
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1506
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1006
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                             11 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     340
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     320
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     428
                                              6 COMRAM     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     428
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _myTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _myTMR1ISR                                           2     2      0     288
                                              4 COMRAM     2     2      0
              i2_EPWM2_LoadDutyValue
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2_EPWM2_LoadDutyValue                               4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _decodeIntoASCII
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
   _userEnter8bit
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _myTMR1ISR *
       i2_EPWM2_LoadDutyValue
       i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      54       1       89.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102      12        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Oct 12 21:05:01 2020

                  __size_of_EPWM2_LoadDutyValue 0030                          __size_of_userEnter8bit 00EE  
                                            l30 1618                                              l33 1626  
                                            l50 160A                                              l27 15EA  
                                            l53 1476                                              l82 1526  
                                            l96 15A0                                             l112 1688  
                                           l142 14D2                                             l410 1550  
                                           l252 007E                                             l501 162A  
                                           l341 0FC6                                             l406 1528  
                                           l190 16C8                                             l158 1674  
                                           l510 167E                                             l431 1692  
                                           l255 00A4                                             l504 163C  
                                           l265 026A                                             l522 16BA  
                                           l434 16A6                                             l346 1124  
                                           l428 169C                                             l292 04E2  
                                           l525 16B0                                             l294 04E6  
                                           l286 04B0                                             l528 16C4  
                                           l397 1664                                             l477 13D4  
                                           l389 1394                                             l645 0C38  
                                           l485 1650                                             l494 14D4  
                                           l658 0D9C                                             l498 14FC  
                                           _PR2 000FBB          __end_of_EUSART2_SetFramingErrorHandler 169E  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 1694  
                               _timer1ReloadVal 004F                                             _abs 1316  
                                           _pad 0FC8                                 _TMR2_Initialize 1666  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                      _TXSTA2bits 000F72  
                      __end_of_EPWM2_Initialize 160C                           i2_EPWM2_LoadDutyValue 1478  
                                          ?_abs 001D                                            l3000 0B44  
                                          l1241 1088                                            l1209 1578  
                                          l1322 1446                                            l3010 0BAE  
                                          l3002 0B4C                                            l1308 11BA  
                                          l1316 1314                                            l1236 100C  
                                          l3020 0BF8                                            l3012 0BCE  
                                          l3004 0B60                                            l3022 0C18  
                                          l3014 0BD0                                            l3006 0B6E  
                                          l3030 0C4C                                            l1254 063E  
                                          l3110 0616                                            l3102 059E  
                                          l1239 104E                                            l1248 1278  
                                          l3016 0BE2                                            l3008 0B80  
                                          l3040 0CBC                                            l3032 0C6C  
                                          l3120 066E                                            l1256 0646  
                                          l3112 0618                                            l3104 05BE  
                                          l3200 0A5E                                            l3018 0BE8  
                                          l3050 0D34                                            l3042 0CC4  
                                          l3034 0C70                                            l3026 0C3A  
                                          l1274 087E                                            l3130 070C  
                                          l3122 0674                                            l3114 0632  
                                          l3106 05E8                                            l3202 0A6C  
                                          l2500 1522                                            l3052 0D46  
                                          l3044 0CD8                                            l3036 0C7E  
                                          l3028 0C3E                                            l3140 07B8  
                                          l3132 0714                                            l3124 067C  
                                          l3116 064E                                            l3108 0608  
                                          l3220 11F8                                            l3300 00CA  
                                          l1293 134C                                            l2510 13CE  
                                          l2502 1396                                            l3070 1004  
                                          l3062 0FC8                                            l3046 0CE6  
                                          l3054 0D4C                                            l3038 0C9E  
                                          l3150 081A                                            l3142 07D2  
                                          l3134 071A                                            l3126 0684  
                                          l3118 0660                                            l3206 0A78  
                                          l3214 11BC                                            l3222 1552  
                                          l3310 0104                                            l3302 00CC  
                                          l1279 0AB0                                            l2504 13AA  
                                          l2440 168A                                            l2520 138E  
                                          l2512 1356                                            l2600 15D2  
                                          l3080 1070                                            l3072 1018  
                                          l3064 0FD6                                            l3056 0D5C  
                                          l3048 0D14                                            l1296 1354  
                                          l3152 0820                                            l3160 0856  
                                          l3144 07EC                                            l3128 068A  
                                          l3136 077E                                            l3208 0A9E  
                                          l1288 1216                                            l3216 11C4  
                                          l3224 155C                                            l3400 0462  
                                          l3320 0236                                            l3312 0112  
                                          l3304 00DA                                            l1289 121E  
                                          l2506 13B6                                            l2442 169E  
                                          l2514 136A                                            l2610 15E6  
                                          l2602 15D6                                            l3074 102C  
                                          l3066 0FEA                                            l3090 1232  
                                          l3058 0D7C                                            l3154 0832  
                                          l3138 079A                                            l3146 07FA  
                                          l3170 08C4                                            l3218 11D2  
                                          l3250 0F58                                            l3242 0F1E  
                                          l3234 0EEC                                            l3410 04A0  
                                          l3402 046E                                            l3330 0256  
                                          l3322 0246                                            l3314 0120  
                                          l3306 00E8                                            l2612 1448  
                                          l2444 16B2                                            l2508 13C2  
                                          l2516 1376                                            l2436 1680  
                                          l2604 15DA                                            l2620 158E  
                                          l3076 1030                                            l3068 0FF8  
                                          l3092 123E                                            l3084 1316  
                                          l3156 083E                                            l3148 080C  
                                          l3180 093E                                            l3172 08CA  
                                          l3164 0880                                            l2540 14FA  
                                          l2532 14D4                                            l3252 0F62  
                                          l3260 0FB6                                            l3244 0F30  
                                          l3236 0F00                                            l3228 0EDA  
                                          l3404 0476                                            l3340 0274  
                                          l3332 025A                                            l3316 0134  
                                          l3308 00F6                                            l2446 16A8  
                                          l2438 1694                                            l2518 1382  
                                          l2606 15DE                                            l2622 1592  
                                          l2614 157A                                            l3078 105C  
                                          l3094 124A                                            l3086 1330  
                                          l3158 0846                                            l3190 0A0A  
                                          l3182 0964                                            l3174 08F0  
                                          l3166 08A6                                            l3270 108A  
                                          l2534 14E2                                            l3262 0FC2  
                                          l3254 0F72                                            l3246 0F42  
                                          l3238 0F08                                            l3422 04EA  
                                          l3414 04C2                                            l3406 048C  
                                          l3350 02A8                                            l3342 0280  
                                          l3334 0270                                            l3318 0140  
                                          l2640 1528                                            l2448 16BC  
                                          l2480 14D0                                            l2608 15E2  
                                          l2616 1588                                            l2624 1598  
                                          l3096 124E                                            l3088 1220  
                                          l3192 0A30                                            l3184 098A  
                                          l3176 0922                                            l3168 08B4  
                                          l3280 10EC                                            l3272 1090  
                                          l2536 14E8                                            l2528 163E  
                                          l3248 0F44                                            l3424 04FA  
                                          l3416 04D2                                            l3408 0490  
                                          l3360 02D0                                            l3352 02B6  
                                          l3344 0284                                            l3328 024A  
                                          l2642 1536                                            l2474 16C6  
                                          l2482 160C                                            l2490 14FE  
                                          l2626 159C                                            l2618 158A  
                                          l3098 1254                                            l3194 0A3E  
                                          l3186 09D2                                            l3282 10FA  
                                          l3274 1092                                            l2538 14F6  
                                          l3258 0F8C                                            l3506 0524  
                                          l3370 033A                                            l3362 02E2  
                                          l3354 02CA                                            l3346 0298  
                                          l3290 008C                                            l2644 153C  
                                          l2636 1652                                            l2484 15EC  
                                          l2476 14A8                                            l2492 150A  
                                          l3196 0A52                                            l3276 10A4  
                                          l3508 0FA0                                            l3380 0382  
                                          l3372 034A                                            l3364 02F4  
                                          l3348 029C                                            l3428 0510  
                                          l3292 00A0                                            l3284 0060  
                                          l2646 154A                                            l2478 14B4  
                                          l2494 1512                                            l2486 1666  
                                          l3278 10C8                                            l3390 03E2  
                                          l3382 038E                                            l3374 034C  
                                          l3366 0316                                            l3294 00B8  
                                          l3286 0070                                            l2648 154E  
                                          l2496 1514                                            l2488 166E  
                                          l3392 03EA                                            l3384 03AC  
                                          l3376 035C                                            l3368 0336  
                                          l3296 00BC                                            l3288 007C  
                                          l2498 1516                                            l3394 0438  
                                          l3386 03B8                                            l3378 037E  
                                          l3298 00C8                                            l2596 15CA  
                                          l3396 0444                                            l3388 03C0  
                                          l2598 15CE                                            l2950 1126  
                                          l3398 044C                                            ?_pad 001D  
                                          l2944 162A                                            l2960 11A8  
                                          l2952 1138                                            l2946 1638  
                                          l2954 114A                                            l2970 12F4  
                                          l2948 1678                                            l2956 1154  
                                          l2964 12D2                                            l2972 1412  
                                          l2958 1172                                            l2966 12DE  
                                          l2974 141E                                            l2990 0AE8  
                                          l2982 0AB2                                            l2968 12F0  
                                          l2976 1422                                            l2992 0AF6  
                                          l2984 0AB6                                            l2978 143A  
                                          l2994 0B16                                            l2986 0AC4  
                                          l2996 0B1A                                            l2988 0AE4  
                                          l2998 0B26                                            STR_1 FFD3  
                                          STR_2 FDD8                                            STR_3 FF0A  
                                          STR_4 FC99                                            STR_5 FD85  
                                          STR_6 FFEA                                            STR_7 FD1F  
                                          STR_8 FF9C                                            STR_9 FFC9  
                                  _transmitBusy 007B                                            u2000 05E8  
                                          u2001 05E4                                            u2010 0616  
                                          u2011 0612                                            u2100 080C  
                                          u2020 0632                                            u2101 0808  
                                          u2021 062E                                            u2110 081A  
                                          u2030 0660                                            u2111 0816  
                                          u2031 065C                                            u2120 0832  
                                          u2040 066E                                            u1400 14E2  
                                          u2200 0F1A                                            u2121 082E  
                                          u2041 066A                                            u1401 14DE  
                                          u2201 0F16                                            u2050 079A  
                                          u2130 08A6                                            u1410 14F6  
                                          u2210 0F54                                            u2051 0796  
                                          u2131 08A2                                            u1411 14F2  
                                          u2211 0F50                                            u1500 1662  
                                          u2060 07B8                                            u2140 08F0  
                                          u2220 1124                                            u2300 0336  
                                          u1501 165C                                            u2061 07B4  
                                          u2141 08EC                                            u2221 1120  
                                          u2301 0332                                            _LATA 000F89  
                                          u1510 1536                                            u2070 07D2  
                                          u2150 0964                                            u2310 035C  
                                          u2230 008C                                            _LATB 000F8A  
                                          u1511 1532                                            u2071 07CE  
                                          u2151 0960                                            u2311 0358  
                                          u2231 0088                                            _LATC 000F8B  
                                          u1520 154A                                            u2080 07EC  
                                          u2160 098A                                            u2320 03AC  
                                          u2240 00A0                                            u1521 1546  
                                          u2081 07E8                                            u2161 0986  
                                          u2321 03A8                                            u2241 009C  
                                          u1506 1664                                            u2090 07FA  
                                          u2170 0A30                                            u2330 04A0  
                                          u2250 00B8                                            u2091 07F6  
                                          u2171 0A2C                                            u2331 049C  
                                          u2251 00B4                                            u1380 1626  
                                          u2180 1216                                            u2340 04BE  
                                          u2260 0134                                            u1381 1622  
                                          u2181 1212                                            u2341 04BA  
                                          u2261 0130                                            u1470 1588  
                                          u1390 164E                                            u2190 0F00  
                                          u2270 026A                                            u1471 1584  
                                          u1391 1648                                            u2191 0EFC  
                                          u2271 0266                                            u1720 1638  
                                          u1800 0AF6                                            u2280 0294  
                                          u1721 1634                                            u1801 0AF2  
                                          u2281 0290                                            u1730 1138  
                                          u2290 02CA                                            u1731 1134  
                                          u1811 0B20                                            u2291 02C6  
                                          u1740 114A                                            u1820 0B44  
                                          u1900 0D14                                            u1396 1650  
                                          u1741 1146                                            u1821 0B40  
                                          u1901 0D10                                            u1750 1172  
                                          u1830 0B6E                                            u1910 0D5C  
                                          u1751 116E                                            u1831 0B6A  
                                          u1911 0D58                                            u1760 11A8  
                                          u1920 0FD6                                            u1840 0BAE  
                                          u1761 11A4                                            u1921 0FD2  
                                          u1841 0BAA                                            u1770 1314  
                                          u1930 0FF8                                            u1850 0BF8  
                                          u1771 1310                                            u1931 0FF4  
                                          u1851 0BF4                                            u1780 143A  
                                          u1940 104E                                            u1860 0C4C  
                                          u1781 1436                                            u1941 104A  
                                          u1861 0C48                                            u1950 105C  
                                          u1790 0AC4                                            u1870 0C7E  
                                          u1951 1058                                            u1791 0AC0  
                                          u1871 0C7A                                            u1880 0CBC  
                                          u1960 1330                                            u1881 0CB8  
                                          u1961 132C                                            u1970 1232  
                                          u1890 0CE6                                            u1971 122E  
                                          u1891 0CE2                                            u1980 05D0  
                                          u1981 05CA                                            u1990 05D2  
                                          i2l53 14A6                                            i2l96 15C8  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 1628  
                                          abs@a 001D                                            _dbuf 007C  
                                          _ctoa 1220                                            _main 0060  
                                          _dtoa 059E                                   ?_EUSART1_Read 0001  
                                          _prec 0065                                   ?_EUSART2_Read 0001  
                                          _nout 0063                                            pad@i 0024  
                                          pad@p 0021                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0026  
                                          fsr2l 000FD9                                            btemp 0055  
                                          prodl 000FF3                                            start 005C  
                    ??_TMR1_SetInterruptHandler 000D                                    ___param_bank 000000  
                                         ??_abs 001F                                           ??_pad 0023  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 1628  
                               __end_of___aodiv 0C3A                                           ?_ctoa 0028  
                                         ?_main 0001                                           ?_dtoa 0028  
                               __end_of___aomod 0D9E                                           STR_10 FD1F  
                                         STR_11 FF8D                                           STR_12 FFE3  
                                         STR_20 FD53                                           STR_13 FF35  
                                         STR_21 FE85                                           STR_30 FD50  
                                         STR_14 FEDB                                           STR_22 FEA2  
                                         STR_23 FD1F                                           STR_31 FFBE  
                                         STR_15 FF4A                                           STR_32 FD50  
                                         STR_40 FFB4                                           STR_24 FFDB  
                                         STR_16 FCDF                                           STR_25 FD51  
                                         STR_33 FFF5                                           STR_41 FF7E  
                                         STR_17 FE22                                           STR_26 FD51  
                                         STR_50 FD50                                           STR_34 FF6E  
                                         STR_42 FE65                                           STR_18 FDFD  
                                         STR_35 FFA8                                           STR_43 FF20  
                                         STR_19 FE44                                           STR_27 FDAF  
                                         STR_28 FFFC                                           STR_36 FFB3  
                                         STR_44 FF5D                                           STR_45 FFF5  
                                         STR_29 FFF5                                           STR_37 FEF3  
                                         STR_46 FD50                                           STR_38 FFA9  
                                         STR_47 FFEF                                           STR_39 FEBF  
                                         STR_48 FFF8                                           STR_49 FFF4  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                                         i2l115 16CC                                           i2l109 1410  
                                         i2l322 0E76                                           i2l325 0ED8  
                                         i2l199 0048                                    vfpfcnvrt@fmt 003C  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                 _transmitStart 0053                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                              __end_of_TMR1_ISR 1412                                           _flags 004D  
                                         _fputc 1126                                   _userEnter8bit 0EDA  
                                         _fputs 12D2                         __end_of_decodeIntoASCII 1126  
                                         pad@fp 001D                                           _width 004B  
                                         ctoa@c 002A                                           _putch 1676  
                                         ctoa@w 002B                                           main@i 00EA  
                                         dtoa@d 002A                                           dtoa@i 00CC  
                                         dtoa@n 00C4                                           dtoa@p 00BE  
                                         dtoa@s 00C2                                           dtoa@w 00C0  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 1528  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 000B                                  ??_EUSART2_Read 000B  
                                         ttemp5 0056                                           ttemp6 0059  
                                         ttemp7 005D                                           status 000FD8  
                                         wtemp8 0056              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 157A                                decodeIntoASCII@i 00E2  
                               __initialization 127A                                    __end_of_ctoa 127A  
                    __end_of_EUSART1_Initialize 13D6                                    __end_of_main 059E  
                                  __end_of_dtoa 0880                         __end_of_TMR2_Initialize 1676  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 002B  
                                        ??_main 00E6                                          ??_dtoa 0032  
                                 __activetblptr 000003                     _EUSART2_DefaultErrorHandler 000000  
                        ?i2_EPWM2_LoadDutyValue 0001                                  ?_userEnter8bit 0001  
                    __end_of_EUSART2_Initialize 1396                                          ?_fputc 000D  
                                        ?_fputs 0016                                          _CCPR2H 000F68  
                                        _CCPR2L 000F67                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                       TMR1_WriteTimer@timerVal 000B                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2460 15A2                                          i2l2462 15B0  
                                        i2l2470 15C0                                          i2l3510 0E9A  
                                        i2l2550 0DC8                                          i2l2630 13D8  
                                        i2l2710 001A                                          i2l2472 15C4  
                                        i2l2464 15B2                                          i2l2560 0DFE  
                                        i2l2552 0DD4                                          i2l2544 0D9E  
                                        i2l2632 13E4                                          i2l2712 0028  
                                        i2l2458 1478                                          i2l2466 15B6  
                                        i2l2570 0E36                                          i2l2562 0E02  
                                        i2l2554 0DD8                                          i2l2634 13F8  
                                        i2l2714 0036                                          i2l2468 15BA  
                                        i2l2580 0E72                                          i2l2572 0E40  
                                        i2l2564 0E12                                          i2l2556 0DDC  
                                        i2l2548 0DB2                                          i2l2628 13D6  
                                        i2l2716 0044                                          i2l2590 0ED6  
                                        i2l2582 0E7E                                          i2l2574 0E52  
                                        i2l2558 0DEE                                          i2l2568 0E2A  
                                        i2l2578 0E62                                          i2l2586 0E86  
                                        i2l2588 0EC0                                          _RCREG1 000FAE  
                                        _RCREG2 000F74                                          _RCSTA1 000FAB  
                                        _RCSTA2 000F71                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72            __end_of_TMR1_DefaultInterruptHandler 16CE  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 16CC  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 00D4  
                                     ??___aodiv 001B                                       ??___aomod 001B  
                      ?_EUSART1_SetErrorHandler 000B                                          clear_0 12AA  
                                        clear_1 12B6                                          clear_2 12C2  
                   _EUSART2_FramingErrorHandler 0071                                          _printf 1552  
                                        pad@buf 001F                ??_EUSART1_SetOverrunErrorHandler 000D  
               ?_EUSART1_SetOverrunErrorHandler 000B                                          ctoa@fp 0028  
                                        dtoa@fp 0028                                          _strlen 1412  
                                        fputc@c 000D                                          fputs@c 001A  
                                        fputs@i 001B                                    __pdataCOMRAM 0054  
                                        fputs@s 0016                                    __mediumconst FC98  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1220  
                               ??_EUSART1_Write 000B                             _EPWM2_LoadDutyValue 1448  
      TMR1_SetInterruptHandler@InterruptHandler 000B                         __end_of_TMR1_WriteTimer 15A2  
                              ?_decodeIntoASCII 00DE                   __size_of_INTERRUPT_Initialize 0004  
                              ?_TMR1_Initialize 0001                    __size_of_EUSART2_is_rx_ready 0014  
                             _SYSTEM_Initialize 15CA                                      __accesstop 0060  
                       __end_of__initialization 12C8                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 000B                                    __pidataBANK0 16CA  
                           ??_SYSTEM_Initialize 000D                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 11BC                                   __end_of_fputs 1316  
                                 __end_of_putch 1680                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 14FE                            __end_of_EUSART2_Read 1552  
                      ?_EUSART2_SetErrorHandler 000B                           _bitPeriodInTMR1Counts 00EC  
                               ??_userEnter8bit 00DE                               ?_EPWM2_Initialize 0001  
                                       ??_fputc 0011                       __end_of_SYSTEM_Initialize 15EC  
                                       ??_fputs 001A                              __size_of_myTMR1ISR 013C  
                            ??_EPWM2_Initialize 000B                                         ??_putch 000C  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
              ??_EUSART2_SetFramingErrorHandler 000D                 ?_EUSART2_SetFramingErrorHandler 000B  
               __end_of_EUSART1_SetErrorHandler 16C6                                   myTMR1ISR@mask 0054  
                               myTMR1ISR@letter 0051                           ??_EPWM2_LoadDutyValue 000D  
                                    ??_TMR1_ISR 0007                                         _CCP2CON 000F66  
                                       _ECCP2AS 000F64                                         ?_printf 00D6  
                                       ?_strlen 000B          __end_of_EUSART1_SetFramingErrorHandler 16BC  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 16B2  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0232  
                                       _OSCTUNE 000F9B                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _SPBRGH2 000F76  
                         myTMR1ISR@tmr1ISRstate 0052                                ?_TMR1_WriteTimer 000B  
                                       __Hparam 0000                          myTMR1ISR@transmitIndex 0078  
                                       __Lparam 0000                                         ___aodiv 0AB2  
                                       ___aomod 0C3A                               __end_of_myTMR1ISR 0EDA  
                                     ?_vfprintf 00CE                             _EUSART1_is_rx_ready 163E  
                                       __pcinit 127A                 __end_of_EUSART2_SetErrorHandler 16A8  
                                       __ramtop 1000                                         __ptext0 0060  
                                       __ptext1 0EDA                                         __ptext2 163E  
                                       __ptext3 14D4                                         __ptext4 108A  
                                       __ptext5 1552                                         __ptext6 11BC  
                                       __ptext7 0880                                         __ptext8 059E  
                                       __ptext9 1316                         ??i2_EPWM2_LoadDutyValue 0003  
                               __size_of_printf 0028                  ??_TMR1_DefaultInterruptHandler 0001  
                               __size_of_strlen 0036                                       _T1CONbits 000FCD  
            _EUSART2_DefaultOverrunErrorHandler 000000                           _OSCILLATOR_Initialize 160C  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C2               __size_of_TMR1_SetInterruptHandler 000A  
                            _EUSART1_Initialize 1396                        ??_PIN_MANAGER_Initialize 000B  
                     ?_TMR1_SetInterruptHandler 000B                                         main@cmd 00E9  
                    __size_of_SYSTEM_Initialize 0022                                         main@ind 00EB  
                          end_of_initialization 12C8                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                              userEnter8bit@F6201 0060  
                                       fputc@fp 000F                     _EUSART1_OverrunErrorHandler 0069  
                                       fputs@fp 0018                              _EUSART2_Initialize 1356  
                             __end_of_vfpfcnvrt 0AB2                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                         __size_of_EUSART2_Read 002A                                      ??_vfprintf 004B  
                          ??_EUSART1_Initialize 000D                             ?_EUSART2_Initialize 0001  
                                       strlen@a 000D                             _EUSART2_is_rx_ready 1652  
                                       strlen@s 000B                              decodeIntoASCII@msg 00DE  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 000B  
                         ??_EUSART1_is_rx_ready 000B                            ??_EUSART2_Initialize 000D  
                          ?_EUSART2_is_rx_ready 0001                                    _EUSART1_Read 14D4  
                                  _EUSART2_Read 1528                    __end_of_INTERRUPT_Initialize 16CA  
                     i2TMR1_WriteTimer@timerVal 0001                                     vfpfcnvrt@ap 003E  
                                   vfpfcnvrt@fp 003A                                     vfpfcnvrt@ll 0042  
                                 __pidataCOMRAM 16CE                               __size_of_TMR1_ISR 003C  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 157A  
                                __end_of_strlen 1448                             start_initialization 127A  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 1356  
                                   __end_of_pad 108A                                     putch@txData 000C  
                         ??_EUSART2_is_rx_ready 000B                           __end_of_EUSART1_Write 163E  
              __size_of_EUSART2_SetErrorHandler 000A          __end_of_EUSART2_SetOverrunErrorHandler 1694  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 168A  
                      __size_of_decodeIntoASCII 009C                       __size_of_EPWM2_Initialize 0020  
                      __size_of_TMR1_Initialize 002A                                     vfprintf@fmt 00D0  
                                   __pdataBANK0 00EC                                        ??_printf 004B  
                                      ??_strlen 000D                  i2EPWM2_LoadDutyValue@dutyValue 0001  
                                   __pbssCOMRAM 004B                                   __pcstackBANK0 00BC  
                              ___aodiv@dividend 000B                        __size_of_TMR2_Initialize 0010  
                         __end_of_userEnter8bit 0FC8                ??_EUSART1_SetFramingErrorHandler 000D  
               ?_EUSART1_SetFramingErrorHandler 000B                     __end_of_EPWM2_LoadDutyValue 1478  
                        _PIN_MANAGER_Initialize 14A8                                       _dtoa$1894 00BC  
                              _transmitIRBuffer 009C                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 168A                                   __pmediumconst FC98  
                                      ?___aodiv 000B                                        ?___aomod 000B  
                              ___aodiv@quotient 001D                    ??_INTERRUPT_InterruptManager 0007  
                             __size_of_vfprintf 0064                                       _myTMR1ISR 0D9E  
                                      _BAUDCON1 000FB8                                        _BAUDCON2 000F70  
                __size_ofi2_EPWM2_LoadDutyValue 0030              _EUSART1_DefaultOverrunErrorHandler 000000  
                 __end_ofi2_EPWM2_LoadDutyValue 14A8                            _EUSART1_ErrorHandler 0067  
                       _EUSART1_SetErrorHandler 16BC                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 16C6         EUSART1_SetErrorHandler@interruptHandler 000B  
       EUSART2_SetErrorHandler@interruptHandler 000B                                        _PIE1bits 000F9D  
                      __size_of_TMR1_WriteTimer 0028                                        i2u142_40 0DAE  
                                      i2u142_41 0DAA                                        i2u143_40 0DFE  
                                      i2u143_41 0DFA             __size_of_INTERRUPT_InterruptManager 0054  
                                      i2u144_40 0E26                                        i2u144_41 0E22  
                                      i2u137_40 15B0                                        i2u145_40 0E52  
                                      i2u137_41 15AC                                        i2u145_41 0E4E  
                                      i2u146_40 0E72                                        i2u146_41 0E6E  
                                      i2u148_40 13F8                                        i2u148_41 13F4  
                                      i2u157_40 0028                                        i2u157_41 0024  
                                      i2u149_48 13FE                                        i2u158_40 0036  
                                      i2u149_49 1410                                        i2u158_41 0032  
                                      i2u159_40 0044                                        i2u159_41 0040  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                                      _RCONbits 000FD0                                        _TMR1_ISR 13D6  
                               _recieveIRBuffer 0100                                        _PSTR2CON 000F63  
                             ??_decodeIntoASCII 00E0                                       _vfpfcnvrt 0880  
                             ??_TMR1_Initialize 000D                                      ?_myTMR1ISR 0001  
                                     main@cksum 00E8                                      vfpfcnvrt@c 004A  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 169E                               ??_TMR2_Initialize 000B  
                   _EUSART2_OverrunErrorHandler 006F                                        __Hrparam 0000  
                              _EPWM2_Initialize 15EC                               i2_TMR1_WriteTimer 15A2  
                                    vfprintf@ap 00D2                                        __Lrparam 0000  
                                    vfprintf@fp 00CE                              ?i2_TMR1_WriteTimer 0001  
                       ??_OSCILLATOR_Initialize 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 003A                                 ___aodiv@divisor 0013  
                      _TMR1_SetInterruptHandler 1680                                 ___aodiv@counter 001B  
                           ??i2_TMR1_WriteTimer 0003                           _TMR1_InterruptHandler 0073  
                     ??_EUSART1_SetErrorHandler 000D                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1652                            _EUSART2_ErrorHandler 006D  
                                      __ptext10 0C3A                                        __ptext11 0AB2  
                                      __ptext20 15CA                                        __ptext12 1220  
                                      __ptext21 1666                                        __ptext13 0FC8  
                                    _T1GCONbits 000FCC                                        __ptext30 169E  
                                      __ptext22 14FE                                        __ptext14 1412  
                                      __ptext31 1396                                        __ptext23 1680  
                                      __ptext15 12D2                                        __ptext40 13D6  
                                      __ptext32 16A8                                        __ptext24 14A8  
                                      __ptext16 1126                                        __ptext41 16CC  
                                      __ptext33 16B2                                        __ptext25 160C  
                                      __ptext17 1676                                        __ptext42 0D9E  
                                      __ptext34 16BC                                        __ptext26 16C6  
                                      __ptext18 1628                                        __ptext43 15A2  
                                      __ptext35 15EC                                        __ptext27 1356  
                                      __ptext19 157A                                        __ptext44 1478  
                                      __ptext36 1652                                        __ptext28 168A  
                                      __ptext45 0000                                        __ptext37 1528  
                                      __ptext29 1694                                        __ptext38 1448  
                   __size_of_EUSART2_Initialize 0040                                   __size_of_ctoa 005A  
                                 __size_of_main 053E                                   __size_of_dtoa 02E2  
            _EUSART2_DefaultFramingErrorHandler 000000                                     _receiveBusy 007A  
                     __end_ofi2_TMR1_WriteTimer 15CA                                userEnter8bit@cmd 00E4  
EUSART1_SetOverrunErrorHandler@interruptHandler 000B  EUSART2_SetOverrunErrorHandler@interruptHandler 000B  
                              userEnter8bit@num 00E0                                        int$flags 0055  
                                      _vfprintf 11BC              __end_of_INTERRUPT_InterruptManager 005C  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00D6  
                             ??_TMR1_WriteTimer 000D                     _EUSART1_FramingErrorHandler 006B  
                              ___aomod@dividend 000B                                     ??_myTMR1ISR 0005  
              ??_EUSART2_SetOverrunErrorHandler 000D                 ?_EUSART2_SetOverrunErrorHandler 000B  
                             _receiveNewMessage 0079                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 1666                            userEnter8bit@userNum 00E1  
                         myTMR1ISR@checkSumSent 0077                          ??_INTERRUPT_Initialize 000B  
                     ??_EUSART2_SetErrorHandler 000D                                        intlevel2 0000  
                  EPWM2_LoadDutyValue@dutyValue 000B                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 16B2         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 16A8                                      _RCSTA1bits 000FAB  
                                    _RCSTA2bits 000F71                                        printf@ap 00DC  
EUSART1_SetFramingErrorHandler@interruptHandler 000B  EUSART2_SetFramingErrorHandler@interruptHandler 000B  
                               ___aomod@divisor 0013                                     ??_vfpfcnvrt 0040  
                               ___aomod@counter 001B                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0075                                  userEnter8bit@i 00E5  
                                  ___aodiv@sign 001C                  __end_of_PIN_MANAGER_Initialize 14D4  
                            _eusart2RxLastError 0076                      __size_ofi2_TMR1_WriteTimer 0028  
                               _decodeIntoASCII 108A                                    ___aomod@sign 001C  
                               _TMR1_Initialize 14FE                                    fp__myTMR1ISR 0000  
