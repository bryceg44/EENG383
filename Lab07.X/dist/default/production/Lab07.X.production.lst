

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Oct 09 11:18:14 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 05/05/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F26K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   108  0000                     
   109 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   110  0000                     
   111 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   112  0000                     
   113 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   114  0000                     
   115 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   116  0000                     
   117 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   118  0000                     
   119                           	psect	idataCOMRAM
   120  001A62                     __pidataCOMRAM:
   121                           	callstack 0
   122                           
   123                           ;initializer for myTMR1ISR@mask
   124  001A62  01                 	db	1
   125                           
   126                           	psect	idataBANK0
   127  001A5C                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _bitPeriodInTMR1Counts
   131  001A5C  3415               	dw	13333
   132                           
   133                           ;initializer for _letter
   134  001A5E  30                 	db	48
   135  0000                     _ANSELA	set	3896
   136  0000                     _ANSELB	set	3897
   137  0000                     _ANSELC	set	3898
   138  0000                     _CCPTMRS0bits	set	3913
   139  0000                     _TMR1	set	4046
   140  0000                     _TXREG1	set	4013
   141  0000                     _RCREG1	set	4014
   142  0000                     _RCSTA1bits	set	4011
   143  0000                     _TXSTA1bits	set	4012
   144  0000                     _SPBRGH1	set	4016
   145  0000                     _SPBRG1	set	4015
   146  0000                     _TXSTA1	set	4012
   147  0000                     _RCSTA1	set	4011
   148  0000                     _BAUDCON1	set	4024
   149  0000                     _TXREG2	set	3955
   150  0000                     _RCREG2	set	3956
   151  0000                     _TXSTA2bits	set	3954
   152  0000                     _SPBRGH2	set	3958
   153  0000                     _SPBRG2	set	3957
   154  0000                     _TXSTA2	set	3954
   155  0000                     _RCSTA2	set	3953
   156  0000                     _BAUDCON2	set	3952
   157  0000                     _RCSTA2bits	set	3953
   158  0000                     _PIR3bits	set	4004
   159  0000                     _RCONbits	set	4048
   160  0000                     _T2CONbits	set	4026
   161  0000                     _T2CON	set	4026
   162  0000                     _TMR2	set	4028
   163  0000                     _PR2	set	4027
   164  0000                     _INTCONbits	set	4082
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _WPUB	set	3937
   167  0000                     _TRISC	set	3988
   168  0000                     _TRISB	set	3987
   169  0000                     _TRISA	set	3986
   170  0000                     _LATC	set	3979
   171  0000                     _LATB	set	3978
   172  0000                     _LATA	set	3977
   173  0000                     _T1GCONbits	set	4044
   174  0000                     _T1CONbits	set	4045
   175  0000                     _T1CON	set	4045
   176  0000                     _PIE1bits	set	3997
   177  0000                     _PIR1bits	set	3998
   178  0000                     _TMR1L	set	4046
   179  0000                     _TMR1H	set	4047
   180  0000                     _T1GCON	set	4044
   181  0000                     _CCPR2L	set	3943
   182  0000                     _CCPR2H	set	3944
   183  0000                     _PSTR2CON	set	3939
   184  0000                     _PWM2CON	set	3941
   185  0000                     _ECCP2AS	set	3940
   186  0000                     _CCP2CON	set	3942
   187  0000                     _OSCTUNE	set	3995
   188  0000                     _OSCCON2	set	4050
   189  0000                     _OSCCON	set	4051
   190  0000                     _PLLRDY	set	32407
   191                           
   192                           	psect	mediumconst
   193  00FC88                     __pmediumconst:
   194                           	callstack 0
   195  00FC88  00                 	db	0
   196  00FC89                     STR_4:
   197  00FC89  49                 	db	73	;'I'
   198  00FC8A  6E                 	db	110	;'n'
   199  00FC8B  73                 	db	115	;'s'
   200  00FC8C  74                 	db	116	;'t'
   201  00FC8D  61                 	db	97	;'a'
   202  00FC8E  6C                 	db	108	;'l'
   203  00FC8F  6C                 	db	108	;'l'
   204  00FC90  20                 	db	32
   205  00FC91  61                 	db	97	;'a'
   206  00FC92  20                 	db	32
   207  00FC93  6A                 	db	106	;'j'
   208  00FC94  75                 	db	117	;'u'
   209  00FC95  6D                 	db	109	;'m'
   210  00FC96  70                 	db	112	;'p'
   211  00FC97  65                 	db	101	;'e'
   212  00FC98  72                 	db	114	;'r'
   213  00FC99  20                 	db	32
   214  00FC9A  77                 	db	119	;'w'
   215  00FC9B  69                 	db	105	;'i'
   216  00FC9C  72                 	db	114	;'r'
   217  00FC9D  65                 	db	101	;'e'
   218  00FC9E  20                 	db	32
   219  00FC9F  66                 	db	102	;'f'
   220  00FCA0  72                 	db	114	;'r'
   221  00FCA1  6F                 	db	111	;'o'
   222  00FCA2  6D                 	db	109	;'m'
   223  00FCA3  20                 	db	32
   224  00FCA4  52                 	db	82	;'R'
   225  00FCA5  43                 	db	67	;'C'
   226  00FCA6  30                 	db	48	;'0'
   227  00FCA7  20                 	db	32
   228  00FCA8  74                 	db	116	;'t'
   229  00FCA9  6F                 	db	111	;'o'
   230  00FCAA  20                 	db	32
   231  00FCAB  52                 	db	82	;'R'
   232  00FCAC  42                 	db	66	;'B'
   233  00FCAD  37                 	db	55	;'7'
   234  00FCAE  20                 	db	32
   235  00FCAF  4F                 	db	79	;'O'
   236  00FCB0  4E                 	db	78	;'N'
   237  00FCB1  4C                 	db	76	;'L'
   238  00FCB2  59                 	db	89	;'Y'
   239  00FCB3  20                 	db	32
   240  00FCB4  41                 	db	65	;'A'
   241  00FCB5  46                 	db	70	;'F'
   242  00FCB6  54                 	db	84	;'T'
   243  00FCB7  45                 	db	69	;'E'
   244  00FCB8  52                 	db	82	;'R'
   245  00FCB9  20                 	db	32
   246  00FCBA  75                 	db	117	;'u'
   247  00FCBB  6E                 	db	110	;'n'
   248  00FCBC  70                 	db	112	;'p'
   249  00FCBD  6C                 	db	108	;'l'
   250  00FCBE  75                 	db	117	;'u'
   251  00FCBF  67                 	db	103	;'g'
   252  00FCC0  67                 	db	103	;'g'
   253  00FCC1  69                 	db	105	;'i'
   254  00FCC2  6E                 	db	110	;'n'
   255  00FCC3  67                 	db	103	;'g'
   256  00FCC4  20                 	db	32
   257  00FCC5  50                 	db	80	;'P'
   258  00FCC6  49                 	db	73	;'I'
   259  00FCC7  43                 	db	67	;'C'
   260  00FCC8  4B                 	db	75	;'K'
   261  00FCC9  69                 	db	105	;'i'
   262  00FCCA  74                 	db	116	;'t'
   263  00FCCB  33                 	db	51	;'3'
   264  00FCCC  0D                 	db	13
   265  00FCCD  0A                 	db	10
   266  00FCCE  00                 	db	0
   267  00FCCF                     STR_16:
   268  00FCCF  6D                 	db	109	;'m'
   269  00FCD0  3A                 	db	58	;':'
   270  00FCD1  20                 	db	32
   271  00FCD2  63                 	db	99	;'c'
   272  00FCD3  72                 	db	114	;'r'
   273  00FCD4  65                 	db	101	;'e'
   274  00FCD5  61                 	db	97	;'a'
   275  00FCD6  74                 	db	116	;'t'
   276  00FCD7  65                 	db	101	;'e'
   277  00FCD8  20                 	db	32
   278  00FCD9  61                 	db	97	;'a'
   279  00FCDA  20                 	db	32
   280  00FCDB  4E                 	db	78	;'N'
   281  00FCDC  55                 	db	85	;'U'
   282  00FCDD  4C                 	db	76	;'L'
   283  00FCDE  4C                 	db	76	;'L'
   284  00FCDF  20                 	db	32
   285  00FCE0  74                 	db	116	;'t'
   286  00FCE1  65                 	db	101	;'e'
   287  00FCE2  72                 	db	114	;'r'
   288  00FCE3  6D                 	db	109	;'m'
   289  00FCE4  69                 	db	105	;'i'
   290  00FCE5  6E                 	db	110	;'n'
   291  00FCE6  61                 	db	97	;'a'
   292  00FCE7  74                 	db	116	;'t'
   293  00FCE8  65                 	db	101	;'e'
   294  00FCE9  64                 	db	100	;'d'
   295  00FCEA  20                 	db	32
   296  00FCEB  6D                 	db	109	;'m'
   297  00FCEC  65                 	db	101	;'e'
   298  00FCED  73                 	db	115	;'s'
   299  00FCEE  73                 	db	115	;'s'
   300  00FCEF  61                 	db	97	;'a'
   301  00FCF0  67                 	db	103	;'g'
   302  00FCF1  65                 	db	101	;'e'
   303  00FCF2  20                 	db	32
   304  00FCF3  77                 	db	119	;'w'
   305  00FCF4  69                 	db	105	;'i'
   306  00FCF5  74                 	db	116	;'t'
   307  00FCF6  68                 	db	104	;'h'
   308  00FCF7  20                 	db	32
   309  00FCF8  53                 	db	83	;'S'
   310  00FCF9  52                 	db	82	;'R'
   311  00FCFA  43                 	db	67	;'C'
   312  00FCFB  20                 	db	32
   313  00FCFC  61                 	db	97	;'a'
   314  00FCFD  6E                 	db	110	;'n'
   315  00FCFE  64                 	db	100	;'d'
   316  00FCFF  20                 	db	32
   317  00FD00  44                 	db	68	;'D'
   318  00FD01  45                 	db	69	;'E'
   319  00FD02  53                 	db	83	;'S'
   320  00FD03  54                 	db	84	;'T'
   321  00FD04  20                 	db	32
   322  00FD05  70                 	db	112	;'p'
   323  00FD06  72                 	db	114	;'r'
   324  00FD07  65                 	db	101	;'e'
   325  00FD08  66                 	db	102	;'f'
   326  00FD09  69                 	db	105	;'i'
   327  00FD0A  78                 	db	120	;'x'
   328  00FD0B  2E                 	db	46
   329  00FD0C  0D                 	db	13
   330  00FD0D  0A                 	db	10
   331  00FD0E  00                 	db	0
   332  00FD0F                     STR_7:
   333  00FD0F  2D                 	db	45
   334  00FD10  2D                 	db	45
   335  00FD11  2D                 	db	45
   336  00FD12  2D                 	db	45
   337  00FD13  2D                 	db	45
   338  00FD14  2D                 	db	45
   339  00FD15  2D                 	db	45
   340  00FD16  2D                 	db	45
   341  00FD17  2D                 	db	45
   342  00FD18  2D                 	db	45
   343  00FD19  2D                 	db	45
   344  00FD1A  2D                 	db	45
   345  00FD1B  2D                 	db	45
   346  00FD1C  2D                 	db	45
   347  00FD1D  2D                 	db	45
   348  00FD1E  2D                 	db	45
   349  00FD1F  2D                 	db	45
   350  00FD20  2D                 	db	45
   351  00FD21  2D                 	db	45
   352  00FD22  2D                 	db	45
   353  00FD23  2D                 	db	45
   354  00FD24  2D                 	db	45
   355  00FD25  2D                 	db	45
   356  00FD26  2D                 	db	45
   357  00FD27  2D                 	db	45
   358  00FD28  2D                 	db	45
   359  00FD29  2D                 	db	45
   360  00FD2A  2D                 	db	45
   361  00FD2B  2D                 	db	45
   362  00FD2C  2D                 	db	45
   363  00FD2D  2D                 	db	45
   364  00FD2E  2D                 	db	45
   365  00FD2F  2D                 	db	45
   366  00FD30  2D                 	db	45
   367  00FD31  2D                 	db	45
   368  00FD32  2D                 	db	45
   369  00FD33  2D                 	db	45
   370  00FD34  2D                 	db	45
   371  00FD35  2D                 	db	45
   372  00FD36  2D                 	db	45
   373  00FD37  2D                 	db	45
   374  00FD38  2D                 	db	45
   375  00FD39  2D                 	db	45
   376  00FD3A  2D                 	db	45
   377  00FD3B  2D                 	db	45
   378  00FD3C  2D                 	db	45
   379  00FD3D  2D                 	db	45
   380  00FD3E  2D                 	db	45
   381  00FD3F  2D                 	db	45
   382  00FD40  0D                 	db	13
   383  00FD41  0A                 	db	10
   384  00FD42  00                 	db	0
   385  00FD43                     STR_20:
   386  00FD43  52                 	db	82	;'R'
   387  00FD44  3A                 	db	58	;':'
   388  00FD45  20                 	db	32
   389  00FD46  52                 	db	82	;'R'
   390  00FD47  65                 	db	101	;'e'
   391  00FD48  63                 	db	99	;'c'
   392  00FD49  65                 	db	101	;'e'
   393  00FD4A  69                 	db	105	;'i'
   394  00FD4B  76                 	db	118	;'v'
   395  00FD4C  65                 	db	101	;'e'
   396  00FD4D  20                 	db	32
   397  00FD4E  6D                 	db	109	;'m'
   398  00FD4F  65                 	db	101	;'e'
   399  00FD50  73                 	db	115	;'s'
   400  00FD51  73                 	db	115	;'s'
   401  00FD52  61                 	db	97	;'a'
   402  00FD53  67                 	db	103	;'g'
   403  00FD54  65                 	db	101	;'e'
   404  00FD55  20                 	db	32
   405  00FD56  75                 	db	117	;'u'
   406  00FD57  73                 	db	115	;'s'
   407  00FD58  69                 	db	105	;'i'
   408  00FD59  6E                 	db	110	;'n'
   409  00FD5A  67                 	db	103	;'g'
   410  00FD5B  20                 	db	32
   411  00FD5C  45                 	db	69	;'E'
   412  00FD5D  55                 	db	85	;'U'
   413  00FD5E  53                 	db	83	;'S'
   414  00FD5F  41                 	db	65	;'A'
   415  00FD60  52                 	db	82	;'R'
   416  00FD61  54                 	db	84	;'T'
   417  00FD62  32                 	db	50	;'2'
   418  00FD63  20                 	db	32
   419  00FD64  76                 	db	118	;'v'
   420  00FD65  69                 	db	105	;'i'
   421  00FD66  61                 	db	97	;'a'
   422  00FD67  20                 	db	32
   423  00FD68  49                 	db	73	;'I'
   424  00FD69  52                 	db	82	;'R'
   425  00FD6A  20                 	db	32
   426  00FD6B  64                 	db	100	;'d'
   427  00FD6C  65                 	db	101	;'e'
   428  00FD6D  63                 	db	99	;'c'
   429  00FD6E  6F                 	db	111	;'o'
   430  00FD6F  64                 	db	100	;'d'
   431  00FD70  65                 	db	101	;'e'
   432  00FD71  72                 	db	114	;'r'
   433  00FD72  0D                 	db	13
   434  00FD73  0A                 	db	10
   435  00FD74  00                 	db	0
   436  00FD75                     STR_5:
   437  00FD75  49                 	db	73	;'I'
   438  00FD76  6E                 	db	110	;'n'
   439  00FD77  73                 	db	115	;'s'
   440  00FD78  74                 	db	116	;'t'
   441  00FD79  61                 	db	97	;'a'
   442  00FD7A  6C                 	db	108	;'l'
   443  00FD7B  6C                 	db	108	;'l'
   444  00FD7C  20                 	db	32
   445  00FD7D  61                 	db	97	;'a'
   446  00FD7E  20                 	db	32
   447  00FD7F  6A                 	db	106	;'j'
   448  00FD80  75                 	db	117	;'u'
   449  00FD81  6D                 	db	109	;'m'
   450  00FD82  70                 	db	112	;'p'
   451  00FD83  65                 	db	101	;'e'
   452  00FD84  72                 	db	114	;'r'
   453  00FD85  20                 	db	32
   454  00FD86  6F                 	db	111	;'o'
   455  00FD87  76                 	db	118	;'v'
   456  00FD88  65                 	db	101	;'e'
   457  00FD89  72                 	db	114	;'r'
   458  00FD8A  20                 	db	32
   459  00FD8B  49                 	db	73	;'I'
   460  00FD8C  52                 	db	82	;'R'
   461  00FD8D  5F                 	db	95	;'_'
   462  00FD8E  54                 	db	84	;'T'
   463  00FD8F  58                 	db	88	;'X'
   464  00FD90  20                 	db	32
   465  00FD91  68                 	db	104	;'h'
   466  00FD92  65                 	db	101	;'e'
   467  00FD93  61                 	db	97	;'a'
   468  00FD94  64                 	db	100	;'d'
   469  00FD95  65                 	db	101	;'e'
   470  00FD96  72                 	db	114	;'r'
   471  00FD97  20                 	db	32
   472  00FD98  70                 	db	112	;'p'
   473  00FD99  69                 	db	105	;'i'
   474  00FD9A  6E                 	db	110	;'n'
   475  00FD9B  73                 	db	115	;'s'
   476  00FD9C  0D                 	db	13
   477  00FD9D  0A                 	db	10
   478  00FD9E  00                 	db	0
   479  00FD9F                     STR_27:
   480  00FD9F  45                 	db	69	;'E'
   481  00FDA0  6E                 	db	110	;'n'
   482  00FDA1  74                 	db	116	;'t'
   483  00FDA2  65                 	db	101	;'e'
   484  00FDA3  72                 	db	114	;'r'
   485  00FDA4  20                 	db	32
   486  00FDA5  61                 	db	97	;'a'
   487  00FDA6  20                 	db	32
   488  00FDA7  6D                 	db	109	;'m'
   489  00FDA8  65                 	db	101	;'e'
   490  00FDA9  73                 	db	115	;'s'
   491  00FDAA  73                 	db	115	;'s'
   492  00FDAB  61                 	db	97	;'a'
   493  00FDAC  67                 	db	103	;'g'
   494  00FDAD  65                 	db	101	;'e'
   495  00FDAE  2C                 	db	44
   496  00FDAF  20                 	db	32
   497  00FDB0  68                 	db	104	;'h'
   498  00FDB1  69                 	db	105	;'i'
   499  00FDB2  74                 	db	116	;'t'
   500  00FDB3  20                 	db	32
   501  00FDB4  72                 	db	114	;'r'
   502  00FDB5  65                 	db	101	;'e'
   503  00FDB6  74                 	db	116	;'t'
   504  00FDB7  75                 	db	117	;'u'
   505  00FDB8  72                 	db	114	;'r'
   506  00FDB9  6E                 	db	110	;'n'
   507  00FDBA  20                 	db	32
   508  00FDBB  77                 	db	119	;'w'
   509  00FDBC  68                 	db	104	;'h'
   510  00FDBD  65                 	db	101	;'e'
   511  00FDBE  6E                 	db	110	;'n'
   512  00FDBF  20                 	db	32
   513  00FDC0  64                 	db	100	;'d'
   514  00FDC1  6F                 	db	111	;'o'
   515  00FDC2  6E                 	db	110	;'n'
   516  00FDC3  65                 	db	101	;'e'
   517  00FDC4  2E                 	db	46
   518  00FDC5  0D                 	db	13
   519  00FDC6  0A                 	db	10
   520  00FDC7  00                 	db	0
   521  00FDC8                     STR_2:
   522  00FDC8  52                 	db	82	;'R'
   523  00FDC9  65                 	db	101	;'e'
   524  00FDCA  63                 	db	99	;'c'
   525  00FDCB  65                 	db	101	;'e'
   526  00FDCC  69                 	db	105	;'i'
   527  00FDCD  76                 	db	118	;'v'
   528  00FDCE  65                 	db	101	;'e'
   529  00FDCF  20                 	db	32
   530  00FDD0  61                 	db	97	;'a'
   531  00FDD1  6E                 	db	110	;'n'
   532  00FDD2  64                 	db	100	;'d'
   533  00FDD3  20                 	db	32
   534  00FDD4  64                 	db	100	;'d'
   535  00FDD5  65                 	db	101	;'e'
   536  00FDD6  63                 	db	99	;'c'
   537  00FDD7  6F                 	db	111	;'o'
   538  00FDD8  64                 	db	100	;'d'
   539  00FDD9  65                 	db	101	;'e'
   540  00FDDA  20                 	db	32
   541  00FDDB  61                 	db	97	;'a'
   542  00FDDC  6E                 	db	110	;'n'
   543  00FDDD  20                 	db	32
   544  00FDDE  49                 	db	73	;'I'
   545  00FDDF  52                 	db	82	;'R'
   546  00FDE0  20                 	db	32
   547  00FDE1  63                 	db	99	;'c'
   548  00FDE2  68                 	db	104	;'h'
   549  00FDE3  61                 	db	97	;'a'
   550  00FDE4  72                 	db	114	;'r'
   551  00FDE5  61                 	db	97	;'a'
   552  00FDE6  63                 	db	99	;'c'
   553  00FDE7  74                 	db	116	;'t'
   554  00FDE8  65                 	db	101	;'e'
   555  00FDE9  72                 	db	114	;'r'
   556  00FDEA  0D                 	db	13
   557  00FDEB  0A                 	db	10
   558  00FDEC  00                 	db	0
   559  00FDED                     STR_18:
   560  00FDED  64                 	db	100	;'d'
   561  00FDEE  3A                 	db	58	;':'
   562  00FDEF  20                 	db	32
   563  00FDF0  73                 	db	115	;'s'
   564  00FDF1  65                 	db	101	;'e'
   565  00FDF2  74                 	db	116	;'t'
   566  00FDF3  20                 	db	32
   567  00FDF4  44                 	db	68	;'D'
   568  00FDF5  65                 	db	101	;'e'
   569  00FDF6  73                 	db	115	;'s'
   570  00FDF7  74                 	db	116	;'t'
   571  00FDF8  69                 	db	105	;'i'
   572  00FDF9  6E                 	db	110	;'n'
   573  00FDFA  61                 	db	97	;'a'
   574  00FDFB  74                 	db	116	;'t'
   575  00FDFC  69                 	db	105	;'i'
   576  00FDFD  6F                 	db	111	;'o'
   577  00FDFE  6E                 	db	110	;'n'
   578  00FDFF  20                 	db	32
   579  00FE00  74                 	db	116	;'t'
   580  00FE01  72                 	db	114	;'r'
   581  00FE02  61                 	db	97	;'a'
   582  00FE03  6E                 	db	110	;'n'
   583  00FE04  73                 	db	115	;'s'
   584  00FE05  6D                 	db	109	;'m'
   585  00FE06  69                 	db	105	;'i'
   586  00FE07  74                 	db	116	;'t'
   587  00FE08  20                 	db	32
   588  00FE09  74                 	db	116	;'t'
   589  00FE0A  61                 	db	97	;'a'
   590  00FE0B  72                 	db	114	;'r'
   591  00FE0C  67                 	db	103	;'g'
   592  00FE0D  65                 	db	101	;'e'
   593  00FE0E  74                 	db	116	;'t'
   594  00FE0F  0D                 	db	13
   595  00FE10  0A                 	db	10
   596  00FE11  00                 	db	0
   597  00FE12                     STR_17:
   598  00FE12  73                 	db	115	;'s'
   599  00FE13  3A                 	db	58	;':'
   600  00FE14  20                 	db	32
   601  00FE15  73                 	db	115	;'s'
   602  00FE16  65                 	db	101	;'e'
   603  00FE17  74                 	db	116	;'t'
   604  00FE18  20                 	db	32
   605  00FE19  73                 	db	115	;'s'
   606  00FE1A  6F                 	db	111	;'o'
   607  00FE1B  75                 	db	117	;'u'
   608  00FE1C  72                 	db	114	;'r'
   609  00FE1D  63                 	db	99	;'c'
   610  00FE1E  65                 	db	101	;'e'
   611  00FE1F  20                 	db	32
   612  00FE20  74                 	db	116	;'t'
   613  00FE21  72                 	db	114	;'r'
   614  00FE22  61                 	db	97	;'a'
   615  00FE23  6E                 	db	110	;'n'
   616  00FE24  73                 	db	115	;'s'
   617  00FE25  6D                 	db	109	;'m'
   618  00FE26  69                 	db	105	;'i'
   619  00FE27  74                 	db	116	;'t'
   620  00FE28  20                 	db	32
   621  00FE29  69                 	db	105	;'i'
   622  00FE2A  64                 	db	100	;'d'
   623  00FE2B  65                 	db	101	;'e'
   624  00FE2C  6E                 	db	110	;'n'
   625  00FE2D  74                 	db	116	;'t'
   626  00FE2E  69                 	db	105	;'i'
   627  00FE2F  74                 	db	116	;'t'
   628  00FE30  79                 	db	121	;'y'
   629  00FE31  0D                 	db	13
   630  00FE32  0A                 	db	10
   631  00FE33  00                 	db	0
   632  00FE34                     STR_19:
   633  00FE34  53                 	db	83	;'S'
   634  00FE35  3A                 	db	58	;':'
   635  00FE36  20                 	db	32
   636  00FE37  53                 	db	83	;'S'
   637  00FE38  65                 	db	101	;'e'
   638  00FE39  6E                 	db	110	;'n'
   639  00FE3A  64                 	db	100	;'d'
   640  00FE3B  20                 	db	32
   641  00FE3C  6D                 	db	109	;'m'
   642  00FE3D  65                 	db	101	;'e'
   643  00FE3E  73                 	db	115	;'s'
   644  00FE3F  73                 	db	115	;'s'
   645  00FE40  61                 	db	97	;'a'
   646  00FE41  67                 	db	103	;'g'
   647  00FE42  65                 	db	101	;'e'
   648  00FE43  20                 	db	32
   649  00FE44  75                 	db	117	;'u'
   650  00FE45  73                 	db	115	;'s'
   651  00FE46  69                 	db	105	;'i'
   652  00FE47  6E                 	db	110	;'n'
   653  00FE48  67                 	db	103	;'g'
   654  00FE49  20                 	db	32
   655  00FE4A  54                 	db	84	;'T'
   656  00FE4B  4D                 	db	77	;'M'
   657  00FE4C  52                 	db	82	;'R'
   658  00FE4D  31                 	db	49	;'1'
   659  00FE4E  20                 	db	32
   660  00FE4F  49                 	db	73	;'I'
   661  00FE50  53                 	db	83	;'S'
   662  00FE51  52                 	db	82	;'R'
   663  00FE52  0D                 	db	13
   664  00FE53  0A                 	db	10
   665  00FE54  00                 	db	0
   666  00FE55                     STR_41:
   667  00FE55  4E                 	db	78	;'N'
   668  00FE56  6F                 	db	111	;'o'
   669  00FE57  74                 	db	116	;'t'
   670  00FE58  68                 	db	104	;'h'
   671  00FE59  69                 	db	105	;'i'
   672  00FE5A  6E                 	db	110	;'n'
   673  00FE5B  67                 	db	103	;'g'
   674  00FE5C  20                 	db	32
   675  00FE5D  72                 	db	114	;'r'
   676  00FE5E  65                 	db	101	;'e'
   677  00FE5F  63                 	db	99	;'c'
   678  00FE60  65                 	db	101	;'e'
   679  00FE61  69                 	db	105	;'i'
   680  00FE62  76                 	db	118	;'v'
   681  00FE63  65                 	db	101	;'e'
   682  00FE64  64                 	db	100	;'d'
   683  00FE65  20                 	db	32
   684  00FE66  66                 	db	102	;'f'
   685  00FE67  72                 	db	114	;'r'
   686  00FE68  6F                 	db	111	;'o'
   687  00FE69  6D                 	db	109	;'m'
   688  00FE6A  20                 	db	32
   689  00FE6B  45                 	db	69	;'E'
   690  00FE6C  55                 	db	85	;'U'
   691  00FE6D  53                 	db	83	;'S'
   692  00FE6E  41                 	db	65	;'A'
   693  00FE6F  52                 	db	82	;'R'
   694  00FE70  54                 	db	84	;'T'
   695  00FE71  32                 	db	50	;'2'
   696  00FE72  0D                 	db	13
   697  00FE73  0A                 	db	10
   698  00FE74  00                 	db	0
   699  00FE75                     STR_40:
   700  00FE75  4A                 	db	74	;'J'
   701  00FE76  75                 	db	117	;'u'
   702  00FE77  73                 	db	115	;'s'
   703  00FE78  74                 	db	116	;'t'
   704  00FE79  20                 	db	32
   705  00FE7A  72                 	db	114	;'r'
   706  00FE7B  65                 	db	101	;'e'
   707  00FE7C  61                 	db	97	;'a'
   708  00FE7D  64                 	db	100	;'d'
   709  00FE7E  20                 	db	32
   710  00FE7F  69                 	db	105	;'i'
   711  00FE80  6E                 	db	110	;'n'
   712  00FE81  20                 	db	32
   713  00FE82  25                 	db	37
   714  00FE83  63                 	db	99	;'c'
   715  00FE84  20                 	db	32
   716  00FE85  66                 	db	102	;'f'
   717  00FE86  72                 	db	114	;'r'
   718  00FE87  6F                 	db	111	;'o'
   719  00FE88  6D                 	db	109	;'m'
   720  00FE89  20                 	db	32
   721  00FE8A  45                 	db	69	;'E'
   722  00FE8B  55                 	db	85	;'U'
   723  00FE8C  53                 	db	83	;'S'
   724  00FE8D  41                 	db	65	;'A'
   725  00FE8E  52                 	db	82	;'R'
   726  00FE8F  54                 	db	84	;'T'
   727  00FE90  32                 	db	50	;'2'
   728  00FE91  0D                 	db	13
   729  00FE92  0A                 	db	10
   730  00FE93  00                 	db	0
   731  00FE94                     STR_21:
   732  00FE94  4D                 	db	77	;'M'
   733  00FE95  3A                 	db	58	;':'
   734  00FE96  20                 	db	32
   735  00FE97  4D                 	db	77	;'M'
   736  00FE98  6F                 	db	111	;'o'
   737  00FE99  6E                 	db	110	;'n'
   738  00FE9A  69                 	db	105	;'i'
   739  00FE9B  74                 	db	116	;'t'
   740  00FE9C  6F                 	db	111	;'o'
   741  00FE9D  72                 	db	114	;'r'
   742  00FE9E  20                 	db	32
   743  00FE9F  61                 	db	97	;'a'
   744  00FEA0  6C                 	db	108	;'l'
   745  00FEA1  6C                 	db	108	;'l'
   746  00FEA2  20                 	db	32
   747  00FEA3  49                 	db	73	;'I'
   748  00FEA4  52                 	db	82	;'R'
   749  00FEA5  20                 	db	32
   750  00FEA6  74                 	db	116	;'t'
   751  00FEA7  72                 	db	114	;'r'
   752  00FEA8  61                 	db	97	;'a'
   753  00FEA9  66                 	db	102	;'f'
   754  00FEAA  66                 	db	102	;'f'
   755  00FEAB  69                 	db	105	;'i'
   756  00FEAC  63                 	db	99	;'c'
   757  00FEAD  2E                 	db	46
   758  00FEAE  0D                 	db	13
   759  00FEAF  0A                 	db	10
   760  00FEB0  00                 	db	0
   761  00FEB1                     STR_22:
   762  00FEB1  78                 	db	120	;'x'
   763  00FEB2  2F                 	db	47
   764  00FEB3  52                 	db	82	;'R'
   765  00FEB4  3A                 	db	58	;':'
   766  00FEB5  20                 	db	32
   767  00FEB6  64                 	db	100	;'d'
   768  00FEB7  65                 	db	101	;'e'
   769  00FEB8  63                 	db	99	;'c'
   770  00FEB9  6F                 	db	111	;'o'
   771  00FEBA  64                 	db	100	;'d'
   772  00FEBB  65                 	db	101	;'e'
   773  00FEBC  20                 	db	32
   774  00FEBD  74                 	db	116	;'t'
   775  00FEBE  78                 	db	120	;'x'
   776  00FEBF  2F                 	db	47
   777  00FEC0  52                 	db	82	;'R'
   778  00FEC1  58                 	db	88	;'X'
   779  00FEC2  20                 	db	32
   780  00FEC3  6D                 	db	109	;'m'
   781  00FEC4  65                 	db	101	;'e'
   782  00FEC5  73                 	db	115	;'s'
   783  00FEC6  73                 	db	115	;'s'
   784  00FEC7  61                 	db	97	;'a'
   785  00FEC8  67                 	db	103	;'g'
   786  00FEC9  65                 	db	101	;'e'
   787  00FECA  2E                 	db	46
   788  00FECB  0D                 	db	13
   789  00FECC  0A                 	db	10
   790  00FECD  00                 	db	0
   791  00FECE                     STR_14:
   792  00FECE  7A                 	db	122	;'z'
   793  00FECF  3A                 	db	58	;':'
   794  00FED0  20                 	db	32
   795  00FED1  43                 	db	67	;'C'
   796  00FED2  6C                 	db	108	;'l'
   797  00FED3  65                 	db	101	;'e'
   798  00FED4  61                 	db	97	;'a'
   799  00FED5  72                 	db	114	;'r'
   800  00FED6  20                 	db	32
   801  00FED7  74                 	db	116	;'t'
   802  00FED8  68                 	db	104	;'h'
   803  00FED9  65                 	db	101	;'e'
   804  00FEDA  20                 	db	32
   805  00FEDB  74                 	db	116	;'t'
   806  00FEDC  65                 	db	101	;'e'
   807  00FEDD  72                 	db	114	;'r'
   808  00FEDE  6D                 	db	109	;'m'
   809  00FEDF  69                 	db	105	;'i'
   810  00FEE0  6E                 	db	110	;'n'
   811  00FEE1  61                 	db	97	;'a'
   812  00FEE2  6C                 	db	108	;'l'
   813  00FEE3  0D                 	db	13
   814  00FEE4  0A                 	db	10
   815  00FEE5  00                 	db	0
   816  00FEE6                     STR_37:
   817  00FEE6  45                 	db	69	;'E'
   818  00FEE7  6E                 	db	110	;'n'
   819  00FEE8  74                 	db	116	;'t'
   820  00FEE9  65                 	db	101	;'e'
   821  00FEEA  72                 	db	114	;'r'
   822  00FEEB  20                 	db	32
   823  00FEEC  73                 	db	115	;'s'
   824  00FEED  6F                 	db	111	;'o'
   825  00FEEE  75                 	db	117	;'u'
   826  00FEEF  72                 	db	114	;'r'
   827  00FEF0  63                 	db	99	;'c'
   828  00FEF1  65                 	db	101	;'e'
   829  00FEF2  20                 	db	32
   830  00FEF3  61                 	db	97	;'a'
   831  00FEF4  64                 	db	100	;'d'
   832  00FEF5  64                 	db	100	;'d'
   833  00FEF6  72                 	db	114	;'r'
   834  00FEF7  65                 	db	101	;'e'
   835  00FEF8  73                 	db	115	;'s'
   836  00FEF9  73                 	db	115	;'s'
   837  00FEFA  3A                 	db	58	;':'
   838  00FEFB  20                 	db	32
   839  00FEFC  00                 	db	0
   840  00FEFD                     STR_3:
   841  00FEFD  44                 	db	68	;'D'
   842  00FEFE  65                 	db	101	;'e'
   843  00FEFF  76                 	db	118	;'v'
   844  00FF00  27                 	db	39
   845  00FF01  32                 	db	50	;'2'
   846  00FF02  31                 	db	49	;'1'
   847  00FF03  20                 	db	32
   848  00FF04  42                 	db	66	;'B'
   849  00FF05  6F                 	db	111	;'o'
   850  00FF06  61                 	db	97	;'a'
   851  00FF07  72                 	db	114	;'r'
   852  00FF08  64                 	db	100	;'d'
   853  00FF09  20                 	db	32
   854  00FF0A  77                 	db	119	;'w'
   855  00FF0B  69                 	db	105	;'i'
   856  00FF0C  72                 	db	114	;'r'
   857  00FF0D  69                 	db	105	;'i'
   858  00FF0E  6E                 	db	110	;'n'
   859  00FF0F  67                 	db	103	;'g'
   860  00FF10  0D                 	db	13
   861  00FF11  0A                 	db	10
   862  00FF12  00                 	db	0
   863  00FF13                     STR_42:
   864  00FF13  4A                 	db	74	;'J'
   865  00FF14  75                 	db	117	;'u'
   866  00FF15  73                 	db	115	;'s'
   867  00FF16  74                 	db	116	;'t'
   868  00FF17  20                 	db	32
   869  00FF18  72                 	db	114	;'r'
   870  00FF19  65                 	db	101	;'e'
   871  00FF1A  73                 	db	115	;'s'
   872  00FF1B  65                 	db	101	;'e'
   873  00FF1C  74                 	db	116	;'t'
   874  00FF1D  20                 	db	32
   875  00FF1E  45                 	db	69	;'E'
   876  00FF1F  55                 	db	85	;'U'
   877  00FF20  53                 	db	83	;'S'
   878  00FF21  41                 	db	65	;'A'
   879  00FF22  52                 	db	82	;'R'
   880  00FF23  54                 	db	84	;'T'
   881  00FF24  32                 	db	50	;'2'
   882  00FF25  0D                 	db	13
   883  00FF26  0A                 	db	10
   884  00FF27  00                 	db	0
   885  00FF28                     STR_13:
   886  00FF28  5A                 	db	90	;'Z'
   887  00FF29  3A                 	db	58	;':'
   888  00FF2A  20                 	db	32
   889  00FF2B  52                 	db	82	;'R'
   890  00FF2C  65                 	db	101	;'e'
   891  00FF2D  73                 	db	115	;'s'
   892  00FF2E  65                 	db	101	;'e'
   893  00FF2F  74                 	db	116	;'t'
   894  00FF30  20                 	db	32
   895  00FF31  70                 	db	112	;'p'
   896  00FF32  72                 	db	114	;'r'
   897  00FF33  6F                 	db	111	;'o'
   898  00FF34  63                 	db	99	;'c'
   899  00FF35  65                 	db	101	;'e'
   900  00FF36  73                 	db	115	;'s'
   901  00FF37  73                 	db	115	;'s'
   902  00FF38  6F                 	db	111	;'o'
   903  00FF39  72                 	db	114	;'r'
   904  00FF3A  0D                 	db	13
   905  00FF3B  0A                 	db	10
   906  00FF3C  00                 	db	0
   907  00FF3D                     STR_39:
   908  00FF3D  6A                 	db	106	;'j'
   909  00FF3E  75                 	db	117	;'u'
   910  00FF3F  73                 	db	115	;'s'
   911  00FF40  74                 	db	116	;'t'
   912  00FF41  20                 	db	32
   913  00FF42  73                 	db	115	;'s'
   914  00FF43  65                 	db	101	;'e'
   915  00FF44  6E                 	db	110	;'n'
   916  00FF45  74                 	db	116	;'t'
   917  00FF46  20                 	db	32
   918  00FF47  25                 	db	37
   919  00FF48  63                 	db	99	;'c'
   920  00FF49  20                 	db	32
   921  00FF4A  20                 	db	32
   922  00FF4B  20                 	db	32
   923  00FF4C  20                 	db	32
   924  00FF4D  25                 	db	37
   925  00FF4E  78                 	db	120	;'x'
   926  00FF4F  0D                 	db	13
   927  00FF50  0A                 	db	10
   928  00FF51  00                 	db	0
   929  00FF52                     STR_15:
   930  00FF52  62                 	db	98	;'b'
   931  00FF53  3A                 	db	58	;':'
   932  00FF54  20                 	db	32
   933  00FF55  73                 	db	115	;'s'
   934  00FF56  65                 	db	101	;'e'
   935  00FF57  74                 	db	116	;'t'
   936  00FF58  20                 	db	32
   937  00FF59  42                 	db	66	;'B'
   938  00FF5A  61                 	db	97	;'a'
   939  00FF5B  75                 	db	117	;'u'
   940  00FF5C  64                 	db	100	;'d'
   941  00FF5D  20                 	db	32
   942  00FF5E  72                 	db	114	;'r'
   943  00FF5F  61                 	db	97	;'a'
   944  00FF60  74                 	db	116	;'t'
   945  00FF61  65                 	db	101	;'e'
   946  00FF62  0D                 	db	13
   947  00FF63  0A                 	db	10
   948  00FF64  00                 	db	0
   949  00FF65                     STR_43:
   950  00FF65  55                 	db	85	;'U'
   951  00FF66  6E                 	db	110	;'n'
   952  00FF67  6B                 	db	107	;'k'
   953  00FF68  6E                 	db	110	;'n'
   954  00FF69  6F                 	db	111	;'o'
   955  00FF6A  77                 	db	119	;'w'
   956  00FF6B  6E                 	db	110	;'n'
   957  00FF6C  20                 	db	32
   958  00FF6D  6B                 	db	107	;'k'
   959  00FF6E  65                 	db	101	;'e'
   960  00FF6F  79                 	db	121	;'y'
   961  00FF70  20                 	db	32
   962  00FF71  25                 	db	37
   963  00FF72  63                 	db	99	;'c'
   964  00FF73  0D                 	db	13
   965  00FF74  0A                 	db	10
   966  00FF75  00                 	db	0
   967  00FF76                     STR_34:
   968  00FF76  09                 	db	9
   969  00FF77  63                 	db	99	;'c'
   970  00FF78  68                 	db	104	;'h'
   971  00FF79  65                 	db	101	;'e'
   972  00FF7A  63                 	db	99	;'c'
   973  00FF7B  6B                 	db	107	;'k'
   974  00FF7C  73                 	db	115	;'s'
   975  00FF7D  75                 	db	117	;'u'
   976  00FF7E  6D                 	db	109	;'m'
   977  00FF7F  3A                 	db	58	;':'
   978  00FF80  20                 	db	32
   979  00FF81  25                 	db	37
   980  00FF82  64                 	db	100	;'d'
   981  00FF83  0D                 	db	13
   982  00FF84  0A                 	db	10
   983  00FF85  00                 	db	0
   984  00FF86                     STR_11:
   985  00FF86  3F                 	db	63	;'?'
   986  00FF87  3A                 	db	58	;':'
   987  00FF88  20                 	db	32
   988  00FF89  68                 	db	104	;'h'
   989  00FF8A  65                 	db	101	;'e'
   990  00FF8B  6C                 	db	108	;'l'
   991  00FF8C  70                 	db	112	;'p'
   992  00FF8D  20                 	db	32
   993  00FF8E  6D                 	db	109	;'m'
   994  00FF8F  65                 	db	101	;'e'
   995  00FF90  6E                 	db	110	;'n'
   996  00FF91  75                 	db	117	;'u'
   997  00FF92  0D                 	db	13
   998  00FF93  0A                 	db	10
   999  00FF94  00                 	db	0
  1000  00FF95                     STR_8:
  1001  00FF95  32                 	db	50	;'2'
  1002  00FF96  34                 	db	52	;'4'
  1003  00FF97  30                 	db	48	;'0'
  1004  00FF98  30                 	db	48	;'0'
  1005  00FF99  20                 	db	32
  1006  00FF9A  42                 	db	66	;'B'
  1007  00FF9B  61                 	db	97	;'a'
  1008  00FF9C  75                 	db	117	;'u'
  1009  00FF9D  64                 	db	100	;'d'
  1010  00FF9E  0D                 	db	13
  1011  00FF9F  0A                 	db	10
  1012  00FFA0  00                 	db	0
  1013  00FFA1                     STR_35:
  1014  00FFA1  09                 	db	9
  1015  00FFA2  53                 	db	83	;'S'
  1016  00FFA3  52                 	db	82	;'R'
  1017  00FFA4  43                 	db	67	;'C'
  1018  00FFA5  3A                 	db	58	;':'
  1019  00FFA6  20                 	db	32
  1020  00FFA7  25                 	db	37
  1021  00FFA8  64                 	db	100	;'d'
  1022  00FFA9  0D                 	db	13
  1023  00FFAA  0A                 	db	10
  1024  00FFAB  00                 	db	0
  1025  00FFAC                     STR_36:
  1026  00FFAC  09                 	db	9
  1027  00FFAD  44                 	db	68	;'D'
  1028  00FFAE  45                 	db	69	;'E'
  1029  00FFAF  53                 	db	83	;'S'
  1030  00FFB0  3A                 	db	58	;':'
  1031  00FFB1  20                 	db	32
  1032  00FFB2  25                 	db	37
  1033  00FFB3  64                 	db	100	;'d'
  1034  00FFB4  0D                 	db	13
  1035  00FFB5  0A                 	db	10
  1036  00FFB6  00                 	db	0
  1037  00FFB7                     STR_31:
  1038  00FFB7  09                 	db	9
  1039  00FFB8  4D                 	db	77	;'M'
  1040  00FFB9  65                 	db	101	;'e'
  1041  00FFBA  73                 	db	115	;'s'
  1042  00FFBB  73                 	db	115	;'s'
  1043  00FFBC  61                 	db	97	;'a'
  1044  00FFBD  67                 	db	103	;'g'
  1045  00FFBE  65                 	db	101	;'e'
  1046  00FFBF  3A                 	db	58	;':'
  1047  00FFC0  20                 	db	32
  1048  00FFC1  00                 	db	0
  1049  00FFC2                     STR_9:
  1050  00FFC2  50                 	db	80	;'P'
  1051  00FFC3  52                 	db	82	;'R'
  1052  00FFC4  32                 	db	50	;'2'
  1053  00FFC5  3A                 	db	58	;':'
  1054  00FFC6  20                 	db	32
  1055  00FFC7  25                 	db	37
  1056  00FFC8  64                 	db	100	;'d'
  1057  00FFC9  0D                 	db	13
  1058  00FFCA  0A                 	db	10
  1059  00FFCB  00                 	db	0
  1060  00FFCC                     STR_45:
  1061  00FFCC  44                 	db	68	;'D'
  1062  00FFCD  69                 	db	105	;'i'
  1063  00FFCE  67                 	db	103	;'g'
  1064  00FFCF  69                 	db	105	;'i'
  1065  00FFD0  74                 	db	116	;'t'
  1066  00FFD1  3A                 	db	58	;':'
  1067  00FFD2  20                 	db	32
  1068  00FFD3  25                 	db	37
  1069  00FFD4  64                 	db	100	;'d'
  1070  00FFD5  00                 	db	0
  1071  00FFD6                     STR_1:
  1072  00FFD6  4C                 	db	76	;'L'
  1073  00FFD7  61                 	db	97	;'a'
  1074  00FFD8  62                 	db	98	;'b'
  1075  00FFD9  20                 	db	32
  1076  00FFDA  37                 	db	55	;'7'
  1077  00FFDB  0D                 	db	13
  1078  00FFDC  0A                 	db	10
  1079  00FFDD  00                 	db	0
  1080  00FFDE                     STR_24:
  1081  00FFDE  6F                 	db	111	;'o'
  1082  00FFDF  3A                 	db	58	;':'
  1083  00FFE0  09                 	db	9
  1084  00FFE1  6F                 	db	111	;'o'
  1085  00FFE2  6B                 	db	107	;'k'
  1086  00FFE3  0D                 	db	13
  1087  00FFE4  0A                 	db	10
  1088  00FFE5  00                 	db	0
  1089  00FFE6                     STR_38:
  1090  00FFE6  53                 	db	83	;'S'
  1091  00FFE7  52                 	db	82	;'R'
  1092  00FFE8  43                 	db	67	;'C'
  1093  00FFE9  3A                 	db	58	;':'
  1094  00FFEA  20                 	db	32
  1095  00FFEB  25                 	db	37
  1096  00FFEC  64                 	db	100	;'d'
  1097  00FFED  00                 	db	0
  1098  00FFEE                     STR_12:
  1099  00FFEE  6F                 	db	111	;'o'
  1100  00FFEF  3A                 	db	58	;':'
  1101  00FFF0  20                 	db	32
  1102  00FFF1  6B                 	db	107	;'k'
  1103  00FFF2  0D                 	db	13
  1104  00FFF3  0A                 	db	10
  1105  00FFF4  00                 	db	0
  1106  00FFF5                     STR_6:
  1107  00FFF5  0D                 	db	13
  1108  00FFF6  0A                 	db	10
  1109  00FFF7  3E                 	db	62	;'>'
  1110  00FFF8  20                 	db	32
  1111  00FFF9  00                 	db	0
  1112  00FFFA                     STR_29:
  1113  00FFFA  25                 	db	37
  1114  00FFFB  63                 	db	99	;'c'
  1115  00FFFC  00                 	db	0
  1116  00FFFD                     STR_28:
  1117  00FFFD  3E                 	db	62	;'>'
  1118  00FFFE  00                 	db	0
  1119  00FFFF  00                 	db	0	; dummy byte at the end
  1120  0000                     
  1121                           ; #config settings
  1122                           
  1123                           	psect	cinit
  1124  0014A2                     __pcinit:
  1125                           	callstack 0
  1126  0014A2                     start_initialization:
  1127                           	callstack 0
  1128  0014A2                     __initialization:
  1129                           	callstack 0
  1130                           
  1131                           ; Initialize objects allocated to BANK0 (3 bytes)
  1132                           ; load TBLPTR registers with __pidataBANK0
  1133  0014A2  0E5C               	movlw	low __pidataBANK0
  1134  0014A4  6EF6               	movwf	tblptrl,c
  1135  0014A6  0E1A               	movlw	high __pidataBANK0
  1136  0014A8  6EF7               	movwf	tblptrh,c
  1137  0014AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1138  0014AC  6EF8               	movwf	tblptru,c
  1139  0014AE  0009               	tblrd		*+	;fetch initializer
  1140  0014B0  CFF5 F0F0          	movff	tablat,__pdataBANK0
  1141  0014B4  0009               	tblrd		*+	;fetch initializer
  1142  0014B6  CFF5 F0F1          	movff	tablat,__pdataBANK0+1
  1143  0014BA  0009               	tblrd		*+	;fetch initializer
  1144  0014BC  CFF5 F0F2          	movff	tablat,__pdataBANK0+2
  1145                           
  1146                           ; Initialize objects allocated to COMRAM (1 bytes)
  1147                           ; load TBLPTR registers with __pidataCOMRAM
  1148  0014C0  0E62               	movlw	low __pidataCOMRAM
  1149  0014C2  6EF6               	movwf	tblptrl,c
  1150  0014C4  0E1A               	movlw	high __pidataCOMRAM
  1151  0014C6  6EF7               	movwf	tblptrh,c
  1152  0014C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1153  0014CA  6EF8               	movwf	tblptru,c
  1154  0014CC  0009               	tblrd		*+	;fetch initializer
  1155  0014CE  CFF5 F056          	movff	tablat,__pdataCOMRAM
  1156                           
  1157                           ; Clear objects allocated to BANK1 (32 bytes)
  1158  0014D2  EE01  F000         	lfsr	0,__pbssBANK1
  1159  0014D6  0E20               	movlw	32
  1160  0014D8                     clear_0:
  1161  0014D8  6AEE               	clrf	postinc0,c
  1162  0014DA  06E8               	decf	wreg,f,c
  1163  0014DC  E1FD               	bnz	clear_0
  1164                           
  1165                           ; Clear objects allocated to BANK0 (89 bytes)
  1166  0014DE  EE00  F060         	lfsr	0,__pbssBANK0
  1167  0014E2  0E59               	movlw	89
  1168  0014E4                     clear_1:
  1169  0014E4  6AEE               	clrf	postinc0,c
  1170  0014E6  06E8               	decf	wreg,f,c
  1171  0014E8  E1FD               	bnz	clear_1
  1172                           
  1173                           ; Clear objects allocated to COMRAM (7 bytes)
  1174  0014EA  EE00  F04F         	lfsr	0,__pbssCOMRAM
  1175  0014EE  0E07               	movlw	7
  1176  0014F0                     clear_2:
  1177  0014F0  6AEE               	clrf	postinc0,c
  1178  0014F2  06E8               	decf	wreg,f,c
  1179  0014F4  E1FD               	bnz	clear_2
  1180  0014F6                     end_of_initialization:
  1181                           	callstack 0
  1182  0014F6                     __end_of__initialization:
  1183                           	callstack 0
  1184  0014F6  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1185  0014F8  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1186  0014FA  0100               	movlb	0
  1187  0014FC  EF28  F000         	goto	_main	;jump to C main() function
  1188                           
  1189                           	psect	bssCOMRAM
  1190  00004F                     __pbssCOMRAM:
  1191                           	callstack 0
  1192  00004F                     _width:
  1193                           	callstack 0
  1194  00004F                     	ds	2
  1195  000051                     _prec:
  1196                           	callstack 0
  1197  000051                     	ds	2
  1198  000053                     _flags:
  1199                           	callstack 0
  1200  000053                     	ds	2
  1201  000055                     _newCharacterToSend:
  1202                           	callstack 0
  1203  000055                     	ds	1
  1204                           
  1205                           	psect	dataCOMRAM
  1206  000056                     __pdataCOMRAM:
  1207                           	callstack 0
  1208  000056                     myTMR1ISR@mask:
  1209                           	callstack 0
  1210  000056                     	ds	1
  1211                           
  1212                           	psect	bssBANK0
  1213  000060                     __pbssBANK0:
  1214                           	callstack 0
  1215  000060                     _transmitIRBuffer:
  1216                           	callstack 0
  1217  000060                     	ds	32
  1218  000080                     _nout:
  1219                           	callstack 0
  1220  000080                     	ds	2
  1221  000082                     _EUSART1_ErrorHandler:
  1222                           	callstack 0
  1223  000082                     	ds	2
  1224  000084                     _EUSART1_OverrunErrorHandler:
  1225                           	callstack 0
  1226  000084                     	ds	2
  1227  000086                     _EUSART1_FramingErrorHandler:
  1228                           	callstack 0
  1229  000086                     	ds	2
  1230  000088                     _EUSART2_ErrorHandler:
  1231                           	callstack 0
  1232  000088                     	ds	2
  1233  00008A                     _EUSART2_OverrunErrorHandler:
  1234                           	callstack 0
  1235  00008A                     	ds	2
  1236  00008C                     _EUSART2_FramingErrorHandler:
  1237                           	callstack 0
  1238  00008C                     	ds	2
  1239  00008E                     _TMR1_InterruptHandler:
  1240                           	callstack 0
  1241  00008E                     	ds	2
  1242  000090                     _timer1ReloadVal:
  1243                           	callstack 0
  1244  000090                     	ds	2
  1245  000092                     _eusart1RxLastError:
  1246                           	callstack 0
  1247  000092                     	ds	1
  1248  000093                     _eusart2RxLastError:
  1249                           	callstack 0
  1250  000093                     	ds	1
  1251  000094                     myTMR1ISR@tmr1ISRstate:
  1252                           	callstack 0
  1253  000094                     	ds	1
  1254  000095                     _receiveNewMessage:
  1255                           	callstack 0
  1256  000095                     	ds	1
  1257  000096                     _receiveBusy:
  1258                           	callstack 0
  1259  000096                     	ds	1
  1260  000097                     _transmitBusy:
  1261                           	callstack 0
  1262  000097                     	ds	1
  1263  000098                     _transmitStart:
  1264                           	callstack 0
  1265  000098                     	ds	1
  1266  000099                     _dbuf:
  1267                           	callstack 0
  1268  000099                     	ds	32
  1269                           
  1270                           	psect	dataBANK0
  1271  0000F0                     __pdataBANK0:
  1272                           	callstack 0
  1273  0000F0                     _bitPeriodInTMR1Counts:
  1274                           	callstack 0
  1275  0000F0                     	ds	2
  1276  0000F2                     _letter:
  1277                           	callstack 0
  1278  0000F2                     	ds	1
  1279                           
  1280                           	psect	bssBANK1
  1281  000100                     __pbssBANK1:
  1282                           	callstack 0
  1283  000100                     _recieveIRBuffer:
  1284                           	callstack 0
  1285  000100                     	ds	32
  1286                           
  1287                           	psect	cstackBANK0
  1288  0000B9                     __pcstackBANK0:
  1289                           	callstack 0
  1290  0000B9                     ?_vfpfcnvrt:
  1291                           	callstack 0
  1292  0000B9                     vfpfcnvrt@fp:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x0
  1296  0000B9                     	ds	2
  1297  0000BB                     vfpfcnvrt@fmt:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x2
  1301  0000BB                     	ds	2
  1302  0000BD                     vfpfcnvrt@ap:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x4
  1306  0000BD                     	ds	2
  1307  0000BF                     ??_vfpfcnvrt:
  1308                           
  1309                           ; 1 bytes @ 0x6
  1310  0000BF                     	ds	4
  1311  0000C3                     vfpfcnvrt@ll:
  1312                           	callstack 0
  1313                           
  1314                           ; 8 bytes @ 0xA
  1315  0000C3                     	ds	8
  1316  0000CB                     vfpfcnvrt@llu:
  1317                           	callstack 0
  1318                           
  1319                           ; 8 bytes @ 0x12
  1320  0000CB                     	ds	8
  1321  0000D3                     vfpfcnvrt@c:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x1A
  1325  0000D3                     	ds	1
  1326  0000D4                     ?_vfprintf:
  1327                           	callstack 0
  1328  0000D4                     vfprintf@fp:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x1B
  1332  0000D4                     	ds	2
  1333  0000D6                     vfprintf@fmt:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x1D
  1337  0000D6                     	ds	2
  1338  0000D8                     vfprintf@ap:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x1F
  1342  0000D8                     	ds	2
  1343  0000DA                     ?_printf:
  1344                           	callstack 0
  1345  0000DA                     printf@fmt:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x21
  1349  0000DA                     	ds	8
  1350  0000E2                     printf@ap:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x29
  1354  0000E2                     	ds	2
  1355  0000E4                     ??_userEnter8bit:
  1356                           
  1357                           ; 1 bytes @ 0x2B
  1358  0000E4                     	ds	2
  1359  0000E6                     userEnter8bit@cmd:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x2D
  1363  0000E6                     	ds	1
  1364  0000E7                     userEnter8bit@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 1 bytes @ 0x2E
  1368  0000E7                     	ds	1
  1369  0000E8                     userEnter8bit@digit:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x2F
  1373  0000E8                     	ds	1
  1374  0000E9                     userEnter8bit@num:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x30
  1378  0000E9                     	ds	1
  1379  0000EA                     ??_main:
  1380                           
  1381                           ; 1 bytes @ 0x31
  1382  0000EA                     	ds	2
  1383  0000EC                     main@cksum:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x33
  1387  0000EC                     	ds	1
  1388  0000ED                     main@cmd:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x34
  1392  0000ED                     	ds	1
  1393  0000EE                     main@i:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x35
  1397  0000EE                     	ds	1
  1398  0000EF                     main@ind:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x36
  1402  0000EF                     	ds	1
  1403                           
  1404                           	psect	cstackCOMRAM
  1405  000001                     __pcstackCOMRAM:
  1406                           	callstack 0
  1407  000001                     i2EPWM2_LoadDutyValue@dutyValue:
  1408                           	callstack 0
  1409  000001                     i2TMR1_WriteTimer@timerVal:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x0
  1413  000001                     	ds	2
  1414  000003                     ??i2_EPWM2_LoadDutyValue:
  1415  000003                     
  1416                           ; 1 bytes @ 0x2
  1417  000003                     	ds	2
  1418  000005                     ??_myTMR1ISR:
  1419                           
  1420                           ; 1 bytes @ 0x4
  1421  000005                     	ds	2
  1422  000007                     ??_INTERRUPT_InterruptManager:
  1423                           
  1424                           ; 1 bytes @ 0x6
  1425  000007                     	ds	2
  1426  000009                     ?_strlen:
  1427                           	callstack 0
  1428  000009                     ?_isupper:
  1429                           	callstack 0
  1430  000009                     ?_isalpha:
  1431                           	callstack 0
  1432  000009                     ?_islower:
  1433                           	callstack 0
  1434  000009                     ?___aodiv:
  1435                           	callstack 0
  1436  000009                     ?___aomod:
  1437                           	callstack 0
  1438  000009                     EUSART1_Write@txData:
  1439                           	callstack 0
  1440  000009                     EPWM2_LoadDutyValue@dutyValue:
  1441                           	callstack 0
  1442  000009                     TMR1_WriteTimer@timerVal:
  1443                           	callstack 0
  1444  000009                     TMR1_SetInterruptHandler@InterruptHandler:
  1445                           	callstack 0
  1446  000009                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1447                           	callstack 0
  1448  000009                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1449                           	callstack 0
  1450  000009                     EUSART2_SetErrorHandler@interruptHandler:
  1451                           	callstack 0
  1452  000009                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1453                           	callstack 0
  1454  000009                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1455                           	callstack 0
  1456  000009                     EUSART1_SetErrorHandler@interruptHandler:
  1457                           	callstack 0
  1458  000009                     isalpha@c:
  1459                           	callstack 0
  1460  000009                     isupper@c:
  1461                           	callstack 0
  1462  000009                     strlen@s:
  1463                           	callstack 0
  1464  000009                     islower@c:
  1465                           	callstack 0
  1466  000009                     ___aodiv@dividend:
  1467                           	callstack 0
  1468  000009                     ___aomod@dividend:
  1469                           	callstack 0
  1470                           
  1471                           ; 8 bytes @ 0x8
  1472  000009                     	ds	1
  1473  00000A                     putch@txData:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x9
  1477  00000A                     	ds	1
  1478  00000B                     ??_isupper:
  1479  00000B                     ??_isalpha:
  1480  00000B                     ??_islower:
  1481  00000B                     ??_EPWM2_LoadDutyValue:
  1482  00000B                     fputc@c:
  1483                           	callstack 0
  1484  00000B                     strlen@a:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0xA
  1488  00000B                     	ds	2
  1489  00000D                     fputc@fp:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0xC
  1493  00000D                     	ds	2
  1494  00000F                     ??_fputc:
  1495  00000F                     ?_toupper:
  1496                           	callstack 0
  1497  00000F                     toupper@c:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0xE
  1501  00000F                     	ds	2
  1502  000011                     ??_toupper:
  1503  000011                     ___aodiv@divisor:
  1504                           	callstack 0
  1505  000011                     ___aomod@divisor:
  1506                           	callstack 0
  1507                           
  1508                           ; 8 bytes @ 0x10
  1509  000011                     	ds	3
  1510  000014                     fputs@s:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x13
  1514  000014                     	ds	1
  1515  000015                     _toupper$1983:
  1516                           	callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x14
  1519  000015                     	ds	1
  1520  000016                     fputs@fp:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x15
  1524  000016                     	ds	2
  1525  000018                     fputs@c:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x17
  1529  000018                     	ds	1
  1530  000019                     ___aodiv@counter:
  1531                           	callstack 0
  1532  000019                     ___aomod@counter:
  1533                           	callstack 0
  1534  000019                     fputs@i:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x18
  1538  000019                     	ds	1
  1539  00001A                     ___aodiv@sign:
  1540                           	callstack 0
  1541  00001A                     ___aomod@sign:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x19
  1545  00001A                     	ds	1
  1546  00001B                     ?_abs:
  1547                           	callstack 0
  1548  00001B                     ?_pad:
  1549                           	callstack 0
  1550  00001B                     pad@fp:
  1551                           	callstack 0
  1552  00001B                     abs@a:
  1553                           	callstack 0
  1554  00001B                     ___aodiv@quotient:
  1555                           	callstack 0
  1556                           
  1557                           ; 8 bytes @ 0x1A
  1558  00001B                     	ds	2
  1559  00001D                     ??_abs:
  1560  00001D                     pad@buf:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x1C
  1564  00001D                     	ds	2
  1565  00001F                     pad@p:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x1E
  1569  00001F                     	ds	2
  1570  000021                     ??_pad:
  1571                           
  1572                           ; 1 bytes @ 0x20
  1573  000021                     	ds	1
  1574  000022                     pad@i:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x21
  1578  000022                     	ds	2
  1579  000024                     pad@w:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x23
  1583  000024                     	ds	2
  1584  000026                     ?_ctoa:
  1585                           	callstack 0
  1586  000026                     ?_dtoa:
  1587                           	callstack 0
  1588  000026                     ?_xtoa:
  1589                           	callstack 0
  1590  000026                     ctoa@fp:
  1591                           	callstack 0
  1592  000026                     dtoa@fp:
  1593                           	callstack 0
  1594  000026                     xtoa@fp:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x25
  1598  000026                     	ds	2
  1599  000028                     ctoa@c:
  1600                           	callstack 0
  1601  000028                     dtoa@d:
  1602                           	callstack 0
  1603  000028                     xtoa@d:
  1604                           	callstack 0
  1605                           
  1606                           ; 8 bytes @ 0x27
  1607  000028                     	ds	1
  1608  000029                     ctoa@w:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x28
  1612  000029                     	ds	7
  1613  000030                     ??_dtoa:
  1614  000030                     xtoa@x:
  1615                           	callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x2F
  1618  000030                     	ds	1
  1619  000031                     ??_xtoa:
  1620                           
  1621                           ; 1 bytes @ 0x30
  1622  000031                     	ds	7
  1623  000038                     _dtoa$1893:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x37
  1627  000038                     	ds	1
  1628  000039                     _xtoa$1903:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x38
  1632  000039                     	ds	1
  1633  00003A                     dtoa@p:
  1634                           	callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x39
  1637  00003A                     	ds	1
  1638  00003B                     _xtoa$1904:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x3A
  1642  00003B                     	ds	1
  1643  00003C                     dtoa@w:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x3B
  1647  00003C                     	ds	1
  1648  00003D                     xtoa@p:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x3C
  1652  00003D                     	ds	1
  1653  00003E                     dtoa@s:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x3D
  1657  00003E                     	ds	1
  1658  00003F                     xtoa@w:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x3E
  1662  00003F                     	ds	1
  1663  000040                     dtoa@n:
  1664                           	callstack 0
  1665                           
  1666                           ; 8 bytes @ 0x3F
  1667  000040                     	ds	1
  1668  000041                     xtoa@n:
  1669                           	callstack 0
  1670                           
  1671                           ; 8 bytes @ 0x40
  1672  000041                     	ds	7
  1673  000048                     dtoa@i:
  1674                           	callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x47
  1677  000048                     	ds	1
  1678  000049                     xtoa@i:
  1679                           	callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x48
  1682  000049                     	ds	2
  1683  00004B                     xtoa@c:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x4A
  1687  00004B                     	ds	2
  1688  00004D                     vfprintf@cfmt:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x4C
  1692  00004D                     	ds	2
  1693  00004F                     
  1694                           ; 1 bytes @ 0x4E
  1695 ;;
  1696 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1697 ;;
  1698 ;; *************** function _main *****************
  1699 ;; Defined at:
  1700 ;;		line 49 in file "main.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  ind             1   54[BANK0 ] unsigned char 
  1705 ;;  cksum           1   51[BANK0 ] unsigned char 
  1706 ;;  i               1   53[BANK0 ] unsigned char 
  1707 ;;  cmd             1   52[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;Total ram usage:        6 bytes
  1722 ;; Hardware stack levels required when called:   14
  1723 ;; This function calls:
  1724 ;;		_EPWM2_LoadDutyValue
  1725 ;;		_EUSART1_Read
  1726 ;;		_EUSART1_is_rx_ready
  1727 ;;		_EUSART2_Read
  1728 ;;		_EUSART2_is_rx_ready
  1729 ;;		_SYSTEM_Initialize
  1730 ;;		_TMR1_SetInterruptHandler
  1731 ;;		_TMR1_WriteTimer
  1732 ;;		_printf
  1733 ;;		_userEnter8bit
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text0
  1740  000050                     __ptext0:
  1741                           	callstack 0
  1742  000050                     _main:
  1743                           	callstack 17
  1744  000050                     
  1745                           ;main.c: 51:     printf("Dev'21 Board wiring\r\n");;main.c: 52:     printf("Install a ju
      +                          mper wire from RC0 to RB7 ONLY AFTER unplugging PICKit3\r\n");;main.c: 54:     printf("\
      +                          r\n> ");
  1746  000050  ECAE  F00C         	call	_SYSTEM_Initialize	;wreg free
  1747                           
  1748                           ;main.c: 55: 
  1749  000054  0E00               	movlw	0
  1750  000056  6E0A               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1751  000058  0E00               	movlw	0
  1752  00005A  6E09               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1753  00005C  ECED  F00B         	call	_EPWM2_LoadDutyValue	;wreg free
  1754  000060                     
  1755                           ;main.c: 60:             switch (cmd) {
  1756  000060  0E00               	movlw	0
  1757  000062  6E0A               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  1758  000064  0E00               	movlw	0
  1759  000066  6E09               	movwf	TMR1_WriteTimer@timerVal^0,c
  1760  000068  EC86  F00C         	call	_TMR1_WriteTimer	;wreg free
  1761  00006C                     
  1762                           ;main.c: 61: 
  1763  00006C  909E               	bcf	158,0,c	;volatile
  1764  00006E                     l254:
  1765  00006E  A09E               	btfss	158,0,c	;volatile
  1766  000070  EF3C  F000         	goto	u2981
  1767  000074  EF3E  F000         	goto	u2980
  1768  000078                     u2981:
  1769  000078  EF37  F000         	goto	l254
  1770  00007C                     u2980:
  1771  00007C                     
  1772                           ;main.c: 65:                 case '?':
  1773  00007C  ECF2  F00C         	call	_EUSART2_is_rx_ready	;wreg free
  1774  000080  0900               	iorlw	0
  1775  000082  B4D8               	btfsc	status,2,c
  1776  000084  EF46  F000         	goto	u2991
  1777  000088  EF48  F000         	goto	u2990
  1778  00008C                     u2991:
  1779  00008C  EF4A  F000         	goto	l257
  1780  000090                     u2990:
  1781  000090  EC5D  F00C         	call	_EUSART2_Read	;wreg free
  1782  000094                     l257:
  1783                           
  1784                           ;main.c: 66:                     printf("-----------------------------------------------
      +                          --\r\n");
  1785  000094  ECF2  F00C         	call	_EUSART2_is_rx_ready	;wreg free
  1786  000098  0900               	iorlw	0
  1787  00009A  B4D8               	btfsc	status,2,c
  1788  00009C  EF52  F000         	goto	u3001
  1789  0000A0  EF54  F000         	goto	u3000
  1790  0000A4                     u3001:
  1791  0000A4  EF56  F000         	goto	l3588
  1792  0000A8                     u3000:
  1793  0000A8  EC5D  F00C         	call	_EUSART2_Read	;wreg free
  1794  0000AC                     l3588:
  1795                           
  1796                           ;main.c: 68:                     printf("PR2: %d\r\n", PR2);
  1797  0000AC  0E12               	movlw	low _myTMR1ISR
  1798  0000AE  6E09               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1799  0000B0  0E12               	movlw	high _myTMR1ISR
  1800  0000B2  6E0A               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1801  0000B4  EC09  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
  1802  0000B8                     
  1803                           ;main.c: 69:                     printf("-----------------------------------------------
      +                          --\r\n");
  1804  0000B8  8CF2               	bsf	242,6,c	;volatile
  1805  0000BA                     
  1806                           ;main.c: 70:                     printf("?: help menu\r\n");
  1807  0000BA  8EF2               	bsf	242,7,c	;volatile
  1808  0000BC                     
  1809                           ;main.c: 73:                     printf("z: Clear the terminal\r\n");
  1810  0000BC  0ED6               	movlw	low STR_1
  1811  0000BE  0100               	movlb	0	; () banked
  1812  0000C0  6FDA               	movwf	printf@fmt& (0+255),b
  1813  0000C2  0EFF               	movlw	high STR_1
  1814  0000C4  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1815  0000C6  EC72  F00C         	call	_printf	;wreg free
  1816  0000CA                     
  1817                           ;main.c: 74:                     printf("b: set Baud rate\r\n");
  1818  0000CA  0EC8               	movlw	low STR_2
  1819  0000CC  0100               	movlb	0	; () banked
  1820  0000CE  6FDA               	movwf	printf@fmt& (0+255),b
  1821  0000D0  0EFD               	movlw	high STR_2
  1822  0000D2  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1823  0000D4  EC72  F00C         	call	_printf	;wreg free
  1824  0000D8                     
  1825                           ;main.c: 75:                     printf("m: create a NULL terminated message with SRC an
      +                          d DEST prefix.\r\n");
  1826  0000D8  0EFD               	movlw	low STR_3
  1827  0000DA  0100               	movlb	0	; () banked
  1828  0000DC  6FDA               	movwf	printf@fmt& (0+255),b
  1829  0000DE  0EFE               	movlw	high STR_3
  1830  0000E0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1831  0000E2  EC72  F00C         	call	_printf	;wreg free
  1832  0000E6                     
  1833                           ;main.c: 76:                     printf("s: set source transmit identity\r\n");
  1834  0000E6  0E89               	movlw	low STR_4
  1835  0000E8  0100               	movlb	0	; () banked
  1836  0000EA  6FDA               	movwf	printf@fmt& (0+255),b
  1837  0000EC  0EFC               	movlw	high STR_4
  1838  0000EE  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1839  0000F0  EC72  F00C         	call	_printf	;wreg free
  1840  0000F4                     
  1841                           ;main.c: 77:                     printf("d: set Destination transmit target\r\n");
  1842  0000F4  0E75               	movlw	low STR_5
  1843  0000F6  0100               	movlb	0	; () banked
  1844  0000F8  6FDA               	movwf	printf@fmt& (0+255),b
  1845  0000FA  0EFD               	movlw	high STR_5
  1846  0000FC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1847  0000FE  EC72  F00C         	call	_printf	;wreg free
  1848  000102                     
  1849                           ;main.c: 78:                     printf("S: Send message using TMR1 ISR\r\n");
  1850  000102  0EF5               	movlw	low STR_6
  1851  000104  0100               	movlb	0	; () banked
  1852  000106  6FDA               	movwf	printf@fmt& (0+255),b
  1853  000108  0EFF               	movlw	high STR_6
  1854  00010A  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1855  00010C  EC72  F00C         	call	_printf	;wreg free
  1856  000110                     l3606:
  1857                           
  1858                           ;main.c: 82:                     printf("-----------------------------------------------
      +                          --\r\n");
  1859  000110  ECE8  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  1860  000114  0900               	iorlw	0
  1861  000116  B4D8               	btfsc	status,2,c
  1862  000118  EF90  F000         	goto	u3011
  1863  00011C  EF92  F000         	goto	u3010
  1864  000120                     u3011:
  1865  000120  EF88  F000         	goto	l3606
  1866  000124                     u3010:
  1867  000124                     
  1868                           ;main.c: 83:                     break;
  1869  000124  EC33  F00C         	call	_EUSART1_Read	;wreg free
  1870  000128  0100               	movlb	0	; () banked
  1871  00012A  6FED               	movwf	main@cmd& (0+255),b
  1872                           
  1873                           ;main.c: 84: 
  1874  00012C  EF70  F002         	goto	l3712
  1875  000130                     l3610:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 90:                     break;
  1879  000130  0E0F               	movlw	low STR_7
  1880  000132  6FDA               	movwf	printf@fmt& (0+255),b
  1881  000134  0EFD               	movlw	high STR_7
  1882  000136  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1883  000138  EC72  F00C         	call	_printf	;wreg free
  1884                           
  1885                           ;main.c: 91: 
  1886  00013C  0E95               	movlw	low STR_8
  1887  00013E  0100               	movlb	0	; () banked
  1888  000140  6FDA               	movwf	printf@fmt& (0+255),b
  1889  000142  0EFF               	movlw	high STR_8
  1890  000144  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1891  000146  EC72  F00C         	call	_printf	;wreg free
  1892                           
  1893                           ;main.c: 92: 
  1894  00014A  0EC2               	movlw	low STR_9
  1895  00014C  0100               	movlb	0	; () banked
  1896  00014E  6FDA               	movwf	printf@fmt& (0+255),b
  1897  000150  0EFF               	movlw	high STR_9
  1898  000152  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1899  000154  CFBB F0DC          	movff	4027,?_printf+2	;volatile
  1900  000158  6BDD               	clrf	(?_printf+3)& (0+255),b
  1901  00015A  EC72  F00C         	call	_printf	;wreg free
  1902                           
  1903                           ;main.c: 93: 
  1904  00015E  0E0F               	movlw	low STR_7
  1905  000160  0100               	movlb	0	; () banked
  1906  000162  6FDA               	movwf	printf@fmt& (0+255),b
  1907  000164  0EFD               	movlw	high STR_7
  1908  000166  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1909  000168  EC72  F00C         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 94: 
  1912  00016C  0E86               	movlw	low STR_11
  1913  00016E  0100               	movlb	0	; () banked
  1914  000170  6FDA               	movwf	printf@fmt& (0+255),b
  1915  000172  0EFF               	movlw	high STR_11
  1916  000174  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1917  000176  EC72  F00C         	call	_printf	;wreg free
  1918                           
  1919                           ;main.c: 95:                 case 'Z':
  1920  00017A  0EEE               	movlw	low STR_12
  1921  00017C  0100               	movlb	0	; () banked
  1922  00017E  6FDA               	movwf	printf@fmt& (0+255),b
  1923  000180  0EFF               	movlw	high STR_12
  1924  000182  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1925  000184  EC72  F00C         	call	_printf	;wreg free
  1926                           
  1927                           ;main.c: 96:                     for (i = 0; i < 40; i++) printf("\n");
  1928  000188  0E28               	movlw	low STR_13
  1929  00018A  0100               	movlb	0	; () banked
  1930  00018C  6FDA               	movwf	printf@fmt& (0+255),b
  1931  00018E  0EFF               	movlw	high STR_13
  1932  000190  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1933  000192  EC72  F00C         	call	_printf	;wreg free
  1934                           
  1935                           ;main.c: 97:                     __asm("reset");
  1936  000196  0ECE               	movlw	low STR_14
  1937  000198  0100               	movlb	0	; () banked
  1938  00019A  6FDA               	movwf	printf@fmt& (0+255),b
  1939  00019C  0EFE               	movlw	high STR_14
  1940  00019E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1941  0001A0  EC72  F00C         	call	_printf	;wreg free
  1942                           
  1943                           ;main.c: 98:                     break;
  1944  0001A4  0E52               	movlw	low STR_15
  1945  0001A6  0100               	movlb	0	; () banked
  1946  0001A8  6FDA               	movwf	printf@fmt& (0+255),b
  1947  0001AA  0EFF               	movlw	high STR_15
  1948  0001AC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1949  0001AE  EC72  F00C         	call	_printf	;wreg free
  1950                           
  1951                           ;main.c: 99: 
  1952  0001B2  0ECF               	movlw	low STR_16
  1953  0001B4  0100               	movlb	0	; () banked
  1954  0001B6  6FDA               	movwf	printf@fmt& (0+255),b
  1955  0001B8  0EFC               	movlw	high STR_16
  1956  0001BA  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1957  0001BC  EC72  F00C         	call	_printf	;wreg free
  1958                           
  1959                           ;main.c: 100: 
  1960  0001C0  0E12               	movlw	low STR_17
  1961  0001C2  0100               	movlb	0	; () banked
  1962  0001C4  6FDA               	movwf	printf@fmt& (0+255),b
  1963  0001C6  0EFE               	movlw	high STR_17
  1964  0001C8  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1965  0001CA  EC72  F00C         	call	_printf	;wreg free
  1966                           
  1967                           ;main.c: 101: 
  1968  0001CE  0EED               	movlw	low STR_18
  1969  0001D0  0100               	movlb	0	; () banked
  1970  0001D2  6FDA               	movwf	printf@fmt& (0+255),b
  1971  0001D4  0EFD               	movlw	high STR_18
  1972  0001D6  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1973  0001D8  EC72  F00C         	call	_printf	;wreg free
  1974                           
  1975                           ;main.c: 102: 
  1976  0001DC  0E34               	movlw	low STR_19
  1977  0001DE  0100               	movlb	0	; () banked
  1978  0001E0  6FDA               	movwf	printf@fmt& (0+255),b
  1979  0001E2  0EFE               	movlw	high STR_19
  1980  0001E4  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1981  0001E6  EC72  F00C         	call	_printf	;wreg free
  1982                           
  1983                           ;main.c: 103:                 case 'z':
  1984  0001EA  0E43               	movlw	low STR_20
  1985  0001EC  0100               	movlb	0	; () banked
  1986  0001EE  6FDA               	movwf	printf@fmt& (0+255),b
  1987  0001F0  0EFD               	movlw	high STR_20
  1988  0001F2  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1989  0001F4  EC72  F00C         	call	_printf	;wreg free
  1990                           
  1991                           ;main.c: 104:                     for (i = 0; i < 40; i++) printf("\n");
  1992  0001F8  0E94               	movlw	low STR_21
  1993  0001FA  0100               	movlb	0	; () banked
  1994  0001FC  6FDA               	movwf	printf@fmt& (0+255),b
  1995  0001FE  0EFE               	movlw	high STR_21
  1996  000200  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1997  000202  EC72  F00C         	call	_printf	;wreg free
  1998                           
  1999                           ;main.c: 105:                     break;
  2000  000206  0EB1               	movlw	low STR_22
  2001  000208  0100               	movlb	0	; () banked
  2002  00020A  6FDA               	movwf	printf@fmt& (0+255),b
  2003  00020C  0EFE               	movlw	high STR_22
  2004  00020E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2005  000210  EC72  F00C         	call	_printf	;wreg free
  2006                           
  2007                           ;main.c: 106: 
  2008  000214  0E0F               	movlw	low STR_7
  2009  000216  0100               	movlb	0	; () banked
  2010  000218  6FDA               	movwf	printf@fmt& (0+255),b
  2011  00021A  0EFD               	movlw	high STR_7
  2012  00021C  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2013  00021E  EC72  F00C         	call	_printf	;wreg free
  2014                           
  2015                           ;main.c: 107: 
  2016  000222  EF88  F000         	goto	l3606
  2017  000226                     l3612:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 113: 
  2021  000226  0EDE               	movlw	low STR_24
  2022  000228  6FDA               	movwf	printf@fmt& (0+255),b
  2023  00022A  0EFF               	movlw	high STR_24
  2024  00022C  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2025  00022E  EC72  F00C         	call	_printf	;wreg free
  2026                           
  2027                           ;main.c: 114: 
  2028  000232  EF88  F000         	goto	l3606
  2029  000236                     l3614:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;main.c: 120:                     printf(">");
  2033  000236  0E00               	movlw	0
  2034  000238  6FEE               	movwf	main@i& (0+255),b
  2035  00023A                     l3620:
  2036                           
  2037                           ; BSR set to: 0
  2038  00023A  0E41               	movlw	low (STR_7+50)
  2039  00023C  6FDA               	movwf	printf@fmt& (0+255),b
  2040  00023E  0EFD               	movlw	high (STR_7+50)
  2041  000240  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2042  000242  EC72  F00C         	call	_printf	;wreg free
  2043  000246  0100               	movlb	0	; () banked
  2044  000248  2BEE               	incf	main@i& (0+255),f,b
  2045  00024A                     
  2046                           ; BSR set to: 0
  2047  00024A  0E27               	movlw	39
  2048  00024C  65EE               	cpfsgt	main@i& (0+255),b
  2049  00024E  EF2B  F001         	goto	u3021
  2050  000252  EF2D  F001         	goto	u3020
  2051  000256                     u3021:
  2052  000256  EF1D  F001         	goto	l3620
  2053  00025A                     u3020:
  2054  00025A                     
  2055                           ; BSR set to: 0
  2056  00025A  00FF               	reset		;# 
  2057                           
  2058                           ;main.c: 122: 
  2059  00025C  EF88  F000         	goto	l3606
  2060  000260                     l3626:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;main.c: 128:                         if (transmitIRBuffer[ind] == '\r') {
  2064  000260  0E00               	movlw	0
  2065  000262  6FEE               	movwf	main@i& (0+255),b
  2066  000264                     l3632:
  2067                           
  2068                           ; BSR set to: 0
  2069  000264  0E41               	movlw	low (STR_7+50)
  2070  000266  6FDA               	movwf	printf@fmt& (0+255),b
  2071  000268  0EFD               	movlw	high (STR_7+50)
  2072  00026A  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2073  00026C  EC72  F00C         	call	_printf	;wreg free
  2074  000270  0100               	movlb	0	; () banked
  2075  000272  2BEE               	incf	main@i& (0+255),f,b
  2076  000274                     
  2077                           ; BSR set to: 0
  2078  000274  0E27               	movlw	39
  2079  000276  65EE               	cpfsgt	main@i& (0+255),b
  2080  000278  EF40  F001         	goto	u3031
  2081  00027C  EF42  F001         	goto	u3030
  2082  000280                     u3031:
  2083  000280  EF32  F001         	goto	l3632
  2084  000284                     u3030:
  2085  000284  EF88  F000         	goto	l3606
  2086  000288                     l3638:
  2087                           
  2088                           ; BSR set to: 0
  2089  000288  0E00               	movlw	0
  2090  00028A  6FEC               	movwf	main@cksum& (0+255),b
  2091  00028C                     
  2092                           ; BSR set to: 0
  2093                           ;main.c: 143:                         if (transmitIRBuffer[ind] == '\0'){
  2094  00028C  0E9F               	movlw	low STR_27
  2095  00028E  6FDA               	movwf	printf@fmt& (0+255),b
  2096  000290  0EFD               	movlw	high STR_27
  2097  000292  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2098  000294  EC72  F00C         	call	_printf	;wreg free
  2099  000298                     
  2100                           ;main.c: 144:                             printf("\r\n");
  2101  000298  0EFD               	movlw	low STR_28
  2102  00029A  0100               	movlb	0	; () banked
  2103  00029C  6FDA               	movwf	printf@fmt& (0+255),b
  2104  00029E  0EFF               	movlw	high STR_28
  2105  0002A0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2106  0002A2  EC72  F00C         	call	_printf	;wreg free
  2107  0002A6                     l3644:
  2108  0002A6  ECE8  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  2109  0002AA  0900               	iorlw	0
  2110  0002AC  A4D8               	btfss	status,2,c
  2111  0002AE  EF5B  F001         	goto	u3041
  2112  0002B2  EF5D  F001         	goto	u3040
  2113  0002B6                     u3041:
  2114  0002B6  EF53  F001         	goto	l3644
  2115  0002BA                     u3040:
  2116  0002BA                     
  2117                           ;main.c: 148:                         printf("%c", transmitIRBuffer[ind]);
  2118  0002BA  0E02               	movlw	2
  2119  0002BC  0100               	movlb	0	; () banked
  2120  0002BE  6FEF               	movwf	main@ind& (0+255),b
  2121  0002C0                     l3652:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 149:                         ind++;
  2125  0002C0  0E60               	movlw	low _transmitIRBuffer
  2126  0002C2  25EF               	addwf	main@ind& (0+255),w,b
  2127  0002C4  6ED9               	movwf	fsr2l,c
  2128  0002C6  6ADA               	clrf	fsr2h,c
  2129  0002C8  0E00               	movlw	high _transmitIRBuffer
  2130  0002CA  22DA               	addwfc	fsr2h,f,c
  2131  0002CC  EC33  F00C         	call	_EUSART1_Read	;wreg free
  2132  0002D0  6EDF               	movwf	indf2,c
  2133  0002D2                     
  2134                           ;main.c: 150:                     }
  2135  0002D2  0E60               	movlw	low _transmitIRBuffer
  2136  0002D4  0100               	movlb	0	; () banked
  2137  0002D6  25EF               	addwf	main@ind& (0+255),w,b
  2138  0002D8  6ED9               	movwf	fsr2l,c
  2139  0002DA  6ADA               	clrf	fsr2h,c
  2140  0002DC  0E00               	movlw	high _transmitIRBuffer
  2141  0002DE  22DA               	addwfc	fsr2h,f,c
  2142  0002E0  50DF               	movf	indf2,w,c
  2143  0002E2  27EC               	addwf	main@cksum& (0+255),f,b
  2144  0002E4                     
  2145                           ; BSR set to: 0
  2146                           ;main.c: 151:                     printf("\tchecksum: %d\r\n", transmitIRBuffer[ind]);
  2147  0002E4  0EFA               	movlw	low STR_29
  2148  0002E6  6FDA               	movwf	printf@fmt& (0+255),b
  2149  0002E8  0EFF               	movlw	high STR_29
  2150  0002EA  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2151  0002EC  0E60               	movlw	low _transmitIRBuffer
  2152  0002EE  25EF               	addwf	main@ind& (0+255),w,b
  2153  0002F0  6ED9               	movwf	fsr2l,c
  2154  0002F2  6ADA               	clrf	fsr2h,c
  2155  0002F4  0E00               	movlw	high _transmitIRBuffer
  2156  0002F6  22DA               	addwfc	fsr2h,f,c
  2157  0002F8  50DF               	movf	indf2,w,c
  2158  0002FA  6FEA               	movwf	??_main& (0+255),b
  2159  0002FC  51EA               	movf	??_main& (0+255),w,b
  2160  0002FE  6FDC               	movwf	(?_printf+2)& (0+255),b
  2161  000300  6BDD               	clrf	(?_printf+3)& (0+255),b
  2162  000302  EC72  F00C         	call	_printf	;wreg free
  2163  000306                     
  2164                           ;main.c: 152:                     printf("\tSRC: %d\r\n", transmitIRBuffer[0]);
  2165  000306  0E60               	movlw	low _transmitIRBuffer
  2166  000308  0100               	movlb	0	; () banked
  2167  00030A  25EF               	addwf	main@ind& (0+255),w,b
  2168  00030C  6ED9               	movwf	fsr2l,c
  2169  00030E  6ADA               	clrf	fsr2h,c
  2170  000310  0E00               	movlw	high _transmitIRBuffer
  2171  000312  22DA               	addwfc	fsr2h,f,c
  2172  000314  0E0D               	movlw	13
  2173  000316  18DE               	xorwf	postinc2,w,c
  2174  000318  A4D8               	btfss	status,2,c
  2175  00031A  EF91  F001         	goto	u3051
  2176  00031E  EF93  F001         	goto	u3050
  2177  000322                     u3051:
  2178  000322  EF9D  F001         	goto	l3664
  2179  000326                     u3050:
  2180  000326                     
  2181                           ; BSR set to: 0
  2182                           ;main.c: 153:                     printf("\tDES: %d\r\n", transmitIRBuffer[1]);
  2183  000326  0E0D               	movlw	13
  2184  000328  5FEC               	subwf	main@cksum& (0+255),f,b
  2185  00032A                     
  2186                           ; BSR set to: 0
  2187                           ;main.c: 154:                     break;
  2188  00032A  0E40               	movlw	low (STR_7+49)
  2189  00032C  6FDA               	movwf	printf@fmt& (0+255),b
  2190  00032E  0EFD               	movlw	high (STR_7+49)
  2191  000330  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2192  000332  EC72  F00C         	call	_printf	;wreg free
  2193                           
  2194                           ;main.c: 155:                 }
  2195  000336  EFA6  F001         	goto	l3668
  2196  00033A                     l3664:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 157: 
  2200  00033A  2BEF               	incf	main@ind& (0+255),f,b
  2201  00033C                     
  2202                           ; BSR set to: 0
  2203  00033C  0E1D               	movlw	29
  2204  00033E  65EF               	cpfsgt	main@ind& (0+255),b
  2205  000340  EFA4  F001         	goto	u3061
  2206  000344  EFA6  F001         	goto	u3060
  2207  000348                     u3061:
  2208  000348  EF60  F001         	goto	l3652
  2209  00034C                     u3060:
  2210  00034C                     l3668:
  2211                           
  2212                           ;main.c: 158: 
  2213  00034C  0E61               	movlw	low (_transmitIRBuffer+1)
  2214  00034E  0100               	movlb	0	; () banked
  2215  000350  25EF               	addwf	main@ind& (0+255),w,b
  2216  000352  6ED9               	movwf	fsr2l,c
  2217  000354  6ADA               	clrf	fsr2h,c
  2218  000356  0E00               	movlw	high (_transmitIRBuffer+1)
  2219  000358  22DA               	addwfc	fsr2h,f,c
  2220  00035A  0E00               	movlw	0
  2221  00035C  6EDF               	movwf	indf2,c
  2222                           
  2223                           ;main.c: 159: 
  2224  00035E  0E62               	movlw	low (_transmitIRBuffer+2)
  2225  000360  25EF               	addwf	main@ind& (0+255),w,b
  2226  000362  6ED9               	movwf	fsr2l,c
  2227  000364  6ADA               	clrf	fsr2h,c
  2228  000366  0E00               	movlw	high (_transmitIRBuffer+2)
  2229  000368  22DA               	addwfc	fsr2h,f,c
  2230  00036A  C0EC  FFDF         	movff	main@cksum,indf2
  2231  00036E                     
  2232                           ; BSR set to: 0
  2233                           ;main.c: 164:                     break;
  2234  00036E  0E02               	movlw	2
  2235  000370  6FEF               	movwf	main@ind& (0+255),b
  2236  000372                     
  2237                           ; BSR set to: 0
  2238                           ;main.c: 165: 
  2239  000372  0EB7               	movlw	low STR_31
  2240  000374  6FDA               	movwf	printf@fmt& (0+255),b
  2241  000376  0EFF               	movlw	high STR_31
  2242  000378  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2243  00037A  EC72  F00C         	call	_printf	;wreg free
  2244  00037E                     l3674:
  2245                           
  2246                           ;main.c: 167: 
  2247  00037E  0E60               	movlw	low _transmitIRBuffer
  2248  000380  0100               	movlb	0	; () banked
  2249  000382  25EF               	addwf	main@ind& (0+255),w,b
  2250  000384  6ED9               	movwf	fsr2l,c
  2251  000386  6ADA               	clrf	fsr2h,c
  2252  000388  0E00               	movlw	high _transmitIRBuffer
  2253  00038A  22DA               	addwfc	fsr2h,f,c
  2254  00038C  50DF               	movf	indf2,w,c
  2255  00038E  A4D8               	btfss	status,2,c
  2256  000390  EFCC  F001         	goto	u3071
  2257  000394  EFCE  F001         	goto	u3070
  2258  000398                     u3071:
  2259  000398  EFD8  F001         	goto	l3680
  2260  00039C                     u3070:
  2261  00039C                     
  2262                           ; BSR set to: 0
  2263                           ;main.c: 168: 
  2264  00039C  0E40               	movlw	low (STR_7+49)
  2265  00039E  6FDA               	movwf	printf@fmt& (0+255),b
  2266  0003A0  0EFD               	movlw	high (STR_7+49)
  2267  0003A2  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2268  0003A4  EC72  F00C         	call	_printf	;wreg free
  2269  0003A8                     
  2270                           ;main.c: 169:                 case 'd':
  2271  0003A8  0100               	movlb	0	; () banked
  2272  0003AA  2BEF               	incf	main@ind& (0+255),f,b
  2273                           
  2274                           ;main.c: 170:                     break;
  2275  0003AC  EFED  F001         	goto	l3684
  2276  0003B0                     l3680:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 172: 
  2280  0003B0  0EFA               	movlw	low STR_29
  2281  0003B2  6FDA               	movwf	printf@fmt& (0+255),b
  2282  0003B4  0EFF               	movlw	high STR_29
  2283  0003B6  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2284  0003B8  0E60               	movlw	low _transmitIRBuffer
  2285  0003BA  25EF               	addwf	main@ind& (0+255),w,b
  2286  0003BC  6ED9               	movwf	fsr2l,c
  2287  0003BE  6ADA               	clrf	fsr2h,c
  2288  0003C0  0E00               	movlw	high _transmitIRBuffer
  2289  0003C2  22DA               	addwfc	fsr2h,f,c
  2290  0003C4  50DF               	movf	indf2,w,c
  2291  0003C6  6FEA               	movwf	??_main& (0+255),b
  2292  0003C8  51EA               	movf	??_main& (0+255),w,b
  2293  0003CA  6FDC               	movwf	(?_printf+2)& (0+255),b
  2294  0003CC  6BDD               	clrf	(?_printf+3)& (0+255),b
  2295  0003CE  EC72  F00C         	call	_printf	;wreg free
  2296  0003D2                     
  2297                           ;main.c: 173: 
  2298  0003D2  0100               	movlb	0	; () banked
  2299  0003D4  2BEF               	incf	main@ind& (0+255),f,b
  2300                           
  2301                           ;main.c: 174: 
  2302  0003D6  EFBF  F001         	goto	l3674
  2303  0003DA                     l3684:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;main.c: 175:                 case 'S':
  2307  0003DA  0E76               	movlw	low STR_34
  2308  0003DC  6FDA               	movwf	printf@fmt& (0+255),b
  2309  0003DE  0EFF               	movlw	high STR_34
  2310  0003E0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2311  0003E2  0E60               	movlw	low _transmitIRBuffer
  2312  0003E4  25EF               	addwf	main@ind& (0+255),w,b
  2313  0003E6  6ED9               	movwf	fsr2l,c
  2314  0003E8  6ADA               	clrf	fsr2h,c
  2315  0003EA  0E00               	movlw	high _transmitIRBuffer
  2316  0003EC  22DA               	addwfc	fsr2h,f,c
  2317  0003EE  50DF               	movf	indf2,w,c
  2318  0003F0  6FEA               	movwf	??_main& (0+255),b
  2319  0003F2  51EA               	movf	??_main& (0+255),w,b
  2320  0003F4  6FDC               	movwf	(?_printf+2)& (0+255),b
  2321  0003F6  6BDD               	clrf	(?_printf+3)& (0+255),b
  2322  0003F8  EC72  F00C         	call	_printf	;wreg free
  2323                           
  2324                           ;main.c: 176: 
  2325  0003FC  0EA1               	movlw	low STR_35
  2326  0003FE  0100               	movlb	0	; () banked
  2327  000400  6FDA               	movwf	printf@fmt& (0+255),b
  2328  000402  0EFF               	movlw	high STR_35
  2329  000404  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2330  000406  C060  F0DC         	movff	_transmitIRBuffer,?_printf+2
  2331  00040A  6BDD               	clrf	(?_printf+3)& (0+255),b
  2332  00040C  EC72  F00C         	call	_printf	;wreg free
  2333                           
  2334                           ;main.c: 177:                     newCharacterToSend = 1;
  2335  000410  0EAC               	movlw	low STR_36
  2336  000412  0100               	movlb	0	; () banked
  2337  000414  6FDA               	movwf	printf@fmt& (0+255),b
  2338  000416  0EFF               	movlw	high STR_36
  2339  000418  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2340  00041A  C061  F0DC         	movff	_transmitIRBuffer+1,?_printf+2
  2341  00041E  6BDD               	clrf	(?_printf+3)& (0+255),b
  2342  000420  EC72  F00C         	call	_printf	;wreg free
  2343                           
  2344                           ;main.c: 178:                     printf("just sent %c    %x\r\n", letter, letter);
  2345  000424  EF88  F000         	goto	l3606
  2346  000428                     l3686:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;main.c: 185:                 case 'R':
  2350  000428  0EE6               	movlw	low STR_37
  2351  00042A  6FDA               	movwf	printf@fmt& (0+255),b
  2352  00042C  0EFE               	movlw	high STR_37
  2353  00042E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2354  000430  EC72  F00C         	call	_printf	;wreg free
  2355  000434                     
  2356                           ;main.c: 186:                     if (PIR3bits.RC2IF == 1)
  2357  000434  EC94  F008         	call	_userEnter8bit	;wreg free
  2358  000438  0100               	movlb	0	; () banked
  2359  00043A  6F60               	movwf	_transmitIRBuffer& (0+255),b
  2360  00043C                     
  2361                           ; BSR set to: 0
  2362                           ;main.c: 187:                         printf("Just read in %c from EUSART2\r\n", EUSART2
      +                          _Read());
  2363  00043C  0EE6               	movlw	low STR_38
  2364  00043E  6FDA               	movwf	printf@fmt& (0+255),b
  2365  000440  0EFF               	movlw	high STR_38
  2366  000442  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2367  000444  C060  F0DC         	movff	_transmitIRBuffer,?_printf+2
  2368  000448  6BDD               	clrf	(?_printf+3)& (0+255),b
  2369  00044A  EC72  F00C         	call	_printf	;wreg free
  2370                           
  2371                           ;main.c: 188:                     else
  2372  00044E  EF88  F000         	goto	l3606
  2373  000452                     l3692:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 201: 
  2377  000452  0E01               	movlw	1
  2378  000454  6E55               	movwf	_newCharacterToSend^0,c
  2379  000456                     
  2380                           ; BSR set to: 0
  2381                           ;main.c: 202: 
  2382  000456  0E3D               	movlw	low STR_39
  2383  000458  6FDA               	movwf	printf@fmt& (0+255),b
  2384  00045A  0EFF               	movlw	high STR_39
  2385  00045C  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2386  00045E  C0F2  F0DC         	movff	_letter,?_printf+2
  2387  000462  6BDD               	clrf	(?_printf+3)& (0+255),b
  2388  000464  C0F2  F0DE         	movff	_letter,?_printf+4
  2389  000468  6BDF               	clrf	(?_printf+5)& (0+255),b
  2390  00046A  EC72  F00C         	call	_printf	;wreg free
  2391  00046E                     
  2392                           ;main.c: 203: 
  2393  00046E  0100               	movlb	0	; () banked
  2394  000470  2BF2               	incf	_letter& (0+255),f,b
  2395                           
  2396                           ;main.c: 204: 
  2397  000472  EF88  F000         	goto	l3606
  2398  000476                     l285:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;main.c: 210:                     break;
  2402  000476  AAA4               	btfss	164,5,c	;volatile
  2403  000478  EF40  F002         	goto	u3081
  2404  00047C  EF42  F002         	goto	u3080
  2405  000480                     u3081:
  2406  000480  EF51  F002         	goto	l3700
  2407  000484                     u3080:
  2408  000484                     
  2409                           ; BSR set to: 0
  2410                           ;main.c: 211: 
  2411  000484  0E75               	movlw	low STR_40
  2412  000486  6FDA               	movwf	printf@fmt& (0+255),b
  2413  000488  0EFE               	movlw	high STR_40
  2414  00048A  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2415  00048C  EC5D  F00C         	call	_EUSART2_Read	;wreg free
  2416  000490  0100               	movlb	0	; () banked
  2417  000492  6FEA               	movwf	??_main& (0+255),b
  2418  000494  51EA               	movf	??_main& (0+255),w,b
  2419  000496  6FDC               	movwf	(?_printf+2)& (0+255),b
  2420  000498  6BDD               	clrf	(?_printf+3)& (0+255),b
  2421  00049A  EC72  F00C         	call	_printf	;wreg free
  2422  00049E  EF88  F000         	goto	l3606
  2423  0004A2                     l3700:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;main.c: 213: 
  2427  0004A2  0E55               	movlw	low STR_41
  2428  0004A4  6FDA               	movwf	printf@fmt& (0+255),b
  2429  0004A6  0EFE               	movlw	high STR_41
  2430  0004A8  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2431  0004AA  EC72  F00C         	call	_printf	;wreg free
  2432  0004AE  EF88  F000         	goto	l3606
  2433  0004B2                     l290:
  2434                           
  2435                           ; BSR set to: 0
  2436  0004B2  EF88  F000         	goto	l3606
  2437  0004B6                     l292:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;main.c: 231: 
  2441  0004B6  9871               	bcf	113,4,c	;volatile
  2442                           
  2443                           ;main.c: 232: void myTMR1ISR(void) {
  2444  0004B8  8871               	bsf	113,4,c	;volatile
  2445  0004BA                     
  2446                           ; BSR set to: 0
  2447                           ;main.c: 233: 
  2448  0004BA  0E13               	movlw	low STR_42
  2449  0004BC  6FDA               	movwf	printf@fmt& (0+255),b
  2450  0004BE  0EFF               	movlw	high STR_42
  2451  0004C0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2452  0004C2  EC72  F00C         	call	_printf	;wreg free
  2453                           
  2454                           ;main.c: 234:     static myTXstates_t tmr1ISRstate = TX_IDLE;
  2455  0004C6  EF88  F000         	goto	l3606
  2456  0004CA                     l3708:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;main.c: 241: 
  2460  0004CA  0E65               	movlw	low STR_43
  2461  0004CC  6FDA               	movwf	printf@fmt& (0+255),b
  2462  0004CE  0EFF               	movlw	high STR_43
  2463  0004D0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2464  0004D2  C0ED  F0DC         	movff	main@cmd,?_printf+2
  2465  0004D6  6BDD               	clrf	(?_printf+3)& (0+255),b
  2466  0004D8  EC72  F00C         	call	_printf	;wreg free
  2467                           
  2468                           ;main.c: 242: 
  2469  0004DC  EF88  F000         	goto	l3606
  2470  0004E0                     l3712:
  2471                           
  2472                           ; BSR set to: 0
  2473  0004E0  51ED               	movf	main@cmd& (0+255),w,b
  2474  0004E2  6FEA               	movwf	??_main& (0+255),b
  2475  0004E4  6BEB               	clrf	(??_main+1)& (0+255),b
  2476                           
  2477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 1, Range of values is 0 to 0
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte            4     3 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484  0004E6  51EB               	movf	(??_main+1)& (0+255),w,b
  2485  0004E8  0A00               	xorlw	0	; case 0
  2486  0004EA  B4D8               	btfsc	status,2,c
  2487  0004EC  EF7A  F002         	goto	l3800
  2488  0004F0  EF65  F002         	goto	l3708
  2489  0004F4                     l3800:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ; Switch size 1, requested type "simple"
  2493                           ; Number of cases is 13, Range of values is 63 to 122
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte           40    21 (average)
  2497                           ;	Chosen strategy is simple_byte
  2498  0004F4  51EA               	movf	??_main& (0+255),w,b
  2499  0004F6  0A3F               	xorlw	63	; case 63
  2500  0004F8  B4D8               	btfsc	status,2,c
  2501  0004FA  EF98  F000         	goto	l3610
  2502  0004FE  0A6D               	xorlw	109	; case 82
  2503  000500  B4D8               	btfsc	status,2,c
  2504  000502  EF3B  F002         	goto	l285
  2505  000506  0A01               	xorlw	1	; case 83
  2506  000508  B4D8               	btfsc	status,2,c
  2507  00050A  EF29  F002         	goto	l3692
  2508  00050E  0A0B               	xorlw	11	; case 88
  2509  000510  B4D8               	btfsc	status,2,c
  2510  000512  EF59  F002         	goto	l290
  2511  000516  0A02               	xorlw	2	; case 90
  2512  000518  B4D8               	btfsc	status,2,c
  2513  00051A  EF1B  F001         	goto	l3614
  2514  00051E  0A38               	xorlw	56	; case 98
  2515  000520  B4D8               	btfsc	status,2,c
  2516  000522  EF88  F000         	goto	l3606
  2517  000526  0A06               	xorlw	6	; case 100
  2518  000528  B4D8               	btfsc	status,2,c
  2519  00052A  EF88  F000         	goto	l3606
  2520  00052E  0A09               	xorlw	9	; case 109
  2521  000530  B4D8               	btfsc	status,2,c
  2522  000532  EF44  F001         	goto	l3638
  2523  000536  0A02               	xorlw	2	; case 111
  2524  000538  B4D8               	btfsc	status,2,c
  2525  00053A  EF13  F001         	goto	l3612
  2526  00053E  0A1D               	xorlw	29	; case 114
  2527  000540  B4D8               	btfsc	status,2,c
  2528  000542  EF5B  F002         	goto	l292
  2529  000546  0A01               	xorlw	1	; case 115
  2530  000548  B4D8               	btfsc	status,2,c
  2531  00054A  EF14  F002         	goto	l3686
  2532  00054E  0A0B               	xorlw	11	; case 120
  2533  000550  B4D8               	btfsc	status,2,c
  2534  000552  EF88  F000         	goto	l3606
  2535  000556  0A02               	xorlw	2	; case 122
  2536  000558  B4D8               	btfsc	status,2,c
  2537  00055A  EF30  F001         	goto	l3626
  2538  00055E  EF65  F002         	goto	l3708
  2539  000562  EF26  F000         	goto	start
  2540  000566                     __end_of_main:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _userEnter8bit *****************
  2544 ;; Defined at:
  2545 ;;		line 307 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  digit           1   47[BANK0 ] unsigned char 
  2550 ;;  cmd             1   45[BANK0 ] unsigned char 
  2551 ;;  i               1   46[BANK0 ] unsigned char 
  2552 ;;  num             1   48[BANK0 ] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      unsigned char 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        6 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:   13
  2569 ;; This function calls:
  2570 ;;		_EUSART1_Read
  2571 ;;		_EUSART1_is_rx_ready
  2572 ;;		_printf
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text1
  2579  001128                     __ptext1:
  2580                           	callstack 0
  2581  001128                     _userEnter8bit:
  2582                           	callstack 17
  2583  001128  0E00               	movlw	0
  2584  00112A  0100               	movlb	0	; () banked
  2585  00112C  6FE9               	movwf	userEnter8bit@num& (0+255),b
  2586  00112E  0E00               	movlw	0
  2587  001130  6FE7               	movwf	userEnter8bit@i& (0+255),b
  2588  001132                     l3538:
  2589  001132  ECE8  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  2590  001136  0900               	iorlw	0
  2591  001138  B4D8               	btfsc	status,2,c
  2592  00113A  EFA1  F008         	goto	u2951
  2593  00113E  EFA3  F008         	goto	u2950
  2594  001142                     u2951:
  2595  001142  EF99  F008         	goto	l3538
  2596  001146                     u2950:
  2597  001146  EC33  F00C         	call	_EUSART1_Read	;wreg free
  2598  00114A  0100               	movlb	0	; () banked
  2599  00114C  6FE6               	movwf	userEnter8bit@cmd& (0+255),b
  2600  00114E                     
  2601                           ; BSR set to: 0
  2602  00114E  0E0D               	movlw	13
  2603  001150  19E6               	xorwf	userEnter8bit@cmd& (0+255),w,b
  2604  001152  A4D8               	btfss	status,2,c
  2605  001154  EFAE  F008         	goto	u2961
  2606  001158  EFB0  F008         	goto	u2960
  2607  00115C                     u2961:
  2608  00115C  EFB2  F008         	goto	l3546
  2609  001160                     u2960:
  2610  001160  EF00  F009         	goto	l3566
  2611  001164                     l3546:
  2612                           
  2613                           ; BSR set to: 0
  2614  001164  0EFA               	movlw	low STR_29
  2615  001166  6FDA               	movwf	printf@fmt& (0+255),b
  2616  001168  0EFF               	movlw	high STR_29
  2617  00116A  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2618  00116C  C0E6  F0DC         	movff	userEnter8bit@cmd,?_printf+2
  2619  001170  6BDD               	clrf	(?_printf+3)& (0+255),b
  2620  001172  EC72  F00C         	call	_printf	;wreg free
  2621  001176  0100               	movlb	0	; () banked
  2622  001178  51E6               	movf	userEnter8bit@cmd& (0+255),w,b
  2623  00117A  0FD0               	addlw	208
  2624  00117C  6FE8               	movwf	userEnter8bit@digit& (0+255),b
  2625  00117E                     
  2626                           ; BSR set to: 0
  2627  00117E  0ECC               	movlw	low STR_45
  2628  001180  6FDA               	movwf	printf@fmt& (0+255),b
  2629  001182  0EFF               	movlw	high STR_45
  2630  001184  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2631  001186  C0E8  F0DC         	movff	userEnter8bit@digit,?_printf+2
  2632  00118A  6BDD               	clrf	(?_printf+3)& (0+255),b
  2633  00118C  EC72  F00C         	call	_printf	;wreg free
  2634  001190  EFDD  F008         	goto	l3560
  2635  001194                     l3552:
  2636                           
  2637                           ; BSR set to: 0
  2638  001194  51E8               	movf	userEnter8bit@digit& (0+255),w,b
  2639  001196  0D64               	mullw	100
  2640  001198  50F3               	movf	243,w,c
  2641  00119A  25E9               	addwf	userEnter8bit@num& (0+255),w,b
  2642  00119C  6FE9               	movwf	userEnter8bit@num& (0+255),b
  2643  00119E  EFF7  F008         	goto	l3562
  2644  0011A2                     l3554:
  2645                           
  2646                           ; BSR set to: 0
  2647  0011A2  51E8               	movf	userEnter8bit@digit& (0+255),w,b
  2648  0011A4  0D0A               	mullw	10
  2649  0011A6  50F3               	movf	243,w,c
  2650  0011A8  25E9               	addwf	userEnter8bit@num& (0+255),w,b
  2651  0011AA  6FE9               	movwf	userEnter8bit@num& (0+255),b
  2652  0011AC  EFF7  F008         	goto	l3562
  2653  0011B0                     l3556:
  2654                           
  2655                           ; BSR set to: 0
  2656  0011B0  51E9               	movf	userEnter8bit@num& (0+255),w,b
  2657  0011B2  25E8               	addwf	userEnter8bit@digit& (0+255),w,b
  2658  0011B4  6FE9               	movwf	userEnter8bit@num& (0+255),b
  2659  0011B6  EFF7  F008         	goto	l3562
  2660  0011BA                     l3560:
  2661  0011BA  0100               	movlb	0	; () banked
  2662  0011BC  51E7               	movf	userEnter8bit@i& (0+255),w,b
  2663  0011BE  6FE4               	movwf	??_userEnter8bit& (0+255),b
  2664  0011C0  6BE5               	clrf	(??_userEnter8bit+1)& (0+255),b
  2665                           
  2666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 1, Range of values is 0 to 0
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte            4     3 (average)
  2672                           ;	Chosen strategy is simple_byte
  2673  0011C2  51E5               	movf	(??_userEnter8bit+1)& (0+255),w,b
  2674  0011C4  0A00               	xorlw	0	; case 0
  2675  0011C6  B4D8               	btfsc	status,2,c
  2676  0011C8  EFE8  F008         	goto	l3802
  2677  0011CC  EFF7  F008         	goto	l3562
  2678  0011D0                     l3802:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ; Switch size 1, requested type "simple"
  2682                           ; Number of cases is 3, Range of values is 0 to 2
  2683                           ; switch strategies available:
  2684                           ; Name         Instructions Cycles
  2685                           ; simple_byte           10     6 (average)
  2686                           ;	Chosen strategy is simple_byte
  2687  0011D0  51E4               	movf	??_userEnter8bit& (0+255),w,b
  2688  0011D2  0A00               	xorlw	0	; case 0
  2689  0011D4  B4D8               	btfsc	status,2,c
  2690  0011D6  EFCA  F008         	goto	l3552
  2691  0011DA  0A01               	xorlw	1	; case 1
  2692  0011DC  B4D8               	btfsc	status,2,c
  2693  0011DE  EFD1  F008         	goto	l3554
  2694  0011E2  0A03               	xorlw	3	; case 2
  2695  0011E4  B4D8               	btfsc	status,2,c
  2696  0011E6  EFD8  F008         	goto	l3556
  2697  0011EA  EFF7  F008         	goto	l3562
  2698  0011EE                     l3562:
  2699                           
  2700                           ; BSR set to: 0
  2701  0011EE  2BE7               	incf	userEnter8bit@i& (0+255),f,b
  2702  0011F0                     
  2703                           ; BSR set to: 0
  2704  0011F0  0E02               	movlw	2
  2705  0011F2  65E7               	cpfsgt	userEnter8bit@i& (0+255),b
  2706  0011F4  EFFE  F008         	goto	u2971
  2707  0011F8  EF00  F009         	goto	u2970
  2708  0011FC                     u2971:
  2709  0011FC  EF99  F008         	goto	l3538
  2710  001200                     u2970:
  2711  001200                     l3566:
  2712                           
  2713                           ; BSR set to: 0
  2714  001200  0E40               	movlw	low (STR_7+49)
  2715  001202  6FDA               	movwf	printf@fmt& (0+255),b
  2716  001204  0EFD               	movlw	high (STR_7+49)
  2717  001206  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  2718  001208  EC72  F00C         	call	_printf	;wreg free
  2719  00120C  0100               	movlb	0	; () banked
  2720  00120E  51E9               	movf	userEnter8bit@num& (0+255),w,b
  2721  001210                     
  2722                           ; BSR set to: 0
  2723  001210  0012               	return		;funcret
  2724  001212                     __end_of_userEnter8bit:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _printf *****************
  2728 ;; Defined at:
  2729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  2732 ;;		 -> STR_46(3), STR_45(10), STR_44(3), STR_43(17), 
  2733 ;;		 -> STR_42(21), STR_41(32), STR_40(31), STR_39(21), 
  2734 ;;		 -> STR_38(8), STR_37(23), STR_36(11), STR_35(11), 
  2735 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  2736 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  2737 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  2738 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  2739 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  2740 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  2741 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  2742 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  2743 ;;		 -> STR_2(37), STR_1(8), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  ap              2   41[BANK0 ] PTR void [1]
  2746 ;;		 -> ?_printf(2), 
  2747 ;;  ret             2    0        int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2   33[BANK0 ] int 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2757 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;Total ram usage:       10 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:   12
  2764 ;; This function calls:
  2765 ;;		_vfprintf
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;;		_userEnter8bit
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text2
  2773  0018E4                     __ptext2:
  2774                           	callstack 0
  2775  0018E4                     _printf:
  2776                           	callstack 17
  2777  0018E4  0EDC               	movlw	low (?_printf+2)
  2778  0018E6  0100               	movlb	0	; () banked
  2779  0018E8  6FE2               	movwf	printf@ap& (0+255),b
  2780  0018EA  0E00               	movlw	high (?_printf+2)
  2781  0018EC  6FE3               	movwf	(printf@ap+1)& (0+255),b
  2782  0018EE                     
  2783                           ; BSR set to: 0
  2784  0018EE  0E00               	movlw	0
  2785  0018F0  6FD4               	movwf	vfprintf@fp& (0+255),b
  2786  0018F2  0E00               	movlw	0
  2787  0018F4  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2788  0018F6  C0DA  F0D6         	movff	printf@fmt,vfprintf@fmt
  2789  0018FA  C0DB  F0D7         	movff	printf@fmt+1,vfprintf@fmt+1
  2790  0018FE  0EE2               	movlw	low printf@ap
  2791  001900  6FD8               	movwf	vfprintf@ap& (0+255),b
  2792  001902  0E00               	movlw	high printf@ap
  2793  001904  6FD9               	movwf	(vfprintf@ap+1)& (0+255),b
  2794  001906  EC1F  F00A         	call	_vfprintf	;wreg free
  2795  00190A  0012               	return		;funcret
  2796  00190C                     __end_of_printf:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _vfprintf *****************
  2800 ;; Defined at:
  2801 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2804 ;;		 -> NULL(0), 
  2805 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2806 ;;		 -> STR_46(3), STR_45(10), STR_44(3), STR_43(17), 
  2807 ;;		 -> STR_42(21), STR_41(32), STR_40(31), STR_39(21), 
  2808 ;;		 -> STR_38(8), STR_37(23), STR_36(11), STR_35(11), 
  2809 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  2810 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  2811 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  2812 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  2813 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  2814 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  2815 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  2816 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  2817 ;;		 -> STR_2(37), STR_1(8), 
  2818 ;;  ap              2   31[BANK0 ] PTR PTR void 
  2819 ;;		 -> printf@ap(2), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  2822 ;;		 -> STR_46(3), STR_45(10), STR_44(3), STR_43(17), 
  2823 ;;		 -> STR_42(21), STR_41(32), STR_40(31), STR_39(21), 
  2824 ;;		 -> STR_38(8), STR_37(23), STR_36(11), STR_35(11), 
  2825 ;;		 -> STR_34(16), STR_33(3), STR_32(3), STR_31(11), 
  2826 ;;		 -> STR_30(3), STR_29(3), STR_28(2), STR_27(41), 
  2827 ;;		 -> STR_26(2), STR_25(2), STR_24(8), STR_23(52), 
  2828 ;;		 -> STR_22(29), STR_21(29), STR_20(50), STR_19(33), 
  2829 ;;		 -> STR_18(37), STR_17(34), STR_16(64), STR_15(19), 
  2830 ;;		 -> STR_14(24), STR_13(21), STR_12(7), STR_11(15), 
  2831 ;;		 -> STR_10(52), STR_9(10), STR_8(12), STR_7(52), 
  2832 ;;		 -> STR_6(5), STR_5(42), STR_4(70), STR_3(22), 
  2833 ;;		 -> STR_2(37), STR_1(8), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   27[BANK0 ] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        8 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:   11
  2850 ;; This function calls:
  2851 ;;		_vfpfcnvrt
  2852 ;; This function is called by:
  2853 ;;		_printf
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text3
  2858  00143E                     __ptext3:
  2859                           	callstack 0
  2860  00143E                     _vfprintf:
  2861                           	callstack 17
  2862  00143E                     
  2863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2864  00143E  C0D6  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  2865  001442  C0D7  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2866  001446                     
  2867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2868  001446  0E00               	movlw	0
  2869  001448  0100               	movlb	0	; () banked
  2870  00144A  6F81               	movwf	(_nout+1)& (0+255),b
  2871  00144C  0E00               	movlw	0
  2872  00144E  6F80               	movwf	_nout& (0+255),b
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2875  001450  EF3D  F00A         	goto	l3524
  2876  001454                     l3522:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2880  001454  C0D4  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  2881  001458  C0D5  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2882  00145C  0E4D               	movlw	low vfprintf@cfmt
  2883  00145E  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  2884  001460  0E00               	movlw	high vfprintf@cfmt
  2885  001462  6FBC               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2886  001464  C0D8  F0BD         	movff	vfprintf@ap,vfpfcnvrt@ap
  2887  001468  C0D9  F0BE         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2888  00146C  ECB3  F002         	call	_vfpfcnvrt	;wreg free
  2889  001470  0100               	movlb	0	; () banked
  2890  001472  51B9               	movf	?_vfpfcnvrt& (0+255),w,b
  2891  001474  2780               	addwf	_nout& (0+255),f,b
  2892  001476  51BA               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2893  001478  2381               	addwfc	(_nout+1)& (0+255),f,b
  2894  00147A                     l3524:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2898  00147A  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2899  00147E  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2900  001482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2901  001482  6AF8               	clrf	tblptru,c
  2902  001484                     	endif
  2903  001484                     	if	0	;tblptru may be non-zero
  2904  001484                     	endif
  2905  001484  0008               	tblrd		*
  2906  001486  50F5               	movf	tablat,w,c
  2907  001488  0900               	iorlw	0
  2908  00148A  A4D8               	btfss	status,2,c
  2909  00148C  EF4A  F00A         	goto	u2941
  2910  001490  EF4C  F00A         	goto	u2940
  2911  001494                     u2941:
  2912  001494  EF2A  F00A         	goto	l3522
  2913  001498                     u2940:
  2914  001498                     
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2917  001498  C080  F0D4         	movff	_nout,?_vfprintf
  2918  00149C  C081  F0D5         	movff	_nout+1,?_vfprintf+1
  2919  0014A0                     
  2920                           ; BSR set to: 0
  2921  0014A0  0012               	return		;funcret
  2922  0014A2                     __end_of_vfprintf:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _vfpfcnvrt *****************
  2926 ;; Defined at:
  2927 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2930 ;;		 -> NULL(0), 
  2931 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  2932 ;;		 -> vfprintf@cfmt(2), 
  2933 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2934 ;;		 -> printf@ap(2), 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  llu             8   18[BANK0 ] unsigned long long 
  2937 ;;  ll              8   10[BANK0 ] long long 
  2938 ;;  f               4    0        long long 
  2939 ;;  vp              3    0        PTR void 
  2940 ;;  ct              3    0        unsigned char [3]
  2941 ;;  cp              3    0        PTR unsigned char 
  2942 ;;  i               2    0        int 
  2943 ;;  done            2    0        int 
  2944 ;;  c               1   26[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    0[BANK0 ] int 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:       27 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:   10
  2961 ;; This function calls:
  2962 ;;		_ctoa
  2963 ;;		_dtoa
  2964 ;;		_fputc
  2965 ;;		_xtoa
  2966 ;; This function is called by:
  2967 ;;		_vfprintf
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text4
  2972  000566                     __ptext4:
  2973                           	callstack 0
  2974  000566                     _vfpfcnvrt:
  2975                           	callstack 17
  2976  000566                     
  2977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2978  000566  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979  00056A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980  00056E  CFDE FFF6          	movff	postinc2,tblptrl
  2981  000572  CFDD FFF7          	movff	postdec2,tblptrh
  2982  000576                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2983  000576  6AF8               	clrf	tblptru,c
  2984  000578                     	endif
  2985  000578                     	if	0	;tblptru may be non-zero
  2986  000578                     	endif
  2987  000578  0008               	tblrd		*
  2988  00057A  50F5               	movf	tablat,w,c
  2989  00057C  0A25               	xorlw	37
  2990  00057E  A4D8               	btfss	status,2,c
  2991  000580  EFC4  F002         	goto	u2871
  2992  000584  EFC6  F002         	goto	u2870
  2993  000588                     u2871:
  2994  000588  EF28  F004         	goto	l3510
  2995  00058C                     u2870:
  2996  00058C                     
  2997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2998  00058C  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  000590  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  000594  2ADE               	incf	postinc2,f,c
  3001  000596  0E00               	movlw	0
  3002  000598  22DD               	addwfc	postdec2,f,c
  3003  00059A                     
  3004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3005  00059A  0E00               	movlw	0
  3006  00059C  6E50               	movwf	(_width+1)^0,c
  3007  00059E  0E00               	movlw	0
  3008  0005A0  6E4F               	movwf	_width^0,c
  3009  0005A2  C04F  F053         	movff	_width,_flags
  3010  0005A6  C050  F054         	movff	_width+1,_flags+1
  3011  0005AA                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3013  0005AA  6851               	setf	_prec^0,c
  3014  0005AC  6852               	setf	(_prec+1)^0,c
  3015  0005AE                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3017  0005AE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3018  0005B2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3019  0005B6  CFDE FFF6          	movff	postinc2,tblptrl
  3020  0005BA  CFDD FFF7          	movff	postdec2,tblptrh
  3021  0005BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3022  0005BE  6AF8               	clrf	tblptru,c
  3023  0005C0                     	endif
  3024  0005C0                     	if	0	;tblptru may be non-zero
  3025  0005C0                     	endif
  3026  0005C0  0008               	tblrd		*
  3027  0005C2  50F5               	movf	tablat,w,c
  3028  0005C4  0A63               	xorlw	99
  3029  0005C6  A4D8               	btfss	status,2,c
  3030  0005C8  EFE8  F002         	goto	u2881
  3031  0005CC  EFEA  F002         	goto	u2880
  3032  0005D0                     u2881:
  3033  0005D0  EF12  F003         	goto	l3470
  3034  0005D4                     u2880:
  3035  0005D4                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3037  0005D4  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3038  0005D8  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3039  0005DC  2ADE               	incf	postinc2,f,c
  3040  0005DE  0E00               	movlw	0
  3041  0005E0  22DD               	addwfc	postdec2,f,c
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3044  0005E2  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3045  0005E6  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3046  0005EA  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  3047  0005EE  0E02               	movlw	2
  3048  0005F0  26DE               	addwf	postinc2,f,c
  3049  0005F2  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  3050  0005F6  0E00               	movlw	0
  3051  0005F8  22DD               	addwfc	postdec2,f,c
  3052  0005FA  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3053  0005FE  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3054  000602  50DF               	movf	indf2,w,c
  3055  000604  0100               	movlb	0	; () banked
  3056  000606  6FD3               	movwf	vfpfcnvrt@c& (0+255),b
  3057  000608                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3060  000608  C0B9  F026         	movff	vfpfcnvrt@fp,ctoa@fp
  3061  00060C  C0BA  F027         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3062  000610  C0D3  F028         	movff	vfpfcnvrt@c,ctoa@c
  3063  000614  ECAF  F00A         	call	_ctoa	;wreg free
  3064  000618  C026  F0B9         	movff	?_ctoa,?_vfpfcnvrt
  3065  00061C  C027  F0BA         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3066  000620  EF44  F004         	goto	l1295
  3067  000624                     l3470:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3070  000624  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3071  000628  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3072  00062C  CFDE FFF6          	movff	postinc2,tblptrl
  3073  000630  CFDD FFF7          	movff	postdec2,tblptrh
  3074  000634                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3075  000634  6AF8               	clrf	tblptru,c
  3076  000636                     	endif
  3077  000636                     	if	0	;tblptru may be non-zero
  3078  000636                     	endif
  3079  000636  0008               	tblrd		*
  3080  000638  50F5               	movf	tablat,w,c
  3081  00063A  0A64               	xorlw	100
  3082  00063C  B4D8               	btfsc	status,2,c
  3083  00063E  EF23  F003         	goto	u2891
  3084  000642  EF25  F003         	goto	u2890
  3085  000646                     u2891:
  3086  000646  EF38  F003         	goto	l3474
  3087  00064A                     u2890:
  3088  00064A  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3089  00064E  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3090  000652  CFDE FFF6          	movff	postinc2,tblptrl
  3091  000656  CFDD FFF7          	movff	postdec2,tblptrh
  3092  00065A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3093  00065A  6AF8               	clrf	tblptru,c
  3094  00065C                     	endif
  3095  00065C                     	if	0	;tblptru may be non-zero
  3096  00065C                     	endif
  3097  00065C  0008               	tblrd		*
  3098  00065E  50F5               	movf	tablat,w,c
  3099  000660  0A69               	xorlw	105
  3100  000662  A4D8               	btfss	status,2,c
  3101  000664  EF36  F003         	goto	u2901
  3102  000668  EF38  F003         	goto	u2900
  3103  00066C                     u2901:
  3104  00066C  EF79  F003         	goto	l3480
  3105  000670                     u2900:
  3106  000670                     l3474:
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3109  000670  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3110  000674  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3111  000678  2ADE               	incf	postinc2,f,c
  3112  00067A  0E00               	movlw	0
  3113  00067C  22DD               	addwfc	postdec2,f,c
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3116  00067E  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3117  000682  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3118  000686  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  3119  00068A  0E02               	movlw	2
  3120  00068C  26DE               	addwf	postinc2,f,c
  3121  00068E  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  3122  000692  0E00               	movlw	0
  3123  000694  22DD               	addwfc	postdec2,f,c
  3124  000696  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3125  00069A  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3126  00069E  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  3127  0006A2  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  3128  0006A6  0100               	movlb	0	; () banked
  3129  0006A8  0E00               	movlw	0
  3130  0006AA  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3131  0006AC  0EFF               	movlw	-1
  3132  0006AE  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3133  0006B0  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3134  0006B2  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3135  0006B4  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3136  0006B6  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3137  0006B8  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3138  0006BA                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  3141  0006BA  C0B9  F026         	movff	vfpfcnvrt@fp,dtoa@fp
  3142  0006BE  C0BA  F027         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3143  0006C2  C0C3  F028         	movff	vfpfcnvrt@ll,dtoa@d
  3144  0006C6  C0C4  F029         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3145  0006CA  C0C5  F02A         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3146  0006CE  C0C6  F02B         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3147  0006D2  C0C7  F02C         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3148  0006D6  C0C8  F02D         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3149  0006DA  C0C9  F02E         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3150  0006DE  C0CA  F02F         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3151  0006E2  EC45  F004         	call	_dtoa	;wreg free
  3152  0006E6  C026  F0B9         	movff	?_dtoa,?_vfpfcnvrt
  3153  0006EA  C027  F0BA         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3154  0006EE  EF44  F004         	goto	l1295
  3155  0006F2                     l3480:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3158  0006F2  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3159  0006F6  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3160  0006FA  CFDE FFF6          	movff	postinc2,tblptrl
  3161  0006FE  CFDD FFF7          	movff	postdec2,tblptrh
  3162  000702                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3163  000702  6AF8               	clrf	tblptru,c
  3164  000704                     	endif
  3165  000704                     	if	0	;tblptru may be non-zero
  3166  000704                     	endif
  3167  000704  0008               	tblrd		*
  3168  000706  50F5               	movf	tablat,w,c
  3169  000708  0A78               	xorlw	120
  3170  00070A  B4D8               	btfsc	status,2,c
  3171  00070C  EF8A  F003         	goto	u2911
  3172  000710  EF8C  F003         	goto	u2910
  3173  000714                     u2911:
  3174  000714  EF9F  F003         	goto	l3484
  3175  000718                     u2910:
  3176  000718  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3177  00071C  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3178  000720  CFDE FFF6          	movff	postinc2,tblptrl
  3179  000724  CFDD FFF7          	movff	postdec2,tblptrh
  3180  000728                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3181  000728  6AF8               	clrf	tblptru,c
  3182  00072A                     	endif
  3183  00072A                     	if	0	;tblptru may be non-zero
  3184  00072A                     	endif
  3185  00072A  0008               	tblrd		*
  3186  00072C  50F5               	movf	tablat,w,c
  3187  00072E  0A58               	xorlw	88
  3188  000730  A4D8               	btfss	status,2,c
  3189  000732  EF9D  F003         	goto	u2921
  3190  000736  EF9F  F003         	goto	u2920
  3191  00073A                     u2921:
  3192  00073A  EFEF  F003         	goto	l3494
  3193  00073E                     u2920:
  3194  00073E                     l3484:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  3197  00073E  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3198  000742  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3199  000746  CFDE FFF6          	movff	postinc2,tblptrl
  3200  00074A  CFDD FFF7          	movff	postdec2,tblptrh
  3201  00074E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3202  00074E  6AF8               	clrf	tblptru,c
  3203  000750                     	endif
  3204  000750                     	if	0	;tblptru may be non-zero
  3205  000750                     	endif
  3206  000750  0008               	tblrd		*
  3207  000752  CFF5 F0D3          	movff	tablat,vfpfcnvrt@c
  3208  000756                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  3210  000756  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211  00075A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212  00075E  2ADE               	incf	postinc2,f,c
  3213  000760  0E00               	movlw	0
  3214  000762  22DD               	addwfc	postdec2,f,c
  3215  000764                     
  3216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3217  000764  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3218  000768  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3219  00076C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  3220  000770  0E02               	movlw	2
  3221  000772  26DE               	addwf	postinc2,f,c
  3222  000774  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  3223  000778  0E00               	movlw	0
  3224  00077A  22DD               	addwfc	postdec2,f,c
  3225  00077C  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3226  000780  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3227  000784  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt+2
  3228  000788  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+3
  3229  00078C  C0C1  F0CB         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3230  000790  C0C2  F0CC         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3231  000794  0100               	movlb	0	; () banked
  3232  000796  6BCD               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3233  000798  6BCE               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3234  00079A  6BCF               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3235  00079C  6BD0               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3236  00079E  6BD1               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3237  0007A0  6BD2               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3238  0007A2                     
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  3241  0007A2  C0B9  F026         	movff	vfpfcnvrt@fp,xtoa@fp
  3242  0007A6  C0BA  F027         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3243  0007AA  C0CB  F028         	movff	vfpfcnvrt@llu,xtoa@d
  3244  0007AE  C0CC  F029         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3245  0007B2  C0CD  F02A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3246  0007B6  C0CE  F02B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3247  0007BA  C0CF  F02C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3248  0007BE  C0D0  F02D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3249  0007C2  C0D1  F02E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3250  0007C6  C0D2  F02F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3251  0007CA  C0D3  F030         	movff	vfpfcnvrt@c,xtoa@x
  3252  0007CE  ECB4  F005         	call	_xtoa	;wreg free
  3253  0007D2  C026  F0B9         	movff	?_xtoa,?_vfpfcnvrt
  3254  0007D6  C027  F0BA         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3255  0007DA  EF44  F004         	goto	l1295
  3256  0007DE                     l3494:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  3259  0007DE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3260  0007E2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3261  0007E6  CFDE FFF6          	movff	postinc2,tblptrl
  3262  0007EA  CFDD FFF7          	movff	postdec2,tblptrh
  3263  0007EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3264  0007EE  6AF8               	clrf	tblptru,c
  3265  0007F0                     	endif
  3266  0007F0                     	if	0	;tblptru may be non-zero
  3267  0007F0                     	endif
  3268  0007F0  0008               	tblrd		*
  3269  0007F2  50F5               	movf	tablat,w,c
  3270  0007F4  0A25               	xorlw	37
  3271  0007F6  A4D8               	btfss	status,2,c
  3272  0007F8  EF00  F004         	goto	u2931
  3273  0007FC  EF02  F004         	goto	u2930
  3274  000800                     u2931:
  3275  000800  EF1A  F004         	goto	l3504
  3276  000804                     u2930:
  3277  000804                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  3279  000804  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3280  000808  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3281  00080C  2ADE               	incf	postinc2,f,c
  3282  00080E  0E00               	movlw	0
  3283  000810  22DD               	addwfc	postdec2,f,c
  3284  000812                     
  3285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  3286  000812  0E00               	movlw	0
  3287  000814  6E0C               	movwf	(fputc@c+1)^0,c
  3288  000816  0E25               	movlw	37
  3289  000818  6E0B               	movwf	fputc@c^0,c
  3290  00081A  C0B9  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  3291  00081E  C0BA  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3292  000822  ECD4  F009         	call	_fputc	;wreg free
  3293  000826                     l3500:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  3296  000826  0E00               	movlw	0
  3297  000828  0100               	movlb	0	; () banked
  3298  00082A  6FBA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3299  00082C  0E01               	movlw	1
  3300  00082E  6FB9               	movwf	?_vfpfcnvrt& (0+255),b
  3301  000830  EF44  F004         	goto	l1295
  3302  000834                     l3504:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  3305  000834  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  000838  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  00083C  2ADE               	incf	postinc2,f,c
  3308  00083E  0E00               	movlw	0
  3309  000840  22DD               	addwfc	postdec2,f,c
  3310  000842                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  3312  000842  0E00               	movlw	0
  3313  000844  0100               	movlb	0	; () banked
  3314  000846  6FBA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3315  000848  0E00               	movlw	0
  3316  00084A  6FB9               	movwf	?_vfpfcnvrt& (0+255),b
  3317  00084C  EF44  F004         	goto	l1295
  3318  000850                     l3510:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3321  000850  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3322  000854  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3323  000858  CFDE FFF6          	movff	postinc2,tblptrl
  3324  00085C  CFDD FFF7          	movff	postdec2,tblptrh
  3325  000860                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3326  000860  6AF8               	clrf	tblptru,c
  3327  000862                     	endif
  3328  000862                     	if	0	;tblptru may be non-zero
  3329  000862                     	endif
  3330  000862  0008               	tblrd		*
  3331  000864  50F5               	movf	tablat,w,c
  3332  000866  6E0B               	movwf	fputc@c^0,c
  3333  000868  6A0C               	clrf	(fputc@c+1)^0,c
  3334  00086A  C0B9  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  3335  00086E  C0BA  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3336  000872  ECD4  F009         	call	_fputc	;wreg free
  3337  000876                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3339  000876  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  00087A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  00087E  2ADE               	incf	postinc2,f,c
  3342  000880  0E00               	movlw	0
  3343  000882  22DD               	addwfc	postdec2,f,c
  3344  000884  EF13  F004         	goto	l3500
  3345  000888                     l1295:
  3346  000888  0012               	return		;funcret
  3347  00088A                     __end_of_vfpfcnvrt:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _xtoa *****************
  3351 ;; Defined at:
  3352 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  3355 ;;		 -> NULL(0), 
  3356 ;;  d               8   39[COMRAM] unsigned long long 
  3357 ;;  x               1   47[COMRAM] unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  n               8   64[COMRAM] unsigned long long 
  3360 ;;  c               2   74[COMRAM] int 
  3361 ;;  i               2   72[COMRAM] int 
  3362 ;;  w               2   62[COMRAM] int 
  3363 ;;  p               2   60[COMRAM] int 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2   37[COMRAM] int 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3373 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;Total ram usage:       39 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    9
  3380 ;; This function calls:
  3381 ;;		_isalpha
  3382 ;;		_isupper
  3383 ;;		_pad
  3384 ;;		_toupper
  3385 ;; This function is called by:
  3386 ;;		_vfpfcnvrt
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text5
  3391  000B68                     __ptext5:
  3392                           	callstack 0
  3393  000B68                     _xtoa:
  3394                           	callstack 17
  3395  000B68                     
  3396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  3397  000B68  BE52               	btfsc	(_prec+1)^0,7,c
  3398  000B6A  EFB9  F005         	goto	u2701
  3399  000B6E  EFBB  F005         	goto	u2700
  3400  000B72                     u2701:
  3401  000B72  EFBC  F005         	goto	l3392
  3402  000B76                     u2700:
  3403  000B76                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  3405  000B76  9253               	bcf	_flags^0,1,c
  3406  000B78                     l3392:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  3409  000B78  BE52               	btfsc	(_prec+1)^0,7,c
  3410  000B7A  EFC9  F005         	goto	u2710
  3411  000B7E  5052               	movf	(_prec+1)^0,w,c
  3412  000B80  E106               	bnz	u2711
  3413  000B82  0451               	decf	_prec^0,w,c
  3414  000B84  B0D8               	btfsc	status,0,c
  3415  000B86  EFC7  F005         	goto	u2711
  3416  000B8A  EFC9  F005         	goto	u2710
  3417  000B8E                     u2711:
  3418  000B8E  EFCF  F005         	goto	l1265
  3419  000B92                     u2710:
  3420  000B92  0E00               	movlw	0
  3421  000B94  6E3E               	movwf	(xtoa@p+1)^0,c
  3422  000B96  0E01               	movlw	1
  3423  000B98  6E3D               	movwf	xtoa@p^0,c
  3424  000B9A  EFD3  F005         	goto	l1267
  3425  000B9E                     l1265:
  3426  000B9E  C051  F03D         	movff	_prec,xtoa@p
  3427  000BA2  C052  F03E         	movff	_prec+1,xtoa@p+1
  3428  000BA6                     l1267:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  3431  000BA6  C04F  F03F         	movff	_width,xtoa@w
  3432  000BAA  C050  F040         	movff	_width+1,xtoa@w+1
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  3435  000BAE  A853               	btfss	_flags^0,4,c
  3436  000BB0  EFDC  F005         	goto	u2721
  3437  000BB4  EFDE  F005         	goto	u2720
  3438  000BB8                     u2721:
  3439  000BB8  EFE2  F005         	goto	l3398
  3440  000BBC                     u2720:
  3441  000BBC                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  3443  000BBC  0EFE               	movlw	254
  3444  000BBE  263F               	addwf	xtoa@w^0,f,c
  3445  000BC0  0EFF               	movlw	255
  3446  000BC2  2240               	addwfc	(xtoa@w+1)^0,f,c
  3447  000BC4                     l3398:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  3450  000BC4  C028  F041         	movff	xtoa@d,xtoa@n
  3451  000BC8  C029  F042         	movff	xtoa@d+1,xtoa@n+1
  3452  000BCC  C02A  F043         	movff	xtoa@d+2,xtoa@n+2
  3453  000BD0  C02B  F044         	movff	xtoa@d+3,xtoa@n+3
  3454  000BD4  C02C  F045         	movff	xtoa@d+4,xtoa@n+4
  3455  000BD8  C02D  F046         	movff	xtoa@d+5,xtoa@n+5
  3456  000BDC  C02E  F047         	movff	xtoa@d+6,xtoa@n+6
  3457  000BE0  C02F  F048         	movff	xtoa@d+7,xtoa@n+7
  3458  000BE4                     
  3459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  3460  000BE4  0E00               	movlw	0
  3461  000BE6  6E4A               	movwf	(xtoa@i+1)^0,c
  3462  000BE8  0E1F               	movlw	31
  3463  000BEA  6E49               	movwf	xtoa@i^0,c
  3464  000BEC                     
  3465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  3466  000BEC  0E00               	movlw	0
  3467  000BEE  0100               	movlb	0	; () banked
  3468  000BF0  6FB8               	movwf	(_dbuf+31)& (0+255),b
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3471  000BF2  EFAE  F006         	goto	l3434
  3472  000BF6                     l3404:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  3475  000BF6  0649               	decf	xtoa@i^0,f,c
  3476  000BF8  A0D8               	btfss	status,0,c
  3477  000BFA  064A               	decf	(xtoa@i+1)^0,f,c
  3478  000BFC                     
  3479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  3480  000BFC  0E0F               	movlw	15
  3481  000BFE  1441               	andwf	xtoa@n^0,w,c
  3482  000C00  6E4B               	movwf	xtoa@c^0,c
  3483  000C02  6A4C               	clrf	(xtoa@c+1)^0,c
  3484  000C04                     
  3485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  3486  000C04  BE4C               	btfsc	(xtoa@c+1)^0,7,c
  3487  000C06  EF0E  F006         	goto	u2731
  3488  000C0A  504C               	movf	(xtoa@c+1)^0,w,c
  3489  000C0C  E109               	bnz	u2730
  3490  000C0E  0E0A               	movlw	10
  3491  000C10  5C4B               	subwf	xtoa@c^0,w,c
  3492  000C12  A0D8               	btfss	status,0,c
  3493  000C14  EF0E  F006         	goto	u2731
  3494  000C18  EF10  F006         	goto	u2730
  3495  000C1C                     u2731:
  3496  000C1C  EF18  F006         	goto	l3412
  3497  000C20                     u2730:
  3498  000C20  0E57               	movlw	87
  3499  000C22  244B               	addwf	xtoa@c^0,w,c
  3500  000C24  6E4B               	movwf	xtoa@c^0,c
  3501  000C26  0E00               	movlw	0
  3502  000C28  204C               	addwfc	(xtoa@c+1)^0,w,c
  3503  000C2A  6E4C               	movwf	(xtoa@c+1)^0,c
  3504  000C2C  EF1E  F006         	goto	l1274
  3505  000C30                     l3412:
  3506  000C30  0E30               	movlw	48
  3507  000C32  244B               	addwf	xtoa@c^0,w,c
  3508  000C34  6E4B               	movwf	xtoa@c^0,c
  3509  000C36  0E00               	movlw	0
  3510  000C38  204C               	addwfc	(xtoa@c+1)^0,w,c
  3511  000C3A  6E4C               	movwf	(xtoa@c+1)^0,c
  3512  000C3C                     l1274:
  3513  000C3C  0EBF               	movlw	191
  3514  000C3E  6E31               	movwf	??_xtoa^0,c
  3515  000C40  0EFF               	movlw	255
  3516  000C42  6E32               	movwf	(??_xtoa+1)^0,c
  3517  000C44  5030               	movf	xtoa@x^0,w,c
  3518  000C46  6E33               	movwf	(??_xtoa+2)^0,c
  3519  000C48  6A34               	clrf	(??_xtoa+3)^0,c
  3520  000C4A  5031               	movf	??_xtoa^0,w,c
  3521  000C4C  2633               	addwf	(??_xtoa+2)^0,f,c
  3522  000C4E  5032               	movf	(??_xtoa+1)^0,w,c
  3523  000C50  2234               	addwfc	(??_xtoa+3)^0,f,c
  3524  000C52  5034               	movf	(??_xtoa+3)^0,w,c
  3525  000C54  E10A               	bnz	u2740
  3526  000C56  0E1A               	movlw	26
  3527  000C58  5C33               	subwf	(??_xtoa+2)^0,w,c
  3528  000C5A  A0D8               	btfss	status,0,c
  3529  000C5C  EF32  F006         	goto	u2741
  3530  000C60  EF35  F006         	goto	u2740
  3531  000C64                     u2741:
  3532  000C64  0E01               	movlw	1
  3533  000C66  EF36  F006         	goto	u2750
  3534  000C6A                     u2740:
  3535  000C6A  0E00               	movlw	0
  3536  000C6C                     u2750:
  3537  000C6C  6E39               	movwf	_xtoa$1903^0,c
  3538  000C6E  6A3A               	clrf	(_xtoa$1903+1)^0,c
  3539  000C70  5039               	movf	_xtoa$1903^0,w,c
  3540  000C72  103A               	iorwf	(_xtoa$1903+1)^0,w,c
  3541  000C74  B4D8               	btfsc	status,2,c
  3542  000C76  EF3F  F006         	goto	u2761
  3543  000C7A  EF41  F006         	goto	u2760
  3544  000C7E                     u2761:
  3545  000C7E  EF71  F006         	goto	l3426
  3546  000C82                     u2760:
  3547  000C82  0E9F               	movlw	159
  3548  000C84  6E31               	movwf	??_xtoa^0,c
  3549  000C86  0EFF               	movlw	255
  3550  000C88  6E32               	movwf	(??_xtoa+1)^0,c
  3551  000C8A  0E20               	movlw	32
  3552  000C8C  104B               	iorwf	xtoa@c^0,w,c
  3553  000C8E  6E33               	movwf	(??_xtoa+2)^0,c
  3554  000C90  0E00               	movlw	0
  3555  000C92  104C               	iorwf	(xtoa@c+1)^0,w,c
  3556  000C94  6E34               	movwf	(??_xtoa+3)^0,c
  3557  000C96  5031               	movf	??_xtoa^0,w,c
  3558  000C98  2633               	addwf	(??_xtoa+2)^0,f,c
  3559  000C9A  5032               	movf	(??_xtoa+1)^0,w,c
  3560  000C9C  2234               	addwfc	(??_xtoa+3)^0,f,c
  3561  000C9E  5034               	movf	(??_xtoa+3)^0,w,c
  3562  000CA0  E10A               	bnz	u2770
  3563  000CA2  0E1A               	movlw	26
  3564  000CA4  5C33               	subwf	(??_xtoa+2)^0,w,c
  3565  000CA6  A0D8               	btfss	status,0,c
  3566  000CA8  EF58  F006         	goto	u2771
  3567  000CAC  EF5B  F006         	goto	u2770
  3568  000CB0                     u2771:
  3569  000CB0  0E01               	movlw	1
  3570  000CB2  EF5C  F006         	goto	u2780
  3571  000CB6                     u2770:
  3572  000CB6  0E00               	movlw	0
  3573  000CB8                     u2780:
  3574  000CB8  6E3B               	movwf	_xtoa$1904^0,c
  3575  000CBA  6A3C               	clrf	(_xtoa$1904+1)^0,c
  3576  000CBC  503B               	movf	_xtoa$1904^0,w,c
  3577  000CBE  103C               	iorwf	(_xtoa$1904+1)^0,w,c
  3578  000CC0  B4D8               	btfsc	status,2,c
  3579  000CC2  EF65  F006         	goto	u2791
  3580  000CC6  EF67  F006         	goto	u2790
  3581  000CCA                     u2791:
  3582  000CCA  EF71  F006         	goto	l3426
  3583  000CCE                     u2790:
  3584  000CCE                     
  3585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  3586  000CCE  C04B  F00F         	movff	xtoa@c,toupper@c
  3587  000CD2  C04C  F010         	movff	xtoa@c+1,toupper@c+1
  3588  000CD6  EC80  F00A         	call	_toupper	;wreg free
  3589  000CDA  C00F  F04B         	movff	?_toupper,xtoa@c
  3590  000CDE  C010  F04C         	movff	?_toupper+1,xtoa@c+1
  3591  000CE2                     l3426:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  3594  000CE2  0E99               	movlw	low _dbuf
  3595  000CE4  2449               	addwf	xtoa@i^0,w,c
  3596  000CE6  6ED9               	movwf	fsr2l,c
  3597  000CE8  0E00               	movlw	high _dbuf
  3598  000CEA  204A               	addwfc	(xtoa@i+1)^0,w,c
  3599  000CEC  6EDA               	movwf	fsr2h,c
  3600  000CEE  C04B  FFDF         	movff	xtoa@c,indf2
  3601  000CF2                     
  3602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  3603  000CF2  063D               	decf	xtoa@p^0,f,c
  3604  000CF4  A0D8               	btfss	status,0,c
  3605  000CF6  063E               	decf	(xtoa@p+1)^0,f,c
  3606  000CF8                     
  3607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  3608  000CF8  063F               	decf	xtoa@w^0,f,c
  3609  000CFA  A0D8               	btfss	status,0,c
  3610  000CFC  0640               	decf	(xtoa@w+1)^0,f,c
  3611  000CFE                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  3613  000CFE  C041  F031         	movff	xtoa@n,??_xtoa
  3614  000D02  C042  F032         	movff	xtoa@n+1,??_xtoa+1
  3615  000D06  C043  F033         	movff	xtoa@n+2,??_xtoa+2
  3616  000D0A  C044  F034         	movff	xtoa@n+3,??_xtoa+3
  3617  000D0E  C045  F035         	movff	xtoa@n+4,??_xtoa+4
  3618  000D12  C046  F036         	movff	xtoa@n+5,??_xtoa+5
  3619  000D16  C047  F037         	movff	xtoa@n+6,??_xtoa+6
  3620  000D1A  C048  F038         	movff	xtoa@n+7,??_xtoa+7
  3621  000D1E  0E05               	movlw	5
  3622  000D20  EF9B  F006         	goto	u2800
  3623  000D24                     u2805:
  3624  000D24  90D8               	bcf	status,0,c
  3625  000D26  3238               	rrcf	(??_xtoa+7)^0,f,c
  3626  000D28  3237               	rrcf	(??_xtoa+6)^0,f,c
  3627  000D2A  3236               	rrcf	(??_xtoa+5)^0,f,c
  3628  000D2C  3235               	rrcf	(??_xtoa+4)^0,f,c
  3629  000D2E  3234               	rrcf	(??_xtoa+3)^0,f,c
  3630  000D30  3233               	rrcf	(??_xtoa+2)^0,f,c
  3631  000D32  3232               	rrcf	(??_xtoa+1)^0,f,c
  3632  000D34  3231               	rrcf	??_xtoa^0,f,c
  3633  000D36                     u2800:
  3634  000D36  2EE8               	decfsz	wreg,f,c
  3635  000D38  EF92  F006         	goto	u2805
  3636  000D3C  C031  F041         	movff	??_xtoa,xtoa@n
  3637  000D40  C032  F042         	movff	??_xtoa+1,xtoa@n+1
  3638  000D44  C033  F043         	movff	??_xtoa+2,xtoa@n+2
  3639  000D48  C034  F044         	movff	??_xtoa+3,xtoa@n+3
  3640  000D4C  C035  F045         	movff	??_xtoa+4,xtoa@n+4
  3641  000D50  C036  F046         	movff	??_xtoa+5,xtoa@n+5
  3642  000D54  C037  F047         	movff	??_xtoa+6,xtoa@n+6
  3643  000D58  C038  F048         	movff	??_xtoa+7,xtoa@n+7
  3644  000D5C                     l3434:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3647  000D5C  BE4A               	btfsc	(xtoa@i+1)^0,7,c
  3648  000D5E  EFBA  F006         	goto	u2811
  3649  000D62  504A               	movf	(xtoa@i+1)^0,w,c
  3650  000D64  E109               	bnz	u2810
  3651  000D66  0E02               	movlw	2
  3652  000D68  5C49               	subwf	xtoa@i^0,w,c
  3653  000D6A  A0D8               	btfss	status,0,c
  3654  000D6C  EFBA  F006         	goto	u2811
  3655  000D70  EFBC  F006         	goto	u2810
  3656  000D74                     u2811:
  3657  000D74  EFEC  F006         	goto	l1288
  3658  000D78                     u2810:
  3659  000D78  5041               	movf	xtoa@n^0,w,c
  3660  000D7A  1042               	iorwf	(xtoa@n+1)^0,w,c
  3661  000D7C  1043               	iorwf	(xtoa@n+2)^0,w,c
  3662  000D7E  1044               	iorwf	(xtoa@n+3)^0,w,c
  3663  000D80  1045               	iorwf	(xtoa@n+4)^0,w,c
  3664  000D82  1046               	iorwf	(xtoa@n+5)^0,w,c
  3665  000D84  1047               	iorwf	(xtoa@n+6)^0,w,c
  3666  000D86  1048               	iorwf	(xtoa@n+7)^0,w,c
  3667  000D88  A4D8               	btfss	status,2,c
  3668  000D8A  EFC9  F006         	goto	u2821
  3669  000D8E  EFCB  F006         	goto	u2820
  3670  000D92                     u2821:
  3671  000D92  EFFB  F005         	goto	l3404
  3672  000D96                     u2820:
  3673  000D96  BE3E               	btfsc	(xtoa@p+1)^0,7,c
  3674  000D98  EFD8  F006         	goto	u2830
  3675  000D9C  503E               	movf	(xtoa@p+1)^0,w,c
  3676  000D9E  E106               	bnz	u2831
  3677  000DA0  043D               	decf	xtoa@p^0,w,c
  3678  000DA2  B0D8               	btfsc	status,0,c
  3679  000DA4  EFD6  F006         	goto	u2831
  3680  000DA8  EFD8  F006         	goto	u2830
  3681  000DAC                     u2831:
  3682  000DAC  EFFB  F005         	goto	l3404
  3683  000DB0                     u2830:
  3684  000DB0  BE40               	btfsc	(xtoa@w+1)^0,7,c
  3685  000DB2  EFE3  F006         	goto	u2841
  3686  000DB6  5040               	movf	(xtoa@w+1)^0,w,c
  3687  000DB8  E108               	bnz	u2840
  3688  000DBA  043F               	decf	xtoa@w^0,w,c
  3689  000DBC  A0D8               	btfss	status,0,c
  3690  000DBE  EFE3  F006         	goto	u2841
  3691  000DC2  EFE5  F006         	goto	u2840
  3692  000DC6                     u2841:
  3693  000DC6  EFEC  F006         	goto	l1288
  3694  000DCA                     u2840:
  3695  000DCA  B253               	btfsc	_flags^0,1,c
  3696  000DCC  EFEA  F006         	goto	u2851
  3697  000DD0  EFEC  F006         	goto	u2850
  3698  000DD4                     u2851:
  3699  000DD4  EFFB  F005         	goto	l3404
  3700  000DD8                     u2850:
  3701  000DD8                     l1288:
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3704  000DD8  A853               	btfss	_flags^0,4,c
  3705  000DDA  EFF1  F006         	goto	u2861
  3706  000DDE  EFF3  F006         	goto	u2860
  3707  000DE2                     u2861:
  3708  000DE2  EF09  F007         	goto	l3450
  3709  000DE6                     u2860:
  3710  000DE6                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  3712  000DE6  0649               	decf	xtoa@i^0,f,c
  3713  000DE8  A0D8               	btfss	status,0,c
  3714  000DEA  064A               	decf	(xtoa@i+1)^0,f,c
  3715  000DEC                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  3717  000DEC  0E99               	movlw	low _dbuf
  3718  000DEE  2449               	addwf	xtoa@i^0,w,c
  3719  000DF0  6ED9               	movwf	fsr2l,c
  3720  000DF2  0E00               	movlw	high _dbuf
  3721  000DF4  204A               	addwfc	(xtoa@i+1)^0,w,c
  3722  000DF6  6EDA               	movwf	fsr2h,c
  3723  000DF8  C030  FFDF         	movff	xtoa@x,indf2
  3724  000DFC                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  3726  000DFC  0649               	decf	xtoa@i^0,f,c
  3727  000DFE  A0D8               	btfss	status,0,c
  3728  000E00  064A               	decf	(xtoa@i+1)^0,f,c
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  3731  000E02  0E99               	movlw	low _dbuf
  3732  000E04  2449               	addwf	xtoa@i^0,w,c
  3733  000E06  6ED9               	movwf	fsr2l,c
  3734  000E08  0E00               	movlw	high _dbuf
  3735  000E0A  204A               	addwfc	(xtoa@i+1)^0,w,c
  3736  000E0C  6EDA               	movwf	fsr2h,c
  3737  000E0E  0E30               	movlw	48
  3738  000E10  6EDF               	movwf	indf2,c
  3739  000E12                     l3450:
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  3742  000E12  C026  F01B         	movff	xtoa@fp,pad@fp
  3743  000E16  C027  F01C         	movff	xtoa@fp+1,pad@fp+1
  3744  000E1A  0E99               	movlw	low _dbuf
  3745  000E1C  2449               	addwf	xtoa@i^0,w,c
  3746  000E1E  6E1D               	movwf	pad@buf^0,c
  3747  000E20  0E00               	movlw	high _dbuf
  3748  000E22  204A               	addwfc	(xtoa@i+1)^0,w,c
  3749  000E24  6E1E               	movwf	(pad@buf+1)^0,c
  3750  000E26  C03F  F01F         	movff	xtoa@w,pad@p
  3751  000E2A  C040  F020         	movff	xtoa@w+1,pad@p+1
  3752  000E2E  EC73  F009         	call	_pad	;wreg free
  3753  000E32  C01B  F026         	movff	?_pad,?_xtoa
  3754  000E36  C01C  F027         	movff	?_pad+1,?_xtoa+1
  3755  000E3A  0012               	return		;funcret
  3756  000E3C                     __end_of_xtoa:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _toupper *****************
  3760 ;; Defined at:
  3761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  c               2   14[COMRAM] int 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2   14[COMRAM] int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:        8 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    5
  3782 ;; This function calls:
  3783 ;;		_islower
  3784 ;; This function is called by:
  3785 ;;		_xtoa
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text6
  3790  001500                     __ptext6:
  3791                           	callstack 0
  3792  001500                     _toupper:
  3793                           	callstack 20
  3794  001500  0E9F               	movlw	159
  3795  001502  6E11               	movwf	??_toupper^0,c
  3796  001504  0EFF               	movlw	255
  3797  001506  6E12               	movwf	(??_toupper+1)^0,c
  3798  001508  C00F  F013         	movff	toupper@c,??_toupper+2
  3799  00150C  C010  F014         	movff	toupper@c+1,??_toupper+3
  3800  001510  5011               	movf	??_toupper^0,w,c
  3801  001512  2613               	addwf	(??_toupper+2)^0,f,c
  3802  001514  5012               	movf	(??_toupper+1)^0,w,c
  3803  001516  2214               	addwfc	(??_toupper+3)^0,f,c
  3804  001518  5014               	movf	(??_toupper+3)^0,w,c
  3805  00151A  E10A               	bnz	u2510
  3806  00151C  0E1A               	movlw	26
  3807  00151E  5C13               	subwf	(??_toupper+2)^0,w,c
  3808  001520  A0D8               	btfss	status,0,c
  3809  001522  EF95  F00A         	goto	u2511
  3810  001526  EF98  F00A         	goto	u2510
  3811  00152A                     u2511:
  3812  00152A  0E01               	movlw	1
  3813  00152C  EF99  F00A         	goto	u2520
  3814  001530                     u2510:
  3815  001530  0E00               	movlw	0
  3816  001532                     u2520:
  3817  001532  6E15               	movwf	_toupper$1983^0,c
  3818  001534  6A16               	clrf	(_toupper$1983+1)^0,c
  3819  001536  5015               	movf	_toupper$1983^0,w,c
  3820  001538  1016               	iorwf	(_toupper$1983+1)^0,w,c
  3821  00153A  B4D8               	btfsc	status,2,c
  3822  00153C  EFA2  F00A         	goto	u2531
  3823  001540  EFA4  F00A         	goto	u2530
  3824  001544                     u2531:
  3825  001544  EFAA  F00A         	goto	l1358
  3826  001548                     u2530:
  3827  001548  0E5F               	movlw	95
  3828  00154A  140F               	andwf	toupper@c^0,w,c
  3829  00154C  6E0F               	movwf	?_toupper^0,c
  3830  00154E  6A10               	clrf	(?_toupper+1)^0,c
  3831  001550  EFAE  F00A         	goto	l1363
  3832  001554                     l1358:
  3833  001554  C00F  F00F         	movff	toupper@c,?_toupper
  3834  001558  C010  F010         	movff	toupper@c+1,?_toupper+1
  3835  00155C                     l1363:
  3836  00155C  0012               	return		;funcret
  3837  00155E                     __end_of_toupper:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _islower *****************
  3841 ;; Defined at:
  3842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  c               2    8[COMRAM] int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2    8[COMRAM] int 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        6 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    4
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_toupper
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text7
  3871  001734                     __ptext7:
  3872                           	callstack 0
  3873  001734                     _islower:
  3874                           	callstack 20
  3875  001734  0E9F               	movlw	159
  3876  001736  6E0B               	movwf	??_islower^0,c
  3877  001738  0EFF               	movlw	255
  3878  00173A  6E0C               	movwf	(??_islower+1)^0,c
  3879  00173C  C009  F00D         	movff	islower@c,??_islower+2
  3880  001740  C00A  F00E         	movff	islower@c+1,??_islower+3
  3881  001744  500B               	movf	??_islower^0,w,c
  3882  001746  260D               	addwf	(??_islower+2)^0,f,c
  3883  001748  500C               	movf	(??_islower+1)^0,w,c
  3884  00174A  220E               	addwfc	(??_islower+3)^0,f,c
  3885  00174C  500E               	movf	(??_islower+3)^0,w,c
  3886  00174E  E10A               	bnz	u2270
  3887  001750  0E1A               	movlw	26
  3888  001752  5C0D               	subwf	(??_islower+2)^0,w,c
  3889  001754  A0D8               	btfss	status,0,c
  3890  001756  EFAF  F00B         	goto	u2271
  3891  00175A  EFB2  F00B         	goto	u2270
  3892  00175E                     u2271:
  3893  00175E  0E01               	movlw	1
  3894  001760  EFB3  F00B         	goto	u2280
  3895  001764                     u2270:
  3896  001764  0E00               	movlw	0
  3897  001766                     u2280:
  3898  001766  6E09               	movwf	?_islower^0,c
  3899  001768  6A0A               	clrf	(?_islower+1)^0,c
  3900  00176A  0012               	return		;funcret
  3901  00176C                     __end_of_islower:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _isupper *****************
  3905 ;; Defined at:
  3906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  c               2    8[COMRAM] int 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    8[COMRAM] int 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        6 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    4
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_xtoa
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text8
  3935  00176C                     __ptext8:
  3936                           	callstack 0
  3937  00176C                     _isupper:
  3938                           	callstack 21
  3939  00176C  0EBF               	movlw	191
  3940  00176E  6E0B               	movwf	??_isupper^0,c
  3941  001770  0EFF               	movlw	255
  3942  001772  6E0C               	movwf	(??_isupper+1)^0,c
  3943  001774  C009  F00D         	movff	isupper@c,??_isupper+2
  3944  001778  C00A  F00E         	movff	isupper@c+1,??_isupper+3
  3945  00177C  500B               	movf	??_isupper^0,w,c
  3946  00177E  260D               	addwf	(??_isupper+2)^0,f,c
  3947  001780  500C               	movf	(??_isupper+1)^0,w,c
  3948  001782  220E               	addwfc	(??_isupper+3)^0,f,c
  3949  001784  500E               	movf	(??_isupper+3)^0,w,c
  3950  001786  E10A               	bnz	u2470
  3951  001788  0E1A               	movlw	26
  3952  00178A  5C0D               	subwf	(??_isupper+2)^0,w,c
  3953  00178C  A0D8               	btfss	status,0,c
  3954  00178E  EFCB  F00B         	goto	u2471
  3955  001792  EFCE  F00B         	goto	u2470
  3956  001796                     u2471:
  3957  001796  0E01               	movlw	1
  3958  001798  EFCF  F00B         	goto	u2480
  3959  00179C                     u2470:
  3960  00179C  0E00               	movlw	0
  3961  00179E                     u2480:
  3962  00179E  6E09               	movwf	?_isupper^0,c
  3963  0017A0  6A0A               	clrf	(?_isupper+1)^0,c
  3964  0017A2  0012               	return		;funcret
  3965  0017A4                     __end_of_isupper:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _isalpha *****************
  3969 ;; Defined at:
  3970 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  c               2    8[COMRAM] int 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2    8[COMRAM] int 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;Total ram usage:        6 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    4
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_xtoa
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text9
  3999  0016BC                     __ptext9:
  4000                           	callstack 0
  4001  0016BC                     _isalpha:
  4002                           	callstack 21
  4003  0016BC  0E9F               	movlw	159
  4004  0016BE  6E0B               	movwf	??_isalpha^0,c
  4005  0016C0  0EFF               	movlw	255
  4006  0016C2  6E0C               	movwf	(??_isalpha+1)^0,c
  4007  0016C4  0E20               	movlw	32
  4008  0016C6  1009               	iorwf	isalpha@c^0,w,c
  4009  0016C8  6E0D               	movwf	(??_isalpha+2)^0,c
  4010  0016CA  0E00               	movlw	0
  4011  0016CC  100A               	iorwf	(isalpha@c+1)^0,w,c
  4012  0016CE  6E0E               	movwf	(??_isalpha+3)^0,c
  4013  0016D0  500B               	movf	??_isalpha^0,w,c
  4014  0016D2  260D               	addwf	(??_isalpha+2)^0,f,c
  4015  0016D4  500C               	movf	(??_isalpha+1)^0,w,c
  4016  0016D6  220E               	addwfc	(??_isalpha+3)^0,f,c
  4017  0016D8  500E               	movf	(??_isalpha+3)^0,w,c
  4018  0016DA  E10A               	bnz	u2490
  4019  0016DC  0E1A               	movlw	26
  4020  0016DE  5C0D               	subwf	(??_isalpha+2)^0,w,c
  4021  0016E0  A0D8               	btfss	status,0,c
  4022  0016E2  EF75  F00B         	goto	u2491
  4023  0016E6  EF78  F00B         	goto	u2490
  4024  0016EA                     u2491:
  4025  0016EA  0E01               	movlw	1
  4026  0016EC  EF79  F00B         	goto	u2500
  4027  0016F0                     u2490:
  4028  0016F0  0E00               	movlw	0
  4029  0016F2                     u2500:
  4030  0016F2  6E09               	movwf	?_isalpha^0,c
  4031  0016F4  6A0A               	clrf	(?_isalpha+1)^0,c
  4032  0016F6  0012               	return		;funcret
  4033  0016F8                     __end_of_isalpha:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _dtoa *****************
  4037 ;; Defined at:
  4038 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  4041 ;;		 -> NULL(0), 
  4042 ;;  d               8   39[COMRAM] long long 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  n               8   63[COMRAM] long long 
  4045 ;;  i               2   71[COMRAM] int 
  4046 ;;  s               2   61[COMRAM] int 
  4047 ;;  w               2   59[COMRAM] int 
  4048 ;;  p               2   57[COMRAM] int 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  2   37[COMRAM] int 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4058 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;Total ram usage:       36 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    9
  4065 ;; This function calls:
  4066 ;;		___aodiv
  4067 ;;		___aomod
  4068 ;;		_abs
  4069 ;;		_pad
  4070 ;; This function is called by:
  4071 ;;		_vfpfcnvrt
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text10
  4076  00088A                     __ptext10:
  4077                           	callstack 0
  4078  00088A                     _dtoa:
  4079                           	callstack 17
  4080  00088A                     
  4081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  4082  00088A  C028  F040         	movff	dtoa@d,dtoa@n
  4083  00088E  C029  F041         	movff	dtoa@d+1,dtoa@n+1
  4084  000892  C02A  F042         	movff	dtoa@d+2,dtoa@n+2
  4085  000896  C02B  F043         	movff	dtoa@d+3,dtoa@n+3
  4086  00089A  C02C  F044         	movff	dtoa@d+4,dtoa@n+4
  4087  00089E  C02D  F045         	movff	dtoa@d+5,dtoa@n+5
  4088  0008A2  C02E  F046         	movff	dtoa@d+6,dtoa@n+6
  4089  0008A6  C02F  F047         	movff	dtoa@d+7,dtoa@n+7
  4090  0008AA                     
  4091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  4092  0008AA  BE47               	btfsc	(dtoa@n+7)^0,7,c
  4093  0008AC  EF5A  F004         	goto	u2551
  4094  0008B0  EF5D  F004         	goto	u2550
  4095  0008B4                     u2551:
  4096  0008B4  0E01               	movlw	1
  4097  0008B6  EF5E  F004         	goto	u2560
  4098  0008BA                     u2550:
  4099  0008BA  0E00               	movlw	0
  4100  0008BC                     u2560:
  4101  0008BC  6E3E               	movwf	dtoa@s^0,c
  4102  0008BE  6A3F               	clrf	(dtoa@s+1)^0,c
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  4105  0008C0  503E               	movf	dtoa@s^0,w,c
  4106  0008C2  103F               	iorwf	(dtoa@s+1)^0,w,c
  4107  0008C4  B4D8               	btfsc	status,2,c
  4108  0008C6  EF67  F004         	goto	u2571
  4109  0008CA  EF69  F004         	goto	u2570
  4110  0008CE                     u2571:
  4111  0008CE  EF79  F004         	goto	l3332
  4112  0008D2                     u2570:
  4113  0008D2                     
  4114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  4115  0008D2  1E47               	comf	(dtoa@n+7)^0,f,c
  4116  0008D4  1E46               	comf	(dtoa@n+6)^0,f,c
  4117  0008D6  1E45               	comf	(dtoa@n+5)^0,f,c
  4118  0008D8  1E44               	comf	(dtoa@n+4)^0,f,c
  4119  0008DA  1E43               	comf	(dtoa@n+3)^0,f,c
  4120  0008DC  1E42               	comf	(dtoa@n+2)^0,f,c
  4121  0008DE  1E41               	comf	(dtoa@n+1)^0,f,c
  4122  0008E0  6C40               	negf	dtoa@n^0,c
  4123  0008E2  0E00               	movlw	0
  4124  0008E4  2241               	addwfc	(dtoa@n+1)^0,f,c
  4125  0008E6  2242               	addwfc	(dtoa@n+2)^0,f,c
  4126  0008E8  2243               	addwfc	(dtoa@n+3)^0,f,c
  4127  0008EA  2244               	addwfc	(dtoa@n+4)^0,f,c
  4128  0008EC  2245               	addwfc	(dtoa@n+5)^0,f,c
  4129  0008EE  2246               	addwfc	(dtoa@n+6)^0,f,c
  4130  0008F0  2247               	addwfc	(dtoa@n+7)^0,f,c
  4131  0008F2                     l3332:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  4134  0008F2  BE52               	btfsc	(_prec+1)^0,7,c
  4135  0008F4  EF7E  F004         	goto	u2581
  4136  0008F8  EF80  F004         	goto	u2580
  4137  0008FC                     u2581:
  4138  0008FC  EF81  F004         	goto	l3336
  4139  000900                     u2580:
  4140  000900                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  4142  000900  9253               	bcf	_flags^0,1,c
  4143  000902                     l3336:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  4146  000902  BE52               	btfsc	(_prec+1)^0,7,c
  4147  000904  EF8E  F004         	goto	u2590
  4148  000908  5052               	movf	(_prec+1)^0,w,c
  4149  00090A  E106               	bnz	u2591
  4150  00090C  0451               	decf	_prec^0,w,c
  4151  00090E  B0D8               	btfsc	status,0,c
  4152  000910  EF8C  F004         	goto	u2591
  4153  000914  EF8E  F004         	goto	u2590
  4154  000918                     u2591:
  4155  000918  EF94  F004         	goto	l1240
  4156  00091C                     u2590:
  4157  00091C  0E00               	movlw	0
  4158  00091E  6E3B               	movwf	(dtoa@p+1)^0,c
  4159  000920  0E01               	movlw	1
  4160  000922  6E3A               	movwf	dtoa@p^0,c
  4161  000924  EF98  F004         	goto	l1242
  4162  000928                     l1240:
  4163  000928  C051  F03A         	movff	_prec,dtoa@p
  4164  00092C  C052  F03B         	movff	_prec+1,dtoa@p+1
  4165  000930                     l1242:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  4168  000930  C04F  F03C         	movff	_width,dtoa@w
  4169  000934  C050  F03D         	movff	_width+1,dtoa@w+1
  4170  000938                     
  4171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  4172  000938  503E               	movf	dtoa@s^0,w,c
  4173  00093A  103F               	iorwf	(dtoa@s+1)^0,w,c
  4174  00093C  A4D8               	btfss	status,2,c
  4175  00093E  EFA3  F004         	goto	u2601
  4176  000942  EFA5  F004         	goto	u2600
  4177  000946                     u2601:
  4178  000946  EFAC  F004         	goto	l3344
  4179  00094A                     u2600:
  4180  00094A  A453               	btfss	_flags^0,2,c
  4181  00094C  EFAA  F004         	goto	u2611
  4182  000950  EFAC  F004         	goto	u2610
  4183  000954                     u2611:
  4184  000954  EFAF  F004         	goto	l3346
  4185  000958                     u2610:
  4186  000958                     l3344:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  4189  000958  063C               	decf	dtoa@w^0,f,c
  4190  00095A  A0D8               	btfss	status,0,c
  4191  00095C  063D               	decf	(dtoa@w+1)^0,f,c
  4192  00095E                     l3346:
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  4195  00095E  0E00               	movlw	0
  4196  000960  6E49               	movwf	(dtoa@i+1)^0,c
  4197  000962  0E1F               	movlw	31
  4198  000964  6E48               	movwf	dtoa@i^0,c
  4199  000966                     
  4200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  4201  000966  0E00               	movlw	0
  4202  000968  0100               	movlb	0	; () banked
  4203  00096A  6FB8               	movwf	(_dbuf+31)& (0+255),b
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4206  00096C  EF34  F005         	goto	l3360
  4207  000970                     l3350:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  4210  000970  0648               	decf	dtoa@i^0,f,c
  4211  000972  A0D8               	btfss	status,0,c
  4212  000974  0649               	decf	(dtoa@i+1)^0,f,c
  4213  000976                     
  4214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  4215  000976  0E99               	movlw	low _dbuf
  4216  000978  2448               	addwf	dtoa@i^0,w,c
  4217  00097A  6ED9               	movwf	fsr2l,c
  4218  00097C  0E00               	movlw	high _dbuf
  4219  00097E  2049               	addwfc	(dtoa@i+1)^0,w,c
  4220  000980  6EDA               	movwf	fsr2h,c
  4221  000982  C040  F009         	movff	dtoa@n,___aomod@dividend
  4222  000986  C041  F00A         	movff	dtoa@n+1,___aomod@dividend+1
  4223  00098A  C042  F00B         	movff	dtoa@n+2,___aomod@dividend+2
  4224  00098E  C043  F00C         	movff	dtoa@n+3,___aomod@dividend+3
  4225  000992  C044  F00D         	movff	dtoa@n+4,___aomod@dividend+4
  4226  000996  C045  F00E         	movff	dtoa@n+5,___aomod@dividend+5
  4227  00099A  C046  F00F         	movff	dtoa@n+6,___aomod@dividend+6
  4228  00099E  C047  F010         	movff	dtoa@n+7,___aomod@dividend+7
  4229  0009A2  0E0A               	movlw	10
  4230  0009A4  6E11               	movwf	___aomod@divisor^0,c
  4231  0009A6  0E00               	movlw	0
  4232  0009A8  6E12               	movwf	(___aomod@divisor+1)^0,c
  4233  0009AA  0E00               	movlw	0
  4234  0009AC  6E13               	movwf	(___aomod@divisor+2)^0,c
  4235  0009AE  0E00               	movlw	0
  4236  0009B0  6E14               	movwf	(___aomod@divisor+3)^0,c
  4237  0009B2  0E00               	movlw	0
  4238  0009B4  6E15               	movwf	(___aomod@divisor+4)^0,c
  4239  0009B6  0E00               	movlw	0
  4240  0009B8  6E16               	movwf	(___aomod@divisor+5)^0,c
  4241  0009BA  0E00               	movlw	0
  4242  0009BC  6E17               	movwf	(___aomod@divisor+6)^0,c
  4243  0009BE  0E00               	movlw	0
  4244  0009C0  6E18               	movwf	(___aomod@divisor+7)^0,c
  4245  0009C2  ECE2  F007         	call	___aomod	;wreg free
  4246  0009C6  C009  F030         	movff	?___aomod,??_dtoa
  4247  0009CA  C00A  F031         	movff	?___aomod+1,??_dtoa+1
  4248  0009CE  C00B  F032         	movff	?___aomod+2,??_dtoa+2
  4249  0009D2  C00C  F033         	movff	?___aomod+3,??_dtoa+3
  4250  0009D6  C00D  F034         	movff	?___aomod+4,??_dtoa+4
  4251  0009DA  C00E  F035         	movff	?___aomod+5,??_dtoa+5
  4252  0009DE  C00F  F036         	movff	?___aomod+6,??_dtoa+6
  4253  0009E2  C010  F037         	movff	?___aomod+7,??_dtoa+7
  4254  0009E6  C030  F01B         	movff	??_dtoa,abs@a
  4255  0009EA  C032  F01C         	movff	??_dtoa+2,abs@a+1
  4256  0009EE  ECFE  F00A         	call	_abs	;wreg free
  4257  0009F2  501B               	movf	?_abs^0,w,c
  4258  0009F4  0F30               	addlw	48
  4259  0009F6  6EDF               	movwf	indf2,c
  4260  0009F8                     
  4261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  4262  0009F8  063A               	decf	dtoa@p^0,f,c
  4263  0009FA  A0D8               	btfss	status,0,c
  4264  0009FC  063B               	decf	(dtoa@p+1)^0,f,c
  4265  0009FE                     
  4266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  4267  0009FE  063C               	decf	dtoa@w^0,f,c
  4268  000A00  A0D8               	btfss	status,0,c
  4269  000A02  063D               	decf	(dtoa@w+1)^0,f,c
  4270  000A04                     
  4271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  4272  000A04  C040  F009         	movff	dtoa@n,___aodiv@dividend
  4273  000A08  C041  F00A         	movff	dtoa@n+1,___aodiv@dividend+1
  4274  000A0C  C042  F00B         	movff	dtoa@n+2,___aodiv@dividend+2
  4275  000A10  C043  F00C         	movff	dtoa@n+3,___aodiv@dividend+3
  4276  000A14  C044  F00D         	movff	dtoa@n+4,___aodiv@dividend+4
  4277  000A18  C045  F00E         	movff	dtoa@n+5,___aodiv@dividend+5
  4278  000A1C  C046  F00F         	movff	dtoa@n+6,___aodiv@dividend+6
  4279  000A20  C047  F010         	movff	dtoa@n+7,___aodiv@dividend+7
  4280  000A24  0E0A               	movlw	10
  4281  000A26  6E11               	movwf	___aodiv@divisor^0,c
  4282  000A28  0E00               	movlw	0
  4283  000A2A  6E12               	movwf	(___aodiv@divisor+1)^0,c
  4284  000A2C  0E00               	movlw	0
  4285  000A2E  6E13               	movwf	(___aodiv@divisor+2)^0,c
  4286  000A30  0E00               	movlw	0
  4287  000A32  6E14               	movwf	(___aodiv@divisor+3)^0,c
  4288  000A34  0E00               	movlw	0
  4289  000A36  6E15               	movwf	(___aodiv@divisor+4)^0,c
  4290  000A38  0E00               	movlw	0
  4291  000A3A  6E16               	movwf	(___aodiv@divisor+5)^0,c
  4292  000A3C  0E00               	movlw	0
  4293  000A3E  6E17               	movwf	(___aodiv@divisor+6)^0,c
  4294  000A40  0E00               	movlw	0
  4295  000A42  6E18               	movwf	(___aodiv@divisor+7)^0,c
  4296  000A44  EC1E  F007         	call	___aodiv	;wreg free
  4297  000A48  C009  F040         	movff	?___aodiv,dtoa@n
  4298  000A4C  C00A  F041         	movff	?___aodiv+1,dtoa@n+1
  4299  000A50  C00B  F042         	movff	?___aodiv+2,dtoa@n+2
  4300  000A54  C00C  F043         	movff	?___aodiv+3,dtoa@n+3
  4301  000A58  C00D  F044         	movff	?___aodiv+4,dtoa@n+4
  4302  000A5C  C00E  F045         	movff	?___aodiv+5,dtoa@n+5
  4303  000A60  C00F  F046         	movff	?___aodiv+6,dtoa@n+6
  4304  000A64  C010  F047         	movff	?___aodiv+7,dtoa@n+7
  4305  000A68                     l3360:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4308  000A68  BE49               	btfsc	(dtoa@i+1)^0,7,c
  4309  000A6A  EF3F  F005         	goto	u2621
  4310  000A6E  5049               	movf	(dtoa@i+1)^0,w,c
  4311  000A70  E108               	bnz	u2620
  4312  000A72  0448               	decf	dtoa@i^0,w,c
  4313  000A74  A0D8               	btfss	status,0,c
  4314  000A76  EF3F  F005         	goto	u2621
  4315  000A7A  EF41  F005         	goto	u2620
  4316  000A7E                     u2621:
  4317  000A7E  EF71  F005         	goto	l3370
  4318  000A82                     u2620:
  4319  000A82  5040               	movf	dtoa@n^0,w,c
  4320  000A84  1041               	iorwf	(dtoa@n+1)^0,w,c
  4321  000A86  1042               	iorwf	(dtoa@n+2)^0,w,c
  4322  000A88  1043               	iorwf	(dtoa@n+3)^0,w,c
  4323  000A8A  1044               	iorwf	(dtoa@n+4)^0,w,c
  4324  000A8C  1045               	iorwf	(dtoa@n+5)^0,w,c
  4325  000A8E  1046               	iorwf	(dtoa@n+6)^0,w,c
  4326  000A90  1047               	iorwf	(dtoa@n+7)^0,w,c
  4327  000A92  A4D8               	btfss	status,2,c
  4328  000A94  EF4E  F005         	goto	u2631
  4329  000A98  EF50  F005         	goto	u2630
  4330  000A9C                     u2631:
  4331  000A9C  EFB8  F004         	goto	l3350
  4332  000AA0                     u2630:
  4333  000AA0  BE3B               	btfsc	(dtoa@p+1)^0,7,c
  4334  000AA2  EF5D  F005         	goto	u2640
  4335  000AA6  503B               	movf	(dtoa@p+1)^0,w,c
  4336  000AA8  E106               	bnz	u2641
  4337  000AAA  043A               	decf	dtoa@p^0,w,c
  4338  000AAC  B0D8               	btfsc	status,0,c
  4339  000AAE  EF5B  F005         	goto	u2641
  4340  000AB2  EF5D  F005         	goto	u2640
  4341  000AB6                     u2641:
  4342  000AB6  EFB8  F004         	goto	l3350
  4343  000ABA                     u2640:
  4344  000ABA  BE3D               	btfsc	(dtoa@w+1)^0,7,c
  4345  000ABC  EF68  F005         	goto	u2651
  4346  000AC0  503D               	movf	(dtoa@w+1)^0,w,c
  4347  000AC2  E108               	bnz	u2650
  4348  000AC4  043C               	decf	dtoa@w^0,w,c
  4349  000AC6  A0D8               	btfss	status,0,c
  4350  000AC8  EF68  F005         	goto	u2651
  4351  000ACC  EF6A  F005         	goto	u2650
  4352  000AD0                     u2651:
  4353  000AD0  EF71  F005         	goto	l3370
  4354  000AD4                     u2650:
  4355  000AD4  B253               	btfsc	_flags^0,1,c
  4356  000AD6  EF6F  F005         	goto	u2661
  4357  000ADA  EF71  F005         	goto	u2660
  4358  000ADE                     u2661:
  4359  000ADE  EFB8  F004         	goto	l3350
  4360  000AE2                     u2660:
  4361  000AE2                     l3370:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  4364  000AE2  503E               	movf	dtoa@s^0,w,c
  4365  000AE4  103F               	iorwf	(dtoa@s+1)^0,w,c
  4366  000AE6  A4D8               	btfss	status,2,c
  4367  000AE8  EF78  F005         	goto	u2671
  4368  000AEC  EF7A  F005         	goto	u2670
  4369  000AF0                     u2671:
  4370  000AF0  EF81  F005         	goto	l3374
  4371  000AF4                     u2670:
  4372  000AF4  A453               	btfss	_flags^0,2,c
  4373  000AF6  EF7F  F005         	goto	u2681
  4374  000AFA  EF81  F005         	goto	u2680
  4375  000AFE                     u2681:
  4376  000AFE  EF9F  F005         	goto	l3384
  4377  000B02                     u2680:
  4378  000B02                     l3374:
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  4381  000B02  0648               	decf	dtoa@i^0,f,c
  4382  000B04  A0D8               	btfss	status,0,c
  4383  000B06  0649               	decf	(dtoa@i+1)^0,f,c
  4384  000B08                     
  4385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  4386  000B08  503E               	movf	dtoa@s^0,w,c
  4387  000B0A  103F               	iorwf	(dtoa@s+1)^0,w,c
  4388  000B0C  A4D8               	btfss	status,2,c
  4389  000B0E  EF8B  F005         	goto	u2691
  4390  000B12  EF8D  F005         	goto	u2690
  4391  000B16                     u2691:
  4392  000B16  EF93  F005         	goto	l3380
  4393  000B1A                     u2690:
  4394  000B1A  0E00               	movlw	0
  4395  000B1C  6E39               	movwf	(_dtoa$1893+1)^0,c
  4396  000B1E  0E2B               	movlw	43
  4397  000B20  6E38               	movwf	_dtoa$1893^0,c
  4398  000B22  EF97  F005         	goto	l3382
  4399  000B26                     l3380:
  4400  000B26  0E00               	movlw	0
  4401  000B28  6E39               	movwf	(_dtoa$1893+1)^0,c
  4402  000B2A  0E2D               	movlw	45
  4403  000B2C  6E38               	movwf	_dtoa$1893^0,c
  4404  000B2E                     l3382:
  4405  000B2E  0E99               	movlw	low _dbuf
  4406  000B30  2448               	addwf	dtoa@i^0,w,c
  4407  000B32  6ED9               	movwf	fsr2l,c
  4408  000B34  0E00               	movlw	high _dbuf
  4409  000B36  2049               	addwfc	(dtoa@i+1)^0,w,c
  4410  000B38  6EDA               	movwf	fsr2h,c
  4411  000B3A  C038  FFDF         	movff	_dtoa$1893,indf2
  4412  000B3E                     l3384:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  4415  000B3E  C026  F01B         	movff	dtoa@fp,pad@fp
  4416  000B42  C027  F01C         	movff	dtoa@fp+1,pad@fp+1
  4417  000B46  0E99               	movlw	low _dbuf
  4418  000B48  2448               	addwf	dtoa@i^0,w,c
  4419  000B4A  6E1D               	movwf	pad@buf^0,c
  4420  000B4C  0E00               	movlw	high _dbuf
  4421  000B4E  2049               	addwfc	(dtoa@i+1)^0,w,c
  4422  000B50  6E1E               	movwf	(pad@buf+1)^0,c
  4423  000B52  C03C  F01F         	movff	dtoa@w,pad@p
  4424  000B56  C03D  F020         	movff	dtoa@w+1,pad@p+1
  4425  000B5A  EC73  F009         	call	_pad	;wreg free
  4426  000B5E  C01B  F026         	movff	?_pad,?_dtoa
  4427  000B62  C01C  F027         	movff	?_pad+1,?_dtoa+1
  4428  000B66  0012               	return		;funcret
  4429  000B68                     __end_of_dtoa:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _abs *****************
  4433 ;; Defined at:
  4434 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  a               2   26[COMRAM] int 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2   26[COMRAM] int 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;Total ram usage:        4 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_dtoa
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text11
  4463  0015FC                     __ptext11:
  4464                           	callstack 0
  4465  0015FC                     _abs:
  4466                           	callstack 21
  4467  0015FC  BE1C               	btfsc	(abs@a+1)^0,7,c
  4468  0015FE  EF0B  F00B         	goto	u2460
  4469  001602  501C               	movf	(abs@a+1)^0,w,c
  4470  001604  E106               	bnz	u2461
  4471  001606  041B               	decf	abs@a^0,w,c
  4472  001608  B0D8               	btfsc	status,0,c
  4473  00160A  EF09  F00B         	goto	u2461
  4474  00160E  EF0B  F00B         	goto	u2460
  4475  001612                     u2461:
  4476  001612  EF19  F00B         	goto	l1312
  4477  001616                     u2460:
  4478  001616  C01B  F01D         	movff	abs@a,??_abs
  4479  00161A  C01C  F01E         	movff	abs@a+1,??_abs+1
  4480  00161E  1E1D               	comf	??_abs^0,f,c
  4481  001620  1E1E               	comf	(??_abs+1)^0,f,c
  4482  001622  4A1D               	infsnz	??_abs^0,f,c
  4483  001624  2A1E               	incf	(??_abs+1)^0,f,c
  4484  001626  C01D  F01B         	movff	??_abs,?_abs
  4485  00162A  C01E  F01C         	movff	??_abs+1,?_abs+1
  4486  00162E  EF1D  F00B         	goto	l1315
  4487  001632                     l1312:
  4488  001632  C01B  F01B         	movff	abs@a,?_abs
  4489  001636  C01C  F01C         	movff	abs@a+1,?_abs+1
  4490  00163A                     l1315:
  4491  00163A  0012               	return		;funcret
  4492  00163C                     __end_of_abs:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function ___aomod *****************
  4496 ;; Defined at:
  4497 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  dividend        8    8[COMRAM] long long 
  4500 ;;  divisor         8   16[COMRAM] long long 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  sign            1   25[COMRAM] unsigned char 
  4503 ;;  counter         1   24[COMRAM] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  8    8[COMRAM] long long 
  4506 ;; Registers used:
  4507 ;;		wreg, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4513 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;Total ram usage:       18 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    4
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_dtoa
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text12
  4528  000FC4                     __ptext12:
  4529                           	callstack 0
  4530  000FC4                     ___aomod:
  4531                           	callstack 21
  4532  000FC4  0E00               	movlw	0
  4533  000FC6  6E1A               	movwf	___aomod@sign^0,c
  4534  000FC8  BE10               	btfsc	(___aomod@dividend+7)^0,7,c
  4535  000FCA  EFEB  F007         	goto	u2360
  4536  000FCE  EFE9  F007         	goto	u2361
  4537  000FD2                     u2361:
  4538  000FD2  EFFD  F007         	goto	l3240
  4539  000FD6                     u2360:
  4540  000FD6  1E10               	comf	(___aomod@dividend+7)^0,f,c
  4541  000FD8  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  4542  000FDA  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  4543  000FDC  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  4544  000FDE  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  4545  000FE0  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  4546  000FE2  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  4547  000FE4  6C09               	negf	___aomod@dividend^0,c
  4548  000FE6  0E00               	movlw	0
  4549  000FE8  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  4550  000FEA  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  4551  000FEC  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  4552  000FEE  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  4553  000FF0  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  4554  000FF2  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  4555  000FF4  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  4556  000FF6  0E01               	movlw	1
  4557  000FF8  6E1A               	movwf	___aomod@sign^0,c
  4558  000FFA                     l3240:
  4559  000FFA  BE18               	btfsc	(___aomod@divisor+7)^0,7,c
  4560  000FFC  EF04  F008         	goto	u2370
  4561  001000  EF02  F008         	goto	u2371
  4562  001004                     u2371:
  4563  001004  EF14  F008         	goto	l3244
  4564  001008                     u2370:
  4565  001008  1E18               	comf	(___aomod@divisor+7)^0,f,c
  4566  00100A  1E17               	comf	(___aomod@divisor+6)^0,f,c
  4567  00100C  1E16               	comf	(___aomod@divisor+5)^0,f,c
  4568  00100E  1E15               	comf	(___aomod@divisor+4)^0,f,c
  4569  001010  1E14               	comf	(___aomod@divisor+3)^0,f,c
  4570  001012  1E13               	comf	(___aomod@divisor+2)^0,f,c
  4571  001014  1E12               	comf	(___aomod@divisor+1)^0,f,c
  4572  001016  6C11               	negf	___aomod@divisor^0,c
  4573  001018  0E00               	movlw	0
  4574  00101A  2212               	addwfc	(___aomod@divisor+1)^0,f,c
  4575  00101C  2213               	addwfc	(___aomod@divisor+2)^0,f,c
  4576  00101E  2214               	addwfc	(___aomod@divisor+3)^0,f,c
  4577  001020  2215               	addwfc	(___aomod@divisor+4)^0,f,c
  4578  001022  2216               	addwfc	(___aomod@divisor+5)^0,f,c
  4579  001024  2217               	addwfc	(___aomod@divisor+6)^0,f,c
  4580  001026  2218               	addwfc	(___aomod@divisor+7)^0,f,c
  4581  001028                     l3244:
  4582  001028  5011               	movf	___aomod@divisor^0,w,c
  4583  00102A  1012               	iorwf	(___aomod@divisor+1)^0,w,c
  4584  00102C  1013               	iorwf	(___aomod@divisor+2)^0,w,c
  4585  00102E  1014               	iorwf	(___aomod@divisor+3)^0,w,c
  4586  001030  1015               	iorwf	(___aomod@divisor+4)^0,w,c
  4587  001032  1016               	iorwf	(___aomod@divisor+5)^0,w,c
  4588  001034  1017               	iorwf	(___aomod@divisor+6)^0,w,c
  4589  001036  1018               	iorwf	(___aomod@divisor+7)^0,w,c
  4590  001038  B4D8               	btfsc	status,2,c
  4591  00103A  EF21  F008         	goto	u2381
  4592  00103E  EF23  F008         	goto	u2380
  4593  001042                     u2381:
  4594  001042  EF6B  F008         	goto	l3260
  4595  001046                     u2380:
  4596  001046  0E01               	movlw	1
  4597  001048  6E19               	movwf	___aomod@counter^0,c
  4598  00104A  EF31  F008         	goto	l3250
  4599  00104E                     l3248:
  4600  00104E  90D8               	bcf	status,0,c
  4601  001050  3611               	rlcf	___aomod@divisor^0,f,c
  4602  001052  3612               	rlcf	(___aomod@divisor+1)^0,f,c
  4603  001054  3613               	rlcf	(___aomod@divisor+2)^0,f,c
  4604  001056  3614               	rlcf	(___aomod@divisor+3)^0,f,c
  4605  001058  3615               	rlcf	(___aomod@divisor+4)^0,f,c
  4606  00105A  3616               	rlcf	(___aomod@divisor+5)^0,f,c
  4607  00105C  3617               	rlcf	(___aomod@divisor+6)^0,f,c
  4608  00105E  3618               	rlcf	(___aomod@divisor+7)^0,f,c
  4609  001060  2A19               	incf	___aomod@counter^0,f,c
  4610  001062                     l3250:
  4611  001062  AE18               	btfss	(___aomod@divisor+7)^0,7,c
  4612  001064  EF36  F008         	goto	u2391
  4613  001068  EF38  F008         	goto	u2390
  4614  00106C                     u2391:
  4615  00106C  EF27  F008         	goto	l3248
  4616  001070                     u2390:
  4617  001070                     l3252:
  4618  001070  5011               	movf	___aomod@divisor^0,w,c
  4619  001072  5C09               	subwf	___aomod@dividend^0,w,c
  4620  001074  5012               	movf	(___aomod@divisor+1)^0,w,c
  4621  001076  580A               	subwfb	(___aomod@dividend+1)^0,w,c
  4622  001078  5013               	movf	(___aomod@divisor+2)^0,w,c
  4623  00107A  580B               	subwfb	(___aomod@dividend+2)^0,w,c
  4624  00107C  5014               	movf	(___aomod@divisor+3)^0,w,c
  4625  00107E  580C               	subwfb	(___aomod@dividend+3)^0,w,c
  4626  001080  5015               	movf	(___aomod@divisor+4)^0,w,c
  4627  001082  580D               	subwfb	(___aomod@dividend+4)^0,w,c
  4628  001084  5016               	movf	(___aomod@divisor+5)^0,w,c
  4629  001086  580E               	subwfb	(___aomod@dividend+5)^0,w,c
  4630  001088  5017               	movf	(___aomod@divisor+6)^0,w,c
  4631  00108A  580F               	subwfb	(___aomod@dividend+6)^0,w,c
  4632  00108C  5018               	movf	(___aomod@divisor+7)^0,w,c
  4633  00108E  5810               	subwfb	(___aomod@dividend+7)^0,w,c
  4634  001090  A0D8               	btfss	status,0,c
  4635  001092  EF4D  F008         	goto	u2401
  4636  001096  EF4F  F008         	goto	u2400
  4637  00109A                     u2401:
  4638  00109A  EF5F  F008         	goto	l3256
  4639  00109E                     u2400:
  4640  00109E  5011               	movf	___aomod@divisor^0,w,c
  4641  0010A0  5E09               	subwf	___aomod@dividend^0,f,c
  4642  0010A2  5012               	movf	(___aomod@divisor+1)^0,w,c
  4643  0010A4  5A0A               	subwfb	(___aomod@dividend+1)^0,f,c
  4644  0010A6  5013               	movf	(___aomod@divisor+2)^0,w,c
  4645  0010A8  5A0B               	subwfb	(___aomod@dividend+2)^0,f,c
  4646  0010AA  5014               	movf	(___aomod@divisor+3)^0,w,c
  4647  0010AC  5A0C               	subwfb	(___aomod@dividend+3)^0,f,c
  4648  0010AE  5015               	movf	(___aomod@divisor+4)^0,w,c
  4649  0010B0  5A0D               	subwfb	(___aomod@dividend+4)^0,f,c
  4650  0010B2  5016               	movf	(___aomod@divisor+5)^0,w,c
  4651  0010B4  5A0E               	subwfb	(___aomod@dividend+5)^0,f,c
  4652  0010B6  5017               	movf	(___aomod@divisor+6)^0,w,c
  4653  0010B8  5A0F               	subwfb	(___aomod@dividend+6)^0,f,c
  4654  0010BA  5018               	movf	(___aomod@divisor+7)^0,w,c
  4655  0010BC  5A10               	subwfb	(___aomod@dividend+7)^0,f,c
  4656  0010BE                     l3256:
  4657  0010BE  90D8               	bcf	status,0,c
  4658  0010C0  3218               	rrcf	(___aomod@divisor+7)^0,f,c
  4659  0010C2  3217               	rrcf	(___aomod@divisor+6)^0,f,c
  4660  0010C4  3216               	rrcf	(___aomod@divisor+5)^0,f,c
  4661  0010C6  3215               	rrcf	(___aomod@divisor+4)^0,f,c
  4662  0010C8  3214               	rrcf	(___aomod@divisor+3)^0,f,c
  4663  0010CA  3213               	rrcf	(___aomod@divisor+2)^0,f,c
  4664  0010CC  3212               	rrcf	(___aomod@divisor+1)^0,f,c
  4665  0010CE  3211               	rrcf	___aomod@divisor^0,f,c
  4666  0010D0  2E19               	decfsz	___aomod@counter^0,f,c
  4667  0010D2  EF38  F008         	goto	l3252
  4668  0010D6                     l3260:
  4669  0010D6  501A               	movf	___aomod@sign^0,w,c
  4670  0010D8  B4D8               	btfsc	status,2,c
  4671  0010DA  EF71  F008         	goto	u2411
  4672  0010DE  EF73  F008         	goto	u2410
  4673  0010E2                     u2411:
  4674  0010E2  EF83  F008         	goto	l3264
  4675  0010E6                     u2410:
  4676  0010E6  1E10               	comf	(___aomod@dividend+7)^0,f,c
  4677  0010E8  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  4678  0010EA  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  4679  0010EC  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  4680  0010EE  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  4681  0010F0  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  4682  0010F2  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  4683  0010F4  6C09               	negf	___aomod@dividend^0,c
  4684  0010F6  0E00               	movlw	0
  4685  0010F8  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  4686  0010FA  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  4687  0010FC  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  4688  0010FE  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  4689  001100  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  4690  001102  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  4691  001104  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  4692  001106                     l3264:
  4693  001106  C009  F009         	movff	___aomod@dividend,?___aomod
  4694  00110A  C00A  F00A         	movff	___aomod@dividend+1,?___aomod+1
  4695  00110E  C00B  F00B         	movff	___aomod@dividend+2,?___aomod+2
  4696  001112  C00C  F00C         	movff	___aomod@dividend+3,?___aomod+3
  4697  001116  C00D  F00D         	movff	___aomod@dividend+4,?___aomod+4
  4698  00111A  C00E  F00E         	movff	___aomod@dividend+5,?___aomod+5
  4699  00111E  C00F  F00F         	movff	___aomod@dividend+6,?___aomod+6
  4700  001122  C010  F010         	movff	___aomod@dividend+7,?___aomod+7
  4701  001126  0012               	return		;funcret
  4702  001128                     __end_of___aomod:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function ___aodiv *****************
  4706 ;; Defined at:
  4707 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  dividend        8    8[COMRAM] long long 
  4710 ;;  divisor         8   16[COMRAM] long long 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  quotient        8   26[COMRAM] long long 
  4713 ;;  sign            1   25[COMRAM] unsigned char 
  4714 ;;  counter         1   24[COMRAM] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  8    8[COMRAM] long long 
  4717 ;; Registers used:
  4718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4724 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;Total ram usage:       26 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    4
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_dtoa
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text13
  4739  000E3C                     __ptext13:
  4740                           	callstack 0
  4741  000E3C                     ___aodiv:
  4742                           	callstack 21
  4743  000E3C  0E00               	movlw	0
  4744  000E3E  6E1A               	movwf	___aodiv@sign^0,c
  4745  000E40  BE18               	btfsc	(___aodiv@divisor+7)^0,7,c
  4746  000E42  EF27  F007         	goto	u2290
  4747  000E46  EF25  F007         	goto	u2291
  4748  000E4A                     u2291:
  4749  000E4A  EF39  F007         	goto	l3196
  4750  000E4E                     u2290:
  4751  000E4E  1E18               	comf	(___aodiv@divisor+7)^0,f,c
  4752  000E50  1E17               	comf	(___aodiv@divisor+6)^0,f,c
  4753  000E52  1E16               	comf	(___aodiv@divisor+5)^0,f,c
  4754  000E54  1E15               	comf	(___aodiv@divisor+4)^0,f,c
  4755  000E56  1E14               	comf	(___aodiv@divisor+3)^0,f,c
  4756  000E58  1E13               	comf	(___aodiv@divisor+2)^0,f,c
  4757  000E5A  1E12               	comf	(___aodiv@divisor+1)^0,f,c
  4758  000E5C  6C11               	negf	___aodiv@divisor^0,c
  4759  000E5E  0E00               	movlw	0
  4760  000E60  2212               	addwfc	(___aodiv@divisor+1)^0,f,c
  4761  000E62  2213               	addwfc	(___aodiv@divisor+2)^0,f,c
  4762  000E64  2214               	addwfc	(___aodiv@divisor+3)^0,f,c
  4763  000E66  2215               	addwfc	(___aodiv@divisor+4)^0,f,c
  4764  000E68  2216               	addwfc	(___aodiv@divisor+5)^0,f,c
  4765  000E6A  2217               	addwfc	(___aodiv@divisor+6)^0,f,c
  4766  000E6C  2218               	addwfc	(___aodiv@divisor+7)^0,f,c
  4767  000E6E  0E01               	movlw	1
  4768  000E70  6E1A               	movwf	___aodiv@sign^0,c
  4769  000E72                     l3196:
  4770  000E72  BE10               	btfsc	(___aodiv@dividend+7)^0,7,c
  4771  000E74  EF40  F007         	goto	u2300
  4772  000E78  EF3E  F007         	goto	u2301
  4773  000E7C                     u2301:
  4774  000E7C  EF52  F007         	goto	l3202
  4775  000E80                     u2300:
  4776  000E80  1E10               	comf	(___aodiv@dividend+7)^0,f,c
  4777  000E82  1E0F               	comf	(___aodiv@dividend+6)^0,f,c
  4778  000E84  1E0E               	comf	(___aodiv@dividend+5)^0,f,c
  4779  000E86  1E0D               	comf	(___aodiv@dividend+4)^0,f,c
  4780  000E88  1E0C               	comf	(___aodiv@dividend+3)^0,f,c
  4781  000E8A  1E0B               	comf	(___aodiv@dividend+2)^0,f,c
  4782  000E8C  1E0A               	comf	(___aodiv@dividend+1)^0,f,c
  4783  000E8E  6C09               	negf	___aodiv@dividend^0,c
  4784  000E90  0E00               	movlw	0
  4785  000E92  220A               	addwfc	(___aodiv@dividend+1)^0,f,c
  4786  000E94  220B               	addwfc	(___aodiv@dividend+2)^0,f,c
  4787  000E96  220C               	addwfc	(___aodiv@dividend+3)^0,f,c
  4788  000E98  220D               	addwfc	(___aodiv@dividend+4)^0,f,c
  4789  000E9A  220E               	addwfc	(___aodiv@dividend+5)^0,f,c
  4790  000E9C  220F               	addwfc	(___aodiv@dividend+6)^0,f,c
  4791  000E9E  2210               	addwfc	(___aodiv@dividend+7)^0,f,c
  4792  000EA0  0E01               	movlw	1
  4793  000EA2  1A1A               	xorwf	___aodiv@sign^0,f,c
  4794  000EA4                     l3202:
  4795  000EA4  EE20  F01B         	lfsr	2,___aodiv@quotient
  4796  000EA8  0E07               	movlw	7
  4797  000EAA                     u2311:
  4798  000EAA  6ADE               	clrf	postinc2,c
  4799  000EAC  06E8               	decf	wreg,f,c
  4800  000EAE  E2FD               	bc	u2311
  4801  000EB0  5011               	movf	___aodiv@divisor^0,w,c
  4802  000EB2  1012               	iorwf	(___aodiv@divisor+1)^0,w,c
  4803  000EB4  1013               	iorwf	(___aodiv@divisor+2)^0,w,c
  4804  000EB6  1014               	iorwf	(___aodiv@divisor+3)^0,w,c
  4805  000EB8  1015               	iorwf	(___aodiv@divisor+4)^0,w,c
  4806  000EBA  1016               	iorwf	(___aodiv@divisor+5)^0,w,c
  4807  000EBC  1017               	iorwf	(___aodiv@divisor+6)^0,w,c
  4808  000EBE  1018               	iorwf	(___aodiv@divisor+7)^0,w,c
  4809  000EC0  B4D8               	btfsc	status,2,c
  4810  000EC2  EF65  F007         	goto	u2321
  4811  000EC6  EF67  F007         	goto	u2320
  4812  000ECA                     u2321:
  4813  000ECA  EFB9  F007         	goto	l3224
  4814  000ECE                     u2320:
  4815  000ECE  0E01               	movlw	1
  4816  000ED0  6E19               	movwf	___aodiv@counter^0,c
  4817  000ED2  EF75  F007         	goto	l3210
  4818  000ED6                     l3208:
  4819  000ED6  90D8               	bcf	status,0,c
  4820  000ED8  3611               	rlcf	___aodiv@divisor^0,f,c
  4821  000EDA  3612               	rlcf	(___aodiv@divisor+1)^0,f,c
  4822  000EDC  3613               	rlcf	(___aodiv@divisor+2)^0,f,c
  4823  000EDE  3614               	rlcf	(___aodiv@divisor+3)^0,f,c
  4824  000EE0  3615               	rlcf	(___aodiv@divisor+4)^0,f,c
  4825  000EE2  3616               	rlcf	(___aodiv@divisor+5)^0,f,c
  4826  000EE4  3617               	rlcf	(___aodiv@divisor+6)^0,f,c
  4827  000EE6  3618               	rlcf	(___aodiv@divisor+7)^0,f,c
  4828  000EE8  2A19               	incf	___aodiv@counter^0,f,c
  4829  000EEA                     l3210:
  4830  000EEA  AE18               	btfss	(___aodiv@divisor+7)^0,7,c
  4831  000EEC  EF7A  F007         	goto	u2331
  4832  000EF0  EF7C  F007         	goto	u2330
  4833  000EF4                     u2331:
  4834  000EF4  EF6B  F007         	goto	l3208
  4835  000EF8                     u2330:
  4836  000EF8                     l3212:
  4837  000EF8  90D8               	bcf	status,0,c
  4838  000EFA  361B               	rlcf	___aodiv@quotient^0,f,c
  4839  000EFC  361C               	rlcf	(___aodiv@quotient+1)^0,f,c
  4840  000EFE  361D               	rlcf	(___aodiv@quotient+2)^0,f,c
  4841  000F00  361E               	rlcf	(___aodiv@quotient+3)^0,f,c
  4842  000F02  361F               	rlcf	(___aodiv@quotient+4)^0,f,c
  4843  000F04  3620               	rlcf	(___aodiv@quotient+5)^0,f,c
  4844  000F06  3621               	rlcf	(___aodiv@quotient+6)^0,f,c
  4845  000F08  3622               	rlcf	(___aodiv@quotient+7)^0,f,c
  4846  000F0A  5011               	movf	___aodiv@divisor^0,w,c
  4847  000F0C  5C09               	subwf	___aodiv@dividend^0,w,c
  4848  000F0E  5012               	movf	(___aodiv@divisor+1)^0,w,c
  4849  000F10  580A               	subwfb	(___aodiv@dividend+1)^0,w,c
  4850  000F12  5013               	movf	(___aodiv@divisor+2)^0,w,c
  4851  000F14  580B               	subwfb	(___aodiv@dividend+2)^0,w,c
  4852  000F16  5014               	movf	(___aodiv@divisor+3)^0,w,c
  4853  000F18  580C               	subwfb	(___aodiv@dividend+3)^0,w,c
  4854  000F1A  5015               	movf	(___aodiv@divisor+4)^0,w,c
  4855  000F1C  580D               	subwfb	(___aodiv@dividend+4)^0,w,c
  4856  000F1E  5016               	movf	(___aodiv@divisor+5)^0,w,c
  4857  000F20  580E               	subwfb	(___aodiv@dividend+5)^0,w,c
  4858  000F22  5017               	movf	(___aodiv@divisor+6)^0,w,c
  4859  000F24  580F               	subwfb	(___aodiv@dividend+6)^0,w,c
  4860  000F26  5018               	movf	(___aodiv@divisor+7)^0,w,c
  4861  000F28  5810               	subwfb	(___aodiv@dividend+7)^0,w,c
  4862  000F2A  A0D8               	btfss	status,0,c
  4863  000F2C  EF9A  F007         	goto	u2341
  4864  000F30  EF9C  F007         	goto	u2340
  4865  000F34                     u2341:
  4866  000F34  EFAD  F007         	goto	l3220
  4867  000F38                     u2340:
  4868  000F38  5011               	movf	___aodiv@divisor^0,w,c
  4869  000F3A  5E09               	subwf	___aodiv@dividend^0,f,c
  4870  000F3C  5012               	movf	(___aodiv@divisor+1)^0,w,c
  4871  000F3E  5A0A               	subwfb	(___aodiv@dividend+1)^0,f,c
  4872  000F40  5013               	movf	(___aodiv@divisor+2)^0,w,c
  4873  000F42  5A0B               	subwfb	(___aodiv@dividend+2)^0,f,c
  4874  000F44  5014               	movf	(___aodiv@divisor+3)^0,w,c
  4875  000F46  5A0C               	subwfb	(___aodiv@dividend+3)^0,f,c
  4876  000F48  5015               	movf	(___aodiv@divisor+4)^0,w,c
  4877  000F4A  5A0D               	subwfb	(___aodiv@dividend+4)^0,f,c
  4878  000F4C  5016               	movf	(___aodiv@divisor+5)^0,w,c
  4879  000F4E  5A0E               	subwfb	(___aodiv@dividend+5)^0,f,c
  4880  000F50  5017               	movf	(___aodiv@divisor+6)^0,w,c
  4881  000F52  5A0F               	subwfb	(___aodiv@dividend+6)^0,f,c
  4882  000F54  5018               	movf	(___aodiv@divisor+7)^0,w,c
  4883  000F56  5A10               	subwfb	(___aodiv@dividend+7)^0,f,c
  4884  000F58  801B               	bsf	___aodiv@quotient^0,0,c
  4885  000F5A                     l3220:
  4886  000F5A  90D8               	bcf	status,0,c
  4887  000F5C  3218               	rrcf	(___aodiv@divisor+7)^0,f,c
  4888  000F5E  3217               	rrcf	(___aodiv@divisor+6)^0,f,c
  4889  000F60  3216               	rrcf	(___aodiv@divisor+5)^0,f,c
  4890  000F62  3215               	rrcf	(___aodiv@divisor+4)^0,f,c
  4891  000F64  3214               	rrcf	(___aodiv@divisor+3)^0,f,c
  4892  000F66  3213               	rrcf	(___aodiv@divisor+2)^0,f,c
  4893  000F68  3212               	rrcf	(___aodiv@divisor+1)^0,f,c
  4894  000F6A  3211               	rrcf	___aodiv@divisor^0,f,c
  4895  000F6C  2E19               	decfsz	___aodiv@counter^0,f,c
  4896  000F6E  EF7C  F007         	goto	l3212
  4897  000F72                     l3224:
  4898  000F72  501A               	movf	___aodiv@sign^0,w,c
  4899  000F74  B4D8               	btfsc	status,2,c
  4900  000F76  EFBF  F007         	goto	u2351
  4901  000F7A  EFC1  F007         	goto	u2350
  4902  000F7E                     u2351:
  4903  000F7E  EFD1  F007         	goto	l3228
  4904  000F82                     u2350:
  4905  000F82  1E22               	comf	(___aodiv@quotient+7)^0,f,c
  4906  000F84  1E21               	comf	(___aodiv@quotient+6)^0,f,c
  4907  000F86  1E20               	comf	(___aodiv@quotient+5)^0,f,c
  4908  000F88  1E1F               	comf	(___aodiv@quotient+4)^0,f,c
  4909  000F8A  1E1E               	comf	(___aodiv@quotient+3)^0,f,c
  4910  000F8C  1E1D               	comf	(___aodiv@quotient+2)^0,f,c
  4911  000F8E  1E1C               	comf	(___aodiv@quotient+1)^0,f,c
  4912  000F90  6C1B               	negf	___aodiv@quotient^0,c
  4913  000F92  0E00               	movlw	0
  4914  000F94  221C               	addwfc	(___aodiv@quotient+1)^0,f,c
  4915  000F96  221D               	addwfc	(___aodiv@quotient+2)^0,f,c
  4916  000F98  221E               	addwfc	(___aodiv@quotient+3)^0,f,c
  4917  000F9A  221F               	addwfc	(___aodiv@quotient+4)^0,f,c
  4918  000F9C  2220               	addwfc	(___aodiv@quotient+5)^0,f,c
  4919  000F9E  2221               	addwfc	(___aodiv@quotient+6)^0,f,c
  4920  000FA0  2222               	addwfc	(___aodiv@quotient+7)^0,f,c
  4921  000FA2                     l3228:
  4922  000FA2  C01B  F009         	movff	___aodiv@quotient,?___aodiv
  4923  000FA6  C01C  F00A         	movff	___aodiv@quotient+1,?___aodiv+1
  4924  000FAA  C01D  F00B         	movff	___aodiv@quotient+2,?___aodiv+2
  4925  000FAE  C01E  F00C         	movff	___aodiv@quotient+3,?___aodiv+3
  4926  000FB2  C01F  F00D         	movff	___aodiv@quotient+4,?___aodiv+4
  4927  000FB6  C020  F00E         	movff	___aodiv@quotient+5,?___aodiv+5
  4928  000FBA  C021  F00F         	movff	___aodiv@quotient+6,?___aodiv+6
  4929  000FBE  C022  F010         	movff	___aodiv@quotient+7,?___aodiv+7
  4930  000FC2  0012               	return		;funcret
  4931  000FC4                     __end_of___aodiv:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _ctoa *****************
  4935 ;; Defined at:
  4936 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  4939 ;;		 -> NULL(0), 
  4940 ;;  c               1   39[COMRAM] unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  w               2   40[COMRAM] int 
  4943 ;;  l               2    0        int 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  2   37[COMRAM] int 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4953 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;Total ram usage:        5 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    9
  4960 ;; This function calls:
  4961 ;;		_pad
  4962 ;; This function is called by:
  4963 ;;		_vfpfcnvrt
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text14
  4968  00155E                     __ptext14:
  4969                           	callstack 0
  4970  00155E                     _ctoa:
  4971                           	callstack 17
  4972  00155E                     
  4973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4974  00155E  504F               	movf	_width^0,w,c
  4975  001560  1050               	iorwf	(_width+1)^0,w,c
  4976  001562  A4D8               	btfss	status,2,c
  4977  001564  EFB6  F00A         	goto	u2541
  4978  001568  EFB8  F00A         	goto	u2540
  4979  00156C                     u2541:
  4980  00156C  EFBE  F00A         	goto	l3316
  4981  001570                     u2540:
  4982  001570  C04F  F029         	movff	_width,ctoa@w
  4983  001574  C050  F02A         	movff	_width+1,ctoa@w+1
  4984  001578  EFC4  F00A         	goto	l3318
  4985  00157C                     l3316:
  4986  00157C  0EFF               	movlw	255
  4987  00157E  244F               	addwf	_width^0,w,c
  4988  001580  6E29               	movwf	ctoa@w^0,c
  4989  001582  0EFF               	movlw	255
  4990  001584  2050               	addwfc	(_width+1)^0,w,c
  4991  001586  6E2A               	movwf	(ctoa@w+1)^0,c
  4992  001588                     l3318:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  4995  001588  C028  F099         	movff	ctoa@c,_dbuf
  4996  00158C                     
  4997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  4998  00158C  0E00               	movlw	0
  4999  00158E  0100               	movlb	0	; () banked
  5000  001590  6F9A               	movwf	(_dbuf+1)& (0+255),b
  5001  001592                     
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  5004  001592  C026  F01B         	movff	ctoa@fp,pad@fp
  5005  001596  C027  F01C         	movff	ctoa@fp+1,pad@fp+1
  5006  00159A  0E99               	movlw	low _dbuf
  5007  00159C  6E1D               	movwf	pad@buf^0,c
  5008  00159E  0E00               	movlw	high _dbuf
  5009  0015A0  6E1E               	movwf	(pad@buf+1)^0,c
  5010  0015A2  C029  F01F         	movff	ctoa@w,pad@p
  5011  0015A6  C02A  F020         	movff	ctoa@w+1,pad@p+1
  5012  0015AA  EC73  F009         	call	_pad	;wreg free
  5013  0015AE  C01B  F026         	movff	?_pad,?_ctoa
  5014  0015B2  C01C  F027         	movff	?_pad+1,?_ctoa+1
  5015  0015B6  0012               	return		;funcret
  5016  0015B8                     __end_of_ctoa:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _pad *****************
  5020 ;; Defined at:
  5021 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  5024 ;;		 -> NULL(0), 
  5025 ;;  buf             2   28[COMRAM] PTR unsigned char 
  5026 ;;		 -> dbuf(32), 
  5027 ;;  p               2   30[COMRAM] int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  w               2   35[COMRAM] int 
  5030 ;;  i               2   33[COMRAM] int 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2   26[COMRAM] int 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:       11 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    8
  5047 ;; This function calls:
  5048 ;;		_fputc
  5049 ;;		_fputs
  5050 ;;		_strlen
  5051 ;; This function is called by:
  5052 ;;		_ctoa
  5053 ;;		_dtoa
  5054 ;;		_xtoa
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text15
  5059  0012E6                     __ptext15:
  5060                           	callstack 0
  5061  0012E6                     _pad:
  5062                           	callstack 17
  5063  0012E6                     
  5064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5065  0012E6  A053               	btfss	_flags^0,0,c
  5066  0012E8  EF78  F009         	goto	u2421
  5067  0012EC  EF7A  F009         	goto	u2420
  5068  0012F0                     u2421:
  5069  0012F0  EF84  F009         	goto	l3272
  5070  0012F4                     u2420:
  5071  0012F4                     
  5072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5073  0012F4  C01D  F014         	movff	pad@buf,fputs@s
  5074  0012F8  C01E  F015         	movff	pad@buf+1,fputs@s+1
  5075  0012FC  C01B  F016         	movff	pad@fp,fputs@fp
  5076  001300  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  5077  001304  ECDC  F00A         	call	_fputs	;wreg free
  5078  001308                     l3272:
  5079                           
  5080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5081  001308  BE20               	btfsc	(pad@p+1)^0,7,c
  5082  00130A  EF89  F009         	goto	u2431
  5083  00130E  EF8B  F009         	goto	u2430
  5084  001312                     u2431:
  5085  001312  EF91  F009         	goto	l3276
  5086  001316                     u2430:
  5087  001316  C01F  F024         	movff	pad@p,pad@w
  5088  00131A  C020  F025         	movff	pad@p+1,pad@w+1
  5089  00131E  EF95  F009         	goto	l1222
  5090  001322                     l3276:
  5091  001322  0E00               	movlw	0
  5092  001324  6E25               	movwf	(pad@w+1)^0,c
  5093  001326  0E00               	movlw	0
  5094  001328  6E24               	movwf	pad@w^0,c
  5095  00132A                     l1222:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5098  00132A  0E00               	movlw	0
  5099  00132C  6E23               	movwf	(pad@i+1)^0,c
  5100  00132E  0E00               	movlw	0
  5101  001330  6E22               	movwf	pad@i^0,c
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5104  001332  EFA7  F009         	goto	l3282
  5105  001336                     l3278:
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5108  001336  0E00               	movlw	0
  5109  001338  6E0C               	movwf	(fputc@c+1)^0,c
  5110  00133A  0E20               	movlw	32
  5111  00133C  6E0B               	movwf	fputc@c^0,c
  5112  00133E  C01B  F00D         	movff	pad@fp,fputc@fp
  5113  001342  C01C  F00E         	movff	pad@fp+1,fputc@fp+1
  5114  001346  ECD4  F009         	call	_fputc	;wreg free
  5115  00134A                     
  5116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5117  00134A  4A22               	infsnz	pad@i^0,f,c
  5118  00134C  2A23               	incf	(pad@i+1)^0,f,c
  5119  00134E                     l3282:
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5122  00134E  5024               	movf	pad@w^0,w,c
  5123  001350  5C22               	subwf	pad@i^0,w,c
  5124  001352  5023               	movf	(pad@i+1)^0,w,c
  5125  001354  0A80               	xorlw	128
  5126  001356  6E21               	movwf	??_pad^0,c
  5127  001358  5025               	movf	(pad@w+1)^0,w,c
  5128  00135A  0A80               	xorlw	128
  5129  00135C  5821               	subwfb	??_pad^0,w,c
  5130  00135E  A0D8               	btfss	status,0,c
  5131  001360  EFB4  F009         	goto	u2441
  5132  001364  EFB6  F009         	goto	u2440
  5133  001368                     u2441:
  5134  001368  EF9B  F009         	goto	l3278
  5135  00136C                     u2440:
  5136  00136C                     
  5137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5138  00136C  B053               	btfsc	_flags^0,0,c
  5139  00136E  EFBB  F009         	goto	u2451
  5140  001372  EFBD  F009         	goto	u2450
  5141  001376                     u2451:
  5142  001376  EFC7  F009         	goto	l3286
  5143  00137A                     u2450:
  5144  00137A                     
  5145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5146  00137A  C01D  F014         	movff	pad@buf,fputs@s
  5147  00137E  C01E  F015         	movff	pad@buf+1,fputs@s+1
  5148  001382  C01B  F016         	movff	pad@fp,fputs@fp
  5149  001386  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  5150  00138A  ECDC  F00A         	call	_fputs	;wreg free
  5151  00138E                     l3286:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  5154  00138E  C01D  F009         	movff	pad@buf,strlen@s
  5155  001392  C01E  F00A         	movff	pad@buf+1,strlen@s+1
  5156  001396  ECD2  F00B         	call	_strlen	;wreg free
  5157  00139A  5024               	movf	pad@w^0,w,c
  5158  00139C  2409               	addwf	?_strlen^0,w,c
  5159  00139E  6E1B               	movwf	?_pad^0,c
  5160  0013A0  5025               	movf	(pad@w+1)^0,w,c
  5161  0013A2  200A               	addwfc	(?_strlen+1)^0,w,c
  5162  0013A4  6E1C               	movwf	(?_pad+1)^0,c
  5163  0013A6  0012               	return		;funcret
  5164  0013A8                     __end_of_pad:
  5165                           	callstack 0
  5166                           
  5167 ;; *************** function _strlen *****************
  5168 ;; Defined at:
  5169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5172 ;;		 -> dbuf(32), 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  a               2   10[COMRAM] PTR const unsigned char 
  5175 ;;		 -> dbuf(32), 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2    8[COMRAM] unsigned int 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:        4 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    4
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_pad
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text16
  5200  0017A4                     __ptext16:
  5201                           	callstack 0
  5202  0017A4                     _strlen:
  5203                           	callstack 20
  5204  0017A4  C009  F00B         	movff	strlen@s,strlen@a
  5205  0017A8  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  5206  0017AC  EFDA  F00B         	goto	l3178
  5207  0017B0                     l3176:
  5208  0017B0  4A09               	infsnz	strlen@s^0,f,c
  5209  0017B2  2A0A               	incf	(strlen@s+1)^0,f,c
  5210  0017B4                     l3178:
  5211  0017B4  C009  FFD9         	movff	strlen@s,fsr2l
  5212  0017B8  C00A  FFDA         	movff	strlen@s+1,fsr2h
  5213  0017BC  50DF               	movf	indf2,w,c
  5214  0017BE  A4D8               	btfss	status,2,c
  5215  0017C0  EFE4  F00B         	goto	u2261
  5216  0017C4  EFE6  F00B         	goto	u2260
  5217  0017C8                     u2261:
  5218  0017C8  EFD8  F00B         	goto	l3176
  5219  0017CC                     u2260:
  5220  0017CC  500B               	movf	strlen@a^0,w,c
  5221  0017CE  5C09               	subwf	strlen@s^0,w,c
  5222  0017D0  6E09               	movwf	?_strlen^0,c
  5223  0017D2  500C               	movf	(strlen@a+1)^0,w,c
  5224  0017D4  580A               	subwfb	(strlen@s+1)^0,w,c
  5225  0017D6  6E0A               	movwf	(?_strlen+1)^0,c
  5226  0017D8  0012               	return		;funcret
  5227  0017DA                     __end_of_strlen:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _fputs *****************
  5231 ;; Defined at:
  5232 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  s               2   19[COMRAM] PTR const unsigned char 
  5235 ;;		 -> dbuf(32), 
  5236 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  5237 ;;		 -> NULL(0), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  i               2   24[COMRAM] int 
  5240 ;;  c               1   23[COMRAM] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2   19[COMRAM] int 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;Total ram usage:        7 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    7
  5257 ;; This function calls:
  5258 ;;		_fputc
  5259 ;; This function is called by:
  5260 ;;		_pad
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text17
  5265  0015B8                     __ptext17:
  5266                           	callstack 0
  5267  0015B8                     _fputs:
  5268                           	callstack 17
  5269  0015B8  0E00               	movlw	0
  5270  0015BA  6E1A               	movwf	(fputs@i+1)^0,c
  5271  0015BC  0E00               	movlw	0
  5272  0015BE  6E19               	movwf	fputs@i^0,c
  5273  0015C0  EFED  F00A         	goto	l3172
  5274  0015C4                     l3168:
  5275  0015C4  C018  F00B         	movff	fputs@c,fputc@c
  5276  0015C8  6A0C               	clrf	(fputc@c+1)^0,c
  5277  0015CA  C016  F00D         	movff	fputs@fp,fputc@fp
  5278  0015CE  C017  F00E         	movff	fputs@fp+1,fputc@fp+1
  5279  0015D2  ECD4  F009         	call	_fputc	;wreg free
  5280  0015D6  4A19               	infsnz	fputs@i^0,f,c
  5281  0015D8  2A1A               	incf	(fputs@i+1)^0,f,c
  5282  0015DA                     l3172:
  5283  0015DA  5019               	movf	fputs@i^0,w,c
  5284  0015DC  2414               	addwf	fputs@s^0,w,c
  5285  0015DE  6ED9               	movwf	fsr2l,c
  5286  0015E0  501A               	movf	(fputs@i+1)^0,w,c
  5287  0015E2  2015               	addwfc	(fputs@s+1)^0,w,c
  5288  0015E4  6EDA               	movwf	fsr2h,c
  5289  0015E6  50DF               	movf	indf2,w,c
  5290  0015E8  6E18               	movwf	fputs@c^0,c
  5291  0015EA  5018               	movf	fputs@c^0,w,c
  5292  0015EC  A4D8               	btfss	status,2,c
  5293  0015EE  EFFB  F00A         	goto	u2251
  5294  0015F2  EFFD  F00A         	goto	u2250
  5295  0015F6                     u2251:
  5296  0015F6  EFE2  F00A         	goto	l3168
  5297  0015FA                     u2250:
  5298  0015FA  0012               	return		;funcret
  5299  0015FC                     __end_of_fputs:
  5300                           	callstack 0
  5301                           
  5302 ;; *************** function _fputc *****************
  5303 ;; Defined at:
  5304 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  c               2   10[COMRAM] int 
  5307 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  5308 ;;		 -> NULL(0), 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  2   10[COMRAM] int 
  5313 ;; Registers used:
  5314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;Total ram usage:        9 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    6
  5327 ;; This function calls:
  5328 ;;		_putch
  5329 ;; This function is called by:
  5330 ;;		_pad
  5331 ;;		_vfpfcnvrt
  5332 ;;		_fputs
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text18
  5337  0013A8                     __ptext18:
  5338                           	callstack 0
  5339  0013A8                     _fputc:
  5340                           	callstack 17
  5341  0013A8  500D               	movf	fputc@fp^0,w,c
  5342  0013AA  100E               	iorwf	(fputc@fp+1)^0,w,c
  5343  0013AC  B4D8               	btfsc	status,2,c
  5344  0013AE  EFDB  F009         	goto	u2211
  5345  0013B2  EFDD  F009         	goto	u2210
  5346  0013B6                     u2211:
  5347  0013B6  EFE6  F009         	goto	l3156
  5348  0013BA                     u2210:
  5349  0013BA  500D               	movf	fputc@fp^0,w,c
  5350  0013BC  100E               	iorwf	(fputc@fp+1)^0,w,c
  5351  0013BE  A4D8               	btfss	status,2,c
  5352  0013C0  EFE4  F009         	goto	u2221
  5353  0013C4  EFE6  F009         	goto	u2220
  5354  0013C8                     u2221:
  5355  0013C8  EFEB  F009         	goto	l3158
  5356  0013CC                     u2220:
  5357  0013CC                     l3156:
  5358  0013CC  500B               	movf	fputc@c^0,w,c
  5359  0013CE  EC04  F00D         	call	_putch
  5360  0013D2  EF1E  F00A         	goto	l1339
  5361  0013D6                     l3158:
  5362  0013D6  EE20 F004          	lfsr	2,4
  5363  0013DA  500D               	movf	fputc@fp^0,w,c
  5364  0013DC  26D9               	addwf	fsr2l,f,c
  5365  0013DE  500E               	movf	(fputc@fp+1)^0,w,c
  5366  0013E0  22DA               	addwfc	fsr2h,f,c
  5367  0013E2  50DE               	movf	postinc2,w,c
  5368  0013E4  10DE               	iorwf	postinc2,w,c
  5369  0013E6  B4D8               	btfsc	status,2,c
  5370  0013E8  EFF8  F009         	goto	u2231
  5371  0013EC  EFFA  F009         	goto	u2230
  5372  0013F0                     u2231:
  5373  0013F0  EF15  F00A         	goto	l3162
  5374  0013F4                     u2230:
  5375  0013F4  EE20 F004          	lfsr	2,4
  5376  0013F8  500D               	movf	fputc@fp^0,w,c
  5377  0013FA  26D9               	addwf	fsr2l,f,c
  5378  0013FC  500E               	movf	(fputc@fp+1)^0,w,c
  5379  0013FE  22DA               	addwfc	fsr2h,f,c
  5380  001400  EE10 F002          	lfsr	1,2
  5381  001404  500D               	movf	fputc@fp^0,w,c
  5382  001406  26E1               	addwf	fsr1l,f,c
  5383  001408  500E               	movf	(fputc@fp+1)^0,w,c
  5384  00140A  22E2               	addwfc	fsr1h,f,c
  5385  00140C  50DE               	movf	postinc2,w,c
  5386  00140E  5CE6               	subwf	postinc1,w,c
  5387  001410  50E6               	movf	postinc1,w,c
  5388  001412  0A80               	xorlw	128
  5389  001414  6E13               	movwf	(??_fputc+4)^0,c
  5390  001416  50DE               	movf	postinc2,w,c
  5391  001418  0A80               	xorlw	128
  5392  00141A  5813               	subwfb	(??_fputc+4)^0,w,c
  5393  00141C  B0D8               	btfsc	status,0,c
  5394  00141E  EF13  F00A         	goto	u2241
  5395  001422  EF15  F00A         	goto	u2240
  5396  001426                     u2241:
  5397  001426  EF1E  F00A         	goto	l1339
  5398  00142A                     u2240:
  5399  00142A                     l3162:
  5400  00142A  EE20 F002          	lfsr	2,2
  5401  00142E  500D               	movf	fputc@fp^0,w,c
  5402  001430  26D9               	addwf	fsr2l,f,c
  5403  001432  500E               	movf	(fputc@fp+1)^0,w,c
  5404  001434  22DA               	addwfc	fsr2h,f,c
  5405  001436  2ADE               	incf	postinc2,f,c
  5406  001438  0E00               	movlw	0
  5407  00143A  22DD               	addwfc	postdec2,f,c
  5408  00143C                     l1339:
  5409  00143C  0012               	return		;funcret
  5410  00143E                     __end_of_fputc:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function _putch *****************
  5414 ;; Defined at:
  5415 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  txData          1    wreg     unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  txData          1    9[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;Total ram usage:        1 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    5
  5436 ;; This function calls:
  5437 ;;		_EUSART1_Write
  5438 ;; This function is called by:
  5439 ;;		_fputc
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text19
  5444  001A08                     __ptext19:
  5445                           	callstack 0
  5446  001A08                     _putch:
  5447                           	callstack 17
  5448                           
  5449                           ;incstack = 0
  5450                           ;putch@txData stored from wreg
  5451  001A08  6E0A               	movwf	putch@txData^0,c
  5452  001A0A                     
  5453                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  5454  001A0A  500A               	movf	putch@txData^0,w,c
  5455  001A0C  ECDD  F00C         	call	_EUSART1_Write
  5456  001A10  0012               	return		;funcret
  5457  001A12                     __end_of_putch:
  5458                           	callstack 0
  5459                           
  5460 ;; *************** function _EUSART1_Write *****************
  5461 ;; Defined at:
  5462 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  txData          1    wreg     unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  txData          1    8[COMRAM] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;Total ram usage:        1 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    4
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_putch
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text20
  5491  0019BA                     __ptext20:
  5492                           	callstack 0
  5493  0019BA                     _EUSART1_Write:
  5494                           	callstack 17
  5495                           
  5496                           ;incstack = 0
  5497                           ;EUSART1_Write@txData stored from wreg
  5498  0019BA  6E09               	movwf	EUSART1_Write@txData^0,c
  5499  0019BC                     l481:
  5500                           
  5501                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5502  0019BC  A89E               	btfss	158,4,c	;volatile
  5503  0019BE  EFE3  F00C         	goto	u2201
  5504  0019C2  EFE5  F00C         	goto	u2200
  5505  0019C6                     u2201:
  5506  0019C6  EFDE  F00C         	goto	l481
  5507  0019CA                     u2200:
  5508  0019CA                     
  5509                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5510  0019CA  C009  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5511  0019CE  0012               	return		;funcret
  5512  0019D0                     __end_of_EUSART1_Write:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _EUSART1_is_rx_ready *****************
  5516 ;; Defined at:
  5517 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      _Bool 
  5524 ;; Registers used:
  5525 ;;		wreg
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    4
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_main
  5542 ;;		_userEnter8bit
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text21
  5547  0019D0                     __ptext21:
  5548                           	callstack 0
  5549  0019D0                     _EUSART1_is_rx_ready:
  5550                           	callstack 25
  5551  0019D0                     
  5552                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5553  0019D0  BA9E               	btfsc	158,5,c	;volatile
  5554  0019D2  EFED  F00C         	goto	u1911
  5555  0019D6  EFF0  F00C         	goto	u1910
  5556  0019DA                     u1911:
  5557  0019DA  0E01               	movlw	1
  5558  0019DC  EFF1  F00C         	goto	u1916
  5559  0019E0                     u1910:
  5560  0019E0  0E00               	movlw	0
  5561  0019E2                     u1916:
  5562  0019E2  0012               	return		;funcret
  5563  0019E4                     __end_of_EUSART1_is_rx_ready:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _EUSART1_Read *****************
  5567 ;; Defined at:
  5568 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      unsigned char 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    4
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;;		_userEnter8bit
  5594 ;;		_getch
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text22
  5599  001866                     __ptext22:
  5600                           	callstack 0
  5601  001866                     _EUSART1_Read:
  5602                           	callstack 25
  5603  001866                     l474:
  5604                           
  5605                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5606  001866  AA9E               	btfss	158,5,c	;volatile
  5607  001868  EF38  F00C         	goto	u1921
  5608  00186C  EF3A  F00C         	goto	u1920
  5609  001870                     u1921:
  5610  001870  EF33  F00C         	goto	l474
  5611  001874                     u1920:
  5612  001874                     
  5613                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5614  001874  0E00               	movlw	0
  5615  001876  0100               	movlb	0	; () banked
  5616  001878  6F92               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5617  00187A                     
  5618                           ; BSR set to: 0
  5619                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5620  00187A  A2AB               	btfss	171,1,c	;volatile
  5621  00187C  EF42  F00C         	goto	u1931
  5622  001880  EF44  F00C         	goto	u1930
  5623  001884                     u1931:
  5624  001884  EF46  F00C         	goto	l2762
  5625  001888                     u1930:
  5626  001888                     
  5627                           ; BSR set to: 0
  5628                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5629  001888  98AB               	bcf	171,4,c	;volatile
  5630                           
  5631                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5632  00188A  88AB               	bsf	171,4,c	;volatile
  5633  00188C                     l2762:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5637  00188C  50AE               	movf	174,w,c	;volatile
  5638  00188E                     
  5639                           ; BSR set to: 0
  5640  00188E  0012               	return		;funcret
  5641  001890                     __end_of_EUSART1_Read:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _TMR1_WriteTimer *****************
  5645 ;; Defined at:
  5646 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  timerVal        2    8[COMRAM] unsigned short 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:        2 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    4
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_main
  5671 ;;		_TMR1_Reload
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text23
  5676  00190C                     __ptext23:
  5677                           	callstack 0
  5678  00190C                     _TMR1_WriteTimer:
  5679                           	callstack 26
  5680  00190C                     
  5681                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5682  00190C  A4CD               	btfss	205,2,c	;volatile
  5683  00190E  EF8B  F00C         	goto	u1971
  5684  001912  EF8D  F00C         	goto	u1970
  5685  001916                     u1971:
  5686  001916  EF95  F00C         	goto	l2836
  5687  00191A                     u1970:
  5688  00191A                     
  5689                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5690  00191A  90CD               	bcf	205,0,c	;volatile
  5691  00191C                     
  5692                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  5693  00191C  500A               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5694  00191E  6ECF               	movwf	207,c	;volatile
  5695  001920                     
  5696                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  5697  001920  C009  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5698  001924                     
  5699                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5700  001924  80CD               	bsf	205,0,c	;volatile
  5701                           
  5702                           ;mcc_generated_files/tmr1.c: 134:     }
  5703  001926  EF99  F00C         	goto	l96
  5704  00192A                     l2836:
  5705                           
  5706                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  5707  00192A  500A               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5708  00192C  6ECF               	movwf	207,c	;volatile
  5709  00192E                     
  5710                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  5711  00192E  C009  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5712  001932                     l96:
  5713  001932  0012               	return		;funcret
  5714  001934                     __end_of_TMR1_WriteTimer:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _SYSTEM_Initialize *****************
  5718 ;; Defined at:
  5719 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    6
  5740 ;; This function calls:
  5741 ;;		_EPWM2_Initialize
  5742 ;;		_EUSART1_Initialize
  5743 ;;		_EUSART2_Initialize
  5744 ;;		_INTERRUPT_Initialize
  5745 ;;		_OSCILLATOR_Initialize
  5746 ;;		_PIN_MANAGER_Initialize
  5747 ;;		_TMR1_Initialize
  5748 ;;		_TMR2_Initialize
  5749 ;; This function is called by:
  5750 ;;		_main
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text24
  5755  00195C                     __ptext24:
  5756                           	callstack 0
  5757  00195C                     _SYSTEM_Initialize:
  5758                           	callstack 24
  5759  00195C                     
  5760                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5761  00195C  EC2C  F00D         	call	_INTERRUPT_Initialize	;wreg free
  5762  001960                     
  5763                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5764  001960  EC1D  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  5765  001964                     
  5766                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5767  001964  ECCF  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  5768  001968                     
  5769                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  5770  001968  ECBF  F00C         	call	_EPWM2_Initialize	;wreg free
  5771  00196C                     
  5772                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  5773  00196C  ECFC  F00C         	call	_TMR2_Initialize	;wreg free
  5774  001970                     
  5775                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  5776  001970  EC48  F00C         	call	_TMR1_Initialize	;wreg free
  5777  001974                     
  5778                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  5779  001974  EC3E  F00B         	call	_EUSART1_Initialize	;wreg free
  5780  001978                     
  5781                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  5782  001978  EC1E  F00B         	call	_EUSART2_Initialize	;wreg free
  5783  00197C  0012               	return		;funcret
  5784  00197E                     __end_of_SYSTEM_Initialize:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _TMR2_Initialize *****************
  5788 ;; Defined at:
  5789 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;Total ram usage:        0 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    4
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_SYSTEM_Initialize
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text25
  5818  0019F8                     __ptext25:
  5819                           	callstack 0
  5820  0019F8                     _TMR2_Initialize:
  5821                           	callstack 25
  5822  0019F8                     
  5823                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
  5824  0019F8  0E68               	movlw	104
  5825  0019FA  6EBB               	movwf	187,c	;volatile
  5826                           
  5827                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5828  0019FC  0E00               	movlw	0
  5829  0019FE  6EBC               	movwf	188,c	;volatile
  5830  001A00                     
  5831                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5832  001A00  929E               	bcf	158,1,c	;volatile
  5833                           
  5834                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  5835  001A02  0E05               	movlw	5
  5836  001A04  6EBA               	movwf	186,c	;volatile
  5837  001A06  0012               	return		;funcret
  5838  001A08                     __end_of_TMR2_Initialize:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _TMR1_Initialize *****************
  5842 ;; Defined at:
  5843 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        0 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    5
  5864 ;; This function calls:
  5865 ;;		_TMR1_SetInterruptHandler
  5866 ;; This function is called by:
  5867 ;;		_SYSTEM_Initialize
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text26
  5872  001890                     __ptext26:
  5873                           	callstack 0
  5874  001890                     _TMR1_Initialize:
  5875                           	callstack 24
  5876  001890                     
  5877                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5878  001890  0E00               	movlw	0
  5879  001892  6ECC               	movwf	204,c	;volatile
  5880                           
  5881                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  5882  001894  0E00               	movlw	0
  5883  001896  6ECF               	movwf	207,c	;volatile
  5884                           
  5885                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  5886  001898  0E00               	movlw	0
  5887  00189A  6ECE               	movwf	206,c	;volatile
  5888  00189C                     
  5889                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  5890  00189C  CFCE F090          	movff	4046,_timer1ReloadVal	;volatile
  5891  0018A0  CFCF F091          	movff	4047,_timer1ReloadVal+1	;volatile
  5892  0018A4                     
  5893                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  5894  0018A4  909E               	bcf	158,0,c	;volatile
  5895  0018A6                     
  5896                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5897  0018A6  809D               	bsf	157,0,c	;volatile
  5898  0018A8                     
  5899                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5900  0018A8  0E60               	movlw	low _TMR1_DefaultInterruptHandler
  5901  0018AA  6E09               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  5902  0018AC  0E1A               	movlw	high _TMR1_DefaultInterruptHandler
  5903  0018AE  6E0A               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  5904  0018B0  EC09  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
  5905  0018B4                     
  5906                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  5907  0018B4  0E01               	movlw	1
  5908  0018B6  6ECD               	movwf	205,c	;volatile
  5909  0018B8  0012               	return		;funcret
  5910  0018BA                     __end_of_TMR1_Initialize:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _TMR1_SetInterruptHandler *****************
  5914 ;; Defined at:
  5915 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  5918 ;;		 -> myTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;Total ram usage:        2 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    4
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_TMR1_Initialize
  5941 ;;		_main
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text27
  5946  001A12                     __ptext27:
  5947                           	callstack 0
  5948  001A12                     _TMR1_SetInterruptHandler:
  5949                           	callstack 26
  5950  001A12                     
  5951                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  5952  001A12  C009  F08E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5953  001A16  C00A  F08F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5954  001A1A  0012               	return		;funcret
  5955  001A1C                     __end_of_TMR1_SetInterruptHandler:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _PIN_MANAGER_Initialize *****************
  5959 ;; Defined at:
  5960 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;Total ram usage:        0 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    4
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_SYSTEM_Initialize
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text28
  5989  00183A                     __ptext28:
  5990                           	callstack 0
  5991  00183A                     _PIN_MANAGER_Initialize:
  5992                           	callstack 25
  5993  00183A                     
  5994                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5995  00183A  0E00               	movlw	0
  5996  00183C  6E89               	movwf	137,c	;volatile
  5997                           
  5998                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5999  00183E  0E00               	movlw	0
  6000  001840  6E8A               	movwf	138,c	;volatile
  6001                           
  6002                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6003  001842  0E00               	movlw	0
  6004  001844  6E8B               	movwf	139,c	;volatile
  6005  001846                     
  6006                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  6007  001846  6892               	setf	146,c	;volatile
  6008                           
  6009                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  6010  001848  0EBF               	movlw	191
  6011  00184A  6E93               	movwf	147,c	;volatile
  6012                           
  6013                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  6014  00184C  0EBD               	movlw	189
  6015  00184E  6E94               	movwf	148,c	;volatile
  6016                           
  6017                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  6018  001850  0E3C               	movlw	60
  6019  001852  010F               	movlb	15	; () banked
  6020  001854  6F3A               	movwf	58,b	;volatile
  6021                           
  6022                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  6023  001856  0E3F               	movlw	63
  6024  001858  6F39               	movwf	57,b	;volatile
  6025                           
  6026                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  6027  00185A  0E2F               	movlw	47
  6028  00185C  6F38               	movwf	56,b	;volatile
  6029                           
  6030                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6031  00185E  0E00               	movlw	0
  6032  001860  6E61               	movwf	97,c	;volatile
  6033  001862                     
  6034                           ; BSR set to: 15
  6035                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  6036  001862  8EF1               	bsf	241,7,c	;volatile
  6037  001864                     
  6038                           ; BSR set to: 15
  6039  001864  0012               	return		;funcret
  6040  001866                     __end_of_PIN_MANAGER_Initialize:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _OSCILLATOR_Initialize *****************
  6044 ;; Defined at:
  6045 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    4
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_SYSTEM_Initialize
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text29
  6074  00199E                     __ptext29:
  6075                           	callstack 0
  6076  00199E                     _OSCILLATOR_Initialize:
  6077                           	callstack 25
  6078  00199E                     
  6079                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  6080  00199E  0E70               	movlw	112
  6081  0019A0  6ED3               	movwf	211,c	;volatile
  6082                           
  6083                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  6084  0019A2  0E04               	movlw	4
  6085  0019A4  6ED2               	movwf	210,c	;volatile
  6086                           
  6087                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  6088  0019A6  0E40               	movlw	64
  6089  0019A8  6E9B               	movwf	155,c	;volatile
  6090  0019AA                     l30:
  6091                           
  6092                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  6093  0019AA  AED2               	btfss	4050,7,c	;volatile
  6094  0019AC  EFDA  F00C         	goto	u1901
  6095  0019B0  EFDC  F00C         	goto	u1900
  6096  0019B4                     u1901:
  6097  0019B4  EFD5  F00C         	goto	l30
  6098  0019B8                     u1900:
  6099  0019B8  0012               	return		;funcret
  6100  0019BA                     __end_of_OSCILLATOR_Initialize:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function _INTERRUPT_Initialize *****************
  6104 ;; Defined at:
  6105 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		None
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:        0 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    4
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_SYSTEM_Initialize
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text30
  6134  001A58                     __ptext30:
  6135                           	callstack 0
  6136  001A58                     _INTERRUPT_Initialize:
  6137                           	callstack 25
  6138  001A58                     
  6139                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6140  001A58  9ED0               	bcf	208,7,c	;volatile
  6141  001A5A  0012               	return		;funcret
  6142  001A5C                     __end_of_INTERRUPT_Initialize:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function _EUSART2_Initialize *****************
  6146 ;; Defined at:
  6147 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    5
  6168 ;; This function calls:
  6169 ;;		_EUSART2_SetErrorHandler
  6170 ;;		_EUSART2_SetFramingErrorHandler
  6171 ;;		_EUSART2_SetOverrunErrorHandler
  6172 ;; This function is called by:
  6173 ;;		_SYSTEM_Initialize
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text31
  6178  00163C                     __ptext31:
  6179                           	callstack 0
  6180  00163C                     _EUSART2_Initialize:
  6181                           	callstack 24
  6182  00163C                     
  6183                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  6184  00163C  0E08               	movlw	8
  6185  00163E  6E70               	movwf	112,c	;volatile
  6186                           
  6187                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  6188  001640  0E90               	movlw	144
  6189  001642  6E71               	movwf	113,c	;volatile
  6190                           
  6191                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  6192  001644  0E24               	movlw	36
  6193  001646  6E72               	movwf	114,c	;volatile
  6194                           
  6195                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0x0A;
  6196  001648  0E0A               	movlw	10
  6197  00164A  6E75               	movwf	117,c	;volatile
  6198                           
  6199                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x1A;
  6200  00164C  0E1A               	movlw	26
  6201  00164E  6E76               	movwf	118,c	;volatile
  6202  001650                     
  6203                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  6204  001650  0E00               	movlw	0
  6205  001652  6E09               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  6206  001654  0E00               	movlw	0
  6207  001656  6E0A               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  6208  001658  EC13  F00D         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  6209  00165C                     
  6210                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  6211  00165C  0E00               	movlw	0
  6212  00165E  6E09               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  6213  001660  0E00               	movlw	0
  6214  001662  6E0A               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6215  001664  EC0E  F00D         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  6216  001668                     
  6217                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  6218  001668  0E00               	movlw	0
  6219  00166A  6E09               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  6220  00166C  0E00               	movlw	0
  6221  00166E  6E0A               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  6222  001670  EC18  F00D         	call	_EUSART2_SetErrorHandler	;wreg free
  6223  001674                     
  6224                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  6225  001674  0E00               	movlw	0
  6226  001676  0100               	movlb	0	; () banked
  6227  001678  6F93               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6228  00167A                     
  6229                           ; BSR set to: 0
  6230  00167A  0012               	return		;funcret
  6231  00167C                     __end_of_EUSART2_Initialize:
  6232                           	callstack 0
  6233                           
  6234 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6235 ;; Defined at:
  6236 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6239 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;Total ram usage:        2 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    4
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_EUSART2_Initialize
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text32
  6266  001A1C                     __ptext32:
  6267                           	callstack 0
  6268  001A1C                     _EUSART2_SetOverrunErrorHandler:
  6269                           	callstack 24
  6270  001A1C                     
  6271                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  6272  001A1C  C009  F08A         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6273  001A20  C00A  F08B         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6274  001A24  0012               	return		;funcret
  6275  001A26                     __end_of_EUSART2_SetOverrunErrorHandler:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6279 ;; Defined at:
  6280 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6283 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;Total ram usage:        2 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    4
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_EUSART2_Initialize
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text33
  6310  001A26                     __ptext33:
  6311                           	callstack 0
  6312  001A26                     _EUSART2_SetFramingErrorHandler:
  6313                           	callstack 24
  6314  001A26                     
  6315                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  6316  001A26  C009  F08C         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6317  001A2A  C00A  F08D         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6318  001A2E  0012               	return		;funcret
  6319  001A30                     __end_of_EUSART2_SetFramingErrorHandler:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _EUSART2_SetErrorHandler *****************
  6323 ;; Defined at:
  6324 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6327 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    4
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_EUSART2_Initialize
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text34
  6354  001A30                     __ptext34:
  6355                           	callstack 0
  6356  001A30                     _EUSART2_SetErrorHandler:
  6357                           	callstack 24
  6358  001A30                     
  6359                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  6360  001A30  C009  F088         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6361  001A34  C00A  F089         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6362  001A38  0012               	return		;funcret
  6363  001A3A                     __end_of_EUSART2_SetErrorHandler:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _EUSART1_Initialize *****************
  6367 ;; Defined at:
  6368 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    5
  6389 ;; This function calls:
  6390 ;;		_EUSART1_SetErrorHandler
  6391 ;;		_EUSART1_SetFramingErrorHandler
  6392 ;;		_EUSART1_SetOverrunErrorHandler
  6393 ;; This function is called by:
  6394 ;;		_SYSTEM_Initialize
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text35
  6399  00167C                     __ptext35:
  6400                           	callstack 0
  6401  00167C                     _EUSART1_Initialize:
  6402                           	callstack 24
  6403  00167C                     
  6404                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6405  00167C  0E08               	movlw	8
  6406  00167E  6EB8               	movwf	184,c	;volatile
  6407                           
  6408                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6409  001680  0E90               	movlw	144
  6410  001682  6EAB               	movwf	171,c	;volatile
  6411                           
  6412                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6413  001684  0E24               	movlw	36
  6414  001686  6EAC               	movwf	172,c	;volatile
  6415                           
  6416                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  6417  001688  0E82               	movlw	130
  6418  00168A  6EAF               	movwf	175,c	;volatile
  6419                           
  6420                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  6421  00168C  0E06               	movlw	6
  6422  00168E  6EB0               	movwf	176,c	;volatile
  6423  001690                     
  6424                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6425  001690  0E00               	movlw	0
  6426  001692  6E09               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6427  001694  0E00               	movlw	0
  6428  001696  6E0A               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6429  001698  EC22  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6430  00169C                     
  6431                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6432  00169C  0E00               	movlw	0
  6433  00169E  6E09               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6434  0016A0  0E00               	movlw	0
  6435  0016A2  6E0A               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6436  0016A4  EC1D  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6437  0016A8                     
  6438                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6439  0016A8  0E00               	movlw	0
  6440  0016AA  6E09               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6441  0016AC  0E00               	movlw	0
  6442  0016AE  6E0A               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6443  0016B0  EC27  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  6444  0016B4                     
  6445                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6446  0016B4  0E00               	movlw	0
  6447  0016B6  0100               	movlb	0	; () banked
  6448  0016B8  6F92               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6449  0016BA                     
  6450                           ; BSR set to: 0
  6451  0016BA  0012               	return		;funcret
  6452  0016BC                     __end_of_EUSART1_Initialize:
  6453                           	callstack 0
  6454                           
  6455 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6456 ;; Defined at:
  6457 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6460 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:        2 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    4
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_EUSART1_Initialize
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text36
  6487  001A3A                     __ptext36:
  6488                           	callstack 0
  6489  001A3A                     _EUSART1_SetOverrunErrorHandler:
  6490                           	callstack 24
  6491  001A3A                     
  6492                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6493  001A3A  C009  F084         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6494  001A3E  C00A  F085         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6495  001A42  0012               	return		;funcret
  6496  001A44                     __end_of_EUSART1_SetOverrunErrorHandler:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6500 ;; Defined at:
  6501 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6504 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:        2 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    4
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_EUSART1_Initialize
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text37
  6531  001A44                     __ptext37:
  6532                           	callstack 0
  6533  001A44                     _EUSART1_SetFramingErrorHandler:
  6534                           	callstack 24
  6535  001A44                     
  6536                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6537  001A44  C009  F086         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6538  001A48  C00A  F087         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6539  001A4C  0012               	return		;funcret
  6540  001A4E                     __end_of_EUSART1_SetFramingErrorHandler:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _EUSART1_SetErrorHandler *****************
  6544 ;; Defined at:
  6545 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  6548 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;Total ram usage:        2 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    4
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_EUSART1_Initialize
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text38
  6575  001A4E                     __ptext38:
  6576                           	callstack 0
  6577  001A4E                     _EUSART1_SetErrorHandler:
  6578                           	callstack 24
  6579  001A4E                     
  6580                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6581  001A4E  C009  F082         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6582  001A52  C00A  F083         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6583  001A56  0012               	return		;funcret
  6584  001A58                     __end_of_EUSART1_SetErrorHandler:
  6585                           	callstack 0
  6586                           
  6587 ;; *************** function _EPWM2_Initialize *****************
  6588 ;; Defined at:
  6589 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;Total ram usage:        0 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    4
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_SYSTEM_Initialize
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text39
  6618  00197E                     __ptext39:
  6619                           	callstack 0
  6620  00197E                     _EPWM2_Initialize:
  6621                           	callstack 25
  6622  00197E                     
  6623                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x1C;
  6624  00197E  0E1C               	movlw	28
  6625  001980  6E66               	movwf	102,c	;volatile
  6626                           
  6627                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  6628  001982  0E00               	movlw	0
  6629  001984  6E64               	movwf	100,c	;volatile
  6630                           
  6631                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  6632  001986  0E80               	movlw	128
  6633  001988  6E65               	movwf	101,c	;volatile
  6634                           
  6635                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  6636  00198A  0E01               	movlw	1
  6637  00198C  6E63               	movwf	99,c	;volatile
  6638                           
  6639                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  6640  00198E  0E00               	movlw	0
  6641  001990  6E68               	movwf	104,c	;volatile
  6642                           
  6643                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x34;
  6644  001992  0E34               	movlw	52
  6645  001994  6E67               	movwf	103,c	;volatile
  6646                           
  6647                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  6648  001996  0EE7               	movlw	-25
  6649  001998  010F               	movlb	15	; () banked
  6650  00199A  1749               	andwf	73,f,b	;volatile
  6651  00199C                     
  6652                           ; BSR set to: 15
  6653  00199C  0012               	return		;funcret
  6654  00199E                     __end_of_EPWM2_Initialize:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function _EUSART2_is_rx_ready *****************
  6658 ;; Defined at:
  6659 ;;		line 99 in file "mcc_generated_files/eusart2.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      _Bool 
  6666 ;; Registers used:
  6667 ;;		wreg
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    4
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text40
  6688  0019E4                     __ptext40:
  6689                           	callstack 0
  6690  0019E4                     _EUSART2_is_rx_ready:
  6691                           	callstack 26
  6692  0019E4                     
  6693                           ;mcc_generated_files/eusart2.c: 101:     return (_Bool)(PIR3bits.RC2IF);
  6694  0019E4  BAA4               	btfsc	164,5,c	;volatile
  6695  0019E6  EFF7  F00C         	goto	u2001
  6696  0019EA  EFFA  F00C         	goto	u2000
  6697  0019EE                     u2001:
  6698  0019EE  0E01               	movlw	1
  6699  0019F0  EFFB  F00C         	goto	u2006
  6700  0019F4                     u2000:
  6701  0019F4  0E00               	movlw	0
  6702  0019F6                     u2006:
  6703  0019F6  0012               	return		;funcret
  6704  0019F8                     __end_of_EUSART2_is_rx_ready:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _EUSART2_Read *****************
  6708 ;; Defined at:
  6709 ;;		line 113 in file "mcc_generated_files/eusart2.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;		None
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      unsigned char 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;Total ram usage:        0 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text41
  6738  0018BA                     __ptext41:
  6739                           	callstack 0
  6740  0018BA                     _EUSART2_Read:
  6741                           	callstack 26
  6742  0018BA                     l386:
  6743                           
  6744                           ;mcc_generated_files/eusart2.c: 115:     while(!PIR3bits.RC2IF)
  6745  0018BA  AAA4               	btfss	164,5,c	;volatile
  6746  0018BC  EF62  F00C         	goto	u2011
  6747  0018C0  EF64  F00C         	goto	u2010
  6748  0018C4                     u2011:
  6749  0018C4  EF5D  F00C         	goto	l386
  6750  0018C8                     u2010:
  6751  0018C8                     
  6752                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6753  0018C8  0E00               	movlw	0
  6754  0018CA  0100               	movlb	0	; () banked
  6755  0018CC  6F93               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6756  0018CE                     
  6757                           ; BSR set to: 0
  6758                           ;mcc_generated_files/eusart2.c: 121:     if(1 == RCSTA2bits.OERR)
  6759  0018CE  A271               	btfss	113,1,c	;volatile
  6760  0018D0  EF6C  F00C         	goto	u2021
  6761  0018D4  EF6E  F00C         	goto	u2020
  6762  0018D8                     u2021:
  6763  0018D8  EF70  F00C         	goto	l2860
  6764  0018DC                     u2020:
  6765  0018DC                     
  6766                           ; BSR set to: 0
  6767                           ;mcc_generated_files/eusart2.c: 122:     {;mcc_generated_files/eusart2.c: 125:         R
      +                          CSTA2bits.CREN = 0;
  6768  0018DC  9871               	bcf	113,4,c	;volatile
  6769                           
  6770                           ;mcc_generated_files/eusart2.c: 126:         RCSTA2bits.CREN = 1;
  6771  0018DE  8871               	bsf	113,4,c	;volatile
  6772  0018E0                     l2860:
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;mcc_generated_files/eusart2.c: 129:     return RCREG2;
  6776  0018E0  5074               	movf	116,w,c	;volatile
  6777  0018E2                     
  6778                           ; BSR set to: 0
  6779  0018E2  0012               	return		;funcret
  6780  0018E4                     __end_of_EUSART2_Read:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function _EPWM2_LoadDutyValue *****************
  6784 ;; Defined at:
  6785 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  dutyValue       2    8[COMRAM] unsigned short 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;Total ram usage:        4 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    4
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text42
  6814  0017DA                     __ptext42:
  6815                           	callstack 0
  6816  0017DA                     _EPWM2_LoadDutyValue:
  6817                           	callstack 26
  6818  0017DA                     
  6819                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  6820  0017DA  C009  F00B         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6821  0017DE  C00A  F00C         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  6822  0017E2  90D8               	bcf	status,0,c
  6823  0017E4  320C               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6824  0017E6  320B               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6825  0017E8  90D8               	bcf	status,0,c
  6826  0017EA  320C               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6827  0017EC  320B               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6828  0017EE  500B               	movf	??_EPWM2_LoadDutyValue^0,w,c
  6829  0017F0  6E67               	movwf	103,c	;volatile
  6830                           
  6831                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6832  0017F2  C009  F00B         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6833  0017F6  0E03               	movlw	3
  6834  0017F8  160B               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6835  0017FA  3A0B               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  6836  0017FC  0EF0               	movlw	240
  6837  0017FE  160B               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6838  001800  5066               	movf	102,w,c	;volatile
  6839  001802  0BCF               	andlw	207
  6840  001804  100B               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  6841  001806  6E66               	movwf	102,c	;volatile
  6842  001808  0012               	return		;funcret
  6843  00180A                     __end_of_EPWM2_LoadDutyValue:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _INTERRUPT_InterruptManager *****************
  6847 ;; Defined at:
  6848 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;Total ram usage:        2 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    3
  6869 ;; This function calls:
  6870 ;;		_TMR1_ISR
  6871 ;; This function is called by:
  6872 ;;		Interrupt level 2
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	intcode
  6877  000008                     __pintcode:
  6878                           	callstack 0
  6879  000008                     _INTERRUPT_InterruptManager:
  6880                           	callstack 17
  6881                           
  6882                           ;incstack = 0
  6883  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6884  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  6885  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6886  000012                     
  6887                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6888  000012  ACF2               	btfss	242,6,c	;volatile
  6889  000014  EF0E  F000         	goto	i2u206_41
  6890  000018  EF10  F000         	goto	i2u206_40
  6891  00001C                     i2u206_41:
  6892  00001C  EF20  F000         	goto	i2l199
  6893  000020                     i2u206_40:
  6894  000020                     
  6895                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6896  000020  A09D               	btfss	157,0,c	;volatile
  6897  000022  EF15  F000         	goto	i2u207_41
  6898  000026  EF17  F000         	goto	i2u207_40
  6899  00002A                     i2u207_41:
  6900  00002A  EF20  F000         	goto	i2l199
  6901  00002E                     i2u207_40:
  6902  00002E  A09E               	btfss	158,0,c	;volatile
  6903  000030  EF1C  F000         	goto	i2u208_41
  6904  000034  EF1E  F000         	goto	i2u208_40
  6905  000038                     i2u208_41:
  6906  000038  EF20  F000         	goto	i2l199
  6907  00003C                     i2u208_40:
  6908  00003C                     
  6909                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6910  00003C  EC7C  F00B         	call	_TMR1_ISR	;wreg free
  6911  000040                     i2l199:
  6912  000040  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6913  000044  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6914  000048  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6915  00004A  0011               	retfie		f
  6916  00004C                     __end_of_INTERRUPT_InterruptManager:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function _TMR1_ISR *****************
  6920 ;; Defined at:
  6921 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    2
  6942 ;; This function calls:
  6943 ;;		Absolute function
  6944 ;;		_TMR1_DefaultInterruptHandler
  6945 ;;		_myTMR1ISR
  6946 ;;		i2_TMR1_WriteTimer
  6947 ;; This function is called by:
  6948 ;;		_INTERRUPT_InterruptManager
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text44
  6953  0016F8                     __ptext44:
  6954                           	callstack 0
  6955  0016F8                     _TMR1_ISR:
  6956                           	callstack 17
  6957  0016F8                     
  6958                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  6959  0016F8  909E               	bcf	158,0,c	;volatile
  6960  0016FA                     
  6961                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  6962  0016FA  C090  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  6963  0016FE  C091  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  6964  001702  EC9A  F00C         	call	i2_TMR1_WriteTimer	;wreg free
  6965  001706                     
  6966                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  6967  001706  0100               	movlb	0	; () banked
  6968  001708  518E               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6969  00170A  118F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6970  00170C  B4D8               	btfsc	status,2,c
  6971  00170E  EF8B  F00B         	goto	i2u198_41
  6972  001712  EF8D  F00B         	goto	i2u198_40
  6973  001716                     i2u198_41:
  6974  001716  EF99  F00B         	goto	i2l109
  6975  00171A                     i2u198_40:
  6976  00171A                     
  6977                           ; BSR set to: 0
  6978                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  6979  00171A  D802               	call	i2u199_48
  6980  00171C  EF99  F00B         	goto	i2u199_49
  6981  001720                     i2u199_48:
  6982  001720  0005               	push	
  6983  001722  6EFA               	movwf	pclath,c
  6984  001724  518E               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6985  001726  6EFD               	movwf	tosl,c
  6986  001728  518F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6987  00172A  6EFE               	movwf	tosh,c
  6988  00172C  6AFF               	clrf	tosu,c
  6989  00172E  50FA               	movf	pclath,w,c
  6990  001730  0012               	return		;indir
  6991  001732                     i2u199_49:
  6992  001732                     i2l109:
  6993  001732  0012               	return		;funcret
  6994  001734                     __end_of_TMR1_ISR:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6998 ;; Defined at:
  6999 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		None
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_TMR1_Initialize
  7023 ;;		_TMR1_ISR
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text45
  7028  001A60                     __ptext45:
  7029                           	callstack 0
  7030  001A60                     _TMR1_DefaultInterruptHandler:
  7031                           	callstack 18
  7032  001A60  0012               	return		;funcret
  7033  001A62                     __end_of_TMR1_DefaultInterruptHandler:
  7034                           	callstack 0
  7035                           
  7036 ;; *************** function _myTMR1ISR *****************
  7037 ;; Defined at:
  7038 ;;		line 256 in file "main.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, status,0, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;Total ram usage:        2 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    1
  7059 ;; This function calls:
  7060 ;;		i2_EPWM2_LoadDutyValue
  7061 ;;		i2_TMR1_WriteTimer
  7062 ;; This function is called by:
  7063 ;;		_main
  7064 ;;		_TMR1_ISR
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text46
  7069  001212                     __ptext46:
  7070                           	callstack 0
  7071  001212                     _myTMR1ISR:
  7072                           	callstack 17
  7073  001212                     
  7074                           ;main.c: 258:                     newCharacterToSend = 0;;main.c: 259:                 }
      +                           else {;main.c: 261:                     else EPWM2_LoadDutyValue(25);
  7075  001212  0455               	decf	_newCharacterToSend^0,w,c
  7076  001214  A4D8               	btfss	status,2,c
  7077  001216  EF0F  F009         	goto	i2u194_41
  7078  00121A  EF11  F009         	goto	i2u194_40
  7079  00121E                     i2u194_41:
  7080  00121E  EF6B  F009         	goto	i2l2798
  7081  001222                     i2u194_40:
  7082  001222  EF55  F009         	goto	i2l2796
  7083  001226                     i2l2770:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;main.c: 269: 
  7087  001226  0E00               	movlw	0
  7088  001228  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  7089  00122A  0E19               	movlw	25
  7090  00122C  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  7091  00122E  EC05  F00C         	call	i2_EPWM2_LoadDutyValue	;wreg free
  7092  001232                     
  7093                           ;main.c: 270:             default:
  7094  001232  0E01               	movlw	1
  7095  001234  0100               	movlb	0	; () banked
  7096  001236  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  7097  001238                     
  7098                           ; BSR set to: 0
  7099                           ;main.c: 271:                 tmr1ISRstate = TX_IDLE;
  7100  001238  0E01               	movlw	1
  7101  00123A  6E56               	movwf	myTMR1ISR@mask^0,c
  7102                           
  7103                           ;main.c: 272:                 break;
  7104  00123C  EF6B  F009         	goto	i2l2798
  7105  001240                     i2l2776:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;main.c: 279: 
  7109  001240  5056               	movf	myTMR1ISR@mask^0,w,c
  7110  001242  A4D8               	btfss	status,2,c
  7111  001244  EF26  F009         	goto	i2u195_41
  7112  001248  EF28  F009         	goto	i2u195_40
  7113  00124C                     i2u195_41:
  7114  00124C  EF34  F009         	goto	i2l2784
  7115  001250                     i2u195_40:
  7116  001250                     
  7117                           ; BSR set to: 0
  7118                           ;main.c: 280: 
  7119  001250  0E00               	movlw	0
  7120  001252  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  7121  001254                     
  7122                           ; BSR set to: 0
  7123                           ;main.c: 281: 
  7124  001254  0E00               	movlw	0
  7125  001256  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  7126  001258  0E00               	movlw	0
  7127  00125A  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  7128  00125C  EC05  F00C         	call	i2_EPWM2_LoadDutyValue	;wreg free
  7129  001260                     
  7130                           ;main.c: 282: 
  7131  001260  0E00               	movlw	0
  7132  001262  6E55               	movwf	_newCharacterToSend^0,c
  7133                           
  7134                           ;main.c: 283: uint8_t userEnter8bit() {
  7135  001264  EF4C  F009         	goto	i2l2790
  7136  001268                     i2l2784:
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;main.c: 284:     uint8_t num = 0;
  7140  001268  51F2               	movf	_letter& (0+255),w,b
  7141  00126A  1456               	andwf	myTMR1ISR@mask^0,w,c
  7142  00126C  0900               	iorlw	0
  7143  00126E  B4D8               	btfsc	status,2,c
  7144  001270  EF3C  F009         	goto	i2u196_41
  7145  001274  EF3E  F009         	goto	i2u196_40
  7146  001278                     i2u196_41:
  7147  001278  EF46  F009         	goto	i2l2788
  7148  00127C                     i2u196_40:
  7149  00127C                     
  7150                           ; BSR set to: 0
  7151  00127C  0E00               	movlw	0
  7152  00127E  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  7153  001280  0E00               	movlw	0
  7154  001282  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  7155  001284  EC05  F00C         	call	i2_EPWM2_LoadDutyValue	;wreg free
  7156  001288  EF4C  F009         	goto	i2l2790
  7157  00128C                     i2l2788:
  7158                           
  7159                           ; BSR set to: 0
  7160  00128C  0E00               	movlw	0
  7161  00128E  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  7162  001290  0E19               	movlw	25
  7163  001292  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  7164  001294  EC05  F00C         	call	i2_EPWM2_LoadDutyValue	;wreg free
  7165  001298                     i2l2790:
  7166                           
  7167                           ;main.c: 288:         if (cmd == '\r') break;
  7168  001298  5056               	movf	myTMR1ISR@mask^0,w,c
  7169  00129A  2456               	addwf	myTMR1ISR@mask^0,w,c
  7170  00129C  6E56               	movwf	myTMR1ISR@mask^0,c
  7171                           
  7172                           ;main.c: 289: 
  7173  00129E  EF6B  F009         	goto	i2l2798
  7174  0012A2                     i2l2792:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;main.c: 295:                 num = num + (digit * 10 * 10);
  7178  0012A2  0E00               	movlw	0
  7179  0012A4  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  7180                           
  7181                           ;main.c: 296:                 break;
  7182  0012A6  EF6B  F009         	goto	i2l2798
  7183  0012AA                     i2l2796:
  7184  0012AA  0100               	movlb	0	; () banked
  7185  0012AC  5194               	movf	myTMR1ISR@tmr1ISRstate& (0+255),w,b
  7186  0012AE  6E05               	movwf	??_myTMR1ISR^0,c
  7187  0012B0  6A06               	clrf	(??_myTMR1ISR+1)^0,c
  7188                           
  7189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7190                           ; Switch size 1, requested type "simple"
  7191                           ; Number of cases is 1, Range of values is 0 to 0
  7192                           ; switch strategies available:
  7193                           ; Name         Instructions Cycles
  7194                           ; simple_byte            4     3 (average)
  7195                           ;	Chosen strategy is simple_byte
  7196  0012B2  5006               	movf	(??_myTMR1ISR+1)^0,w,c
  7197  0012B4  0A00               	xorlw	0	; case 0
  7198  0012B6  B4D8               	btfsc	status,2,c
  7199  0012B8  EF60  F009         	goto	i2l3804
  7200  0012BC  EF51  F009         	goto	i2l2792
  7201  0012C0                     i2l3804:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ; Switch size 1, requested type "simple"
  7205                           ; Number of cases is 2, Range of values is 0 to 1
  7206                           ; switch strategies available:
  7207                           ; Name         Instructions Cycles
  7208                           ; simple_byte            7     4 (average)
  7209                           ;	Chosen strategy is simple_byte
  7210  0012C0  5005               	movf	??_myTMR1ISR^0,w,c
  7211  0012C2  0A00               	xorlw	0	; case 0
  7212  0012C4  B4D8               	btfsc	status,2,c
  7213  0012C6  EF13  F009         	goto	i2l2770
  7214  0012CA  0A01               	xorlw	1	; case 1
  7215  0012CC  B4D8               	btfsc	status,2,c
  7216  0012CE  EF20  F009         	goto	i2l2776
  7217  0012D2  EF51  F009         	goto	i2l2792
  7218  0012D6                     i2l2798:
  7219                           
  7220                           ;main.c: 300:             case 2:
  7221  0012D6  0EE5               	movlw	229
  7222  0012D8  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  7223  0012DA  0EF6               	movlw	246
  7224  0012DC  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  7225  0012DE  EC9A  F00C         	call	i2_TMR1_WriteTimer	;wreg free
  7226  0012E2                     
  7227                           ;main.c: 301:                 num = num + digit;
  7228  0012E2  909E               	bcf	158,0,c	;volatile
  7229  0012E4  0012               	return		;funcret
  7230  0012E6                     __end_of_myTMR1ISR:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function i2_TMR1_WriteTimer *****************
  7234 ;; Defined at:
  7235 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  timerVal        2    0[COMRAM] unsigned short 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:        2 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_TMR1_ISR
  7259 ;;		_myTMR1ISR
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text47
  7264  001934                     __ptext47:
  7265                           	callstack 0
  7266  001934                     i2_TMR1_WriteTimer:
  7267                           	callstack 18
  7268  001934                     
  7269                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  7270  001934  A4CD               	btfss	205,2,c	;volatile
  7271  001936  EF9F  F00C         	goto	i2u189_41
  7272  00193A  EFA1  F00C         	goto	i2u189_40
  7273  00193E                     i2u189_41:
  7274  00193E  EFA9  F00C         	goto	i2l2692
  7275  001942                     i2u189_40:
  7276  001942                     
  7277                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  7278  001942  90CD               	bcf	205,0,c	;volatile
  7279  001944                     
  7280                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  7281  001944  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  7282  001946  6ECF               	movwf	207,c	;volatile
  7283  001948                     
  7284                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  7285  001948  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  7286  00194C                     
  7287                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  7288  00194C  80CD               	bsf	205,0,c	;volatile
  7289                           
  7290                           ;mcc_generated_files/tmr1.c: 134:     }
  7291  00194E  EFAD  F00C         	goto	i2l96
  7292  001952                     i2l2692:
  7293                           
  7294                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  7295  001952  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  7296  001954  6ECF               	movwf	207,c	;volatile
  7297  001956                     
  7298                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  7299  001956  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  7300  00195A                     i2l96:
  7301  00195A  0012               	return		;funcret
  7302  00195C                     __end_ofi2_TMR1_WriteTimer:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function i2_EPWM2_LoadDutyValue *****************
  7306 ;; Defined at:
  7307 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  dutyValue       2    0[COMRAM] unsigned short 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:        4 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_myTMR1ISR
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text48
  7335  00180A                     __ptext48:
  7336                           	callstack 0
  7337  00180A                     i2_EPWM2_LoadDutyValue:
  7338                           	callstack 17
  7339  00180A                     
  7340                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  7341  00180A  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  7342  00180E  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
  7343  001812  90D8               	bcf	status,0,c
  7344  001814  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  7345  001816  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  7346  001818  90D8               	bcf	status,0,c
  7347  00181A  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  7348  00181C  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  7349  00181E  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
  7350  001820  6E67               	movwf	103,c	;volatile
  7351                           
  7352                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  7353  001822  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  7354  001826  0E03               	movlw	3
  7355  001828  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  7356  00182A  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
  7357  00182C  0EF0               	movlw	240
  7358  00182E  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  7359  001830  5066               	movf	102,w,c	;volatile
  7360  001832  0BCF               	andlw	207
  7361  001834  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
  7362  001836  6E66               	movwf	102,c	;volatile
  7363  001838  0012               	return		;funcret
  7364  00183A                     __end_ofi2_EPWM2_LoadDutyValue:
  7365                           	callstack 0
  7366                           
  7367                           	psect	text49
  7368  000000                     __ptext49:
  7369                           	callstack 0
  7370  000000                     
  7371                           	psect	rparam
  7372  0000                     
  7373                           	psect	temp
  7374  000057                     btemp:
  7375                           	callstack 0
  7376  000057                     	ds	1
  7377  0000                     int$flags	set	btemp
  7378  0000                     wtemp8	set	btemp+1
  7379  0000                     ttemp5	set	btemp+1
  7380  0000                     ttemp6	set	btemp+4
  7381  0000                     ttemp7	set	btemp+8
  7382                           
  7383                           	psect	idloc
  7384                           
  7385                           ;Config register IDLOC0 @ 0x200000
  7386                           ;	unspecified, using default values
  7387  200000                     	org	2097152
  7388  200000  FF                 	db	255
  7389                           
  7390                           ;Config register IDLOC1 @ 0x200001
  7391                           ;	unspecified, using default values
  7392  200001                     	org	2097153
  7393  200001  FF                 	db	255
  7394                           
  7395                           ;Config register IDLOC2 @ 0x200002
  7396                           ;	unspecified, using default values
  7397  200002                     	org	2097154
  7398  200002  FF                 	db	255
  7399                           
  7400                           ;Config register IDLOC3 @ 0x200003
  7401                           ;	unspecified, using default values
  7402  200003                     	org	2097155
  7403  200003  FF                 	db	255
  7404                           
  7405                           ;Config register IDLOC4 @ 0x200004
  7406                           ;	unspecified, using default values
  7407  200004                     	org	2097156
  7408  200004  FF                 	db	255
  7409                           
  7410                           ;Config register IDLOC5 @ 0x200005
  7411                           ;	unspecified, using default values
  7412  200005                     	org	2097157
  7413  200005  FF                 	db	255
  7414                           
  7415                           ;Config register IDLOC6 @ 0x200006
  7416                           ;	unspecified, using default values
  7417  200006                     	org	2097158
  7418  200006  FF                 	db	255
  7419                           
  7420                           ;Config register IDLOC7 @ 0x200007
  7421                           ;	unspecified, using default values
  7422  200007                     	org	2097159
  7423  200007  FF                 	db	255
  7424                           
  7425                           	psect	config
  7426                           
  7427                           ; Padding undefined space
  7428  300000                     	org	3145728
  7429  300000  FF                 	db	255
  7430                           
  7431                           ;Config register CONFIG1H @ 0x300001
  7432                           ;	Oscillator Selection bits
  7433                           ;	FOSC = INTIO67, Internal oscillator block
  7434                           ;	4X PLL Enable
  7435                           ;	PLLCFG = OFF, Oscillator used directly
  7436                           ;	Primary clock enable bit
  7437                           ;	PRICLKEN = ON, Primary clock enabled
  7438                           ;	Fail-Safe Clock Monitor Enable bit
  7439                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7440                           ;	Internal/External Oscillator Switchover bit
  7441                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7442  300001                     	org	3145729
  7443  300001  28                 	db	40
  7444                           
  7445                           ;Config register CONFIG2L @ 0x300002
  7446                           ;	Power-up Timer Enable bit
  7447                           ;	PWRTEN = OFF, Power up timer disabled
  7448                           ;	Brown-out Reset Enable bits
  7449                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7450                           ;	Brown Out Reset Voltage bits
  7451                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7452  300002                     	org	3145730
  7453  300002  1F                 	db	31
  7454                           
  7455                           ;Config register CONFIG2H @ 0x300003
  7456                           ;	Watchdog Timer Enable bits
  7457                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7458                           ;	Watchdog Timer Postscale Select bits
  7459                           ;	WDTPS = 32768, 1:32768
  7460  300003                     	org	3145731
  7461  300003  3C                 	db	60
  7462                           
  7463                           ; Padding undefined space
  7464  300004                     	org	3145732
  7465  300004  FF                 	db	255
  7466                           
  7467                           ;Config register CONFIG3H @ 0x300005
  7468                           ;	CCP2 MUX bit
  7469                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7470                           ;	PORTB A/D Enable bit
  7471                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7472                           ;	P3A/CCP3 Mux bit
  7473                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7474                           ;	HFINTOSC Fast Start-up
  7475                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7476                           ;	Timer3 Clock input mux bit
  7477                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7478                           ;	ECCP2 B output mux bit
  7479                           ;	P2BMX = PORTB5, P2B is on RB5
  7480                           ;	MCLR Pin Enable bit
  7481                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7482  300005                     	org	3145733
  7483  300005  BF                 	db	191
  7484                           
  7485                           ;Config register CONFIG4L @ 0x300006
  7486                           ;	Stack Full/Underflow Reset Enable bit
  7487                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7488                           ;	Single-Supply ICSP Enable bit
  7489                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7490                           ;	Extended Instruction Set Enable bit
  7491                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7492                           ;	Background Debug
  7493                           ;	DEBUG = OFF, Disabled
  7494  300006                     	org	3145734
  7495  300006  85                 	db	133
  7496                           
  7497                           ; Padding undefined space
  7498  300007                     	org	3145735
  7499  300007  FF                 	db	255
  7500                           
  7501                           ;Config register CONFIG5L @ 0x300008
  7502                           ;	Code Protection Block 0
  7503                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7504                           ;	Code Protection Block 1
  7505                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7506                           ;	Code Protection Block 2
  7507                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7508                           ;	Code Protection Block 3
  7509                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7510  300008                     	org	3145736
  7511  300008  0F                 	db	15
  7512                           
  7513                           ;Config register CONFIG5H @ 0x300009
  7514                           ;	Boot Block Code Protection bit
  7515                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7516                           ;	Data EEPROM Code Protection bit
  7517                           ;	CPD = OFF, Data EEPROM not code-protected
  7518  300009                     	org	3145737
  7519  300009  C0                 	db	192
  7520                           
  7521                           ;Config register CONFIG6L @ 0x30000A
  7522                           ;	Write Protection Block 0
  7523                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7524                           ;	Write Protection Block 1
  7525                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7526                           ;	Write Protection Block 2
  7527                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7528                           ;	Write Protection Block 3
  7529                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7530  30000A                     	org	3145738
  7531  30000A  0F                 	db	15
  7532                           
  7533                           ;Config register CONFIG6H @ 0x30000B
  7534                           ;	Configuration Register Write Protection bit
  7535                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7536                           ;	Boot Block Write Protection bit
  7537                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7538                           ;	Data EEPROM Write Protection bit
  7539                           ;	WRTD = OFF, Data EEPROM not write-protected
  7540  30000B                     	org	3145739
  7541  30000B  E0                 	db	224
  7542                           
  7543                           ;Config register CONFIG7L @ 0x30000C
  7544                           ;	Table Read Protection Block 0
  7545                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7546                           ;	Table Read Protection Block 1
  7547                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7548                           ;	Table Read Protection Block 2
  7549                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7550                           ;	Table Read Protection Block 3
  7551                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7552  30000C                     	org	3145740
  7553  30000C  0F                 	db	15
  7554                           
  7555                           ;Config register CONFIG7H @ 0x30000D
  7556                           ;	Boot Block Table Read Protection bit
  7557                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7558  30000D                     	org	3145741
  7559  30000D  40                 	db	64
  7560                           tosu	equ	0xFFF
  7561                           tosh	equ	0xFFE
  7562                           tosl	equ	0xFFD
  7563                           stkptr	equ	0xFFC
  7564                           pclatu	equ	0xFFB
  7565                           pclath	equ	0xFFA
  7566                           pcl	equ	0xFF9
  7567                           tblptru	equ	0xFF8
  7568                           tblptrh	equ	0xFF7
  7569                           tblptrl	equ	0xFF6
  7570                           tablat	equ	0xFF5
  7571                           prodh	equ	0xFF4
  7572                           prodl	equ	0xFF3
  7573                           indf0	equ	0xFEF
  7574                           postinc0	equ	0xFEE
  7575                           postdec0	equ	0xFED
  7576                           preinc0	equ	0xFEC
  7577                           plusw0	equ	0xFEB
  7578                           fsr0h	equ	0xFEA
  7579                           fsr0l	equ	0xFE9
  7580                           wreg	equ	0xFE8
  7581                           indf1	equ	0xFE7
  7582                           postinc1	equ	0xFE6
  7583                           postdec1	equ	0xFE5
  7584                           preinc1	equ	0xFE4
  7585                           plusw1	equ	0xFE3
  7586                           fsr1h	equ	0xFE2
  7587                           fsr1l	equ	0xFE1
  7588                           bsr	equ	0xFE0
  7589                           indf2	equ	0xFDF
  7590                           postinc2	equ	0xFDE
  7591                           postdec2	equ	0xFDD
  7592                           preinc2	equ	0xFDC
  7593                           plusw2	equ	0xFDB
  7594                           fsr2h	equ	0xFDA
  7595                           fsr2l	equ	0xFD9
  7596                           status	equ	0xFD8

Data Sizes:
    Strings     886
    Constant    0
    Data        4
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     55     147
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1808_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_46(CODE[3]), STR_45(CODE[10]), STR_44(CODE[3]), STR_43(CODE[17]), 
		 -> STR_42(CODE[21]), STR_41(CODE[32]), STR_40(CODE[31]), STR_39(CODE[21]), 
		 -> STR_38(CODE[8]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_46(CODE[3]), STR_45(CODE[10]), STR_44(CODE[3]), STR_43(CODE[17]), 
		 -> STR_42(CODE[21]), STR_41(CODE[32]), STR_40(CODE[31]), STR_39(CODE[21]), 
		 -> STR_38(CODE[8]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_46(CODE[3]), STR_45(CODE[10]), STR_44(CODE[3]), STR_43(CODE[17]), 
		 -> STR_42(CODE[21]), STR_41(CODE[32]), STR_40(CODE[31]), STR_39(CODE[21]), 
		 -> STR_38(CODE[8]), STR_37(CODE[23]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[16]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[11]), 
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[41]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), 
		 -> STR_22(CODE[29]), STR_21(CODE[29]), STR_20(CODE[50]), STR_19(CODE[33]), 
		 -> STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[64]), STR_15(CODE[19]), 
		 -> STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), STR_11(CODE[15]), 
		 -> STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[52]), 
		 -> STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), STR_3(CODE[22]), 
		 -> STR_2(CODE[37]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->i2_EPWM2_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_userEnter8bit
    _userEnter8bit->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   49008
                                             49 BANK0      6     6      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                             _printf
                      _userEnter8bit
 ---------------------------------------------------------------------------------
 (1) _userEnter8bit                                        6     6      0   23604
                                             43 BANK0      6     6      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   23146
                                             33 BANK0     10     4      6
                       _EUSART2_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   18913
                                             76 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   18416
                                              0 BANK0     27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5925
                                             37 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             14 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6161
                                             37 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              8 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              8 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4174
                                             37 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3895
                                             26 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1506
                                             19 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1006
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                              9 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     340
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     320
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0     428
                                              6 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     428
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _myTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _myTMR1ISR                                           2     2      0     288
                                              4 COMRAM     2     2      0
              i2_EPWM2_LoadDutyValue
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2_EPWM2_LoadDutyValue                               4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _printf
     _EUSART2_Read (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _userEnter8bit
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _printf
       _EUSART2_Read (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _myTMR1ISR *
       i2_EPWM2_LoadDutyValue
       i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109      12        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Oct 09 11:18:14 2020

                  __size_of_EPWM2_LoadDutyValue 0030                          __size_of_userEnter8bit 00EA  
                                            l30 19AA                                              l33 19B8  
                                            l50 199C                                              l27 197C  
                                            l53 1808                                              l82 18B8  
                                            l96 1932                                             l112 1A1A  
                                           l142 1864                                             l411 1A24  
                                           l502 1A4C                                             l414 1A38  
                                           l190 1A5A                                             l158 1A06  
                                           l326 1210                                             l254 006E  
                                           l408 1A2E                                             l505 1A42  
                                           l257 0094                                             l290 04B2  
                                           l267 025A                                             l508 1A56  
                                           l292 04B6                                             l285 0476  
                                           l390 18E2                                             l377 19F6  
                                           l457 16BA                                             l369 167A  
                                           l465 19E2                                             l481 19BC  
                                           l625 0FC2                                             l386 18BA  
                                           l474 1866                                             l490 1A10  
                                           l484 19CE                                             l478 188E  
                                           l638 1126                                             _PR2 000FBB  
        __end_of_EUSART2_SetFramingErrorHandler 1A30         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 1A26                                 _timer1ReloadVal 0090  
                                           _abs 15FC                                             _pad 12E6  
                               _TMR2_Initialize 19F8                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                    _TXSTA2bits 000F72                        __end_of_EPWM2_Initialize 199E  
                         i2_EPWM2_LoadDutyValue 180A                                            ?_abs 001B  
                                          l1222 132A                                            l1312 1632  
                                          l1240 0928                                            l1225 136C  
                                          l1234 15B6                                            l1242 0930  
                                          l1227 13A6                                            l1315 163A  
                                          l1307 1498                                            l1260 0B66  
                                          l1324 17A2                                            l1308 14A0  
                                          l1318 16F6                                            l3200 0EA0  
                                          l1353 17D8                                            l1265 0B9E  
                                          l3210 0EEA                                            l3202 0EA4  
                                          l1290 0E3A                                            l1274 0C3C  
                                          l1339 143C                                            l1347 15FA  
                                          l1363 155C                                            l1267 0BA6  
                                          l3220 0F5A                                            l3212 0EF8  
                                          l3204 0EB0                                            l1189 190A  
                                          l3150 1A0A                                            l3222 0F6C  
                                          l3214 0F0A                                            l3206 0ECE  
                                          l1358 1554                                            l3302 1500  
                                          l1295 0888                                            l3160 13F4  
                                          l3152 13A8                                            l3320 158C  
                                          l3312 155E                                            l3216 0F38  
                                          l3208 0ED6                                            l3224 0F72  
                                          l3240 0FFA                                            l3232 0FC4  
                                          l1288 0DD8                                            l3400 0BE4  
                                          l1369 176A                                            l3146 19BC  
                                          l3162 142A                                            l3154 13BA  
                                          l3170 15D6                                            l3322 1592  
                                          l3314 1570                                            l3226 0F82  
                                          l3218 0F58                                            l3250 1062  
                                          l3242 1008                                            l3234 0FC8  
                                          l3330 08D2                                            l3306 1536  
                                          l3410 0C20                                            l3402 0BEC  
                                          l2700 1846                                            l3148 19CA  
                                          l3156 13CC                                            l3172 15DA  
                                          l3180 17CC                                            l3316 157C  
                                          l3228 0FA2                                            l3252 1070  
                                          l3260 10D6                                            l3244 1028  
                                          l3236 0FD6                                            l3340 0938  
                                          l3332 08F2                                            l3308 1548  
                                          l3412 0C30                                            l3404 0BF6  
                                          l3500 0826                                            l2702 1862  
                                          l2710 1A00                                            l3158 13D6  
                                          l3166 15B8                                            l3174 17A4  
                                          l3270 12F4                                            l3318 1588  
                                          l3190 0E40                                            l3262 10E6  
                                          l3254 109E                                            l3246 1046  
                                          l3238 0FF6                                            l3350 0970  
                                          l3342 094A                                            l3334 0900  
                                          l3326 088A                                            l3430 0CF8  
                                          l3422 0CBC                                            l3406 0BFC  
                                          l3510 0850                                            l2704 199E  
                                          l2720 18A8                                            l2712 1890  
                                          l3168 15C4                                            l3176 17B0  
                                          l3280 134A                                            l3272 1308  
                                          l3192 0E4E                                            l3264 1106  
                                          l3256 10BE                                            l3248 104E  
                                          l3352 0976                                            l3360 0A68  
                                          l3344 0958                                            l3336 0902  
                                          l3328 08AA                                            l3184 1734  
                                          l3440 0DB0                                            l3432 0CFE  
                                          l3424 0CCE                                            l3416 0C70  
                                          l3408 0C04                                            l3512 0876  
                                          l3504 0834                                            l3520 1446  
                                          l3600 00E6                                            l2706 197E  
                                          l2730 16A8                                            l2722 18B4  
                                          l2714 189C                                            l2810 1960  
                                          l3178 17B4                                            l3282 134E  
                                          l3274 1316                                            l3194 0E6E  
                                          l3258 10D0                                            l3290 15FC  
                                          l3362 0A82                                            l3370 0AE2  
                                          l3354 09F8                                            l3346 095E  
                                          l3338 091C                                            l3450 0E12  
                                          l3442 0DCA                                            l3418 0C82  
                                          l3426 0CE2                                            l3434 0D5C  
                                          l3506 0842                                            l3522 1454  
                                          l3610 0130                                            l3602 00F4  
                                          l2732 16B4                                            l2724 167C  
                                          l2660 1A26                                            l2740 1668  
                                          l2716 18A4                                            l2708 19F8  
                                          l2820 1974                                            l2812 1964  
                                          l3284 137A                                            l3276 1322  
                                          l3268 12E6                                            l3196 0E72  
                                          l3188 0E3C                                            l3292 1616  
                                          l3380 0B26                                            l3372 0AF4  
                                          l3364 0AA0                                            l3356 09FE  
                                          l3348 0966                                            l3444 0DE6  
                                          l3436 0D78                                            l3428 0CF2  
                                          l3460 05AA                                            l3524 147A  
                                          l3540 1146                                            l3532 1128  
                                          l3700 04A2                                            l3620 023A  
                                          l3612 0226                                            l3604 0102  
                                          l2670 1A4E                                            l2726 1690  
                                          l2662 1A1C                                            l2742 1674  
                                          l2734 163C                                            l2718 18A6  
                                          l2822 1978                                            l2814 1968  
                                          l2830 191C                                            l2750 19D0  
                                          l3286 138E                                            l3278 1336  
                                          l3198 0E80                                            l3382 0B2E  
                                          l3374 0B02                                            l3366 0ABA  
                                          l3358 0A04                                            l3294 176C  
                                          l3446 0DEC                                            l3438 0D96  
                                          l3390 0B76                                            l3470 0624  
                                          l3462 05AE                                            l3454 0566  
                                          l3518 143E                                            l3526 18E4  
                                          l3550 117E                                            l3542 114E  
                                          l3622 0246                                            l3614 0236  
                                          l3606 0110                                            l2824 17DA  
                                          l2728 169C                                            l2664 1A30  
                                          l2736 1650                                            l2816 196C  
                                          l2808 195C                                            l2832 1920  
                                          l2760 1888                                            l3376 0B08  
                                          l3384 0B3E                                            l3368 0AD4  
                                          l3448 0DFC                                            l3392 0B78  
                                          l3480 06F2                                            l3472 064A  
                                          l3464 05D4                                            l3456 058C  
                                          l3528 18EE                                            l3552 1194  
                                          l3560 11BA                                            l3800 04F4  
                                          l3640 028C                                            l3632 0264  
                                          l3624 024A                                            l3712 04E0  
                                          l3608 0124                                            l2666 1A44  
                                          l2738 165C                                            l2658 1A12  
                                          l2818 1970                                            l2834 1924  
                                          l2826 190C                                            l2762 188C  
                                          l2754 1866                                            l3378 0B1A  
                                          l3298 16BC                                            l3394 0B92  
                                          l3490 07A2                                            l3482 0718  
                                          l3474 0670                                            l3466 0608  
                                          l3458 059A                                            l3802 11D0  
                                          l3554 11A2                                            l3562 11EE  
                                          l3546 1164                                            l3538 1132  
                                          l3706 04BA                                            l3642 0298  
                                          l3634 0270                                            l3626 0260  
                                          l2860 18E0                                            l2852 18BA  
                                          l2668 1A3A                                            l2828 191A  
                                          l2836 192A                                            l2756 1874  
                                          l3396 0BBC                                            l3388 0B68  
                                          l3484 073E                                            l3476 06BA  
                                          l3564 11F0                                            l3556 11B0  
                                          l3548 1176                                            l3708 04CA  
                                          l3660 0326                                            l3652 02C0  
                                          l3644 02A6                                            l3636 0274  
                                          l3580 006C                                            l2854 18C8  
                                          l2838 192E                                            l2758 187A  
                                          l3398 0BC4                                            l3486 0756  
                                          l3494 07DE                                            l3566 1200  
                                          l3670 036E                                            l3662 032A  
                                          l3654 02D2                                            l3646 02BA  
                                          l3638 0288                                            l3590 00B8  
                                          l3582 007C                                            ?_pad 001B  
                                          l2856 18CE                                            l2848 19E4  
                                          l2696 1A58                                            l3496 0804  
                                          l3488 0764                                            l3568 120C  
                                          l3680 03B0                                            l3672 0372  
                                          l3664 033A                                            l3656 02E4  
                                          l3592 00BA                                            l3584 0090  
                                          l3576 0050                                            l2858 18DC  
                                          l2698 183A                                            l3498 0812  
                                          l3690 043C                                            l3682 03D2  
                                          l3674 037E                                            l3666 033C  
                                          l3658 0306                                            l3594 00BC  
                                          l3586 00A8                                            l3578 0060  
                                          l3692 0452                                            l3684 03DA  
                                          l3676 039C                                            l3668 034C  
                                          l3596 00CA                                            l3588 00AC  
                                          l3694 0456                                            l3686 0428  
                                          l3678 03A8                                            l3598 00D8  
                                          l3696 046E                                            l3688 0434  
                                          l3698 0484                                            STR_1 FFD6  
                                          STR_2 FDC8                                            STR_3 FEFD  
                                          STR_4 FC89                                            STR_5 FD75  
                                          STR_6 FFF5                                            STR_7 FD0F  
                                          STR_8 FF95                                            STR_9 FFC2  
                                  _transmitBusy 0097                                            u2000 19F4  
                                          u2001 19EE                                            u2010 18C8  
                                          u2011 18C4                                            u2020 18DC  
                                          u2021 18D8                                            u2006 19F6  
                                          u2200 19CA                                            u3000 00A8  
                                          u2201 19C6                                            u3001 00A4  
                                          u2210 13BA                                            u3010 0124  
                                          u2211 13B6                                            u3011 0120  
                                          u2220 13CC                                            u2300 0E80  
                                          u3020 025A                                            u2221 13C8  
                                          u2301 0E7C                                            u3021 0256  
                                          _LATA 000F89                                            u2230 13F4  
                                          u3030 0284                                            _LATB 000F8A  
                                          u2231 13F0                                            u2311 0EAA  
                                          u3031 0280                                            _LATC 000F8B  
                                          u2240 142A                                            u2320 0ECE  
                                          u2400 109E                                            u3040 02BA  
                                          u2241 1426                                            u2321 0ECA  
                                          u2401 109A                                            u3041 02B6  
                                          u2250 15FA                                            u2330 0EF8  
                                          u2410 10E6                                            u3050 0326  
                                          u2251 15F6                                            u2331 0EF4  
                                          u2411 10E2                                            u3051 0322  
                                          u2260 17CC                                            u2420 12F4  
                                          u2340 0F38                                            u2500 16F2  
                                          u3060 034C                                            u2261 17C8  
                                          u2421 12F0                                            u2341 0F34  
                                          u3061 0348                                            u2430 1316  
                                          u2350 0F82                                            u2270 1764  
                                          u2510 1530                                            u3070 039C  
                                          u2431 1312                                            u2351 0F7E  
                                          u2271 175E                                            u2511 152A  
                                          u3071 0398                                            u2440 136C  
                                          u2360 0FD6                                            u2600 094A  
                                          u2280 1766                                            u2520 1532  
                                          u3080 0484                                            u2441 1368  
                                          u2361 0FD2                                            u2601 0946  
                                          u3081 0480                                            u2450 137A  
                                          u2290 0E4E                                            u2370 1008  
                                          u2610 0958                                            u2530 1548  
                                          u2451 1376                                            u2291 0E4A  
                                          u2371 1004                                            u2611 0954  
                                          u2531 1544                                            u1900 19B8  
                                          u2540 1570                                            u2380 1046  
                                          u2460 1616                                            u2620 0A82  
                                          u2700 0B76                                            u1901 19B4  
                                          u2541 156C                                            u2381 1042  
                                          u2461 1612                                            u2621 0A7E  
                                          u2701 0B72                                            u1910 19E0  
                                          u2390 1070                                            u2630 0AA0  
                                          u2550 08BA                                            u2470 179C  
                                          u2710 0B92                                            u1911 19DA  
                                          u2391 106C                                            u2631 0A9C  
                                          u2551 08B4                                            u2471 1796  
                                          u2711 0B8E                                            u1920 1874  
                                          u2640 0ABA                                            u2560 08BC  
                                          u2480 179E                                            u2800 0D36  
                                          u2720 0BBC                                            u1921 1870  
                                          u2641 0AB6                                            u2721 0BB8  
                                          u1930 1888                                            u2650 0AD4  
                                          u2570 08D2                                            u2490 16F0  
                                          u2810 0D78                                            u2730 0C20  
                                          u1931 1884                                            u2651 0AD0  
                                          u2571 08CE                                            u2491 16EA  
                                          u2811 0D74                                            u2731 0C1C  
                                          u1916 19E2                                            u2660 0AE2  
                                          u2580 0900                                            u2820 0D96  
                                          u2740 0C6A                                            u2900 0670  
                                          u2661 0ADE                                            u2581 08FC  
                                          u2821 0D92                                            u2805 0D24  
                                          u2741 0C64                                            u2901 066C  
                                          u2670 0AF4                                            u2590 091C  
                                          u2830 0DB0                                            u2750 0C6C  
                                          u2910 0718                                            u2671 0AF0  
                                          u2591 0918                                            u2831 0DAC  
                                          u2911 0714                                            u2680 0B02  
                                          u2840 0DCA                                            u2760 0C82  
                                          u2920 073E                                            u2681 0AFE  
                                          u2841 0DC6                                            u2761 0C7E  
                                          u2921 073A                                            u1970 191A  
                                          u2690 0B1A                                            u2850 0DD8  
                                          u2770 0CB6                                            u2930 0804  
                                          u1971 1916                                            u2691 0B16  
                                          u2851 0DD4                                            u2771 0CB0  
                                          u2931 0800                                            u2860 0DE6  
                                          u2780 0CB8                                            u2940 1498  
                                          u2861 0DE2                                            u2941 1494  
                                          u2790 0CCE                                            u2870 058C  
                                          u2950 1146                                            u2791 0CCA  
                                          u2871 0588                                            u2951 1142  
                                          u2880 05D4                                            u2960 1160  
                                          u2881 05D0                                            u2961 115C  
                                          u2890 064A                                            u2970 1200  
                                          u2891 0646                                            u2971 11FC  
                                          u2980 007C                                            u2981 0078  
                                          u2990 0090                                            u2991 008C  
                                          i2l53 1838                                            i2l96 195A  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 19BA  
                                          abs@a 001B                                            _dbuf 0099  
                                          _ctoa 155E                                            _main 0050  
                                          _dtoa 088A                                   ?_EUSART1_Read 0001  
                                          _prec 0051                                   ?_EUSART2_Read 0001  
                                          _nout 0080                                            pad@i 0022  
                                          pad@p 001F                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0024  
                                          fsr2l 000FD9                                            btemp 0057  
                                          _xtoa 0B68                                            prodl 000FF3  
                                          start 004C                      ??_TMR1_SetInterruptHandler 000B  
                                  ___param_bank 000000                                           ??_abs 001D  
                                         ??_pad 0021                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 19BA                                 __end_of___aodiv 0FC4  
                                         ?_ctoa 0026                                           ?_main 0001  
                                         ?_dtoa 0026                                 __end_of___aomod 1128  
                                         STR_10 FD0F                                           STR_11 FF86  
                                         STR_12 FFEE                                           STR_20 FD43  
                                         STR_13 FF28                                           STR_21 FE94  
                                         STR_30 FD40                                           STR_14 FECE  
                                         STR_22 FEB1                                           STR_23 FD0F  
                                         STR_31 FFB7                                           STR_15 FF52  
                                         STR_32 FD40                                           STR_24 FFDE  
                                         STR_40 FE75                                           STR_16 FCCF  
                                         STR_25 FD41                                           STR_33 FFFA  
                                         STR_41 FE55                                           STR_17 FE12  
                                         STR_26 FD41                                           STR_34 FF76  
                                         STR_42 FF13                                           STR_18 FDED  
                                         STR_35 FFA1                                           STR_43 FF65  
                                         STR_19 FE34                                           STR_27 FD9F  
                                         STR_44 FFFA                                           STR_28 FFFD  
                                         STR_36 FFAC                                           STR_29 FFFA  
                                         STR_45 FFCC                                           STR_37 FEE6  
                                         STR_46 FD40                                           STR_38 FFE6  
                                         STR_39 FF3D                                           ?_xtoa 0026  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                                         i2l115 1A60                                           i2l109 1732  
                                         i2l312 12E4                                           i2l199 0040  
                                  vfpfcnvrt@fmt 00BB                                    vfpfcnvrt@llu 00CB  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                 _transmitStart 0098                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                              __end_of_TMR1_ISR 1734                                           _flags 0053  
                                         _fputc 13A8                                   _userEnter8bit 1128  
                               __end_of_isalpha 16F8                                           _fputs 15B8  
                                         pad@fp 001B                                           _width 004F  
                                         ctoa@c 0028                                           _putch 1A08  
                                         ctoa@w 0029                                           main@i 00EE  
                                         dtoa@d 0028                                           dtoa@i 0048  
                                         dtoa@n 0040                                           dtoa@p 003A  
                                         dtoa@s 003E                                           dtoa@w 003C  
                               __end_of_islower 176C                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 18BA                                 __end_of_isupper 17A4  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0009                                  ??_EUSART2_Read 0009  
                                         ttemp5 0058                                           ttemp6 005B  
                                         ttemp7 005F                                           status 000FD8  
                                         wtemp8 0058                                           xtoa@c 004B  
                                         xtoa@d 0028                                           xtoa@i 0049  
                                         xtoa@n 0041                                           xtoa@p 003D  
                                         xtoa@w 003F                                           xtoa@x 0030  
                               __end_of_toupper 155E              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 190C                                    _toupper$1983 0015  
                               __initialization 14A2                                    __end_of_ctoa 15B8  
                    __end_of_EUSART1_Initialize 16BC                                    __end_of_main 0566  
                                  __end_of_dtoa 0B68                                    __end_of_xtoa 0E3C  
                       __end_of_TMR2_Initialize 1A08                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 0029                                          ??_main 00EA  
                                        ??_dtoa 0030                                          ??_xtoa 0031  
                                 __activetblptr 000003                     _EUSART2_DefaultErrorHandler 000000  
                        ?i2_EPWM2_LoadDutyValue 0001                                  ?_userEnter8bit 0001  
                    __end_of_EUSART2_Initialize 167C                                          ?_fputc 000B  
                                        ?_fputs 0014                                          _CCPR2H 000F68  
                                        _CCPR2L 000F67                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                       TMR1_WriteTimer@timerVal 0009                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2800 12E2                                          i2l2910 0012  
                                        i2l2680 180A                                          i2l2840 16F8  
                                        i2l2912 0020                                          i2l2690 194C  
                                        i2l2682 1934                                          i2l2770 1226  
                                        i2l2842 16FA                                          i2l2914 002E  
                                        i2l2684 1942                                          i2l2692 1952  
                                        i2l3804 12C0                                          i2l2780 1254  
                                        i2l2772 1232                                          i2l2844 1706  
                                        i2l2916 003C                                          i2l2694 1956  
                                        i2l2686 1944                                          i2l2790 1298  
                                        i2l2782 1260                                          i2l2774 1238  
                                        i2l2766 1212                                          i2l2846 171A  
                                        i2l2688 1948                                          i2l2792 12A2  
                                        i2l2784 1268                                          i2l2776 1240  
                                        i2l2786 127C                                          i2l2778 1250  
                                        i2l2788 128C                                          i2l2796 12AA  
                                        i2l2798 12D6                                          _RCREG1 000FAE  
                                        _RCREG2 000F74                                          _RCSTA1 000FAB  
                                        _RCSTA2 000F71                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72            __end_of_TMR1_DefaultInterruptHandler 1A62  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 1A60  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 004D  
                                     ??___aodiv 0019                                       ??___aomod 0019  
                      ?_EUSART1_SetErrorHandler 0009                                          _letter 00F2  
                                        clear_0 14D8                                          clear_1 14E4  
                                        clear_2 14F0                     _EUSART2_FramingErrorHandler 008C  
                                        _printf 18E4                                          pad@buf 001D  
              ??_EUSART1_SetOverrunErrorHandler 000B                 ?_EUSART1_SetOverrunErrorHandler 0009  
                                        ctoa@fp 0026                                          dtoa@fp 0026  
                                        _strlen 17A4                                          fputc@c 000B  
                                        fputs@c 0018                                          fputs@i 0019  
                                  __pdataCOMRAM 0056                                          fputs@s 0014  
                                     ??_isalpha 000B                                       ??_islower 000B  
                                  __mediumconst FC88                                          tblptrh 000FF7  
                                     ??_isupper 000B                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 14A2  
                               ??_EUSART1_Write 0009                             _EPWM2_LoadDutyValue 17DA  
      TMR1_SetInterruptHandler@InterruptHandler 0009                         __end_of_TMR1_WriteTimer 1934  
                                        xtoa@fp 0026                                       ??_toupper 0011  
                 __size_of_INTERRUPT_Initialize 0004                                ?_TMR1_Initialize 0001  
                  __size_of_EUSART2_is_rx_ready 0014                               _SYSTEM_Initialize 195C  
                                    __accesstop 0060                         __end_of__initialization 14F6  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 0009  
                                  __pidataBANK0 1A5C                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 143E  
                                 __end_of_fputs 15FC                                   __end_of_putch 1A12  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 1890  
                          __end_of_EUSART2_Read 18E4                        ?_EUSART2_SetErrorHandler 0009  
                         _bitPeriodInTMR1Counts 00F0                                 ??_userEnter8bit 00E4  
                             ?_EPWM2_Initialize 0001                                         ??_fputc 000F  
                     __end_of_SYSTEM_Initialize 197E                                         ??_fputs 0018  
                            __size_of_myTMR1ISR 00D4                              ??_EPWM2_Initialize 0009  
                                       ??_putch 000A                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                ??_EUSART2_SetFramingErrorHandler 000B  
               ?_EUSART2_SetFramingErrorHandler 0009                 __end_of_EUSART1_SetErrorHandler 1A58  
                                 myTMR1ISR@mask 0056                           ??_EPWM2_LoadDutyValue 000B  
                                    ??_TMR1_ISR 0007                                         _CCP2CON 000F66  
                                       _ECCP2AS 000F64                                         ?_printf 00DA  
                                       ?_strlen 0009          __end_of_EUSART1_SetFramingErrorHandler 1A4E  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1A44  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0324  
                                       _OSCTUNE 000F9B                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _SPBRGH2 000F76  
                         myTMR1ISR@tmr1ISRstate 0094                                ?_TMR1_WriteTimer 0009  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 0E3C                                         ___aomod 0FC4  
                             __end_of_myTMR1ISR 12E6                                       ?_vfprintf 00D4  
                           _EUSART1_is_rx_ready 19D0                                         __pcinit 14A2  
               __end_of_EUSART2_SetErrorHandler 1A3A                                         __ramtop 1000  
                                       __ptext0 0050                                         __ptext1 1128  
                                       __ptext2 18E4                                         __ptext3 143E  
                                       __ptext4 0566                                         __ptext5 0B68  
                                       __ptext6 1500                                         __ptext7 1734  
                                       __ptext8 176C                                         __ptext9 16BC  
                       ??i2_EPWM2_LoadDutyValue 0003                                 __size_of_printf 0028  
                ??_TMR1_DefaultInterruptHandler 0001                                 __size_of_strlen 0036  
                                     _T1CONbits 000FCD              _EUSART2_DefaultOverrunErrorHandler 000000  
                         _OSCILLATOR_Initialize 199E                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 16BC               __size_of_TMR1_SetInterruptHandler 000A  
                            _EUSART1_Initialize 167C                                         _islower 1734  
                      ??_PIN_MANAGER_Initialize 0009                       ?_TMR1_SetInterruptHandler 0009  
                                       _isupper 176C                                         main@cmd 00ED  
                    __size_of_SYSTEM_Initialize 0022                                         main@ind 00EF  
                                       _toupper 1500                            end_of_initialization 14F6  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000D                     _EUSART1_OverrunErrorHandler 0084  
                                       fputs@fp 0016                              _EUSART2_Initialize 163C  
                             __end_of_vfpfcnvrt 088A                              userEnter8bit@digit 00E8  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                           __size_of_EUSART2_Read 002A  
                                    ??_vfprintf 004D                            ??_EUSART1_Initialize 000B  
                           ?_EUSART2_Initialize 0001                                         strlen@a 000B  
                           _EUSART2_is_rx_ready 19E4                                         strlen@s 0009  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0009  
                         ??_EUSART1_is_rx_ready 0009                            ??_EUSART2_Initialize 000B  
                          ?_EUSART2_is_rx_ready 0001                                    _EUSART1_Read 1866  
                                  _EUSART2_Read 18BA                    __end_of_INTERRUPT_Initialize 1A5C  
                     i2TMR1_WriteTimer@timerVal 0001                                     vfpfcnvrt@ap 00BD  
                                   vfpfcnvrt@fp 00B9                                     vfpfcnvrt@ll 00C3  
                                 __pidataCOMRAM 1A62                               __size_of_TMR1_ISR 003C  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 190C  
                                __end_of_strlen 17DA                             start_initialization 14A2  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 163C  
                                   __end_of_pad 13A8                                     putch@txData 000A  
                         ??_EUSART2_is_rx_ready 0009                           __end_of_EUSART1_Write 19D0  
              __size_of_EUSART2_SetErrorHandler 000A          __end_of_EUSART2_SetOverrunErrorHandler 1A26  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 1A1C  
                     __size_of_EPWM2_Initialize 0020                        __size_of_TMR1_Initialize 002A  
                                   vfprintf@fmt 00D6                                     __pdataBANK0 00F0  
                                      ??_printf 004F                                        ??_strlen 000B  
                i2EPWM2_LoadDutyValue@dutyValue 0001                                     __pbssCOMRAM 004F  
                                 __pcstackBANK0 00B9                                ___aodiv@dividend 0009  
                      __size_of_TMR2_Initialize 0010                           __end_of_userEnter8bit 1212  
              ??_EUSART1_SetFramingErrorHandler 000B                 ?_EUSART1_SetFramingErrorHandler 0009  
                   __end_of_EPWM2_LoadDutyValue 180A                          _PIN_MANAGER_Initialize 183A  
                                     _dtoa$1893 0038                                _transmitIRBuffer 0060  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 1A1C  
                                 __pmediumconst FC88                                        ?___aodiv 0009  
                                      ?___aomod 0009                                ___aodiv@quotient 001B  
                  ??_INTERRUPT_InterruptManager 0007                               __size_of_vfprintf 0064  
                                     _myTMR1ISR 1212                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70                  __size_ofi2_EPWM2_LoadDutyValue 0030  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0009  
                 __end_ofi2_EPWM2_LoadDutyValue 183A                            _EUSART1_ErrorHandler 0082  
                                      ?_islower 0009                                        ?_isupper 0009  
                       _EUSART1_SetErrorHandler 1A4E                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000F  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 1A58  
       EUSART1_SetErrorHandler@interruptHandler 0009         EUSART2_SetErrorHandler@interruptHandler 0009  
                                      _PIE1bits 000F9D                        __size_of_TMR1_WriteTimer 0028  
                                      i2u206_40 0020                                        i2u206_41 001C  
                                      i2u207_40 002E                                        i2u207_41 002A  
           __size_of_INTERRUPT_InterruptManager 0044                                        i2u208_40 003C  
                                      i2u208_41 0038                                        _PIR1bits 000F9E  
                                      i2u194_40 1222                                        i2u194_41 121E  
                                      i2u195_40 1250                                        i2u195_41 124C  
                                      i2u196_40 127C                                        i2u196_41 1278  
                                      i2u189_40 1942                                        i2u189_41 193E  
                                      _PIR3bits 000FA4                                        i2u198_40 171A  
                                      i2u198_41 1716                                        i2u199_48 1720  
                                      i2u199_49 1732                                        _RCONbits 000FD0  
                                      _TMR1_ISR 16F8                                 _recieveIRBuffer 0100  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 0566  
                                     _xtoa$1903 0039                                       _xtoa$1904 003B  
                             ??_TMR1_Initialize 000B                                      ?_myTMR1ISR 0001  
                                     main@cksum 00EC                                      vfpfcnvrt@c 00D3  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 1A30                               ??_TMR2_Initialize 0009  
                   _EUSART2_OverrunErrorHandler 008A                                        __Hrparam 0000  
                              _EPWM2_Initialize 197E                               i2_TMR1_WriteTimer 1934  
                                    vfprintf@ap 00D8                                        __Lrparam 0000  
                                    vfprintf@fp 00D4                              ?i2_TMR1_WriteTimer 0001  
                       ??_OSCILLATOR_Initialize 0009                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 00B9                                 ___aodiv@divisor 0011  
                      _TMR1_SetInterruptHandler 1A12                                 ___aodiv@counter 0019  
                           ??i2_TMR1_WriteTimer 0003                           _TMR1_InterruptHandler 008E  
                     ??_EUSART1_SetErrorHandler 000B                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 19E4                            _EUSART2_ErrorHandler 0088  
                              __size_of_isalpha 003C                                __size_of_islower 0038  
                                      __ptext10 088A                                        __ptext11 15FC  
                                      __ptext20 19BA                                        __ptext12 0FC4  
                                      __ptext21 19D0                                        __ptext13 0E3C  
                                    _T1GCONbits 000FCC                                        __ptext30 1A58  
                                      __ptext22 1866                                        __ptext14 155E  
                                      __ptext31 163C                                        __ptext23 190C  
                                      __ptext15 12E6                                        __ptext40 19E4  
                                      __ptext32 1A1C                                        __ptext24 195C  
                                      __ptext16 17A4                                        __ptext41 18BA  
                                      __ptext33 1A26                                        __ptext25 19F8  
                                      __ptext17 15B8                                        __ptext42 17DA  
                                      __ptext34 1A30                                        __ptext26 1890  
                                      __ptext18 13A8                                        __ptext35 167C  
                                      __ptext27 1A12                                        __ptext19 1A08  
                                      __ptext44 16F8                                        __ptext36 1A3A  
                                      __ptext28 183A                                        __ptext45 1A60  
                                      __ptext37 1A44                                        __ptext29 199E  
                                      __ptext46 1212                                        __ptext38 1A4E  
                                      __ptext47 1934                                        __ptext39 197E  
                                      __ptext48 180A                                        __ptext49 0000  
                              __size_of_isupper 0038                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 0040                                   __size_of_ctoa 005A  
                                 __size_of_main 0516                                   __size_of_dtoa 02DE  
            _EUSART2_DefaultFramingErrorHandler 000000                                   __size_of_xtoa 02D4  
                                   _receiveBusy 0096                       __end_ofi2_TMR1_WriteTimer 195C  
                              userEnter8bit@cmd 00E6  EUSART1_SetOverrunErrorHandler@interruptHandler 0009  
EUSART2_SetOverrunErrorHandler@interruptHandler 0009                                userEnter8bit@num 00E9  
                                      int$flags 0057                                        _vfprintf 143E  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00DA                               ??_TMR1_WriteTimer 000B  
                   _EUSART1_FramingErrorHandler 0086                                ___aomod@dividend 0009  
                                   ??_myTMR1ISR 0005                ??_EUSART2_SetOverrunErrorHandler 000B  
               ?_EUSART2_SetOverrunErrorHandler 0009                               _receiveNewMessage 0095  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 19F8  
                                      isalpha@c 0009                          ??_INTERRUPT_Initialize 0009  
                     ??_EUSART2_SetErrorHandler 000B                                        intlevel2 0000  
                                      islower@c 0009                    EPWM2_LoadDutyValue@dutyValue 0009  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1A44  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1A3A  
                                    _RCSTA1bits 000FAB                                      _RCSTA2bits 000F71  
                                      isupper@c 0009                                        printf@ap 00E2  
EUSART1_SetFramingErrorHandler@interruptHandler 0009  EUSART2_SetFramingErrorHandler@interruptHandler 0009  
                               ___aomod@divisor 0011                                     ??_vfpfcnvrt 00BF  
                               ___aomod@counter 0019                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0092                              _newCharacterToSend 0055  
                                      toupper@c 000F                                  userEnter8bit@i 00E7  
                                  ___aodiv@sign 001A                  __end_of_PIN_MANAGER_Initialize 1866  
                            _eusart2RxLastError 0093                      __size_ofi2_TMR1_WriteTimer 0028  
                                  ___aomod@sign 001A                                 _TMR1_Initialize 1890  
                                  fp__myTMR1ISR 0000  
