

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Oct 09 10:10:02 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 05/05/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F26K22 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   107  0000                     
   108 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   109  0000                     
   110 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   111  0000                     
   112 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   113  0000                     
   114 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   115  0000                     
   116 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   117  0000                     
   118                           	psect	idataCOMRAM
   119  00179A                     __pidataCOMRAM:
   120                           	callstack 0
   121                           
   122                           ;initializer for myTMR1ISR@mask
   123  00179A  01                 	db	1
   124                           
   125                           	psect	idataBANK0
   126  001794                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for _bitPeriodInTMR1Counts
   130  001794  3415               	dw	13333
   131                           
   132                           ;initializer for _letter
   133  001796  30                 	db	48
   134  0000                     _ANSELA	set	3896
   135  0000                     _ANSELB	set	3897
   136  0000                     _ANSELC	set	3898
   137  0000                     _CCPTMRS0bits	set	3913
   138  0000                     _TMR1	set	4046
   139  0000                     _TXREG1	set	4013
   140  0000                     _RCREG1	set	4014
   141  0000                     _RCSTA1bits	set	4011
   142  0000                     _TXSTA1bits	set	4012
   143  0000                     _SPBRGH1	set	4016
   144  0000                     _SPBRG1	set	4015
   145  0000                     _TXSTA1	set	4012
   146  0000                     _RCSTA1	set	4011
   147  0000                     _BAUDCON1	set	4024
   148  0000                     _TXREG2	set	3955
   149  0000                     _RCREG2	set	3956
   150  0000                     _TXSTA2bits	set	3954
   151  0000                     _SPBRGH2	set	3958
   152  0000                     _SPBRG2	set	3957
   153  0000                     _TXSTA2	set	3954
   154  0000                     _RCSTA2	set	3953
   155  0000                     _BAUDCON2	set	3952
   156  0000                     _RCSTA2bits	set	3953
   157  0000                     _PIR3bits	set	4004
   158  0000                     _RCONbits	set	4048
   159  0000                     _T2CONbits	set	4026
   160  0000                     _T2CON	set	4026
   161  0000                     _TMR2	set	4028
   162  0000                     _PR2	set	4027
   163  0000                     _INTCONbits	set	4082
   164  0000                     _INTCON2bits	set	4081
   165  0000                     _WPUB	set	3937
   166  0000                     _TRISC	set	3988
   167  0000                     _TRISB	set	3987
   168  0000                     _TRISA	set	3986
   169  0000                     _LATC	set	3979
   170  0000                     _LATB	set	3978
   171  0000                     _LATA	set	3977
   172  0000                     _T1GCONbits	set	4044
   173  0000                     _T1CONbits	set	4045
   174  0000                     _T1CON	set	4045
   175  0000                     _PIE1bits	set	3997
   176  0000                     _PIR1bits	set	3998
   177  0000                     _TMR1L	set	4046
   178  0000                     _TMR1H	set	4047
   179  0000                     _T1GCON	set	4044
   180  0000                     _CCPR2L	set	3943
   181  0000                     _CCPR2H	set	3944
   182  0000                     _PSTR2CON	set	3939
   183  0000                     _PWM2CON	set	3941
   184  0000                     _ECCP2AS	set	3940
   185  0000                     _CCP2CON	set	3942
   186  0000                     _OSCTUNE	set	3995
   187  0000                     _OSCCON2	set	4050
   188  0000                     _OSCCON	set	4051
   189  0000                     _PLLRDY	set	32407
   190                           
   191                           	psect	mediumconst
   192  00FDA4                     __pmediumconst:
   193                           	callstack 0
   194  00FDA4  00                 	db	0
   195  00FDA5                     STR_4:
   196  00FDA5  49                 	db	73	;'I'
   197  00FDA6  6E                 	db	110	;'n'
   198  00FDA7  73                 	db	115	;'s'
   199  00FDA8  74                 	db	116	;'t'
   200  00FDA9  61                 	db	97	;'a'
   201  00FDAA  6C                 	db	108	;'l'
   202  00FDAB  6C                 	db	108	;'l'
   203  00FDAC  20                 	db	32
   204  00FDAD  61                 	db	97	;'a'
   205  00FDAE  20                 	db	32
   206  00FDAF  6A                 	db	106	;'j'
   207  00FDB0  75                 	db	117	;'u'
   208  00FDB1  6D                 	db	109	;'m'
   209  00FDB2  70                 	db	112	;'p'
   210  00FDB3  65                 	db	101	;'e'
   211  00FDB4  72                 	db	114	;'r'
   212  00FDB5  20                 	db	32
   213  00FDB6  77                 	db	119	;'w'
   214  00FDB7  69                 	db	105	;'i'
   215  00FDB8  72                 	db	114	;'r'
   216  00FDB9  65                 	db	101	;'e'
   217  00FDBA  20                 	db	32
   218  00FDBB  66                 	db	102	;'f'
   219  00FDBC  72                 	db	114	;'r'
   220  00FDBD  6F                 	db	111	;'o'
   221  00FDBE  6D                 	db	109	;'m'
   222  00FDBF  20                 	db	32
   223  00FDC0  52                 	db	82	;'R'
   224  00FDC1  43                 	db	67	;'C'
   225  00FDC2  30                 	db	48	;'0'
   226  00FDC3  20                 	db	32
   227  00FDC4  74                 	db	116	;'t'
   228  00FDC5  6F                 	db	111	;'o'
   229  00FDC6  20                 	db	32
   230  00FDC7  52                 	db	82	;'R'
   231  00FDC8  42                 	db	66	;'B'
   232  00FDC9  37                 	db	55	;'7'
   233  00FDCA  20                 	db	32
   234  00FDCB  4F                 	db	79	;'O'
   235  00FDCC  4E                 	db	78	;'N'
   236  00FDCD  4C                 	db	76	;'L'
   237  00FDCE  59                 	db	89	;'Y'
   238  00FDCF  20                 	db	32
   239  00FDD0  41                 	db	65	;'A'
   240  00FDD1  46                 	db	70	;'F'
   241  00FDD2  54                 	db	84	;'T'
   242  00FDD3  45                 	db	69	;'E'
   243  00FDD4  52                 	db	82	;'R'
   244  00FDD5  20                 	db	32
   245  00FDD6  75                 	db	117	;'u'
   246  00FDD7  6E                 	db	110	;'n'
   247  00FDD8  70                 	db	112	;'p'
   248  00FDD9  6C                 	db	108	;'l'
   249  00FDDA  75                 	db	117	;'u'
   250  00FDDB  67                 	db	103	;'g'
   251  00FDDC  67                 	db	103	;'g'
   252  00FDDD  69                 	db	105	;'i'
   253  00FDDE  6E                 	db	110	;'n'
   254  00FDDF  67                 	db	103	;'g'
   255  00FDE0  20                 	db	32
   256  00FDE1  50                 	db	80	;'P'
   257  00FDE2  49                 	db	73	;'I'
   258  00FDE3  43                 	db	67	;'C'
   259  00FDE4  4B                 	db	75	;'K'
   260  00FDE5  69                 	db	105	;'i'
   261  00FDE6  74                 	db	116	;'t'
   262  00FDE7  33                 	db	51	;'3'
   263  00FDE8  0D                 	db	13
   264  00FDE9  0A                 	db	10
   265  00FDEA  00                 	db	0
   266  00FDEB                     STR_7:
   267  00FDEB  2D                 	db	45
   268  00FDEC  2D                 	db	45
   269  00FDED  2D                 	db	45
   270  00FDEE  2D                 	db	45
   271  00FDEF  2D                 	db	45
   272  00FDF0  2D                 	db	45
   273  00FDF1  2D                 	db	45
   274  00FDF2  2D                 	db	45
   275  00FDF3  2D                 	db	45
   276  00FDF4  2D                 	db	45
   277  00FDF5  2D                 	db	45
   278  00FDF6  2D                 	db	45
   279  00FDF7  2D                 	db	45
   280  00FDF8  2D                 	db	45
   281  00FDF9  2D                 	db	45
   282  00FDFA  2D                 	db	45
   283  00FDFB  2D                 	db	45
   284  00FDFC  2D                 	db	45
   285  00FDFD  2D                 	db	45
   286  00FDFE  2D                 	db	45
   287  00FDFF  2D                 	db	45
   288  00FE00  2D                 	db	45
   289  00FE01  2D                 	db	45
   290  00FE02  2D                 	db	45
   291  00FE03  2D                 	db	45
   292  00FE04  2D                 	db	45
   293  00FE05  2D                 	db	45
   294  00FE06  2D                 	db	45
   295  00FE07  2D                 	db	45
   296  00FE08  2D                 	db	45
   297  00FE09  2D                 	db	45
   298  00FE0A  2D                 	db	45
   299  00FE0B  2D                 	db	45
   300  00FE0C  2D                 	db	45
   301  00FE0D  2D                 	db	45
   302  00FE0E  2D                 	db	45
   303  00FE0F  2D                 	db	45
   304  00FE10  2D                 	db	45
   305  00FE11  2D                 	db	45
   306  00FE12  2D                 	db	45
   307  00FE13  2D                 	db	45
   308  00FE14  2D                 	db	45
   309  00FE15  2D                 	db	45
   310  00FE16  2D                 	db	45
   311  00FE17  2D                 	db	45
   312  00FE18  2D                 	db	45
   313  00FE19  2D                 	db	45
   314  00FE1A  2D                 	db	45
   315  00FE1B  2D                 	db	45
   316  00FE1C  0D                 	db	13
   317  00FE1D  0A                 	db	10
   318  00FE1E  00                 	db	0
   319  00FE1F                     STR_18:
   320  00FE1F  70                 	db	112	;'p'
   321  00FE20  2F                 	db	47
   322  00FE21  50                 	db	80	;'P'
   323  00FE22  3A                 	db	58	;':'
   324  00FE23  20                 	db	32
   325  00FE24  64                 	db	100	;'d'
   326  00FE25  65                 	db	101	;'e'
   327  00FE26  63                 	db	99	;'c'
   328  00FE27  72                 	db	114	;'r'
   329  00FE28  65                 	db	101	;'e'
   330  00FE29  61                 	db	97	;'a'
   331  00FE2A  73                 	db	115	;'s'
   332  00FE2B  65                 	db	101	;'e'
   333  00FE2C  2F                 	db	47
   334  00FE2D  69                 	db	105	;'i'
   335  00FE2E  6E                 	db	110	;'n'
   336  00FE2F  63                 	db	99	;'c'
   337  00FE30  72                 	db	114	;'r'
   338  00FE31  65                 	db	101	;'e'
   339  00FE32  61                 	db	97	;'a'
   340  00FE33  73                 	db	115	;'s'
   341  00FE34  65                 	db	101	;'e'
   342  00FE35  20                 	db	32
   343  00FE36  50                 	db	80	;'P'
   344  00FE37  57                 	db	87	;'W'
   345  00FE38  4D                 	db	77	;'M'
   346  00FE39  20                 	db	32
   347  00FE3A  70                 	db	112	;'p'
   348  00FE3B  65                 	db	101	;'e'
   349  00FE3C  72                 	db	114	;'r'
   350  00FE3D  69                 	db	105	;'i'
   351  00FE3E  6F                 	db	111	;'o'
   352  00FE3F  64                 	db	100	;'d'
   353  00FE40  20                 	db	32
   354  00FE41  62                 	db	98	;'b'
   355  00FE42  79                 	db	121	;'y'
   356  00FE43  20                 	db	32
   357  00FE44  31                 	db	49	;'1'
   358  00FE45  75                 	db	117	;'u'
   359  00FE46  73                 	db	115	;'s'
   360  00FE47  0D                 	db	13
   361  00FE48  0A                 	db	10
   362  00FE49  00                 	db	0
   363  00FE4A                     STR_5:
   364  00FE4A  49                 	db	73	;'I'
   365  00FE4B  6E                 	db	110	;'n'
   366  00FE4C  73                 	db	115	;'s'
   367  00FE4D  74                 	db	116	;'t'
   368  00FE4E  61                 	db	97	;'a'
   369  00FE4F  6C                 	db	108	;'l'
   370  00FE50  6C                 	db	108	;'l'
   371  00FE51  20                 	db	32
   372  00FE52  61                 	db	97	;'a'
   373  00FE53  20                 	db	32
   374  00FE54  6A                 	db	106	;'j'
   375  00FE55  75                 	db	117	;'u'
   376  00FE56  6D                 	db	109	;'m'
   377  00FE57  70                 	db	112	;'p'
   378  00FE58  65                 	db	101	;'e'
   379  00FE59  72                 	db	114	;'r'
   380  00FE5A  20                 	db	32
   381  00FE5B  6F                 	db	111	;'o'
   382  00FE5C  76                 	db	118	;'v'
   383  00FE5D  65                 	db	101	;'e'
   384  00FE5E  72                 	db	114	;'r'
   385  00FE5F  20                 	db	32
   386  00FE60  49                 	db	73	;'I'
   387  00FE61  52                 	db	82	;'R'
   388  00FE62  5F                 	db	95	;'_'
   389  00FE63  54                 	db	84	;'T'
   390  00FE64  58                 	db	88	;'X'
   391  00FE65  20                 	db	32
   392  00FE66  68                 	db	104	;'h'
   393  00FE67  65                 	db	101	;'e'
   394  00FE68  61                 	db	97	;'a'
   395  00FE69  64                 	db	100	;'d'
   396  00FE6A  65                 	db	101	;'e'
   397  00FE6B  72                 	db	114	;'r'
   398  00FE6C  20                 	db	32
   399  00FE6D  70                 	db	112	;'p'
   400  00FE6E  69                 	db	105	;'i'
   401  00FE6F  6E                 	db	110	;'n'
   402  00FE70  73                 	db	115	;'s'
   403  00FE71  0D                 	db	13
   404  00FE72  0A                 	db	10
   405  00FE73  00                 	db	0
   406  00FE74                     STR_2:
   407  00FE74  52                 	db	82	;'R'
   408  00FE75  65                 	db	101	;'e'
   409  00FE76  63                 	db	99	;'c'
   410  00FE77  65                 	db	101	;'e'
   411  00FE78  69                 	db	105	;'i'
   412  00FE79  76                 	db	118	;'v'
   413  00FE7A  65                 	db	101	;'e'
   414  00FE7B  20                 	db	32
   415  00FE7C  61                 	db	97	;'a'
   416  00FE7D  6E                 	db	110	;'n'
   417  00FE7E  64                 	db	100	;'d'
   418  00FE7F  20                 	db	32
   419  00FE80  64                 	db	100	;'d'
   420  00FE81  65                 	db	101	;'e'
   421  00FE82  63                 	db	99	;'c'
   422  00FE83  6F                 	db	111	;'o'
   423  00FE84  64                 	db	100	;'d'
   424  00FE85  65                 	db	101	;'e'
   425  00FE86  20                 	db	32
   426  00FE87  61                 	db	97	;'a'
   427  00FE88  6E                 	db	110	;'n'
   428  00FE89  20                 	db	32
   429  00FE8A  49                 	db	73	;'I'
   430  00FE8B  52                 	db	82	;'R'
   431  00FE8C  20                 	db	32
   432  00FE8D  63                 	db	99	;'c'
   433  00FE8E  68                 	db	104	;'h'
   434  00FE8F  61                 	db	97	;'a'
   435  00FE90  72                 	db	114	;'r'
   436  00FE91  61                 	db	97	;'a'
   437  00FE92  63                 	db	99	;'c'
   438  00FE93  74                 	db	116	;'t'
   439  00FE94  65                 	db	101	;'e'
   440  00FE95  72                 	db	114	;'r'
   441  00FE96  0D                 	db	13
   442  00FE97  0A                 	db	10
   443  00FE98  00                 	db	0
   444  00FE99                     STR_16:
   445  00FE99  52                 	db	82	;'R'
   446  00FE9A  3A                 	db	58	;':'
   447  00FE9B  20                 	db	32
   448  00FE9C  75                 	db	117	;'u'
   449  00FE9D  73                 	db	115	;'s'
   450  00FE9E  65                 	db	101	;'e'
   451  00FE9F  20                 	db	32
   452  00FEA0  45                 	db	69	;'E'
   453  00FEA1  55                 	db	85	;'U'
   454  00FEA2  53                 	db	83	;'S'
   455  00FEA3  41                 	db	65	;'A'
   456  00FEA4  52                 	db	82	;'R'
   457  00FEA5  54                 	db	84	;'T'
   458  00FEA6  32                 	db	50	;'2'
   459  00FEA7  20                 	db	32
   460  00FEA8  74                 	db	116	;'t'
   461  00FEA9  6F                 	db	111	;'o'
   462  00FEAA  20                 	db	32
   463  00FEAB  64                 	db	100	;'d'
   464  00FEAC  65                 	db	101	;'e'
   465  00FEAD  63                 	db	99	;'c'
   466  00FEAE  6F                 	db	111	;'o'
   467  00FEAF  64                 	db	100	;'d'
   468  00FEB0  65                 	db	101	;'e'
   469  00FEB1  20                 	db	32
   470  00FEB2  63                 	db	99	;'c'
   471  00FEB3  68                 	db	104	;'h'
   472  00FEB4  61                 	db	97	;'a'
   473  00FEB5  72                 	db	114	;'r'
   474  00FEB6  61                 	db	97	;'a'
   475  00FEB7  63                 	db	99	;'c'
   476  00FEB8  74                 	db	116	;'t'
   477  00FEB9  65                 	db	101	;'e'
   478  00FEBA  72                 	db	114	;'r'
   479  00FEBB  0D                 	db	13
   480  00FEBC  0A                 	db	10
   481  00FEBD  00                 	db	0
   482  00FEBE                     STR_15:
   483  00FEBE  53                 	db	83	;'S'
   484  00FEBF  3A                 	db	58	;':'
   485  00FEC0  20                 	db	32
   486  00FEC1  53                 	db	83	;'S'
   487  00FEC2  65                 	db	101	;'e'
   488  00FEC3  6E                 	db	110	;'n'
   489  00FEC4  64                 	db	100	;'d'
   490  00FEC5  20                 	db	32
   491  00FEC6  25                 	db	37
   492  00FEC7  63                 	db	99	;'c'
   493  00FEC8  20                 	db	32
   494  00FEC9  75                 	db	117	;'u'
   495  00FECA  73                 	db	115	;'s'
   496  00FECB  69                 	db	105	;'i'
   497  00FECC  6E                 	db	110	;'n'
   498  00FECD  67                 	db	103	;'g'
   499  00FECE  20                 	db	32
   500  00FECF  49                 	db	73	;'I'
   501  00FED0  52                 	db	82	;'R'
   502  00FED1  20                 	db	32
   503  00FED2  74                 	db	116	;'t'
   504  00FED3  72                 	db	114	;'r'
   505  00FED4  61                 	db	97	;'a'
   506  00FED5  6E                 	db	110	;'n'
   507  00FED6  73                 	db	115	;'s'
   508  00FED7  6D                 	db	109	;'m'
   509  00FED8  69                 	db	105	;'i'
   510  00FED9  74                 	db	116	;'t'
   511  00FEDA  74                 	db	116	;'t'
   512  00FEDB  65                 	db	101	;'e'
   513  00FEDC  72                 	db	114	;'r'
   514  00FEDD  0D                 	db	13
   515  00FEDE  0A                 	db	10
   516  00FEDF  00                 	db	0
   517  00FEE0                     STR_25:
   518  00FEE0  4E                 	db	78	;'N'
   519  00FEE1  6F                 	db	111	;'o'
   520  00FEE2  74                 	db	116	;'t'
   521  00FEE3  68                 	db	104	;'h'
   522  00FEE4  69                 	db	105	;'i'
   523  00FEE5  6E                 	db	110	;'n'
   524  00FEE6  67                 	db	103	;'g'
   525  00FEE7  20                 	db	32
   526  00FEE8  72                 	db	114	;'r'
   527  00FEE9  65                 	db	101	;'e'
   528  00FEEA  63                 	db	99	;'c'
   529  00FEEB  65                 	db	101	;'e'
   530  00FEEC  69                 	db	105	;'i'
   531  00FEED  76                 	db	118	;'v'
   532  00FEEE  65                 	db	101	;'e'
   533  00FEEF  64                 	db	100	;'d'
   534  00FEF0  20                 	db	32
   535  00FEF1  66                 	db	102	;'f'
   536  00FEF2  72                 	db	114	;'r'
   537  00FEF3  6F                 	db	111	;'o'
   538  00FEF4  6D                 	db	109	;'m'
   539  00FEF5  20                 	db	32
   540  00FEF6  45                 	db	69	;'E'
   541  00FEF7  55                 	db	85	;'U'
   542  00FEF8  53                 	db	83	;'S'
   543  00FEF9  41                 	db	65	;'A'
   544  00FEFA  52                 	db	82	;'R'
   545  00FEFB  54                 	db	84	;'T'
   546  00FEFC  32                 	db	50	;'2'
   547  00FEFD  0D                 	db	13
   548  00FEFE  0A                 	db	10
   549  00FEFF  00                 	db	0
   550  00FF00                     STR_24:
   551  00FF00  4A                 	db	74	;'J'
   552  00FF01  75                 	db	117	;'u'
   553  00FF02  73                 	db	115	;'s'
   554  00FF03  74                 	db	116	;'t'
   555  00FF04  20                 	db	32
   556  00FF05  72                 	db	114	;'r'
   557  00FF06  65                 	db	101	;'e'
   558  00FF07  61                 	db	97	;'a'
   559  00FF08  64                 	db	100	;'d'
   560  00FF09  20                 	db	32
   561  00FF0A  69                 	db	105	;'i'
   562  00FF0B  6E                 	db	110	;'n'
   563  00FF0C  20                 	db	32
   564  00FF0D  25                 	db	37
   565  00FF0E  63                 	db	99	;'c'
   566  00FF0F  20                 	db	32
   567  00FF10  66                 	db	102	;'f'
   568  00FF11  72                 	db	114	;'r'
   569  00FF12  6F                 	db	111	;'o'
   570  00FF13  6D                 	db	109	;'m'
   571  00FF14  20                 	db	32
   572  00FF15  45                 	db	69	;'E'
   573  00FF16  55                 	db	85	;'U'
   574  00FF17  53                 	db	83	;'S'
   575  00FF18  41                 	db	65	;'A'
   576  00FF19  52                 	db	82	;'R'
   577  00FF1A  54                 	db	84	;'T'
   578  00FF1B  32                 	db	50	;'2'
   579  00FF1C  0D                 	db	13
   580  00FF1D  0A                 	db	10
   581  00FF1E  00                 	db	0
   582  00FF1F                     STR_14:
   583  00FF1F  7A                 	db	122	;'z'
   584  00FF20  3A                 	db	58	;':'
   585  00FF21  20                 	db	32
   586  00FF22  43                 	db	67	;'C'
   587  00FF23  6C                 	db	108	;'l'
   588  00FF24  65                 	db	101	;'e'
   589  00FF25  61                 	db	97	;'a'
   590  00FF26  72                 	db	114	;'r'
   591  00FF27  20                 	db	32
   592  00FF28  74                 	db	116	;'t'
   593  00FF29  68                 	db	104	;'h'
   594  00FF2A  65                 	db	101	;'e'
   595  00FF2B  20                 	db	32
   596  00FF2C  74                 	db	116	;'t'
   597  00FF2D  65                 	db	101	;'e'
   598  00FF2E  72                 	db	114	;'r'
   599  00FF2F  6D                 	db	109	;'m'
   600  00FF30  69                 	db	105	;'i'
   601  00FF31  6E                 	db	110	;'n'
   602  00FF32  61                 	db	97	;'a'
   603  00FF33  6C                 	db	108	;'l'
   604  00FF34  0D                 	db	13
   605  00FF35  0A                 	db	10
   606  00FF36  00                 	db	0
   607  00FF37                     STR_3:
   608  00FF37  44                 	db	68	;'D'
   609  00FF38  65                 	db	101	;'e'
   610  00FF39  76                 	db	118	;'v'
   611  00FF3A  27                 	db	39
   612  00FF3B  32                 	db	50	;'2'
   613  00FF3C  31                 	db	49	;'1'
   614  00FF3D  20                 	db	32
   615  00FF3E  42                 	db	66	;'B'
   616  00FF3F  6F                 	db	111	;'o'
   617  00FF40  61                 	db	97	;'a'
   618  00FF41  72                 	db	114	;'r'
   619  00FF42  64                 	db	100	;'d'
   620  00FF43  20                 	db	32
   621  00FF44  77                 	db	119	;'w'
   622  00FF45  69                 	db	105	;'i'
   623  00FF46  72                 	db	114	;'r'
   624  00FF47  69                 	db	105	;'i'
   625  00FF48  6E                 	db	110	;'n'
   626  00FF49  67                 	db	103	;'g'
   627  00FF4A  0D                 	db	13
   628  00FF4B  0A                 	db	10
   629  00FF4C  00                 	db	0
   630  00FF4D                     STR_26:
   631  00FF4D  4A                 	db	74	;'J'
   632  00FF4E  75                 	db	117	;'u'
   633  00FF4F  73                 	db	115	;'s'
   634  00FF50  74                 	db	116	;'t'
   635  00FF51  20                 	db	32
   636  00FF52  72                 	db	114	;'r'
   637  00FF53  65                 	db	101	;'e'
   638  00FF54  73                 	db	115	;'s'
   639  00FF55  65                 	db	101	;'e'
   640  00FF56  74                 	db	116	;'t'
   641  00FF57  20                 	db	32
   642  00FF58  45                 	db	69	;'E'
   643  00FF59  55                 	db	85	;'U'
   644  00FF5A  53                 	db	83	;'S'
   645  00FF5B  41                 	db	65	;'A'
   646  00FF5C  52                 	db	82	;'R'
   647  00FF5D  54                 	db	84	;'T'
   648  00FF5E  32                 	db	50	;'2'
   649  00FF5F  0D                 	db	13
   650  00FF60  0A                 	db	10
   651  00FF61  00                 	db	0
   652  00FF62                     STR_13:
   653  00FF62  5A                 	db	90	;'Z'
   654  00FF63  3A                 	db	58	;':'
   655  00FF64  20                 	db	32
   656  00FF65  52                 	db	82	;'R'
   657  00FF66  65                 	db	101	;'e'
   658  00FF67  73                 	db	115	;'s'
   659  00FF68  65                 	db	101	;'e'
   660  00FF69  74                 	db	116	;'t'
   661  00FF6A  20                 	db	32
   662  00FF6B  70                 	db	112	;'p'
   663  00FF6C  72                 	db	114	;'r'
   664  00FF6D  6F                 	db	111	;'o'
   665  00FF6E  63                 	db	99	;'c'
   666  00FF6F  65                 	db	101	;'e'
   667  00FF70  73                 	db	115	;'s'
   668  00FF71  73                 	db	115	;'s'
   669  00FF72  6F                 	db	111	;'o'
   670  00FF73  72                 	db	114	;'r'
   671  00FF74  0D                 	db	13
   672  00FF75  0A                 	db	10
   673  00FF76  00                 	db	0
   674  00FF77                     STR_23:
   675  00FF77  6A                 	db	106	;'j'
   676  00FF78  75                 	db	117	;'u'
   677  00FF79  73                 	db	115	;'s'
   678  00FF7A  74                 	db	116	;'t'
   679  00FF7B  20                 	db	32
   680  00FF7C  73                 	db	115	;'s'
   681  00FF7D  65                 	db	101	;'e'
   682  00FF7E  6E                 	db	110	;'n'
   683  00FF7F  74                 	db	116	;'t'
   684  00FF80  20                 	db	32
   685  00FF81  25                 	db	37
   686  00FF82  63                 	db	99	;'c'
   687  00FF83  20                 	db	32
   688  00FF84  20                 	db	32
   689  00FF85  20                 	db	32
   690  00FF86  20                 	db	32
   691  00FF87  25                 	db	37
   692  00FF88  78                 	db	120	;'x'
   693  00FF89  0D                 	db	13
   694  00FF8A  0A                 	db	10
   695  00FF8B  00                 	db	0
   696  00FF8C                     STR_17:
   697  00FF8C  72                 	db	114	;'r'
   698  00FF8D  3A                 	db	58	;':'
   699  00FF8E  20                 	db	32
   700  00FF8F  72                 	db	114	;'r'
   701  00FF90  65                 	db	101	;'e'
   702  00FF91  73                 	db	115	;'s'
   703  00FF92  65                 	db	101	;'e'
   704  00FF93  74                 	db	116	;'t'
   705  00FF94  20                 	db	32
   706  00FF95  45                 	db	69	;'E'
   707  00FF96  55                 	db	85	;'U'
   708  00FF97  53                 	db	83	;'S'
   709  00FF98  41                 	db	65	;'A'
   710  00FF99  52                 	db	82	;'R'
   711  00FF9A  54                 	db	84	;'T'
   712  00FF9B  32                 	db	50	;'2'
   713  00FF9C  0D                 	db	13
   714  00FF9D  0A                 	db	10
   715  00FF9E  00                 	db	0
   716  00FF9F                     STR_28:
   717  00FF9F  55                 	db	85	;'U'
   718  00FFA0  6E                 	db	110	;'n'
   719  00FFA1  6B                 	db	107	;'k'
   720  00FFA2  6E                 	db	110	;'n'
   721  00FFA3  6F                 	db	111	;'o'
   722  00FFA4  77                 	db	119	;'w'
   723  00FFA5  6E                 	db	110	;'n'
   724  00FFA6  20                 	db	32
   725  00FFA7  6B                 	db	107	;'k'
   726  00FFA8  65                 	db	101	;'e'
   727  00FFA9  79                 	db	121	;'y'
   728  00FFAA  20                 	db	32
   729  00FFAB  25                 	db	37
   730  00FFAC  63                 	db	99	;'c'
   731  00FFAD  0D                 	db	13
   732  00FFAE  0A                 	db	10
   733  00FFAF  00                 	db	0
   734  00FFB0                     STR_11:
   735  00FFB0  3F                 	db	63	;'?'
   736  00FFB1  3A                 	db	58	;':'
   737  00FFB2  20                 	db	32
   738  00FFB3  68                 	db	104	;'h'
   739  00FFB4  65                 	db	101	;'e'
   740  00FFB5  6C                 	db	108	;'l'
   741  00FFB6  70                 	db	112	;'p'
   742  00FFB7  20                 	db	32
   743  00FFB8  6D                 	db	109	;'m'
   744  00FFB9  65                 	db	101	;'e'
   745  00FFBA  6E                 	db	110	;'n'
   746  00FFBB  75                 	db	117	;'u'
   747  00FFBC  0D                 	db	13
   748  00FFBD  0A                 	db	10
   749  00FFBE  00                 	db	0
   750  00FFBF                     STR_27:
   751  00FFBF  50                 	db	80	;'P'
   752  00FFC0  65                 	db	101	;'e'
   753  00FFC1  72                 	db	114	;'r'
   754  00FFC2  69                 	db	105	;'i'
   755  00FFC3  6F                 	db	111	;'o'
   756  00FFC4  64                 	db	100	;'d'
   757  00FFC5  20                 	db	32
   758  00FFC6  3D                 	db	61	;'='
   759  00FFC7  20                 	db	32
   760  00FFC8  25                 	db	37
   761  00FFC9  64                 	db	100	;'d'
   762  00FFCA  0D                 	db	13
   763  00FFCB  0A                 	db	10
   764  00FFCC  00                 	db	0
   765  00FFCD                     STR_8:
   766  00FFCD  32                 	db	50	;'2'
   767  00FFCE  34                 	db	52	;'4'
   768  00FFCF  30                 	db	48	;'0'
   769  00FFD0  30                 	db	48	;'0'
   770  00FFD1  20                 	db	32
   771  00FFD2  42                 	db	66	;'B'
   772  00FFD3  61                 	db	97	;'a'
   773  00FFD4  75                 	db	117	;'u'
   774  00FFD5  64                 	db	100	;'d'
   775  00FFD6  0D                 	db	13
   776  00FFD7  0A                 	db	10
   777  00FFD8  00                 	db	0
   778  00FFD9                     STR_9:
   779  00FFD9  50                 	db	80	;'P'
   780  00FFDA  52                 	db	82	;'R'
   781  00FFDB  32                 	db	50	;'2'
   782  00FFDC  3A                 	db	58	;':'
   783  00FFDD  20                 	db	32
   784  00FFDE  25                 	db	37
   785  00FFDF  64                 	db	100	;'d'
   786  00FFE0  0D                 	db	13
   787  00FFE1  0A                 	db	10
   788  00FFE2  00                 	db	0
   789  00FFE3                     STR_1:
   790  00FFE3  4C                 	db	76	;'L'
   791  00FFE4  61                 	db	97	;'a'
   792  00FFE5  62                 	db	98	;'b'
   793  00FFE6  20                 	db	32
   794  00FFE7  37                 	db	55	;'7'
   795  00FFE8  0D                 	db	13
   796  00FFE9  0A                 	db	10
   797  00FFEA  00                 	db	0
   798  00FFEB                     STR_20:
   799  00FFEB  6F                 	db	111	;'o'
   800  00FFEC  3A                 	db	58	;':'
   801  00FFED  09                 	db	9
   802  00FFEE  6F                 	db	111	;'o'
   803  00FFEF  6B                 	db	107	;'k'
   804  00FFF0  0D                 	db	13
   805  00FFF1  0A                 	db	10
   806  00FFF2  00                 	db	0
   807  00FFF3                     STR_12:
   808  00FFF3  6F                 	db	111	;'o'
   809  00FFF4  3A                 	db	58	;':'
   810  00FFF5  20                 	db	32
   811  00FFF6  6B                 	db	107	;'k'
   812  00FFF7  0D                 	db	13
   813  00FFF8  0A                 	db	10
   814  00FFF9  00                 	db	0
   815  00FFFA                     STR_6:
   816  00FFFA  0D                 	db	13
   817  00FFFB  0A                 	db	10
   818  00FFFC  3E                 	db	62	;'>'
   819  00FFFD  20                 	db	32
   820  00FFFE  00                 	db	0
   821  00FFFF  00                 	db	0	; dummy byte at the end
   822  0000                     
   823                           ; #config settings
   824                           
   825                           	psect	cinit
   826  0011DA                     __pcinit:
   827                           	callstack 0
   828  0011DA                     start_initialization:
   829                           	callstack 0
   830  0011DA                     __initialization:
   831                           	callstack 0
   832                           
   833                           ; Initialize objects allocated to BANK0 (3 bytes)
   834                           ; load TBLPTR registers with __pidataBANK0
   835  0011DA  0E94               	movlw	low __pidataBANK0
   836  0011DC  6EF6               	movwf	tblptrl,c
   837  0011DE  0E17               	movlw	high __pidataBANK0
   838  0011E0  6EF7               	movwf	tblptrh,c
   839  0011E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   840  0011E4  6EF8               	movwf	tblptru,c
   841  0011E6  0009               	tblrd		*+	;fetch initializer
   842  0011E8  CFF5 F0E8          	movff	tablat,__pdataBANK0
   843  0011EC  0009               	tblrd		*+	;fetch initializer
   844  0011EE  CFF5 F0E9          	movff	tablat,__pdataBANK0+1
   845  0011F2  0009               	tblrd		*+	;fetch initializer
   846  0011F4  CFF5 F0EA          	movff	tablat,__pdataBANK0+2
   847                           
   848                           ; Initialize objects allocated to COMRAM (1 bytes)
   849                           ; load TBLPTR registers with __pidataCOMRAM
   850  0011F8  0E9A               	movlw	low __pidataCOMRAM
   851  0011FA  6EF6               	movwf	tblptrl,c
   852  0011FC  0E17               	movlw	high __pidataCOMRAM
   853  0011FE  6EF7               	movwf	tblptrh,c
   854  001200  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   855  001202  6EF8               	movwf	tblptru,c
   856  001204  0009               	tblrd		*+	;fetch initializer
   857  001206  CFF5 F056          	movff	tablat,__pdataCOMRAM
   858                           
   859                           ; Clear objects allocated to BANK1 (32 bytes)
   860  00120A  EE01  F000         	lfsr	0,__pbssBANK1
   861  00120E  0E20               	movlw	32
   862  001210                     clear_0:
   863  001210  6AEE               	clrf	postinc0,c
   864  001212  06E8               	decf	wreg,f,c
   865  001214  E1FD               	bnz	clear_0
   866                           
   867                           ; Clear objects allocated to BANK0 (89 bytes)
   868  001216  EE00  F060         	lfsr	0,__pbssBANK0
   869  00121A  0E59               	movlw	89
   870  00121C                     clear_1:
   871  00121C  6AEE               	clrf	postinc0,c
   872  00121E  06E8               	decf	wreg,f,c
   873  001220  E1FD               	bnz	clear_1
   874                           
   875                           ; Clear objects allocated to COMRAM (7 bytes)
   876  001222  EE00  F04F         	lfsr	0,__pbssCOMRAM
   877  001226  0E07               	movlw	7
   878  001228                     clear_2:
   879  001228  6AEE               	clrf	postinc0,c
   880  00122A  06E8               	decf	wreg,f,c
   881  00122C  E1FD               	bnz	clear_2
   882  00122E                     end_of_initialization:
   883                           	callstack 0
   884  00122E                     __end_of__initialization:
   885                           	callstack 0
   886  00122E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   887  001230  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   888  001232  0100               	movlb	0
   889  001234  EF28  F000         	goto	_main	;jump to C main() function
   890                           
   891                           	psect	bssCOMRAM
   892  00004F                     __pbssCOMRAM:
   893                           	callstack 0
   894  00004F                     _width:
   895                           	callstack 0
   896  00004F                     	ds	2
   897  000051                     _prec:
   898                           	callstack 0
   899  000051                     	ds	2
   900  000053                     _flags:
   901                           	callstack 0
   902  000053                     	ds	2
   903  000055                     _newCharacterToSend:
   904                           	callstack 0
   905  000055                     	ds	1
   906                           
   907                           	psect	dataCOMRAM
   908  000056                     __pdataCOMRAM:
   909                           	callstack 0
   910  000056                     myTMR1ISR@mask:
   911                           	callstack 0
   912  000056                     	ds	1
   913                           
   914                           	psect	bssBANK0
   915  000060                     __pbssBANK0:
   916                           	callstack 0
   917  000060                     _transmitIRBuffer:
   918                           	callstack 0
   919  000060                     	ds	32
   920  000080                     _nout:
   921                           	callstack 0
   922  000080                     	ds	2
   923  000082                     _EUSART1_ErrorHandler:
   924                           	callstack 0
   925  000082                     	ds	2
   926  000084                     _EUSART1_OverrunErrorHandler:
   927                           	callstack 0
   928  000084                     	ds	2
   929  000086                     _EUSART1_FramingErrorHandler:
   930                           	callstack 0
   931  000086                     	ds	2
   932  000088                     _EUSART2_ErrorHandler:
   933                           	callstack 0
   934  000088                     	ds	2
   935  00008A                     _EUSART2_OverrunErrorHandler:
   936                           	callstack 0
   937  00008A                     	ds	2
   938  00008C                     _EUSART2_FramingErrorHandler:
   939                           	callstack 0
   940  00008C                     	ds	2
   941  00008E                     _TMR1_InterruptHandler:
   942                           	callstack 0
   943  00008E                     	ds	2
   944  000090                     _timer1ReloadVal:
   945                           	callstack 0
   946  000090                     	ds	2
   947  000092                     _eusart1RxLastError:
   948                           	callstack 0
   949  000092                     	ds	1
   950  000093                     _eusart2RxLastError:
   951                           	callstack 0
   952  000093                     	ds	1
   953  000094                     myTMR1ISR@tmr1ISRstate:
   954                           	callstack 0
   955  000094                     	ds	1
   956  000095                     _receiveNewMessage:
   957                           	callstack 0
   958  000095                     	ds	1
   959  000096                     _receiveBusy:
   960                           	callstack 0
   961  000096                     	ds	1
   962  000097                     _transmitBusy:
   963                           	callstack 0
   964  000097                     	ds	1
   965  000098                     _transmitStart:
   966                           	callstack 0
   967  000098                     	ds	1
   968  000099                     _dbuf:
   969                           	callstack 0
   970  000099                     	ds	32
   971                           
   972                           	psect	dataBANK0
   973  0000E8                     __pdataBANK0:
   974                           	callstack 0
   975  0000E8                     _bitPeriodInTMR1Counts:
   976                           	callstack 0
   977  0000E8                     	ds	2
   978  0000EA                     _letter:
   979                           	callstack 0
   980  0000EA                     	ds	1
   981                           
   982                           	psect	bssBANK1
   983  000100                     __pbssBANK1:
   984                           	callstack 0
   985  000100                     _recieveIRBuffer:
   986                           	callstack 0
   987  000100                     	ds	32
   988                           
   989                           	psect	cstackBANK0
   990  0000B9                     __pcstackBANK0:
   991                           	callstack 0
   992  0000B9                     ?_vfpfcnvrt:
   993                           	callstack 0
   994  0000B9                     vfpfcnvrt@fp:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x0
   998  0000B9                     	ds	2
   999  0000BB                     vfpfcnvrt@fmt:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x2
  1003  0000BB                     	ds	2
  1004  0000BD                     vfpfcnvrt@ap:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x4
  1008  0000BD                     	ds	2
  1009  0000BF                     ??_vfpfcnvrt:
  1010                           
  1011                           ; 1 bytes @ 0x6
  1012  0000BF                     	ds	4
  1013  0000C3                     vfpfcnvrt@ll:
  1014                           	callstack 0
  1015                           
  1016                           ; 8 bytes @ 0xA
  1017  0000C3                     	ds	8
  1018  0000CB                     vfpfcnvrt@llu:
  1019                           	callstack 0
  1020                           
  1021                           ; 8 bytes @ 0x12
  1022  0000CB                     	ds	8
  1023  0000D3                     vfpfcnvrt@c:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x1A
  1027  0000D3                     	ds	1
  1028  0000D4                     ?_vfprintf:
  1029                           	callstack 0
  1030  0000D4                     vfprintf@fp:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x1B
  1034  0000D4                     	ds	2
  1035  0000D6                     vfprintf@fmt:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x1D
  1039  0000D6                     	ds	2
  1040  0000D8                     vfprintf@ap:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x1F
  1044  0000D8                     	ds	2
  1045  0000DA                     ?_printf:
  1046                           	callstack 0
  1047  0000DA                     printf@fmt:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x21
  1051  0000DA                     	ds	8
  1052  0000E2                     printf@ap:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x29
  1056  0000E2                     	ds	2
  1057  0000E4                     ??_main:
  1058                           
  1059                           ; 1 bytes @ 0x2B
  1060  0000E4                     	ds	2
  1061  0000E6                     main@cmd:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x2D
  1065  0000E6                     	ds	1
  1066  0000E7                     main@i:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x2E
  1070  0000E7                     	ds	1
  1071                           
  1072                           	psect	cstackCOMRAM
  1073  000001                     __pcstackCOMRAM:
  1074                           	callstack 0
  1075  000001                     i2EPWM2_LoadDutyValue@dutyValue:
  1076                           	callstack 0
  1077  000001                     i2TMR1_WriteTimer@timerVal:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x0
  1081  000001                     	ds	2
  1082  000003                     ??i2_EPWM2_LoadDutyValue:
  1083  000003                     
  1084                           ; 1 bytes @ 0x2
  1085  000003                     	ds	2
  1086  000005                     ??_myTMR1ISR:
  1087                           
  1088                           ; 1 bytes @ 0x4
  1089  000005                     	ds	2
  1090  000007                     ??_INTERRUPT_InterruptManager:
  1091                           
  1092                           ; 1 bytes @ 0x6
  1093  000007                     	ds	2
  1094  000009                     ?_strlen:
  1095                           	callstack 0
  1096  000009                     ?_isupper:
  1097                           	callstack 0
  1098  000009                     ?_isalpha:
  1099                           	callstack 0
  1100  000009                     ?_islower:
  1101                           	callstack 0
  1102  000009                     ?___aodiv:
  1103                           	callstack 0
  1104  000009                     ?___aomod:
  1105                           	callstack 0
  1106  000009                     EUSART1_Write@txData:
  1107                           	callstack 0
  1108  000009                     EPWM2_LoadDutyValue@dutyValue:
  1109                           	callstack 0
  1110  000009                     TMR1_WriteTimer@timerVal:
  1111                           	callstack 0
  1112  000009                     TMR1_SetInterruptHandler@InterruptHandler:
  1113                           	callstack 0
  1114  000009                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1115                           	callstack 0
  1116  000009                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1117                           	callstack 0
  1118  000009                     EUSART2_SetErrorHandler@interruptHandler:
  1119                           	callstack 0
  1120  000009                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1121                           	callstack 0
  1122  000009                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1123                           	callstack 0
  1124  000009                     EUSART1_SetErrorHandler@interruptHandler:
  1125                           	callstack 0
  1126  000009                     isalpha@c:
  1127                           	callstack 0
  1128  000009                     isupper@c:
  1129                           	callstack 0
  1130  000009                     strlen@s:
  1131                           	callstack 0
  1132  000009                     islower@c:
  1133                           	callstack 0
  1134  000009                     ___aodiv@dividend:
  1135                           	callstack 0
  1136  000009                     ___aomod@dividend:
  1137                           	callstack 0
  1138                           
  1139                           ; 8 bytes @ 0x8
  1140  000009                     	ds	1
  1141  00000A                     putch@txData:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x9
  1145  00000A                     	ds	1
  1146  00000B                     ??_isupper:
  1147  00000B                     ??_isalpha:
  1148  00000B                     ??_islower:
  1149  00000B                     ??_EPWM2_LoadDutyValue:
  1150  00000B                     fputc@c:
  1151                           	callstack 0
  1152  00000B                     strlen@a:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0xA
  1156  00000B                     	ds	2
  1157  00000D                     fputc@fp:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161  00000D                     	ds	2
  1162  00000F                     ??_fputc:
  1163  00000F                     ?_toupper:
  1164                           	callstack 0
  1165  00000F                     toupper@c:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0xE
  1169  00000F                     	ds	2
  1170  000011                     ??_toupper:
  1171  000011                     ___aodiv@divisor:
  1172                           	callstack 0
  1173  000011                     ___aomod@divisor:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x10
  1177  000011                     	ds	3
  1178  000014                     fputs@s:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x13
  1182  000014                     	ds	1
  1183  000015                     _toupper$1954:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x14
  1187  000015                     	ds	1
  1188  000016                     fputs@fp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x15
  1192  000016                     	ds	2
  1193  000018                     fputs@c:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x17
  1197  000018                     	ds	1
  1198  000019                     ___aodiv@counter:
  1199                           	callstack 0
  1200  000019                     ___aomod@counter:
  1201                           	callstack 0
  1202  000019                     fputs@i:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x18
  1206  000019                     	ds	1
  1207  00001A                     ___aodiv@sign:
  1208                           	callstack 0
  1209  00001A                     ___aomod@sign:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x19
  1213  00001A                     	ds	1
  1214  00001B                     ?_abs:
  1215                           	callstack 0
  1216  00001B                     ?_pad:
  1217                           	callstack 0
  1218  00001B                     pad@fp:
  1219                           	callstack 0
  1220  00001B                     abs@a:
  1221                           	callstack 0
  1222  00001B                     ___aodiv@quotient:
  1223                           	callstack 0
  1224                           
  1225                           ; 8 bytes @ 0x1A
  1226  00001B                     	ds	2
  1227  00001D                     ??_abs:
  1228  00001D                     pad@buf:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x1C
  1232  00001D                     	ds	2
  1233  00001F                     pad@p:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x1E
  1237  00001F                     	ds	2
  1238  000021                     ??_pad:
  1239                           
  1240                           ; 1 bytes @ 0x20
  1241  000021                     	ds	1
  1242  000022                     pad@i:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x21
  1246  000022                     	ds	2
  1247  000024                     pad@w:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x23
  1251  000024                     	ds	2
  1252  000026                     ?_ctoa:
  1253                           	callstack 0
  1254  000026                     ?_dtoa:
  1255                           	callstack 0
  1256  000026                     ?_xtoa:
  1257                           	callstack 0
  1258  000026                     ctoa@fp:
  1259                           	callstack 0
  1260  000026                     dtoa@fp:
  1261                           	callstack 0
  1262  000026                     xtoa@fp:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x25
  1266  000026                     	ds	2
  1267  000028                     ctoa@c:
  1268                           	callstack 0
  1269  000028                     dtoa@d:
  1270                           	callstack 0
  1271  000028                     xtoa@d:
  1272                           	callstack 0
  1273                           
  1274                           ; 8 bytes @ 0x27
  1275  000028                     	ds	1
  1276  000029                     ctoa@w:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x28
  1280  000029                     	ds	7
  1281  000030                     ??_dtoa:
  1282  000030                     xtoa@x:
  1283                           	callstack 0
  1284                           
  1285                           ; 1 bytes @ 0x2F
  1286  000030                     	ds	1
  1287  000031                     ??_xtoa:
  1288                           
  1289                           ; 1 bytes @ 0x30
  1290  000031                     	ds	7
  1291  000038                     _dtoa$1864:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x37
  1295  000038                     	ds	1
  1296  000039                     _xtoa$1874:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x38
  1300  000039                     	ds	1
  1301  00003A                     dtoa@p:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x39
  1305  00003A                     	ds	1
  1306  00003B                     _xtoa$1875:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x3A
  1310  00003B                     	ds	1
  1311  00003C                     dtoa@w:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x3B
  1315  00003C                     	ds	1
  1316  00003D                     xtoa@p:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x3C
  1320  00003D                     	ds	1
  1321  00003E                     dtoa@s:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x3D
  1325  00003E                     	ds	1
  1326  00003F                     xtoa@w:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x3E
  1330  00003F                     	ds	1
  1331  000040                     dtoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x3F
  1335  000040                     	ds	1
  1336  000041                     xtoa@n:
  1337                           	callstack 0
  1338                           
  1339                           ; 8 bytes @ 0x40
  1340  000041                     	ds	7
  1341  000048                     dtoa@i:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x47
  1345  000048                     	ds	1
  1346  000049                     xtoa@i:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x48
  1350  000049                     	ds	2
  1351  00004B                     xtoa@c:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x4A
  1355  00004B                     	ds	2
  1356  00004D                     vfprintf@cfmt:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x4C
  1360  00004D                     	ds	2
  1361  00004F                     
  1362                           ; 1 bytes @ 0x4E
  1363 ;;
  1364 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1365 ;;
  1366 ;; *************** function _main *****************
  1367 ;; Defined at:
  1368 ;;		line 49 in file "main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  i               1   46[BANK0 ] unsigned char 
  1373 ;;  cmd             1   45[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels required when called:   13
  1389 ;; This function calls:
  1390 ;;		_EPWM2_LoadDutyValue
  1391 ;;		_EUSART1_Read
  1392 ;;		_EUSART1_is_rx_ready
  1393 ;;		_EUSART2_Read
  1394 ;;		_EUSART2_is_rx_ready
  1395 ;;		_SYSTEM_Initialize
  1396 ;;		_TMR1_SetInterruptHandler
  1397 ;;		_TMR1_WriteTimer
  1398 ;;		_printf
  1399 ;; This function is called by:
  1400 ;;		Startup code after reset
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text0
  1405  000050                     __ptext0:
  1406                           	callstack 0
  1407  000050                     _main:
  1408                           	callstack 18
  1409  000050                     
  1410                           ;main.c: 51:     printf("Dev'21 Board wiring\r\n");;main.c: 52:     printf("Install a ju
      +                          mper wire from RC0 to RB7 ONLY AFTER unplugging PICKit3\r\n");;main.c: 54:     printf("\
      +                          r\n> ");
  1411  000050  EC4A  F00B         	call	_SYSTEM_Initialize	;wreg free
  1412                           
  1413                           ;main.c: 55: 
  1414  000054  0E00               	movlw	0
  1415  000056  6E0A               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1416  000058  0E00               	movlw	0
  1417  00005A  6E09               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1418  00005C  EC89  F00A         	call	_EPWM2_LoadDutyValue	;wreg free
  1419  000060                     
  1420                           ;main.c: 60:             switch (cmd) {
  1421  000060  0E00               	movlw	0
  1422  000062  6E0A               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  1423  000064  0E00               	movlw	0
  1424  000066  6E09               	movwf	TMR1_WriteTimer@timerVal^0,c
  1425  000068  EC22  F00B         	call	_TMR1_WriteTimer	;wreg free
  1426  00006C                     
  1427                           ;main.c: 61: 
  1428  00006C  909E               	bcf	158,0,c	;volatile
  1429  00006E                     l252:
  1430  00006E  A09E               	btfss	158,0,c	;volatile
  1431  000070  EF3C  F000         	goto	u2851
  1432  000074  EF3E  F000         	goto	u2850
  1433  000078                     u2851:
  1434  000078  EF37  F000         	goto	l252
  1435  00007C                     u2850:
  1436  00007C                     
  1437                           ;main.c: 65:                 case '?':
  1438  00007C  EC84  F00B         	call	_EUSART2_is_rx_ready	;wreg free
  1439  000080  0900               	iorlw	0
  1440  000082  B4D8               	btfsc	status,2,c
  1441  000084  EF46  F000         	goto	u2861
  1442  000088  EF48  F000         	goto	u2860
  1443  00008C                     u2861:
  1444  00008C  EF4A  F000         	goto	l255
  1445  000090                     u2860:
  1446  000090  ECE4  F00A         	call	_EUSART2_Read	;wreg free
  1447  000094                     l255:
  1448                           
  1449                           ;main.c: 66:                     printf("-----------------------------------------------
      +                          --\r\n");
  1450  000094  EC84  F00B         	call	_EUSART2_is_rx_ready	;wreg free
  1451  000098  0900               	iorlw	0
  1452  00009A  B4D8               	btfsc	status,2,c
  1453  00009C  EF52  F000         	goto	u2871
  1454  0000A0  EF54  F000         	goto	u2870
  1455  0000A4                     u2871:
  1456  0000A4  EF56  F000         	goto	l3287
  1457  0000A8                     u2870:
  1458  0000A8  ECE4  F00A         	call	_EUSART2_Read	;wreg free
  1459  0000AC                     l3287:
  1460                           
  1461                           ;main.c: 68:                     printf("PR2: %d\r\n", PR2);
  1462  0000AC  0E4A               	movlw	low _myTMR1ISR
  1463  0000AE  6E09               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1464  0000B0  0E0F               	movlw	high _myTMR1ISR
  1465  0000B2  6E0A               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1466  0000B4  ECA5  F00B         	call	_TMR1_SetInterruptHandler	;wreg free
  1467  0000B8                     
  1468                           ;main.c: 69:                     printf("-----------------------------------------------
      +                          --\r\n");
  1469  0000B8  8CF2               	bsf	242,6,c	;volatile
  1470  0000BA                     
  1471                           ;main.c: 70:                     printf("?: help menu\r\n");
  1472  0000BA  8EF2               	bsf	242,7,c	;volatile
  1473  0000BC                     
  1474                           ;main.c: 73:                     printf("z: Clear the terminal\r\n");
  1475  0000BC  0EE3               	movlw	low STR_1
  1476  0000BE  0100               	movlb	0	; () banked
  1477  0000C0  6FDA               	movwf	printf@fmt& (0+255),b
  1478  0000C2  0EFF               	movlw	high STR_1
  1479  0000C4  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1480  0000C6  EC0E  F00B         	call	_printf	;wreg free
  1481  0000CA                     
  1482                           ;main.c: 74:                     printf("S: Send ""%c"" using IR transmitter\r\n", lette
      +                          r);
  1483  0000CA  0E74               	movlw	low STR_2
  1484  0000CC  0100               	movlb	0	; () banked
  1485  0000CE  6FDA               	movwf	printf@fmt& (0+255),b
  1486  0000D0  0EFE               	movlw	high STR_2
  1487  0000D2  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1488  0000D4  EC0E  F00B         	call	_printf	;wreg free
  1489  0000D8                     
  1490                           ;main.c: 75:                     printf("R: use EUSART2 to decode character\r\n");
  1491  0000D8  0E37               	movlw	low STR_3
  1492  0000DA  0100               	movlb	0	; () banked
  1493  0000DC  6FDA               	movwf	printf@fmt& (0+255),b
  1494  0000DE  0EFF               	movlw	high STR_3
  1495  0000E0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1496  0000E2  EC0E  F00B         	call	_printf	;wreg free
  1497  0000E6                     
  1498                           ;main.c: 76:                     printf("r: reset EUSART2\r\n");
  1499  0000E6  0EA5               	movlw	low STR_4
  1500  0000E8  0100               	movlb	0	; () banked
  1501  0000EA  6FDA               	movwf	printf@fmt& (0+255),b
  1502  0000EC  0EFD               	movlw	high STR_4
  1503  0000EE  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1504  0000F0  EC0E  F00B         	call	_printf	;wreg free
  1505  0000F4                     
  1506                           ;main.c: 77:                     printf("p/P: decrease/increase PWM period by 1us\r\n");
  1507  0000F4  0E4A               	movlw	low STR_5
  1508  0000F6  0100               	movlb	0	; () banked
  1509  0000F8  6FDA               	movwf	printf@fmt& (0+255),b
  1510  0000FA  0EFE               	movlw	high STR_5
  1511  0000FC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1512  0000FE  EC0E  F00B         	call	_printf	;wreg free
  1513  000102                     
  1514                           ;main.c: 78:                     printf("-----------------------------------------------
      +                          --\r\n");
  1515  000102  0EFA               	movlw	low STR_6
  1516  000104  0100               	movlb	0	; () banked
  1517  000106  6FDA               	movwf	printf@fmt& (0+255),b
  1518  000108  0EFF               	movlw	high STR_6
  1519  00010A  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1520  00010C  EC0E  F00B         	call	_printf	;wreg free
  1521  000110                     l3305:
  1522                           
  1523                           ;main.c: 82: 
  1524  000110  EC8E  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1525  000114  0900               	iorlw	0
  1526  000116  B4D8               	btfsc	status,2,c
  1527  000118  EF90  F000         	goto	u2881
  1528  00011C  EF92  F000         	goto	u2880
  1529  000120                     u2881:
  1530  000120  EF88  F000         	goto	l3305
  1531  000124                     u2880:
  1532  000124                     
  1533                           ;main.c: 83: 
  1534  000124  ECF9  F00A         	call	_EUSART1_Read	;wreg free
  1535  000128  0100               	movlb	0	; () banked
  1536  00012A  6FE6               	movwf	main@cmd& (0+255),b
  1537                           
  1538                           ;main.c: 84:                 case 'o':
  1539  00012C  EF91  F001         	goto	l3361
  1540  000130                     l3309:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 90: 
  1544  000130  0EEB               	movlw	low STR_7
  1545  000132  6FDA               	movwf	printf@fmt& (0+255),b
  1546  000134  0EFD               	movlw	high STR_7
  1547  000136  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1548  000138  EC0E  F00B         	call	_printf	;wreg free
  1549                           
  1550                           ;main.c: 91:                 case 'Z':
  1551  00013C  0ECD               	movlw	low STR_8
  1552  00013E  0100               	movlb	0	; () banked
  1553  000140  6FDA               	movwf	printf@fmt& (0+255),b
  1554  000142  0EFF               	movlw	high STR_8
  1555  000144  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1556  000146  EC0E  F00B         	call	_printf	;wreg free
  1557                           
  1558                           ;main.c: 92:                     for (i = 0; i < 40; i++) printf("\n");
  1559  00014A  0ED9               	movlw	low STR_9
  1560  00014C  0100               	movlb	0	; () banked
  1561  00014E  6FDA               	movwf	printf@fmt& (0+255),b
  1562  000150  0EFF               	movlw	high STR_9
  1563  000152  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1564  000154  CFBB F0DC          	movff	4027,?_printf+2	;volatile
  1565  000158  6BDD               	clrf	(?_printf+3)& (0+255),b
  1566  00015A  EC0E  F00B         	call	_printf	;wreg free
  1567                           
  1568                           ;main.c: 93:                     __asm("reset");
  1569  00015E  0EEB               	movlw	low STR_7
  1570  000160  0100               	movlb	0	; () banked
  1571  000162  6FDA               	movwf	printf@fmt& (0+255),b
  1572  000164  0EFD               	movlw	high STR_7
  1573  000166  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1574  000168  EC0E  F00B         	call	_printf	;wreg free
  1575                           
  1576                           ;main.c: 94:                     break;
  1577  00016C  0EB0               	movlw	low STR_11
  1578  00016E  0100               	movlb	0	; () banked
  1579  000170  6FDA               	movwf	printf@fmt& (0+255),b
  1580  000172  0EFF               	movlw	high STR_11
  1581  000174  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1582  000176  EC0E  F00B         	call	_printf	;wreg free
  1583                           
  1584                           ;main.c: 95: 
  1585  00017A  0EF3               	movlw	low STR_12
  1586  00017C  0100               	movlb	0	; () banked
  1587  00017E  6FDA               	movwf	printf@fmt& (0+255),b
  1588  000180  0EFF               	movlw	high STR_12
  1589  000182  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1590  000184  EC0E  F00B         	call	_printf	;wreg free
  1591                           
  1592                           ;main.c: 96: 
  1593  000188  0E62               	movlw	low STR_13
  1594  00018A  0100               	movlb	0	; () banked
  1595  00018C  6FDA               	movwf	printf@fmt& (0+255),b
  1596  00018E  0EFF               	movlw	high STR_13
  1597  000190  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1598  000192  EC0E  F00B         	call	_printf	;wreg free
  1599                           
  1600                           ;main.c: 97: 
  1601  000196  0E1F               	movlw	low STR_14
  1602  000198  0100               	movlb	0	; () banked
  1603  00019A  6FDA               	movwf	printf@fmt& (0+255),b
  1604  00019C  0EFF               	movlw	high STR_14
  1605  00019E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1606  0001A0  EC0E  F00B         	call	_printf	;wreg free
  1607                           
  1608                           ;main.c: 98: 
  1609  0001A4  0EBE               	movlw	low STR_15
  1610  0001A6  0100               	movlb	0	; () banked
  1611  0001A8  6FDA               	movwf	printf@fmt& (0+255),b
  1612  0001AA  0EFE               	movlw	high STR_15
  1613  0001AC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1614  0001AE  C0EA  F0DC         	movff	_letter,?_printf+2
  1615  0001B2  6BDD               	clrf	(?_printf+3)& (0+255),b
  1616  0001B4  EC0E  F00B         	call	_printf	;wreg free
  1617                           
  1618                           ;main.c: 99:                 case 'z':
  1619  0001B8  0E99               	movlw	low STR_16
  1620  0001BA  0100               	movlb	0	; () banked
  1621  0001BC  6FDA               	movwf	printf@fmt& (0+255),b
  1622  0001BE  0EFE               	movlw	high STR_16
  1623  0001C0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1624  0001C2  EC0E  F00B         	call	_printf	;wreg free
  1625                           
  1626                           ;main.c: 100:                     for (i = 0; i < 40; i++) printf("\n");
  1627  0001C6  0E8C               	movlw	low STR_17
  1628  0001C8  0100               	movlb	0	; () banked
  1629  0001CA  6FDA               	movwf	printf@fmt& (0+255),b
  1630  0001CC  0EFF               	movlw	high STR_17
  1631  0001CE  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1632  0001D0  EC0E  F00B         	call	_printf	;wreg free
  1633                           
  1634                           ;main.c: 101:                     break;
  1635  0001D4  0E1F               	movlw	low STR_18
  1636  0001D6  0100               	movlb	0	; () banked
  1637  0001D8  6FDA               	movwf	printf@fmt& (0+255),b
  1638  0001DA  0EFE               	movlw	high STR_18
  1639  0001DC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1640  0001DE  EC0E  F00B         	call	_printf	;wreg free
  1641                           
  1642                           ;main.c: 102: 
  1643  0001E2  0EEB               	movlw	low STR_7
  1644  0001E4  0100               	movlb	0	; () banked
  1645  0001E6  6FDA               	movwf	printf@fmt& (0+255),b
  1646  0001E8  0EFD               	movlw	high STR_7
  1647  0001EA  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1648  0001EC  EC0E  F00B         	call	_printf	;wreg free
  1649                           
  1650                           ;main.c: 103: 
  1651  0001F0  EF88  F000         	goto	l3305
  1652  0001F4                     l3311:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 109: 
  1656  0001F4  0EEB               	movlw	low STR_20
  1657  0001F6  6FDA               	movwf	printf@fmt& (0+255),b
  1658  0001F8  0EFF               	movlw	high STR_20
  1659  0001FA  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1660  0001FC  EC0E  F00B         	call	_printf	;wreg free
  1661                           
  1662                           ;main.c: 110:                     newCharacterToSend = 1;
  1663  000200  EF88  F000         	goto	l3305
  1664  000204                     l3313:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 116: 
  1668  000204  0E00               	movlw	0
  1669  000206  6FE7               	movwf	main@i& (0+255),b
  1670  000208                     l3319:
  1671                           
  1672                           ; BSR set to: 0
  1673  000208  0E1D               	movlw	low (STR_7+50)
  1674  00020A  6FDA               	movwf	printf@fmt& (0+255),b
  1675  00020C  0EFE               	movlw	high (STR_7+50)
  1676  00020E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1677  000210  EC0E  F00B         	call	_printf	;wreg free
  1678  000214  0100               	movlb	0	; () banked
  1679  000216  2BE7               	incf	main@i& (0+255),f,b
  1680  000218                     
  1681                           ; BSR set to: 0
  1682  000218  0E27               	movlw	39
  1683  00021A  65E7               	cpfsgt	main@i& (0+255),b
  1684  00021C  EF12  F001         	goto	u2891
  1685  000220  EF14  F001         	goto	u2890
  1686  000224                     u2891:
  1687  000224  EF04  F001         	goto	l3319
  1688  000228                     u2890:
  1689  000228                     
  1690                           ; BSR set to: 0
  1691  000228  00FF               	reset		;# 
  1692                           
  1693                           ;main.c: 118:                 case 'R':
  1694  00022A  EF88  F000         	goto	l3305
  1695  00022E                     l3325:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;main.c: 124: 
  1699  00022E  0E00               	movlw	0
  1700  000230  6FE7               	movwf	main@i& (0+255),b
  1701  000232                     l3331:
  1702                           
  1703                           ; BSR set to: 0
  1704  000232  0E1D               	movlw	low (STR_7+50)
  1705  000234  6FDA               	movwf	printf@fmt& (0+255),b
  1706  000236  0EFE               	movlw	high (STR_7+50)
  1707  000238  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1708  00023A  EC0E  F00B         	call	_printf	;wreg free
  1709  00023E  0100               	movlb	0	; () banked
  1710  000240  2BE7               	incf	main@i& (0+255),f,b
  1711  000242                     
  1712                           ; BSR set to: 0
  1713  000242  0E27               	movlw	39
  1714  000244  65E7               	cpfsgt	main@i& (0+255),b
  1715  000246  EF27  F001         	goto	u2901
  1716  00024A  EF29  F001         	goto	u2900
  1717  00024E                     u2901:
  1718  00024E  EF19  F001         	goto	l3331
  1719  000252                     u2900:
  1720  000252  EF88  F000         	goto	l3305
  1721  000256                     l3337:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 134: 
  1725  000256  0E01               	movlw	1
  1726  000258  6E55               	movwf	_newCharacterToSend^0,c
  1727  00025A                     
  1728                           ; BSR set to: 0
  1729                           ;main.c: 135: 
  1730  00025A  0E77               	movlw	low STR_23
  1731  00025C  6FDA               	movwf	printf@fmt& (0+255),b
  1732  00025E  0EFF               	movlw	high STR_23
  1733  000260  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1734  000262  C0EA  F0DC         	movff	_letter,?_printf+2
  1735  000266  6BDD               	clrf	(?_printf+3)& (0+255),b
  1736  000268  C0EA  F0DE         	movff	_letter,?_printf+4
  1737  00026C  6BDF               	clrf	(?_printf+5)& (0+255),b
  1738  00026E  EC0E  F00B         	call	_printf	;wreg free
  1739  000272                     
  1740                           ;main.c: 136: 
  1741  000272  0100               	movlb	0	; () banked
  1742  000274  2BEA               	incf	_letter& (0+255),f,b
  1743                           
  1744                           ;main.c: 137:                 case 'p':
  1745  000276  EF88  F000         	goto	l3305
  1746  00027A                     l270:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 143: 
  1750  00027A  AAA4               	btfss	164,5,c	;volatile
  1751  00027C  EF42  F001         	goto	u2911
  1752  000280  EF44  F001         	goto	u2910
  1753  000284                     u2911:
  1754  000284  EF53  F001         	goto	l3345
  1755  000288                     u2910:
  1756  000288                     
  1757                           ; BSR set to: 0
  1758                           ;main.c: 144: 
  1759  000288  0E00               	movlw	low STR_24
  1760  00028A  6FDA               	movwf	printf@fmt& (0+255),b
  1761  00028C  0EFF               	movlw	high STR_24
  1762  00028E  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1763  000290  ECE4  F00A         	call	_EUSART2_Read	;wreg free
  1764  000294  0100               	movlb	0	; () banked
  1765  000296  6FE4               	movwf	??_main& (0+255),b
  1766  000298  51E4               	movf	??_main& (0+255),w,b
  1767  00029A  6FDC               	movwf	(?_printf+2)& (0+255),b
  1768  00029C  6BDD               	clrf	(?_printf+3)& (0+255),b
  1769  00029E  EC0E  F00B         	call	_printf	;wreg free
  1770  0002A2  EF88  F000         	goto	l3305
  1771  0002A6                     l3345:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 146: 
  1775  0002A6  0EE0               	movlw	low STR_25
  1776  0002A8  6FDA               	movwf	printf@fmt& (0+255),b
  1777  0002AA  0EFE               	movlw	high STR_25
  1778  0002AC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1779  0002AE  EC0E  F00B         	call	_printf	;wreg free
  1780  0002B2  EF88  F000         	goto	l3305
  1781  0002B6                     l273:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;main.c: 153:     }
  1785  0002B6  9871               	bcf	113,4,c	;volatile
  1786                           
  1787                           ;main.c: 154: }
  1788  0002B8  8871               	bsf	113,4,c	;volatile
  1789  0002BA                     
  1790                           ; BSR set to: 0
  1791                           ;main.c: 155: 
  1792  0002BA  0E4D               	movlw	low STR_26
  1793  0002BC  6FDA               	movwf	printf@fmt& (0+255),b
  1794  0002BE  0EFF               	movlw	high STR_26
  1795  0002C0  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1796  0002C2  EC0E  F00B         	call	_printf	;wreg free
  1797                           
  1798                           ;main.c: 156: typedef enum {
  1799  0002C6  EF88  F000         	goto	l3305
  1800  0002CA                     l3349:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 163: void myTMR1ISR(void) {
  1804  0002CA  0E70               	movlw	112
  1805  0002CC  19E6               	xorwf	main@cmd& (0+255),w,b
  1806  0002CE  A4D8               	btfss	status,2,c
  1807  0002D0  EF6C  F001         	goto	u2921
  1808  0002D4  EF6E  F001         	goto	u2920
  1809  0002D8                     u2921:
  1810  0002D8  EF70  F001         	goto	l276
  1811  0002DC                     u2920:
  1812  0002DC                     
  1813                           ; BSR set to: 0
  1814  0002DC  0E04               	movlw	4
  1815  0002DE  5EBB               	subwf	187,f,c	;volatile
  1816  0002E0                     l276:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 164: 
  1820  0002E0  0E50               	movlw	80
  1821  0002E2  19E6               	xorwf	main@cmd& (0+255),w,b
  1822  0002E4  A4D8               	btfss	status,2,c
  1823  0002E6  EF77  F001         	goto	u2931
  1824  0002EA  EF79  F001         	goto	u2930
  1825  0002EE                     u2931:
  1826  0002EE  EF7B  F001         	goto	l3355
  1827  0002F2                     u2930:
  1828  0002F2                     
  1829                           ; BSR set to: 0
  1830  0002F2  0E04               	movlw	4
  1831  0002F4  26BB               	addwf	187,f,c	;volatile
  1832  0002F6                     l3355:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 165:     static myTXstates_t tmr1ISRstate = TX_IDLE;
  1836  0002F6  0EBF               	movlw	low STR_27
  1837  0002F8  6FDA               	movwf	printf@fmt& (0+255),b
  1838  0002FA  0EFF               	movlw	high STR_27
  1839  0002FC  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1840  0002FE  CFBB F0DC          	movff	4027,?_printf+2	;volatile
  1841  000302  6BDD               	clrf	(?_printf+3)& (0+255),b
  1842  000304  EC0E  F00B         	call	_printf	;wreg free
  1843                           
  1844                           ;main.c: 166:     static uint8_t mask = 0b00000001;
  1845  000308  EF88  F000         	goto	l3305
  1846  00030C                     l3357:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 172: 
  1850  00030C  0E9F               	movlw	low STR_28
  1851  00030E  6FDA               	movwf	printf@fmt& (0+255),b
  1852  000310  0EFF               	movlw	high STR_28
  1853  000312  6FDB               	movwf	(printf@fmt+1)& (0+255),b
  1854  000314  C0E6  F0DC         	movff	main@cmd,?_printf+2
  1855  000318  6BDD               	clrf	(?_printf+3)& (0+255),b
  1856  00031A  EC0E  F00B         	call	_printf	;wreg free
  1857                           
  1858                           ;main.c: 173: 
  1859  00031E  EF88  F000         	goto	l3305
  1860  000322                     l3361:
  1861                           
  1862                           ; BSR set to: 0
  1863  000322  51E6               	movf	main@cmd& (0+255),w,b
  1864  000324  6FE4               	movwf	??_main& (0+255),b
  1865  000326  6BE5               	clrf	(??_main+1)& (0+255),b
  1866                           
  1867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 1, Range of values is 0 to 0
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            4     3 (average)
  1873                           ;	Chosen strategy is simple_byte
  1874  000328  51E5               	movf	(??_main+1)& (0+255),w,b
  1875  00032A  0A00               	xorlw	0	; case 0
  1876  00032C  B4D8               	btfsc	status,2,c
  1877  00032E  EF9B  F001         	goto	l3429
  1878  000332  EF86  F001         	goto	l3357
  1879  000336                     l3429:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ; Switch size 1, requested type "simple"
  1883                           ; Number of cases is 9, Range of values is 63 to 122
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte           28    15 (average)
  1887                           ;	Chosen strategy is simple_byte
  1888  000336  51E4               	movf	??_main& (0+255),w,b
  1889  000338  0A3F               	xorlw	63	; case 63
  1890  00033A  B4D8               	btfsc	status,2,c
  1891  00033C  EF98  F000         	goto	l3309
  1892  000340  0A6F               	xorlw	111	; case 80
  1893  000342  B4D8               	btfsc	status,2,c
  1894  000344  EF65  F001         	goto	l3349
  1895  000348  0A02               	xorlw	2	; case 82
  1896  00034A  B4D8               	btfsc	status,2,c
  1897  00034C  EF3D  F001         	goto	l270
  1898  000350  0A01               	xorlw	1	; case 83
  1899  000352  B4D8               	btfsc	status,2,c
  1900  000354  EF2B  F001         	goto	l3337
  1901  000358  0A09               	xorlw	9	; case 90
  1902  00035A  B4D8               	btfsc	status,2,c
  1903  00035C  EF02  F001         	goto	l3313
  1904  000360  0A35               	xorlw	53	; case 111
  1905  000362  B4D8               	btfsc	status,2,c
  1906  000364  EFFA  F000         	goto	l3311
  1907  000368  0A1F               	xorlw	31	; case 112
  1908  00036A  B4D8               	btfsc	status,2,c
  1909  00036C  EF65  F001         	goto	l3349
  1910  000370  0A02               	xorlw	2	; case 114
  1911  000372  B4D8               	btfsc	status,2,c
  1912  000374  EF5B  F001         	goto	l273
  1913  000378  0A08               	xorlw	8	; case 122
  1914  00037A  B4D8               	btfsc	status,2,c
  1915  00037C  EF17  F001         	goto	l3325
  1916  000380  EF86  F001         	goto	l3357
  1917  000384  EF26  F000         	goto	start
  1918  000388                     __end_of_main:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _printf *****************
  1922 ;; Defined at:
  1923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  1926 ;;		 -> STR_28(17), STR_27(14), STR_26(21), STR_25(32), 
  1927 ;;		 -> STR_24(31), STR_23(21), STR_22(2), STR_21(2), 
  1928 ;;		 -> STR_20(8), STR_19(52), STR_18(43), STR_17(19), 
  1929 ;;		 -> STR_16(37), STR_15(34), STR_14(24), STR_13(21), 
  1930 ;;		 -> STR_12(7), STR_11(15), STR_10(52), STR_9(10), 
  1931 ;;		 -> STR_8(12), STR_7(52), STR_6(5), STR_5(42), 
  1932 ;;		 -> STR_4(70), STR_3(22), STR_2(37), STR_1(8), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  ap              2   41[BANK0 ] PTR void [1]
  1935 ;;		 -> ?_printf(2), 
  1936 ;;  ret             2    0        int 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2   33[BANK0 ] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1946 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;Total ram usage:       10 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:   12
  1953 ;; This function calls:
  1954 ;;		_vfprintf
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text1
  1961  00161C                     __ptext1:
  1962                           	callstack 0
  1963  00161C                     _printf:
  1964                           	callstack 18
  1965  00161C  0EDC               	movlw	low (?_printf+2)
  1966  00161E  0100               	movlb	0	; () banked
  1967  001620  6FE2               	movwf	printf@ap& (0+255),b
  1968  001622  0E00               	movlw	high (?_printf+2)
  1969  001624  6FE3               	movwf	(printf@ap+1)& (0+255),b
  1970  001626                     
  1971                           ; BSR set to: 0
  1972  001626  0E00               	movlw	0
  1973  001628  6FD4               	movwf	vfprintf@fp& (0+255),b
  1974  00162A  0E00               	movlw	0
  1975  00162C  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  1976  00162E  C0DA  F0D6         	movff	printf@fmt,vfprintf@fmt
  1977  001632  C0DB  F0D7         	movff	printf@fmt+1,vfprintf@fmt+1
  1978  001636  0EE2               	movlw	low printf@ap
  1979  001638  6FD8               	movwf	vfprintf@ap& (0+255),b
  1980  00163A  0E00               	movlw	high printf@ap
  1981  00163C  6FD9               	movwf	(vfprintf@ap+1)& (0+255),b
  1982  00163E  ECBB  F008         	call	_vfprintf	;wreg free
  1983  001642  0012               	return		;funcret
  1984  001644                     __end_of_printf:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _vfprintf *****************
  1988 ;; Defined at:
  1989 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1992 ;;		 -> NULL(0), 
  1993 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1994 ;;		 -> STR_28(17), STR_27(14), STR_26(21), STR_25(32), 
  1995 ;;		 -> STR_24(31), STR_23(21), STR_22(2), STR_21(2), 
  1996 ;;		 -> STR_20(8), STR_19(52), STR_18(43), STR_17(19), 
  1997 ;;		 -> STR_16(37), STR_15(34), STR_14(24), STR_13(21), 
  1998 ;;		 -> STR_12(7), STR_11(15), STR_10(52), STR_9(10), 
  1999 ;;		 -> STR_8(12), STR_7(52), STR_6(5), STR_5(42), 
  2000 ;;		 -> STR_4(70), STR_3(22), STR_2(37), STR_1(8), 
  2001 ;;  ap              2   31[BANK0 ] PTR PTR void 
  2002 ;;		 -> printf@ap(2), 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  2005 ;;		 -> STR_28(17), STR_27(14), STR_26(21), STR_25(32), 
  2006 ;;		 -> STR_24(31), STR_23(21), STR_22(2), STR_21(2), 
  2007 ;;		 -> STR_20(8), STR_19(52), STR_18(43), STR_17(19), 
  2008 ;;		 -> STR_16(37), STR_15(34), STR_14(24), STR_13(21), 
  2009 ;;		 -> STR_12(7), STR_11(15), STR_10(52), STR_9(10), 
  2010 ;;		 -> STR_8(12), STR_7(52), STR_6(5), STR_5(42), 
  2011 ;;		 -> STR_4(70), STR_3(22), STR_2(37), STR_1(8), 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   27[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        8 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:   11
  2028 ;; This function calls:
  2029 ;;		_vfpfcnvrt
  2030 ;; This function is called by:
  2031 ;;		_printf
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text2
  2036  001176                     __ptext2:
  2037                           	callstack 0
  2038  001176                     _vfprintf:
  2039                           	callstack 18
  2040  001176                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2042  001176  C0D6  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  2043  00117A  C0D7  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2044  00117E                     
  2045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2046  00117E  0E00               	movlw	0
  2047  001180  0100               	movlb	0	; () banked
  2048  001182  6F81               	movwf	(_nout+1)& (0+255),b
  2049  001184  0E00               	movlw	0
  2050  001186  6F80               	movwf	_nout& (0+255),b
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2053  001188  EFD9  F008         	goto	l3267
  2054  00118C                     l3265:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2058  00118C  C0D4  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  2059  001190  C0D5  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2060  001194  0E4D               	movlw	low vfprintf@cfmt
  2061  001196  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  2062  001198  0E00               	movlw	high vfprintf@cfmt
  2063  00119A  6FBC               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2064  00119C  C0D8  F0BD         	movff	vfprintf@ap,vfpfcnvrt@ap
  2065  0011A0  C0D9  F0BE         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2066  0011A4  ECC4  F001         	call	_vfpfcnvrt	;wreg free
  2067  0011A8  0100               	movlb	0	; () banked
  2068  0011AA  51B9               	movf	?_vfpfcnvrt& (0+255),w,b
  2069  0011AC  2780               	addwf	_nout& (0+255),f,b
  2070  0011AE  51BA               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2071  0011B0  2381               	addwfc	(_nout+1)& (0+255),f,b
  2072  0011B2                     l3267:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2076  0011B2  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2077  0011B6  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2078  0011BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2079  0011BA  6AF8               	clrf	tblptru,c
  2080  0011BC                     	endif
  2081  0011BC                     	if	0	;tblptru may be non-zero
  2082  0011BC                     	endif
  2083  0011BC  0008               	tblrd		*
  2084  0011BE  50F5               	movf	tablat,w,c
  2085  0011C0  0900               	iorlw	0
  2086  0011C2  A4D8               	btfss	status,2,c
  2087  0011C4  EFE6  F008         	goto	u2841
  2088  0011C8  EFE8  F008         	goto	u2840
  2089  0011CC                     u2841:
  2090  0011CC  EFC6  F008         	goto	l3265
  2091  0011D0                     u2840:
  2092  0011D0                     
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2095  0011D0  C080  F0D4         	movff	_nout,?_vfprintf
  2096  0011D4  C081  F0D5         	movff	_nout+1,?_vfprintf+1
  2097  0011D8                     
  2098                           ; BSR set to: 0
  2099  0011D8  0012               	return		;funcret
  2100  0011DA                     __end_of_vfprintf:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _vfpfcnvrt *****************
  2104 ;; Defined at:
  2105 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2108 ;;		 -> NULL(0), 
  2109 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  2110 ;;		 -> vfprintf@cfmt(2), 
  2111 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2112 ;;		 -> printf@ap(2), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  llu             8   18[BANK0 ] unsigned long long 
  2115 ;;  ll              8   10[BANK0 ] long long 
  2116 ;;  f               4    0        long long 
  2117 ;;  vp              3    0        PTR void 
  2118 ;;  ct              3    0        unsigned char [3]
  2119 ;;  cp              3    0        PTR unsigned char 
  2120 ;;  i               2    0        int 
  2121 ;;  done            2    0        int 
  2122 ;;  c               1   26[BANK0 ] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  2    0[BANK0 ] int 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:       27 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:   10
  2139 ;; This function calls:
  2140 ;;		_ctoa
  2141 ;;		_dtoa
  2142 ;;		_fputc
  2143 ;;		_xtoa
  2144 ;; This function is called by:
  2145 ;;		_vfprintf
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text3
  2150  000388                     __ptext3:
  2151                           	callstack 0
  2152  000388                     _vfpfcnvrt:
  2153                           	callstack 18
  2154  000388                     
  2155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2156  000388  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2157  00038C  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2158  000390  CFDE FFF6          	movff	postinc2,tblptrl
  2159  000394  CFDD FFF7          	movff	postdec2,tblptrh
  2160  000398                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2161  000398  6AF8               	clrf	tblptru,c
  2162  00039A                     	endif
  2163  00039A                     	if	0	;tblptru may be non-zero
  2164  00039A                     	endif
  2165  00039A  0008               	tblrd		*
  2166  00039C  50F5               	movf	tablat,w,c
  2167  00039E  0A25               	xorlw	37
  2168  0003A0  A4D8               	btfss	status,2,c
  2169  0003A2  EFD5  F001         	goto	u2771
  2170  0003A6  EFD7  F001         	goto	u2770
  2171  0003AA                     u2771:
  2172  0003AA  EF39  F003         	goto	l3253
  2173  0003AE                     u2770:
  2174  0003AE                     
  2175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2176  0003AE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  0003B2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  0003B6  2ADE               	incf	postinc2,f,c
  2179  0003B8  0E00               	movlw	0
  2180  0003BA  22DD               	addwfc	postdec2,f,c
  2181  0003BC                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2183  0003BC  0E00               	movlw	0
  2184  0003BE  6E50               	movwf	(_width+1)^0,c
  2185  0003C0  0E00               	movlw	0
  2186  0003C2  6E4F               	movwf	_width^0,c
  2187  0003C4  C04F  F053         	movff	_width,_flags
  2188  0003C8  C050  F054         	movff	_width+1,_flags+1
  2189  0003CC                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2191  0003CC  6851               	setf	_prec^0,c
  2192  0003CE  6852               	setf	(_prec+1)^0,c
  2193  0003D0                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2195  0003D0  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  0003D4  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  0003D8  CFDE FFF6          	movff	postinc2,tblptrl
  2198  0003DC  CFDD FFF7          	movff	postdec2,tblptrh
  2199  0003E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2200  0003E0  6AF8               	clrf	tblptru,c
  2201  0003E2                     	endif
  2202  0003E2                     	if	0	;tblptru may be non-zero
  2203  0003E2                     	endif
  2204  0003E2  0008               	tblrd		*
  2205  0003E4  50F5               	movf	tablat,w,c
  2206  0003E6  0A63               	xorlw	99
  2207  0003E8  A4D8               	btfss	status,2,c
  2208  0003EA  EFF9  F001         	goto	u2781
  2209  0003EE  EFFB  F001         	goto	u2780
  2210  0003F2                     u2781:
  2211  0003F2  EF23  F002         	goto	l3213
  2212  0003F6                     u2780:
  2213  0003F6                     
  2214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2215  0003F6  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  0003FA  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  0003FE  2ADE               	incf	postinc2,f,c
  2218  000400  0E00               	movlw	0
  2219  000402  22DD               	addwfc	postdec2,f,c
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2222  000404  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2223  000408  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2224  00040C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  2225  000410  0E02               	movlw	2
  2226  000412  26DE               	addwf	postinc2,f,c
  2227  000414  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  2228  000418  0E00               	movlw	0
  2229  00041A  22DD               	addwfc	postdec2,f,c
  2230  00041C  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2231  000420  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2232  000424  50DF               	movf	indf2,w,c
  2233  000426  0100               	movlb	0	; () banked
  2234  000428  6FD3               	movwf	vfpfcnvrt@c& (0+255),b
  2235  00042A                     
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2238  00042A  C0B9  F026         	movff	vfpfcnvrt@fp,ctoa@fp
  2239  00042E  C0BA  F027         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2240  000432  C0D3  F028         	movff	vfpfcnvrt@c,ctoa@c
  2241  000436  EC4B  F009         	call	_ctoa	;wreg free
  2242  00043A  C026  F0B9         	movff	?_ctoa,?_vfpfcnvrt
  2243  00043E  C027  F0BA         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2244  000442  EF55  F003         	goto	l1266
  2245  000446                     l3213:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2248  000446  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2249  00044A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2250  00044E  CFDE FFF6          	movff	postinc2,tblptrl
  2251  000452  CFDD FFF7          	movff	postdec2,tblptrh
  2252  000456                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2253  000456  6AF8               	clrf	tblptru,c
  2254  000458                     	endif
  2255  000458                     	if	0	;tblptru may be non-zero
  2256  000458                     	endif
  2257  000458  0008               	tblrd		*
  2258  00045A  50F5               	movf	tablat,w,c
  2259  00045C  0A64               	xorlw	100
  2260  00045E  B4D8               	btfsc	status,2,c
  2261  000460  EF34  F002         	goto	u2791
  2262  000464  EF36  F002         	goto	u2790
  2263  000468                     u2791:
  2264  000468  EF49  F002         	goto	l3217
  2265  00046C                     u2790:
  2266  00046C  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  000470  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  000474  CFDE FFF6          	movff	postinc2,tblptrl
  2269  000478  CFDD FFF7          	movff	postdec2,tblptrh
  2270  00047C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2271  00047C  6AF8               	clrf	tblptru,c
  2272  00047E                     	endif
  2273  00047E                     	if	0	;tblptru may be non-zero
  2274  00047E                     	endif
  2275  00047E  0008               	tblrd		*
  2276  000480  50F5               	movf	tablat,w,c
  2277  000482  0A69               	xorlw	105
  2278  000484  A4D8               	btfss	status,2,c
  2279  000486  EF47  F002         	goto	u2801
  2280  00048A  EF49  F002         	goto	u2800
  2281  00048E                     u2801:
  2282  00048E  EF8A  F002         	goto	l3223
  2283  000492                     u2800:
  2284  000492                     l3217:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2287  000492  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2288  000496  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2289  00049A  2ADE               	incf	postinc2,f,c
  2290  00049C  0E00               	movlw	0
  2291  00049E  22DD               	addwfc	postdec2,f,c
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2294  0004A0  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2295  0004A4  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2296  0004A8  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  2297  0004AC  0E02               	movlw	2
  2298  0004AE  26DE               	addwf	postinc2,f,c
  2299  0004B0  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  2300  0004B4  0E00               	movlw	0
  2301  0004B6  22DD               	addwfc	postdec2,f,c
  2302  0004B8  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2303  0004BC  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2304  0004C0  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  2305  0004C4  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  2306  0004C8  0100               	movlb	0	; () banked
  2307  0004CA  0E00               	movlw	0
  2308  0004CC  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2309  0004CE  0EFF               	movlw	-1
  2310  0004D0  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2311  0004D2  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2312  0004D4  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2313  0004D6  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2314  0004D8  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2315  0004DA  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2316  0004DC                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2319  0004DC  C0B9  F026         	movff	vfpfcnvrt@fp,dtoa@fp
  2320  0004E0  C0BA  F027         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2321  0004E4  C0C3  F028         	movff	vfpfcnvrt@ll,dtoa@d
  2322  0004E8  C0C4  F029         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2323  0004EC  C0C5  F02A         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2324  0004F0  C0C6  F02B         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2325  0004F4  C0C7  F02C         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2326  0004F8  C0C8  F02D         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2327  0004FC  C0C9  F02E         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2328  000500  C0CA  F02F         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2329  000504  EC56  F003         	call	_dtoa	;wreg free
  2330  000508  C026  F0B9         	movff	?_dtoa,?_vfpfcnvrt
  2331  00050C  C027  F0BA         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2332  000510  EF55  F003         	goto	l1266
  2333  000514                     l3223:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2336  000514  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337  000518  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  00051C  CFDE FFF6          	movff	postinc2,tblptrl
  2339  000520  CFDD FFF7          	movff	postdec2,tblptrh
  2340  000524                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2341  000524  6AF8               	clrf	tblptru,c
  2342  000526                     	endif
  2343  000526                     	if	0	;tblptru may be non-zero
  2344  000526                     	endif
  2345  000526  0008               	tblrd		*
  2346  000528  50F5               	movf	tablat,w,c
  2347  00052A  0A78               	xorlw	120
  2348  00052C  B4D8               	btfsc	status,2,c
  2349  00052E  EF9B  F002         	goto	u2811
  2350  000532  EF9D  F002         	goto	u2810
  2351  000536                     u2811:
  2352  000536  EFB0  F002         	goto	l3227
  2353  00053A                     u2810:
  2354  00053A  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355  00053E  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356  000542  CFDE FFF6          	movff	postinc2,tblptrl
  2357  000546  CFDD FFF7          	movff	postdec2,tblptrh
  2358  00054A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2359  00054A  6AF8               	clrf	tblptru,c
  2360  00054C                     	endif
  2361  00054C                     	if	0	;tblptru may be non-zero
  2362  00054C                     	endif
  2363  00054C  0008               	tblrd		*
  2364  00054E  50F5               	movf	tablat,w,c
  2365  000550  0A58               	xorlw	88
  2366  000552  A4D8               	btfss	status,2,c
  2367  000554  EFAE  F002         	goto	u2821
  2368  000558  EFB0  F002         	goto	u2820
  2369  00055C                     u2821:
  2370  00055C  EF00  F003         	goto	l3237
  2371  000560                     u2820:
  2372  000560                     l3227:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  2375  000560  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2376  000564  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2377  000568  CFDE FFF6          	movff	postinc2,tblptrl
  2378  00056C  CFDD FFF7          	movff	postdec2,tblptrh
  2379  000570                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2380  000570  6AF8               	clrf	tblptru,c
  2381  000572                     	endif
  2382  000572                     	if	0	;tblptru may be non-zero
  2383  000572                     	endif
  2384  000572  0008               	tblrd		*
  2385  000574  CFF5 F0D3          	movff	tablat,vfpfcnvrt@c
  2386  000578                     
  2387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  2388  000578  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2389  00057C  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2390  000580  2ADE               	incf	postinc2,f,c
  2391  000582  0E00               	movlw	0
  2392  000584  22DD               	addwfc	postdec2,f,c
  2393  000586                     
  2394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2395  000586  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2396  00058A  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2397  00058E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  2398  000592  0E02               	movlw	2
  2399  000594  26DE               	addwf	postinc2,f,c
  2400  000596  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  2401  00059A  0E00               	movlw	0
  2402  00059C  22DD               	addwfc	postdec2,f,c
  2403  00059E  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2404  0005A2  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2405  0005A6  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt+2
  2406  0005AA  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+3
  2407  0005AE  C0C1  F0CB         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2408  0005B2  C0C2  F0CC         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2409  0005B6  0100               	movlb	0	; () banked
  2410  0005B8  6BCD               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2411  0005BA  6BCE               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2412  0005BC  6BCF               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2413  0005BE  6BD0               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2414  0005C0  6BD1               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2415  0005C2  6BD2               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2416  0005C4                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  2419  0005C4  C0B9  F026         	movff	vfpfcnvrt@fp,xtoa@fp
  2420  0005C8  C0BA  F027         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2421  0005CC  C0CB  F028         	movff	vfpfcnvrt@llu,xtoa@d
  2422  0005D0  C0CC  F029         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2423  0005D4  C0CD  F02A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2424  0005D8  C0CE  F02B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2425  0005DC  C0CF  F02C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2426  0005E0  C0D0  F02D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2427  0005E4  C0D1  F02E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2428  0005E8  C0D2  F02F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2429  0005EC  C0D3  F030         	movff	vfpfcnvrt@c,xtoa@x
  2430  0005F0  ECC5  F004         	call	_xtoa	;wreg free
  2431  0005F4  C026  F0B9         	movff	?_xtoa,?_vfpfcnvrt
  2432  0005F8  C027  F0BA         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2433  0005FC  EF55  F003         	goto	l1266
  2434  000600                     l3237:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2437  000600  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438  000604  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  000608  CFDE FFF6          	movff	postinc2,tblptrl
  2440  00060C  CFDD FFF7          	movff	postdec2,tblptrh
  2441  000610                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2442  000610  6AF8               	clrf	tblptru,c
  2443  000612                     	endif
  2444  000612                     	if	0	;tblptru may be non-zero
  2445  000612                     	endif
  2446  000612  0008               	tblrd		*
  2447  000614  50F5               	movf	tablat,w,c
  2448  000616  0A25               	xorlw	37
  2449  000618  A4D8               	btfss	status,2,c
  2450  00061A  EF11  F003         	goto	u2831
  2451  00061E  EF13  F003         	goto	u2830
  2452  000622                     u2831:
  2453  000622  EF2B  F003         	goto	l3247
  2454  000626                     u2830:
  2455  000626                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2457  000626  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  00062A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  00062E  2ADE               	incf	postinc2,f,c
  2460  000630  0E00               	movlw	0
  2461  000632  22DD               	addwfc	postdec2,f,c
  2462  000634                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2464  000634  0E00               	movlw	0
  2465  000636  6E0C               	movwf	(fputc@c+1)^0,c
  2466  000638  0E25               	movlw	37
  2467  00063A  6E0B               	movwf	fputc@c^0,c
  2468  00063C  C0B9  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2469  000640  C0BA  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2470  000644  EC70  F008         	call	_fputc	;wreg free
  2471  000648                     l3243:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2474  000648  0E00               	movlw	0
  2475  00064A  0100               	movlb	0	; () banked
  2476  00064C  6FBA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2477  00064E  0E01               	movlw	1
  2478  000650  6FB9               	movwf	?_vfpfcnvrt& (0+255),b
  2479  000652  EF55  F003         	goto	l1266
  2480  000656                     l3247:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2483  000656  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484  00065A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485  00065E  2ADE               	incf	postinc2,f,c
  2486  000660  0E00               	movlw	0
  2487  000662  22DD               	addwfc	postdec2,f,c
  2488  000664                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2490  000664  0E00               	movlw	0
  2491  000666  0100               	movlb	0	; () banked
  2492  000668  6FBA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2493  00066A  0E00               	movlw	0
  2494  00066C  6FB9               	movwf	?_vfpfcnvrt& (0+255),b
  2495  00066E  EF55  F003         	goto	l1266
  2496  000672                     l3253:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2499  000672  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2500  000676  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2501  00067A  CFDE FFF6          	movff	postinc2,tblptrl
  2502  00067E  CFDD FFF7          	movff	postdec2,tblptrh
  2503  000682                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2504  000682  6AF8               	clrf	tblptru,c
  2505  000684                     	endif
  2506  000684                     	if	0	;tblptru may be non-zero
  2507  000684                     	endif
  2508  000684  0008               	tblrd		*
  2509  000686  50F5               	movf	tablat,w,c
  2510  000688  6E0B               	movwf	fputc@c^0,c
  2511  00068A  6A0C               	clrf	(fputc@c+1)^0,c
  2512  00068C  C0B9  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2513  000690  C0BA  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2514  000694  EC70  F008         	call	_fputc	;wreg free
  2515  000698                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2517  000698  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2518  00069C  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2519  0006A0  2ADE               	incf	postinc2,f,c
  2520  0006A2  0E00               	movlw	0
  2521  0006A4  22DD               	addwfc	postdec2,f,c
  2522  0006A6  EF24  F003         	goto	l3243
  2523  0006AA                     l1266:
  2524  0006AA  0012               	return		;funcret
  2525  0006AC                     __end_of_vfpfcnvrt:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _xtoa *****************
  2529 ;; Defined at:
  2530 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2533 ;;		 -> NULL(0), 
  2534 ;;  d               8   39[COMRAM] unsigned long long 
  2535 ;;  x               1   47[COMRAM] unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  n               8   64[COMRAM] unsigned long long 
  2538 ;;  c               2   74[COMRAM] int 
  2539 ;;  i               2   72[COMRAM] int 
  2540 ;;  w               2   62[COMRAM] int 
  2541 ;;  p               2   60[COMRAM] int 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2   37[COMRAM] int 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2551 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;Total ram usage:       39 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    9
  2558 ;; This function calls:
  2559 ;;		_isalpha
  2560 ;;		_isupper
  2561 ;;		_pad
  2562 ;;		_toupper
  2563 ;; This function is called by:
  2564 ;;		_vfpfcnvrt
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text4
  2569  00098A                     __ptext4:
  2570                           	callstack 0
  2571  00098A                     _xtoa:
  2572                           	callstack 18
  2573  00098A                     
  2574                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  2575  00098A  BE52               	btfsc	(_prec+1)^0,7,c
  2576  00098C  EFCA  F004         	goto	u2601
  2577  000990  EFCC  F004         	goto	u2600
  2578  000994                     u2601:
  2579  000994  EFCD  F004         	goto	l3135
  2580  000998                     u2600:
  2581  000998                     
  2582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  2583  000998  9253               	bcf	_flags^0,1,c
  2584  00099A                     l3135:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  2587  00099A  BE52               	btfsc	(_prec+1)^0,7,c
  2588  00099C  EFDA  F004         	goto	u2610
  2589  0009A0  5052               	movf	(_prec+1)^0,w,c
  2590  0009A2  E106               	bnz	u2611
  2591  0009A4  0451               	decf	_prec^0,w,c
  2592  0009A6  B0D8               	btfsc	status,0,c
  2593  0009A8  EFD8  F004         	goto	u2611
  2594  0009AC  EFDA  F004         	goto	u2610
  2595  0009B0                     u2611:
  2596  0009B0  EFE0  F004         	goto	l1236
  2597  0009B4                     u2610:
  2598  0009B4  0E00               	movlw	0
  2599  0009B6  6E3E               	movwf	(xtoa@p+1)^0,c
  2600  0009B8  0E01               	movlw	1
  2601  0009BA  6E3D               	movwf	xtoa@p^0,c
  2602  0009BC  EFE4  F004         	goto	l1238
  2603  0009C0                     l1236:
  2604  0009C0  C051  F03D         	movff	_prec,xtoa@p
  2605  0009C4  C052  F03E         	movff	_prec+1,xtoa@p+1
  2606  0009C8                     l1238:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  2609  0009C8  C04F  F03F         	movff	_width,xtoa@w
  2610  0009CC  C050  F040         	movff	_width+1,xtoa@w+1
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  2613  0009D0  A853               	btfss	_flags^0,4,c
  2614  0009D2  EFED  F004         	goto	u2621
  2615  0009D6  EFEF  F004         	goto	u2620
  2616  0009DA                     u2621:
  2617  0009DA  EFF3  F004         	goto	l3141
  2618  0009DE                     u2620:
  2619  0009DE                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  2621  0009DE  0EFE               	movlw	254
  2622  0009E0  263F               	addwf	xtoa@w^0,f,c
  2623  0009E2  0EFF               	movlw	255
  2624  0009E4  2240               	addwfc	(xtoa@w+1)^0,f,c
  2625  0009E6                     l3141:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  2628  0009E6  C028  F041         	movff	xtoa@d,xtoa@n
  2629  0009EA  C029  F042         	movff	xtoa@d+1,xtoa@n+1
  2630  0009EE  C02A  F043         	movff	xtoa@d+2,xtoa@n+2
  2631  0009F2  C02B  F044         	movff	xtoa@d+3,xtoa@n+3
  2632  0009F6  C02C  F045         	movff	xtoa@d+4,xtoa@n+4
  2633  0009FA  C02D  F046         	movff	xtoa@d+5,xtoa@n+5
  2634  0009FE  C02E  F047         	movff	xtoa@d+6,xtoa@n+6
  2635  000A02  C02F  F048         	movff	xtoa@d+7,xtoa@n+7
  2636  000A06                     
  2637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  2638  000A06  0E00               	movlw	0
  2639  000A08  6E4A               	movwf	(xtoa@i+1)^0,c
  2640  000A0A  0E1F               	movlw	31
  2641  000A0C  6E49               	movwf	xtoa@i^0,c
  2642  000A0E                     
  2643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  2644  000A0E  0E00               	movlw	0
  2645  000A10  0100               	movlb	0	; () banked
  2646  000A12  6FB8               	movwf	(_dbuf+31)& (0+255),b
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2649  000A14  EFBF  F005         	goto	l3177
  2650  000A18                     l3147:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  2653  000A18  0649               	decf	xtoa@i^0,f,c
  2654  000A1A  A0D8               	btfss	status,0,c
  2655  000A1C  064A               	decf	(xtoa@i+1)^0,f,c
  2656  000A1E                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  2658  000A1E  0E0F               	movlw	15
  2659  000A20  1441               	andwf	xtoa@n^0,w,c
  2660  000A22  6E4B               	movwf	xtoa@c^0,c
  2661  000A24  6A4C               	clrf	(xtoa@c+1)^0,c
  2662  000A26                     
  2663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  2664  000A26  BE4C               	btfsc	(xtoa@c+1)^0,7,c
  2665  000A28  EF1F  F005         	goto	u2631
  2666  000A2C  504C               	movf	(xtoa@c+1)^0,w,c
  2667  000A2E  E109               	bnz	u2630
  2668  000A30  0E0A               	movlw	10
  2669  000A32  5C4B               	subwf	xtoa@c^0,w,c
  2670  000A34  A0D8               	btfss	status,0,c
  2671  000A36  EF1F  F005         	goto	u2631
  2672  000A3A  EF21  F005         	goto	u2630
  2673  000A3E                     u2631:
  2674  000A3E  EF29  F005         	goto	l3155
  2675  000A42                     u2630:
  2676  000A42  0E57               	movlw	87
  2677  000A44  244B               	addwf	xtoa@c^0,w,c
  2678  000A46  6E4B               	movwf	xtoa@c^0,c
  2679  000A48  0E00               	movlw	0
  2680  000A4A  204C               	addwfc	(xtoa@c+1)^0,w,c
  2681  000A4C  6E4C               	movwf	(xtoa@c+1)^0,c
  2682  000A4E  EF2F  F005         	goto	l1245
  2683  000A52                     l3155:
  2684  000A52  0E30               	movlw	48
  2685  000A54  244B               	addwf	xtoa@c^0,w,c
  2686  000A56  6E4B               	movwf	xtoa@c^0,c
  2687  000A58  0E00               	movlw	0
  2688  000A5A  204C               	addwfc	(xtoa@c+1)^0,w,c
  2689  000A5C  6E4C               	movwf	(xtoa@c+1)^0,c
  2690  000A5E                     l1245:
  2691  000A5E  0EBF               	movlw	191
  2692  000A60  6E31               	movwf	??_xtoa^0,c
  2693  000A62  0EFF               	movlw	255
  2694  000A64  6E32               	movwf	(??_xtoa+1)^0,c
  2695  000A66  5030               	movf	xtoa@x^0,w,c
  2696  000A68  6E33               	movwf	(??_xtoa+2)^0,c
  2697  000A6A  6A34               	clrf	(??_xtoa+3)^0,c
  2698  000A6C  5031               	movf	??_xtoa^0,w,c
  2699  000A6E  2633               	addwf	(??_xtoa+2)^0,f,c
  2700  000A70  5032               	movf	(??_xtoa+1)^0,w,c
  2701  000A72  2234               	addwfc	(??_xtoa+3)^0,f,c
  2702  000A74  5034               	movf	(??_xtoa+3)^0,w,c
  2703  000A76  E10A               	bnz	u2640
  2704  000A78  0E1A               	movlw	26
  2705  000A7A  5C33               	subwf	(??_xtoa+2)^0,w,c
  2706  000A7C  A0D8               	btfss	status,0,c
  2707  000A7E  EF43  F005         	goto	u2641
  2708  000A82  EF46  F005         	goto	u2640
  2709  000A86                     u2641:
  2710  000A86  0E01               	movlw	1
  2711  000A88  EF47  F005         	goto	u2650
  2712  000A8C                     u2640:
  2713  000A8C  0E00               	movlw	0
  2714  000A8E                     u2650:
  2715  000A8E  6E39               	movwf	_xtoa$1874^0,c
  2716  000A90  6A3A               	clrf	(_xtoa$1874+1)^0,c
  2717  000A92  5039               	movf	_xtoa$1874^0,w,c
  2718  000A94  103A               	iorwf	(_xtoa$1874+1)^0,w,c
  2719  000A96  B4D8               	btfsc	status,2,c
  2720  000A98  EF50  F005         	goto	u2661
  2721  000A9C  EF52  F005         	goto	u2660
  2722  000AA0                     u2661:
  2723  000AA0  EF82  F005         	goto	l3169
  2724  000AA4                     u2660:
  2725  000AA4  0E9F               	movlw	159
  2726  000AA6  6E31               	movwf	??_xtoa^0,c
  2727  000AA8  0EFF               	movlw	255
  2728  000AAA  6E32               	movwf	(??_xtoa+1)^0,c
  2729  000AAC  0E20               	movlw	32
  2730  000AAE  104B               	iorwf	xtoa@c^0,w,c
  2731  000AB0  6E33               	movwf	(??_xtoa+2)^0,c
  2732  000AB2  0E00               	movlw	0
  2733  000AB4  104C               	iorwf	(xtoa@c+1)^0,w,c
  2734  000AB6  6E34               	movwf	(??_xtoa+3)^0,c
  2735  000AB8  5031               	movf	??_xtoa^0,w,c
  2736  000ABA  2633               	addwf	(??_xtoa+2)^0,f,c
  2737  000ABC  5032               	movf	(??_xtoa+1)^0,w,c
  2738  000ABE  2234               	addwfc	(??_xtoa+3)^0,f,c
  2739  000AC0  5034               	movf	(??_xtoa+3)^0,w,c
  2740  000AC2  E10A               	bnz	u2670
  2741  000AC4  0E1A               	movlw	26
  2742  000AC6  5C33               	subwf	(??_xtoa+2)^0,w,c
  2743  000AC8  A0D8               	btfss	status,0,c
  2744  000ACA  EF69  F005         	goto	u2671
  2745  000ACE  EF6C  F005         	goto	u2670
  2746  000AD2                     u2671:
  2747  000AD2  0E01               	movlw	1
  2748  000AD4  EF6D  F005         	goto	u2680
  2749  000AD8                     u2670:
  2750  000AD8  0E00               	movlw	0
  2751  000ADA                     u2680:
  2752  000ADA  6E3B               	movwf	_xtoa$1875^0,c
  2753  000ADC  6A3C               	clrf	(_xtoa$1875+1)^0,c
  2754  000ADE  503B               	movf	_xtoa$1875^0,w,c
  2755  000AE0  103C               	iorwf	(_xtoa$1875+1)^0,w,c
  2756  000AE2  B4D8               	btfsc	status,2,c
  2757  000AE4  EF76  F005         	goto	u2691
  2758  000AE8  EF78  F005         	goto	u2690
  2759  000AEC                     u2691:
  2760  000AEC  EF82  F005         	goto	l3169
  2761  000AF0                     u2690:
  2762  000AF0                     
  2763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  2764  000AF0  C04B  F00F         	movff	xtoa@c,toupper@c
  2765  000AF4  C04C  F010         	movff	xtoa@c+1,toupper@c+1
  2766  000AF8  EC1C  F009         	call	_toupper	;wreg free
  2767  000AFC  C00F  F04B         	movff	?_toupper,xtoa@c
  2768  000B00  C010  F04C         	movff	?_toupper+1,xtoa@c+1
  2769  000B04                     l3169:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  2772  000B04  0E99               	movlw	low _dbuf
  2773  000B06  2449               	addwf	xtoa@i^0,w,c
  2774  000B08  6ED9               	movwf	fsr2l,c
  2775  000B0A  0E00               	movlw	high _dbuf
  2776  000B0C  204A               	addwfc	(xtoa@i+1)^0,w,c
  2777  000B0E  6EDA               	movwf	fsr2h,c
  2778  000B10  C04B  FFDF         	movff	xtoa@c,indf2
  2779  000B14                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  2781  000B14  063D               	decf	xtoa@p^0,f,c
  2782  000B16  A0D8               	btfss	status,0,c
  2783  000B18  063E               	decf	(xtoa@p+1)^0,f,c
  2784  000B1A                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  2786  000B1A  063F               	decf	xtoa@w^0,f,c
  2787  000B1C  A0D8               	btfss	status,0,c
  2788  000B1E  0640               	decf	(xtoa@w+1)^0,f,c
  2789  000B20                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  2791  000B20  C041  F031         	movff	xtoa@n,??_xtoa
  2792  000B24  C042  F032         	movff	xtoa@n+1,??_xtoa+1
  2793  000B28  C043  F033         	movff	xtoa@n+2,??_xtoa+2
  2794  000B2C  C044  F034         	movff	xtoa@n+3,??_xtoa+3
  2795  000B30  C045  F035         	movff	xtoa@n+4,??_xtoa+4
  2796  000B34  C046  F036         	movff	xtoa@n+5,??_xtoa+5
  2797  000B38  C047  F037         	movff	xtoa@n+6,??_xtoa+6
  2798  000B3C  C048  F038         	movff	xtoa@n+7,??_xtoa+7
  2799  000B40  0E05               	movlw	5
  2800  000B42  EFAC  F005         	goto	u2700
  2801  000B46                     u2705:
  2802  000B46  90D8               	bcf	status,0,c
  2803  000B48  3238               	rrcf	(??_xtoa+7)^0,f,c
  2804  000B4A  3237               	rrcf	(??_xtoa+6)^0,f,c
  2805  000B4C  3236               	rrcf	(??_xtoa+5)^0,f,c
  2806  000B4E  3235               	rrcf	(??_xtoa+4)^0,f,c
  2807  000B50  3234               	rrcf	(??_xtoa+3)^0,f,c
  2808  000B52  3233               	rrcf	(??_xtoa+2)^0,f,c
  2809  000B54  3232               	rrcf	(??_xtoa+1)^0,f,c
  2810  000B56  3231               	rrcf	??_xtoa^0,f,c
  2811  000B58                     u2700:
  2812  000B58  2EE8               	decfsz	wreg,f,c
  2813  000B5A  EFA3  F005         	goto	u2705
  2814  000B5E  C031  F041         	movff	??_xtoa,xtoa@n
  2815  000B62  C032  F042         	movff	??_xtoa+1,xtoa@n+1
  2816  000B66  C033  F043         	movff	??_xtoa+2,xtoa@n+2
  2817  000B6A  C034  F044         	movff	??_xtoa+3,xtoa@n+3
  2818  000B6E  C035  F045         	movff	??_xtoa+4,xtoa@n+4
  2819  000B72  C036  F046         	movff	??_xtoa+5,xtoa@n+5
  2820  000B76  C037  F047         	movff	??_xtoa+6,xtoa@n+6
  2821  000B7A  C038  F048         	movff	??_xtoa+7,xtoa@n+7
  2822  000B7E                     l3177:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2825  000B7E  BE4A               	btfsc	(xtoa@i+1)^0,7,c
  2826  000B80  EFCB  F005         	goto	u2711
  2827  000B84  504A               	movf	(xtoa@i+1)^0,w,c
  2828  000B86  E109               	bnz	u2710
  2829  000B88  0E02               	movlw	2
  2830  000B8A  5C49               	subwf	xtoa@i^0,w,c
  2831  000B8C  A0D8               	btfss	status,0,c
  2832  000B8E  EFCB  F005         	goto	u2711
  2833  000B92  EFCD  F005         	goto	u2710
  2834  000B96                     u2711:
  2835  000B96  EFFD  F005         	goto	l1259
  2836  000B9A                     u2710:
  2837  000B9A  5041               	movf	xtoa@n^0,w,c
  2838  000B9C  1042               	iorwf	(xtoa@n+1)^0,w,c
  2839  000B9E  1043               	iorwf	(xtoa@n+2)^0,w,c
  2840  000BA0  1044               	iorwf	(xtoa@n+3)^0,w,c
  2841  000BA2  1045               	iorwf	(xtoa@n+4)^0,w,c
  2842  000BA4  1046               	iorwf	(xtoa@n+5)^0,w,c
  2843  000BA6  1047               	iorwf	(xtoa@n+6)^0,w,c
  2844  000BA8  1048               	iorwf	(xtoa@n+7)^0,w,c
  2845  000BAA  A4D8               	btfss	status,2,c
  2846  000BAC  EFDA  F005         	goto	u2721
  2847  000BB0  EFDC  F005         	goto	u2720
  2848  000BB4                     u2721:
  2849  000BB4  EF0C  F005         	goto	l3147
  2850  000BB8                     u2720:
  2851  000BB8  BE3E               	btfsc	(xtoa@p+1)^0,7,c
  2852  000BBA  EFE9  F005         	goto	u2730
  2853  000BBE  503E               	movf	(xtoa@p+1)^0,w,c
  2854  000BC0  E106               	bnz	u2731
  2855  000BC2  043D               	decf	xtoa@p^0,w,c
  2856  000BC4  B0D8               	btfsc	status,0,c
  2857  000BC6  EFE7  F005         	goto	u2731
  2858  000BCA  EFE9  F005         	goto	u2730
  2859  000BCE                     u2731:
  2860  000BCE  EF0C  F005         	goto	l3147
  2861  000BD2                     u2730:
  2862  000BD2  BE40               	btfsc	(xtoa@w+1)^0,7,c
  2863  000BD4  EFF4  F005         	goto	u2741
  2864  000BD8  5040               	movf	(xtoa@w+1)^0,w,c
  2865  000BDA  E108               	bnz	u2740
  2866  000BDC  043F               	decf	xtoa@w^0,w,c
  2867  000BDE  A0D8               	btfss	status,0,c
  2868  000BE0  EFF4  F005         	goto	u2741
  2869  000BE4  EFF6  F005         	goto	u2740
  2870  000BE8                     u2741:
  2871  000BE8  EFFD  F005         	goto	l1259
  2872  000BEC                     u2740:
  2873  000BEC  B253               	btfsc	_flags^0,1,c
  2874  000BEE  EFFB  F005         	goto	u2751
  2875  000BF2  EFFD  F005         	goto	u2750
  2876  000BF6                     u2751:
  2877  000BF6  EF0C  F005         	goto	l3147
  2878  000BFA                     u2750:
  2879  000BFA                     l1259:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2882  000BFA  A853               	btfss	_flags^0,4,c
  2883  000BFC  EF02  F006         	goto	u2761
  2884  000C00  EF04  F006         	goto	u2760
  2885  000C04                     u2761:
  2886  000C04  EF1A  F006         	goto	l3193
  2887  000C08                     u2760:
  2888  000C08                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  2890  000C08  0649               	decf	xtoa@i^0,f,c
  2891  000C0A  A0D8               	btfss	status,0,c
  2892  000C0C  064A               	decf	(xtoa@i+1)^0,f,c
  2893  000C0E                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  2895  000C0E  0E99               	movlw	low _dbuf
  2896  000C10  2449               	addwf	xtoa@i^0,w,c
  2897  000C12  6ED9               	movwf	fsr2l,c
  2898  000C14  0E00               	movlw	high _dbuf
  2899  000C16  204A               	addwfc	(xtoa@i+1)^0,w,c
  2900  000C18  6EDA               	movwf	fsr2h,c
  2901  000C1A  C030  FFDF         	movff	xtoa@x,indf2
  2902  000C1E                     
  2903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  2904  000C1E  0649               	decf	xtoa@i^0,f,c
  2905  000C20  A0D8               	btfss	status,0,c
  2906  000C22  064A               	decf	(xtoa@i+1)^0,f,c
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  2909  000C24  0E99               	movlw	low _dbuf
  2910  000C26  2449               	addwf	xtoa@i^0,w,c
  2911  000C28  6ED9               	movwf	fsr2l,c
  2912  000C2A  0E00               	movlw	high _dbuf
  2913  000C2C  204A               	addwfc	(xtoa@i+1)^0,w,c
  2914  000C2E  6EDA               	movwf	fsr2h,c
  2915  000C30  0E30               	movlw	48
  2916  000C32  6EDF               	movwf	indf2,c
  2917  000C34                     l3193:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  2920  000C34  C026  F01B         	movff	xtoa@fp,pad@fp
  2921  000C38  C027  F01C         	movff	xtoa@fp+1,pad@fp+1
  2922  000C3C  0E99               	movlw	low _dbuf
  2923  000C3E  2449               	addwf	xtoa@i^0,w,c
  2924  000C40  6E1D               	movwf	pad@buf^0,c
  2925  000C42  0E00               	movlw	high _dbuf
  2926  000C44  204A               	addwfc	(xtoa@i+1)^0,w,c
  2927  000C46  6E1E               	movwf	(pad@buf+1)^0,c
  2928  000C48  C03F  F01F         	movff	xtoa@w,pad@p
  2929  000C4C  C040  F020         	movff	xtoa@w+1,pad@p+1
  2930  000C50  EC0F  F008         	call	_pad	;wreg free
  2931  000C54  C01B  F026         	movff	?_pad,?_xtoa
  2932  000C58  C01C  F027         	movff	?_pad+1,?_xtoa+1
  2933  000C5C  0012               	return		;funcret
  2934  000C5E                     __end_of_xtoa:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _toupper *****************
  2938 ;; Defined at:
  2939 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  c               2   14[COMRAM] int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2   14[COMRAM] int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        8 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    5
  2960 ;; This function calls:
  2961 ;;		_islower
  2962 ;; This function is called by:
  2963 ;;		_xtoa
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text5
  2968  001238                     __ptext5:
  2969                           	callstack 0
  2970  001238                     _toupper:
  2971                           	callstack 21
  2972  001238  0E9F               	movlw	159
  2973  00123A  6E11               	movwf	??_toupper^0,c
  2974  00123C  0EFF               	movlw	255
  2975  00123E  6E12               	movwf	(??_toupper+1)^0,c
  2976  001240  C00F  F013         	movff	toupper@c,??_toupper+2
  2977  001244  C010  F014         	movff	toupper@c+1,??_toupper+3
  2978  001248  5011               	movf	??_toupper^0,w,c
  2979  00124A  2613               	addwf	(??_toupper+2)^0,f,c
  2980  00124C  5012               	movf	(??_toupper+1)^0,w,c
  2981  00124E  2214               	addwfc	(??_toupper+3)^0,f,c
  2982  001250  5014               	movf	(??_toupper+3)^0,w,c
  2983  001252  E10A               	bnz	u2410
  2984  001254  0E1A               	movlw	26
  2985  001256  5C13               	subwf	(??_toupper+2)^0,w,c
  2986  001258  A0D8               	btfss	status,0,c
  2987  00125A  EF31  F009         	goto	u2411
  2988  00125E  EF34  F009         	goto	u2410
  2989  001262                     u2411:
  2990  001262  0E01               	movlw	1
  2991  001264  EF35  F009         	goto	u2420
  2992  001268                     u2410:
  2993  001268  0E00               	movlw	0
  2994  00126A                     u2420:
  2995  00126A  6E15               	movwf	_toupper$1954^0,c
  2996  00126C  6A16               	clrf	(_toupper$1954+1)^0,c
  2997  00126E  5015               	movf	_toupper$1954^0,w,c
  2998  001270  1016               	iorwf	(_toupper$1954+1)^0,w,c
  2999  001272  B4D8               	btfsc	status,2,c
  3000  001274  EF3E  F009         	goto	u2431
  3001  001278  EF40  F009         	goto	u2430
  3002  00127C                     u2431:
  3003  00127C  EF46  F009         	goto	l1329
  3004  001280                     u2430:
  3005  001280  0E5F               	movlw	95
  3006  001282  140F               	andwf	toupper@c^0,w,c
  3007  001284  6E0F               	movwf	?_toupper^0,c
  3008  001286  6A10               	clrf	(?_toupper+1)^0,c
  3009  001288  EF4A  F009         	goto	l1334
  3010  00128C                     l1329:
  3011  00128C  C00F  F00F         	movff	toupper@c,?_toupper
  3012  001290  C010  F010         	movff	toupper@c+1,?_toupper+1
  3013  001294                     l1334:
  3014  001294  0012               	return		;funcret
  3015  001296                     __end_of_toupper:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function _islower *****************
  3019 ;; Defined at:
  3020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  c               2    8[COMRAM] int 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2    8[COMRAM] int 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;Total ram usage:        6 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    4
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_toupper
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text6
  3049  00146C                     __ptext6:
  3050                           	callstack 0
  3051  00146C                     _islower:
  3052                           	callstack 21
  3053  00146C  0E9F               	movlw	159
  3054  00146E  6E0B               	movwf	??_islower^0,c
  3055  001470  0EFF               	movlw	255
  3056  001472  6E0C               	movwf	(??_islower+1)^0,c
  3057  001474  C009  F00D         	movff	islower@c,??_islower+2
  3058  001478  C00A  F00E         	movff	islower@c+1,??_islower+3
  3059  00147C  500B               	movf	??_islower^0,w,c
  3060  00147E  260D               	addwf	(??_islower+2)^0,f,c
  3061  001480  500C               	movf	(??_islower+1)^0,w,c
  3062  001482  220E               	addwfc	(??_islower+3)^0,f,c
  3063  001484  500E               	movf	(??_islower+3)^0,w,c
  3064  001486  E10A               	bnz	u2170
  3065  001488  0E1A               	movlw	26
  3066  00148A  5C0D               	subwf	(??_islower+2)^0,w,c
  3067  00148C  A0D8               	btfss	status,0,c
  3068  00148E  EF4B  F00A         	goto	u2171
  3069  001492  EF4E  F00A         	goto	u2170
  3070  001496                     u2171:
  3071  001496  0E01               	movlw	1
  3072  001498  EF4F  F00A         	goto	u2180
  3073  00149C                     u2170:
  3074  00149C  0E00               	movlw	0
  3075  00149E                     u2180:
  3076  00149E  6E09               	movwf	?_islower^0,c
  3077  0014A0  6A0A               	clrf	(?_islower+1)^0,c
  3078  0014A2  0012               	return		;funcret
  3079  0014A4                     __end_of_islower:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _isupper *****************
  3083 ;; Defined at:
  3084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  c               2    8[COMRAM] int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    8[COMRAM] int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        6 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    4
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_xtoa
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text7
  3113  0014A4                     __ptext7:
  3114                           	callstack 0
  3115  0014A4                     _isupper:
  3116                           	callstack 22
  3117  0014A4  0EBF               	movlw	191
  3118  0014A6  6E0B               	movwf	??_isupper^0,c
  3119  0014A8  0EFF               	movlw	255
  3120  0014AA  6E0C               	movwf	(??_isupper+1)^0,c
  3121  0014AC  C009  F00D         	movff	isupper@c,??_isupper+2
  3122  0014B0  C00A  F00E         	movff	isupper@c+1,??_isupper+3
  3123  0014B4  500B               	movf	??_isupper^0,w,c
  3124  0014B6  260D               	addwf	(??_isupper+2)^0,f,c
  3125  0014B8  500C               	movf	(??_isupper+1)^0,w,c
  3126  0014BA  220E               	addwfc	(??_isupper+3)^0,f,c
  3127  0014BC  500E               	movf	(??_isupper+3)^0,w,c
  3128  0014BE  E10A               	bnz	u2370
  3129  0014C0  0E1A               	movlw	26
  3130  0014C2  5C0D               	subwf	(??_isupper+2)^0,w,c
  3131  0014C4  A0D8               	btfss	status,0,c
  3132  0014C6  EF67  F00A         	goto	u2371
  3133  0014CA  EF6A  F00A         	goto	u2370
  3134  0014CE                     u2371:
  3135  0014CE  0E01               	movlw	1
  3136  0014D0  EF6B  F00A         	goto	u2380
  3137  0014D4                     u2370:
  3138  0014D4  0E00               	movlw	0
  3139  0014D6                     u2380:
  3140  0014D6  6E09               	movwf	?_isupper^0,c
  3141  0014D8  6A0A               	clrf	(?_isupper+1)^0,c
  3142  0014DA  0012               	return		;funcret
  3143  0014DC                     __end_of_isupper:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _isalpha *****************
  3147 ;; Defined at:
  3148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  c               2    8[COMRAM] int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2    8[COMRAM] int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;Total ram usage:        6 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    4
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_xtoa
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text8
  3177  0013F4                     __ptext8:
  3178                           	callstack 0
  3179  0013F4                     _isalpha:
  3180                           	callstack 22
  3181  0013F4  0E9F               	movlw	159
  3182  0013F6  6E0B               	movwf	??_isalpha^0,c
  3183  0013F8  0EFF               	movlw	255
  3184  0013FA  6E0C               	movwf	(??_isalpha+1)^0,c
  3185  0013FC  0E20               	movlw	32
  3186  0013FE  1009               	iorwf	isalpha@c^0,w,c
  3187  001400  6E0D               	movwf	(??_isalpha+2)^0,c
  3188  001402  0E00               	movlw	0
  3189  001404  100A               	iorwf	(isalpha@c+1)^0,w,c
  3190  001406  6E0E               	movwf	(??_isalpha+3)^0,c
  3191  001408  500B               	movf	??_isalpha^0,w,c
  3192  00140A  260D               	addwf	(??_isalpha+2)^0,f,c
  3193  00140C  500C               	movf	(??_isalpha+1)^0,w,c
  3194  00140E  220E               	addwfc	(??_isalpha+3)^0,f,c
  3195  001410  500E               	movf	(??_isalpha+3)^0,w,c
  3196  001412  E10A               	bnz	u2390
  3197  001414  0E1A               	movlw	26
  3198  001416  5C0D               	subwf	(??_isalpha+2)^0,w,c
  3199  001418  A0D8               	btfss	status,0,c
  3200  00141A  EF11  F00A         	goto	u2391
  3201  00141E  EF14  F00A         	goto	u2390
  3202  001422                     u2391:
  3203  001422  0E01               	movlw	1
  3204  001424  EF15  F00A         	goto	u2400
  3205  001428                     u2390:
  3206  001428  0E00               	movlw	0
  3207  00142A                     u2400:
  3208  00142A  6E09               	movwf	?_isalpha^0,c
  3209  00142C  6A0A               	clrf	(?_isalpha+1)^0,c
  3210  00142E  0012               	return		;funcret
  3211  001430                     __end_of_isalpha:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _dtoa *****************
  3215 ;; Defined at:
  3216 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  3219 ;;		 -> NULL(0), 
  3220 ;;  d               8   39[COMRAM] long long 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  n               8   63[COMRAM] long long 
  3223 ;;  i               2   71[COMRAM] int 
  3224 ;;  s               2   61[COMRAM] int 
  3225 ;;  w               2   59[COMRAM] int 
  3226 ;;  p               2   57[COMRAM] int 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2   37[COMRAM] int 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3236 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;Total ram usage:       36 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    9
  3243 ;; This function calls:
  3244 ;;		___aodiv
  3245 ;;		___aomod
  3246 ;;		_abs
  3247 ;;		_pad
  3248 ;; This function is called by:
  3249 ;;		_vfpfcnvrt
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text9
  3254  0006AC                     __ptext9:
  3255                           	callstack 0
  3256  0006AC                     _dtoa:
  3257                           	callstack 18
  3258  0006AC                     
  3259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  3260  0006AC  C028  F040         	movff	dtoa@d,dtoa@n
  3261  0006B0  C029  F041         	movff	dtoa@d+1,dtoa@n+1
  3262  0006B4  C02A  F042         	movff	dtoa@d+2,dtoa@n+2
  3263  0006B8  C02B  F043         	movff	dtoa@d+3,dtoa@n+3
  3264  0006BC  C02C  F044         	movff	dtoa@d+4,dtoa@n+4
  3265  0006C0  C02D  F045         	movff	dtoa@d+5,dtoa@n+5
  3266  0006C4  C02E  F046         	movff	dtoa@d+6,dtoa@n+6
  3267  0006C8  C02F  F047         	movff	dtoa@d+7,dtoa@n+7
  3268  0006CC                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  3270  0006CC  BE47               	btfsc	(dtoa@n+7)^0,7,c
  3271  0006CE  EF6B  F003         	goto	u2451
  3272  0006D2  EF6E  F003         	goto	u2450
  3273  0006D6                     u2451:
  3274  0006D6  0E01               	movlw	1
  3275  0006D8  EF6F  F003         	goto	u2460
  3276  0006DC                     u2450:
  3277  0006DC  0E00               	movlw	0
  3278  0006DE                     u2460:
  3279  0006DE  6E3E               	movwf	dtoa@s^0,c
  3280  0006E0  6A3F               	clrf	(dtoa@s+1)^0,c
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  3283  0006E2  503E               	movf	dtoa@s^0,w,c
  3284  0006E4  103F               	iorwf	(dtoa@s+1)^0,w,c
  3285  0006E6  B4D8               	btfsc	status,2,c
  3286  0006E8  EF78  F003         	goto	u2471
  3287  0006EC  EF7A  F003         	goto	u2470
  3288  0006F0                     u2471:
  3289  0006F0  EF8A  F003         	goto	l3075
  3290  0006F4                     u2470:
  3291  0006F4                     
  3292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  3293  0006F4  1E47               	comf	(dtoa@n+7)^0,f,c
  3294  0006F6  1E46               	comf	(dtoa@n+6)^0,f,c
  3295  0006F8  1E45               	comf	(dtoa@n+5)^0,f,c
  3296  0006FA  1E44               	comf	(dtoa@n+4)^0,f,c
  3297  0006FC  1E43               	comf	(dtoa@n+3)^0,f,c
  3298  0006FE  1E42               	comf	(dtoa@n+2)^0,f,c
  3299  000700  1E41               	comf	(dtoa@n+1)^0,f,c
  3300  000702  6C40               	negf	dtoa@n^0,c
  3301  000704  0E00               	movlw	0
  3302  000706  2241               	addwfc	(dtoa@n+1)^0,f,c
  3303  000708  2242               	addwfc	(dtoa@n+2)^0,f,c
  3304  00070A  2243               	addwfc	(dtoa@n+3)^0,f,c
  3305  00070C  2244               	addwfc	(dtoa@n+4)^0,f,c
  3306  00070E  2245               	addwfc	(dtoa@n+5)^0,f,c
  3307  000710  2246               	addwfc	(dtoa@n+6)^0,f,c
  3308  000712  2247               	addwfc	(dtoa@n+7)^0,f,c
  3309  000714                     l3075:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  3312  000714  BE52               	btfsc	(_prec+1)^0,7,c
  3313  000716  EF8F  F003         	goto	u2481
  3314  00071A  EF91  F003         	goto	u2480
  3315  00071E                     u2481:
  3316  00071E  EF92  F003         	goto	l3079
  3317  000722                     u2480:
  3318  000722                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  3320  000722  9253               	bcf	_flags^0,1,c
  3321  000724                     l3079:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  3324  000724  BE52               	btfsc	(_prec+1)^0,7,c
  3325  000726  EF9F  F003         	goto	u2490
  3326  00072A  5052               	movf	(_prec+1)^0,w,c
  3327  00072C  E106               	bnz	u2491
  3328  00072E  0451               	decf	_prec^0,w,c
  3329  000730  B0D8               	btfsc	status,0,c
  3330  000732  EF9D  F003         	goto	u2491
  3331  000736  EF9F  F003         	goto	u2490
  3332  00073A                     u2491:
  3333  00073A  EFA5  F003         	goto	l1211
  3334  00073E                     u2490:
  3335  00073E  0E00               	movlw	0
  3336  000740  6E3B               	movwf	(dtoa@p+1)^0,c
  3337  000742  0E01               	movlw	1
  3338  000744  6E3A               	movwf	dtoa@p^0,c
  3339  000746  EFA9  F003         	goto	l1213
  3340  00074A                     l1211:
  3341  00074A  C051  F03A         	movff	_prec,dtoa@p
  3342  00074E  C052  F03B         	movff	_prec+1,dtoa@p+1
  3343  000752                     l1213:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  3346  000752  C04F  F03C         	movff	_width,dtoa@w
  3347  000756  C050  F03D         	movff	_width+1,dtoa@w+1
  3348  00075A                     
  3349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  3350  00075A  503E               	movf	dtoa@s^0,w,c
  3351  00075C  103F               	iorwf	(dtoa@s+1)^0,w,c
  3352  00075E  A4D8               	btfss	status,2,c
  3353  000760  EFB4  F003         	goto	u2501
  3354  000764  EFB6  F003         	goto	u2500
  3355  000768                     u2501:
  3356  000768  EFBD  F003         	goto	l3087
  3357  00076C                     u2500:
  3358  00076C  A453               	btfss	_flags^0,2,c
  3359  00076E  EFBB  F003         	goto	u2511
  3360  000772  EFBD  F003         	goto	u2510
  3361  000776                     u2511:
  3362  000776  EFC0  F003         	goto	l3089
  3363  00077A                     u2510:
  3364  00077A                     l3087:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  3367  00077A  063C               	decf	dtoa@w^0,f,c
  3368  00077C  A0D8               	btfss	status,0,c
  3369  00077E  063D               	decf	(dtoa@w+1)^0,f,c
  3370  000780                     l3089:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  3373  000780  0E00               	movlw	0
  3374  000782  6E49               	movwf	(dtoa@i+1)^0,c
  3375  000784  0E1F               	movlw	31
  3376  000786  6E48               	movwf	dtoa@i^0,c
  3377  000788                     
  3378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  3379  000788  0E00               	movlw	0
  3380  00078A  0100               	movlb	0	; () banked
  3381  00078C  6FB8               	movwf	(_dbuf+31)& (0+255),b
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3384  00078E  EF45  F004         	goto	l3103
  3385  000792                     l3093:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  3388  000792  0648               	decf	dtoa@i^0,f,c
  3389  000794  A0D8               	btfss	status,0,c
  3390  000796  0649               	decf	(dtoa@i+1)^0,f,c
  3391  000798                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  3393  000798  0E99               	movlw	low _dbuf
  3394  00079A  2448               	addwf	dtoa@i^0,w,c
  3395  00079C  6ED9               	movwf	fsr2l,c
  3396  00079E  0E00               	movlw	high _dbuf
  3397  0007A0  2049               	addwfc	(dtoa@i+1)^0,w,c
  3398  0007A2  6EDA               	movwf	fsr2h,c
  3399  0007A4  C040  F009         	movff	dtoa@n,___aomod@dividend
  3400  0007A8  C041  F00A         	movff	dtoa@n+1,___aomod@dividend+1
  3401  0007AC  C042  F00B         	movff	dtoa@n+2,___aomod@dividend+2
  3402  0007B0  C043  F00C         	movff	dtoa@n+3,___aomod@dividend+3
  3403  0007B4  C044  F00D         	movff	dtoa@n+4,___aomod@dividend+4
  3404  0007B8  C045  F00E         	movff	dtoa@n+5,___aomod@dividend+5
  3405  0007BC  C046  F00F         	movff	dtoa@n+6,___aomod@dividend+6
  3406  0007C0  C047  F010         	movff	dtoa@n+7,___aomod@dividend+7
  3407  0007C4  0E0A               	movlw	10
  3408  0007C6  6E11               	movwf	___aomod@divisor^0,c
  3409  0007C8  0E00               	movlw	0
  3410  0007CA  6E12               	movwf	(___aomod@divisor+1)^0,c
  3411  0007CC  0E00               	movlw	0
  3412  0007CE  6E13               	movwf	(___aomod@divisor+2)^0,c
  3413  0007D0  0E00               	movlw	0
  3414  0007D2  6E14               	movwf	(___aomod@divisor+3)^0,c
  3415  0007D4  0E00               	movlw	0
  3416  0007D6  6E15               	movwf	(___aomod@divisor+4)^0,c
  3417  0007D8  0E00               	movlw	0
  3418  0007DA  6E16               	movwf	(___aomod@divisor+5)^0,c
  3419  0007DC  0E00               	movlw	0
  3420  0007DE  6E17               	movwf	(___aomod@divisor+6)^0,c
  3421  0007E0  0E00               	movlw	0
  3422  0007E2  6E18               	movwf	(___aomod@divisor+7)^0,c
  3423  0007E4  ECF3  F006         	call	___aomod	;wreg free
  3424  0007E8  C009  F030         	movff	?___aomod,??_dtoa
  3425  0007EC  C00A  F031         	movff	?___aomod+1,??_dtoa+1
  3426  0007F0  C00B  F032         	movff	?___aomod+2,??_dtoa+2
  3427  0007F4  C00C  F033         	movff	?___aomod+3,??_dtoa+3
  3428  0007F8  C00D  F034         	movff	?___aomod+4,??_dtoa+4
  3429  0007FC  C00E  F035         	movff	?___aomod+5,??_dtoa+5
  3430  000800  C00F  F036         	movff	?___aomod+6,??_dtoa+6
  3431  000804  C010  F037         	movff	?___aomod+7,??_dtoa+7
  3432  000808  C030  F01B         	movff	??_dtoa,abs@a
  3433  00080C  C032  F01C         	movff	??_dtoa+2,abs@a+1
  3434  000810  EC9A  F009         	call	_abs	;wreg free
  3435  000814  501B               	movf	?_abs^0,w,c
  3436  000816  0F30               	addlw	48
  3437  000818  6EDF               	movwf	indf2,c
  3438  00081A                     
  3439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  3440  00081A  063A               	decf	dtoa@p^0,f,c
  3441  00081C  A0D8               	btfss	status,0,c
  3442  00081E  063B               	decf	(dtoa@p+1)^0,f,c
  3443  000820                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  3445  000820  063C               	decf	dtoa@w^0,f,c
  3446  000822  A0D8               	btfss	status,0,c
  3447  000824  063D               	decf	(dtoa@w+1)^0,f,c
  3448  000826                     
  3449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  3450  000826  C040  F009         	movff	dtoa@n,___aodiv@dividend
  3451  00082A  C041  F00A         	movff	dtoa@n+1,___aodiv@dividend+1
  3452  00082E  C042  F00B         	movff	dtoa@n+2,___aodiv@dividend+2
  3453  000832  C043  F00C         	movff	dtoa@n+3,___aodiv@dividend+3
  3454  000836  C044  F00D         	movff	dtoa@n+4,___aodiv@dividend+4
  3455  00083A  C045  F00E         	movff	dtoa@n+5,___aodiv@dividend+5
  3456  00083E  C046  F00F         	movff	dtoa@n+6,___aodiv@dividend+6
  3457  000842  C047  F010         	movff	dtoa@n+7,___aodiv@dividend+7
  3458  000846  0E0A               	movlw	10
  3459  000848  6E11               	movwf	___aodiv@divisor^0,c
  3460  00084A  0E00               	movlw	0
  3461  00084C  6E12               	movwf	(___aodiv@divisor+1)^0,c
  3462  00084E  0E00               	movlw	0
  3463  000850  6E13               	movwf	(___aodiv@divisor+2)^0,c
  3464  000852  0E00               	movlw	0
  3465  000854  6E14               	movwf	(___aodiv@divisor+3)^0,c
  3466  000856  0E00               	movlw	0
  3467  000858  6E15               	movwf	(___aodiv@divisor+4)^0,c
  3468  00085A  0E00               	movlw	0
  3469  00085C  6E16               	movwf	(___aodiv@divisor+5)^0,c
  3470  00085E  0E00               	movlw	0
  3471  000860  6E17               	movwf	(___aodiv@divisor+6)^0,c
  3472  000862  0E00               	movlw	0
  3473  000864  6E18               	movwf	(___aodiv@divisor+7)^0,c
  3474  000866  EC2F  F006         	call	___aodiv	;wreg free
  3475  00086A  C009  F040         	movff	?___aodiv,dtoa@n
  3476  00086E  C00A  F041         	movff	?___aodiv+1,dtoa@n+1
  3477  000872  C00B  F042         	movff	?___aodiv+2,dtoa@n+2
  3478  000876  C00C  F043         	movff	?___aodiv+3,dtoa@n+3
  3479  00087A  C00D  F044         	movff	?___aodiv+4,dtoa@n+4
  3480  00087E  C00E  F045         	movff	?___aodiv+5,dtoa@n+5
  3481  000882  C00F  F046         	movff	?___aodiv+6,dtoa@n+6
  3482  000886  C010  F047         	movff	?___aodiv+7,dtoa@n+7
  3483  00088A                     l3103:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3486  00088A  BE49               	btfsc	(dtoa@i+1)^0,7,c
  3487  00088C  EF50  F004         	goto	u2521
  3488  000890  5049               	movf	(dtoa@i+1)^0,w,c
  3489  000892  E108               	bnz	u2520
  3490  000894  0448               	decf	dtoa@i^0,w,c
  3491  000896  A0D8               	btfss	status,0,c
  3492  000898  EF50  F004         	goto	u2521
  3493  00089C  EF52  F004         	goto	u2520
  3494  0008A0                     u2521:
  3495  0008A0  EF82  F004         	goto	l3113
  3496  0008A4                     u2520:
  3497  0008A4  5040               	movf	dtoa@n^0,w,c
  3498  0008A6  1041               	iorwf	(dtoa@n+1)^0,w,c
  3499  0008A8  1042               	iorwf	(dtoa@n+2)^0,w,c
  3500  0008AA  1043               	iorwf	(dtoa@n+3)^0,w,c
  3501  0008AC  1044               	iorwf	(dtoa@n+4)^0,w,c
  3502  0008AE  1045               	iorwf	(dtoa@n+5)^0,w,c
  3503  0008B0  1046               	iorwf	(dtoa@n+6)^0,w,c
  3504  0008B2  1047               	iorwf	(dtoa@n+7)^0,w,c
  3505  0008B4  A4D8               	btfss	status,2,c
  3506  0008B6  EF5F  F004         	goto	u2531
  3507  0008BA  EF61  F004         	goto	u2530
  3508  0008BE                     u2531:
  3509  0008BE  EFC9  F003         	goto	l3093
  3510  0008C2                     u2530:
  3511  0008C2  BE3B               	btfsc	(dtoa@p+1)^0,7,c
  3512  0008C4  EF6E  F004         	goto	u2540
  3513  0008C8  503B               	movf	(dtoa@p+1)^0,w,c
  3514  0008CA  E106               	bnz	u2541
  3515  0008CC  043A               	decf	dtoa@p^0,w,c
  3516  0008CE  B0D8               	btfsc	status,0,c
  3517  0008D0  EF6C  F004         	goto	u2541
  3518  0008D4  EF6E  F004         	goto	u2540
  3519  0008D8                     u2541:
  3520  0008D8  EFC9  F003         	goto	l3093
  3521  0008DC                     u2540:
  3522  0008DC  BE3D               	btfsc	(dtoa@w+1)^0,7,c
  3523  0008DE  EF79  F004         	goto	u2551
  3524  0008E2  503D               	movf	(dtoa@w+1)^0,w,c
  3525  0008E4  E108               	bnz	u2550
  3526  0008E6  043C               	decf	dtoa@w^0,w,c
  3527  0008E8  A0D8               	btfss	status,0,c
  3528  0008EA  EF79  F004         	goto	u2551
  3529  0008EE  EF7B  F004         	goto	u2550
  3530  0008F2                     u2551:
  3531  0008F2  EF82  F004         	goto	l3113
  3532  0008F6                     u2550:
  3533  0008F6  B253               	btfsc	_flags^0,1,c
  3534  0008F8  EF80  F004         	goto	u2561
  3535  0008FC  EF82  F004         	goto	u2560
  3536  000900                     u2561:
  3537  000900  EFC9  F003         	goto	l3093
  3538  000904                     u2560:
  3539  000904                     l3113:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  3542  000904  503E               	movf	dtoa@s^0,w,c
  3543  000906  103F               	iorwf	(dtoa@s+1)^0,w,c
  3544  000908  A4D8               	btfss	status,2,c
  3545  00090A  EF89  F004         	goto	u2571
  3546  00090E  EF8B  F004         	goto	u2570
  3547  000912                     u2571:
  3548  000912  EF92  F004         	goto	l3117
  3549  000916                     u2570:
  3550  000916  A453               	btfss	_flags^0,2,c
  3551  000918  EF90  F004         	goto	u2581
  3552  00091C  EF92  F004         	goto	u2580
  3553  000920                     u2581:
  3554  000920  EFB0  F004         	goto	l3127
  3555  000924                     u2580:
  3556  000924                     l3117:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  3559  000924  0648               	decf	dtoa@i^0,f,c
  3560  000926  A0D8               	btfss	status,0,c
  3561  000928  0649               	decf	(dtoa@i+1)^0,f,c
  3562  00092A                     
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  3564  00092A  503E               	movf	dtoa@s^0,w,c
  3565  00092C  103F               	iorwf	(dtoa@s+1)^0,w,c
  3566  00092E  A4D8               	btfss	status,2,c
  3567  000930  EF9C  F004         	goto	u2591
  3568  000934  EF9E  F004         	goto	u2590
  3569  000938                     u2591:
  3570  000938  EFA4  F004         	goto	l3123
  3571  00093C                     u2590:
  3572  00093C  0E00               	movlw	0
  3573  00093E  6E39               	movwf	(_dtoa$1864+1)^0,c
  3574  000940  0E2B               	movlw	43
  3575  000942  6E38               	movwf	_dtoa$1864^0,c
  3576  000944  EFA8  F004         	goto	l3125
  3577  000948                     l3123:
  3578  000948  0E00               	movlw	0
  3579  00094A  6E39               	movwf	(_dtoa$1864+1)^0,c
  3580  00094C  0E2D               	movlw	45
  3581  00094E  6E38               	movwf	_dtoa$1864^0,c
  3582  000950                     l3125:
  3583  000950  0E99               	movlw	low _dbuf
  3584  000952  2448               	addwf	dtoa@i^0,w,c
  3585  000954  6ED9               	movwf	fsr2l,c
  3586  000956  0E00               	movlw	high _dbuf
  3587  000958  2049               	addwfc	(dtoa@i+1)^0,w,c
  3588  00095A  6EDA               	movwf	fsr2h,c
  3589  00095C  C038  FFDF         	movff	_dtoa$1864,indf2
  3590  000960                     l3127:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  3593  000960  C026  F01B         	movff	dtoa@fp,pad@fp
  3594  000964  C027  F01C         	movff	dtoa@fp+1,pad@fp+1
  3595  000968  0E99               	movlw	low _dbuf
  3596  00096A  2448               	addwf	dtoa@i^0,w,c
  3597  00096C  6E1D               	movwf	pad@buf^0,c
  3598  00096E  0E00               	movlw	high _dbuf
  3599  000970  2049               	addwfc	(dtoa@i+1)^0,w,c
  3600  000972  6E1E               	movwf	(pad@buf+1)^0,c
  3601  000974  C03C  F01F         	movff	dtoa@w,pad@p
  3602  000978  C03D  F020         	movff	dtoa@w+1,pad@p+1
  3603  00097C  EC0F  F008         	call	_pad	;wreg free
  3604  000980  C01B  F026         	movff	?_pad,?_dtoa
  3605  000984  C01C  F027         	movff	?_pad+1,?_dtoa+1
  3606  000988  0012               	return		;funcret
  3607  00098A                     __end_of_dtoa:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function _abs *****************
  3611 ;; Defined at:
  3612 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  a               2   26[COMRAM] int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2   26[COMRAM] int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        4 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    4
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_dtoa
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text10
  3641  001334                     __ptext10:
  3642                           	callstack 0
  3643  001334                     _abs:
  3644                           	callstack 22
  3645  001334  BE1C               	btfsc	(abs@a+1)^0,7,c
  3646  001336  EFA7  F009         	goto	u2360
  3647  00133A  501C               	movf	(abs@a+1)^0,w,c
  3648  00133C  E106               	bnz	u2361
  3649  00133E  041B               	decf	abs@a^0,w,c
  3650  001340  B0D8               	btfsc	status,0,c
  3651  001342  EFA5  F009         	goto	u2361
  3652  001346  EFA7  F009         	goto	u2360
  3653  00134A                     u2361:
  3654  00134A  EFB5  F009         	goto	l1283
  3655  00134E                     u2360:
  3656  00134E  C01B  F01D         	movff	abs@a,??_abs
  3657  001352  C01C  F01E         	movff	abs@a+1,??_abs+1
  3658  001356  1E1D               	comf	??_abs^0,f,c
  3659  001358  1E1E               	comf	(??_abs+1)^0,f,c
  3660  00135A  4A1D               	infsnz	??_abs^0,f,c
  3661  00135C  2A1E               	incf	(??_abs+1)^0,f,c
  3662  00135E  C01D  F01B         	movff	??_abs,?_abs
  3663  001362  C01E  F01C         	movff	??_abs+1,?_abs+1
  3664  001366  EFB9  F009         	goto	l1286
  3665  00136A                     l1283:
  3666  00136A  C01B  F01B         	movff	abs@a,?_abs
  3667  00136E  C01C  F01C         	movff	abs@a+1,?_abs+1
  3668  001372                     l1286:
  3669  001372  0012               	return		;funcret
  3670  001374                     __end_of_abs:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function ___aomod *****************
  3674 ;; Defined at:
  3675 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  dividend        8    8[COMRAM] long long 
  3678 ;;  divisor         8   16[COMRAM] long long 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  sign            1   25[COMRAM] unsigned char 
  3681 ;;  counter         1   24[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  8    8[COMRAM] long long 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3691 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;Total ram usage:       18 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    4
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_dtoa
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text11
  3706  000DE6                     __ptext11:
  3707                           	callstack 0
  3708  000DE6                     ___aomod:
  3709                           	callstack 22
  3710  000DE6  0E00               	movlw	0
  3711  000DE8  6E1A               	movwf	___aomod@sign^0,c
  3712  000DEA  BE10               	btfsc	(___aomod@dividend+7)^0,7,c
  3713  000DEC  EFFC  F006         	goto	u2260
  3714  000DF0  EFFA  F006         	goto	u2261
  3715  000DF4                     u2261:
  3716  000DF4  EF0E  F007         	goto	l2983
  3717  000DF8                     u2260:
  3718  000DF8  1E10               	comf	(___aomod@dividend+7)^0,f,c
  3719  000DFA  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  3720  000DFC  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  3721  000DFE  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  3722  000E00  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  3723  000E02  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  3724  000E04  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  3725  000E06  6C09               	negf	___aomod@dividend^0,c
  3726  000E08  0E00               	movlw	0
  3727  000E0A  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  3728  000E0C  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  3729  000E0E  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  3730  000E10  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  3731  000E12  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  3732  000E14  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  3733  000E16  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  3734  000E18  0E01               	movlw	1
  3735  000E1A  6E1A               	movwf	___aomod@sign^0,c
  3736  000E1C                     l2983:
  3737  000E1C  BE18               	btfsc	(___aomod@divisor+7)^0,7,c
  3738  000E1E  EF15  F007         	goto	u2270
  3739  000E22  EF13  F007         	goto	u2271
  3740  000E26                     u2271:
  3741  000E26  EF25  F007         	goto	l2987
  3742  000E2A                     u2270:
  3743  000E2A  1E18               	comf	(___aomod@divisor+7)^0,f,c
  3744  000E2C  1E17               	comf	(___aomod@divisor+6)^0,f,c
  3745  000E2E  1E16               	comf	(___aomod@divisor+5)^0,f,c
  3746  000E30  1E15               	comf	(___aomod@divisor+4)^0,f,c
  3747  000E32  1E14               	comf	(___aomod@divisor+3)^0,f,c
  3748  000E34  1E13               	comf	(___aomod@divisor+2)^0,f,c
  3749  000E36  1E12               	comf	(___aomod@divisor+1)^0,f,c
  3750  000E38  6C11               	negf	___aomod@divisor^0,c
  3751  000E3A  0E00               	movlw	0
  3752  000E3C  2212               	addwfc	(___aomod@divisor+1)^0,f,c
  3753  000E3E  2213               	addwfc	(___aomod@divisor+2)^0,f,c
  3754  000E40  2214               	addwfc	(___aomod@divisor+3)^0,f,c
  3755  000E42  2215               	addwfc	(___aomod@divisor+4)^0,f,c
  3756  000E44  2216               	addwfc	(___aomod@divisor+5)^0,f,c
  3757  000E46  2217               	addwfc	(___aomod@divisor+6)^0,f,c
  3758  000E48  2218               	addwfc	(___aomod@divisor+7)^0,f,c
  3759  000E4A                     l2987:
  3760  000E4A  5011               	movf	___aomod@divisor^0,w,c
  3761  000E4C  1012               	iorwf	(___aomod@divisor+1)^0,w,c
  3762  000E4E  1013               	iorwf	(___aomod@divisor+2)^0,w,c
  3763  000E50  1014               	iorwf	(___aomod@divisor+3)^0,w,c
  3764  000E52  1015               	iorwf	(___aomod@divisor+4)^0,w,c
  3765  000E54  1016               	iorwf	(___aomod@divisor+5)^0,w,c
  3766  000E56  1017               	iorwf	(___aomod@divisor+6)^0,w,c
  3767  000E58  1018               	iorwf	(___aomod@divisor+7)^0,w,c
  3768  000E5A  B4D8               	btfsc	status,2,c
  3769  000E5C  EF32  F007         	goto	u2281
  3770  000E60  EF34  F007         	goto	u2280
  3771  000E64                     u2281:
  3772  000E64  EF7C  F007         	goto	l3003
  3773  000E68                     u2280:
  3774  000E68  0E01               	movlw	1
  3775  000E6A  6E19               	movwf	___aomod@counter^0,c
  3776  000E6C  EF42  F007         	goto	l2993
  3777  000E70                     l2991:
  3778  000E70  90D8               	bcf	status,0,c
  3779  000E72  3611               	rlcf	___aomod@divisor^0,f,c
  3780  000E74  3612               	rlcf	(___aomod@divisor+1)^0,f,c
  3781  000E76  3613               	rlcf	(___aomod@divisor+2)^0,f,c
  3782  000E78  3614               	rlcf	(___aomod@divisor+3)^0,f,c
  3783  000E7A  3615               	rlcf	(___aomod@divisor+4)^0,f,c
  3784  000E7C  3616               	rlcf	(___aomod@divisor+5)^0,f,c
  3785  000E7E  3617               	rlcf	(___aomod@divisor+6)^0,f,c
  3786  000E80  3618               	rlcf	(___aomod@divisor+7)^0,f,c
  3787  000E82  2A19               	incf	___aomod@counter^0,f,c
  3788  000E84                     l2993:
  3789  000E84  AE18               	btfss	(___aomod@divisor+7)^0,7,c
  3790  000E86  EF47  F007         	goto	u2291
  3791  000E8A  EF49  F007         	goto	u2290
  3792  000E8E                     u2291:
  3793  000E8E  EF38  F007         	goto	l2991
  3794  000E92                     u2290:
  3795  000E92                     l2995:
  3796  000E92  5011               	movf	___aomod@divisor^0,w,c
  3797  000E94  5C09               	subwf	___aomod@dividend^0,w,c
  3798  000E96  5012               	movf	(___aomod@divisor+1)^0,w,c
  3799  000E98  580A               	subwfb	(___aomod@dividend+1)^0,w,c
  3800  000E9A  5013               	movf	(___aomod@divisor+2)^0,w,c
  3801  000E9C  580B               	subwfb	(___aomod@dividend+2)^0,w,c
  3802  000E9E  5014               	movf	(___aomod@divisor+3)^0,w,c
  3803  000EA0  580C               	subwfb	(___aomod@dividend+3)^0,w,c
  3804  000EA2  5015               	movf	(___aomod@divisor+4)^0,w,c
  3805  000EA4  580D               	subwfb	(___aomod@dividend+4)^0,w,c
  3806  000EA6  5016               	movf	(___aomod@divisor+5)^0,w,c
  3807  000EA8  580E               	subwfb	(___aomod@dividend+5)^0,w,c
  3808  000EAA  5017               	movf	(___aomod@divisor+6)^0,w,c
  3809  000EAC  580F               	subwfb	(___aomod@dividend+6)^0,w,c
  3810  000EAE  5018               	movf	(___aomod@divisor+7)^0,w,c
  3811  000EB0  5810               	subwfb	(___aomod@dividend+7)^0,w,c
  3812  000EB2  A0D8               	btfss	status,0,c
  3813  000EB4  EF5E  F007         	goto	u2301
  3814  000EB8  EF60  F007         	goto	u2300
  3815  000EBC                     u2301:
  3816  000EBC  EF70  F007         	goto	l2999
  3817  000EC0                     u2300:
  3818  000EC0  5011               	movf	___aomod@divisor^0,w,c
  3819  000EC2  5E09               	subwf	___aomod@dividend^0,f,c
  3820  000EC4  5012               	movf	(___aomod@divisor+1)^0,w,c
  3821  000EC6  5A0A               	subwfb	(___aomod@dividend+1)^0,f,c
  3822  000EC8  5013               	movf	(___aomod@divisor+2)^0,w,c
  3823  000ECA  5A0B               	subwfb	(___aomod@dividend+2)^0,f,c
  3824  000ECC  5014               	movf	(___aomod@divisor+3)^0,w,c
  3825  000ECE  5A0C               	subwfb	(___aomod@dividend+3)^0,f,c
  3826  000ED0  5015               	movf	(___aomod@divisor+4)^0,w,c
  3827  000ED2  5A0D               	subwfb	(___aomod@dividend+4)^0,f,c
  3828  000ED4  5016               	movf	(___aomod@divisor+5)^0,w,c
  3829  000ED6  5A0E               	subwfb	(___aomod@dividend+5)^0,f,c
  3830  000ED8  5017               	movf	(___aomod@divisor+6)^0,w,c
  3831  000EDA  5A0F               	subwfb	(___aomod@dividend+6)^0,f,c
  3832  000EDC  5018               	movf	(___aomod@divisor+7)^0,w,c
  3833  000EDE  5A10               	subwfb	(___aomod@dividend+7)^0,f,c
  3834  000EE0                     l2999:
  3835  000EE0  90D8               	bcf	status,0,c
  3836  000EE2  3218               	rrcf	(___aomod@divisor+7)^0,f,c
  3837  000EE4  3217               	rrcf	(___aomod@divisor+6)^0,f,c
  3838  000EE6  3216               	rrcf	(___aomod@divisor+5)^0,f,c
  3839  000EE8  3215               	rrcf	(___aomod@divisor+4)^0,f,c
  3840  000EEA  3214               	rrcf	(___aomod@divisor+3)^0,f,c
  3841  000EEC  3213               	rrcf	(___aomod@divisor+2)^0,f,c
  3842  000EEE  3212               	rrcf	(___aomod@divisor+1)^0,f,c
  3843  000EF0  3211               	rrcf	___aomod@divisor^0,f,c
  3844  000EF2  2E19               	decfsz	___aomod@counter^0,f,c
  3845  000EF4  EF49  F007         	goto	l2995
  3846  000EF8                     l3003:
  3847  000EF8  501A               	movf	___aomod@sign^0,w,c
  3848  000EFA  B4D8               	btfsc	status,2,c
  3849  000EFC  EF82  F007         	goto	u2311
  3850  000F00  EF84  F007         	goto	u2310
  3851  000F04                     u2311:
  3852  000F04  EF94  F007         	goto	l3007
  3853  000F08                     u2310:
  3854  000F08  1E10               	comf	(___aomod@dividend+7)^0,f,c
  3855  000F0A  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  3856  000F0C  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  3857  000F0E  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  3858  000F10  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  3859  000F12  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  3860  000F14  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  3861  000F16  6C09               	negf	___aomod@dividend^0,c
  3862  000F18  0E00               	movlw	0
  3863  000F1A  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  3864  000F1C  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  3865  000F1E  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  3866  000F20  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  3867  000F22  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  3868  000F24  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  3869  000F26  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  3870  000F28                     l3007:
  3871  000F28  C009  F009         	movff	___aomod@dividend,?___aomod
  3872  000F2C  C00A  F00A         	movff	___aomod@dividend+1,?___aomod+1
  3873  000F30  C00B  F00B         	movff	___aomod@dividend+2,?___aomod+2
  3874  000F34  C00C  F00C         	movff	___aomod@dividend+3,?___aomod+3
  3875  000F38  C00D  F00D         	movff	___aomod@dividend+4,?___aomod+4
  3876  000F3C  C00E  F00E         	movff	___aomod@dividend+5,?___aomod+5
  3877  000F40  C00F  F00F         	movff	___aomod@dividend+6,?___aomod+6
  3878  000F44  C010  F010         	movff	___aomod@dividend+7,?___aomod+7
  3879  000F48  0012               	return		;funcret
  3880  000F4A                     __end_of___aomod:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function ___aodiv *****************
  3884 ;; Defined at:
  3885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  dividend        8    8[COMRAM] long long 
  3888 ;;  divisor         8   16[COMRAM] long long 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  quotient        8   26[COMRAM] long long 
  3891 ;;  sign            1   25[COMRAM] unsigned char 
  3892 ;;  counter         1   24[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  8    8[COMRAM] long long 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:       26 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    4
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_dtoa
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text12
  3917  000C5E                     __ptext12:
  3918                           	callstack 0
  3919  000C5E                     ___aodiv:
  3920                           	callstack 22
  3921  000C5E  0E00               	movlw	0
  3922  000C60  6E1A               	movwf	___aodiv@sign^0,c
  3923  000C62  BE18               	btfsc	(___aodiv@divisor+7)^0,7,c
  3924  000C64  EF38  F006         	goto	u2190
  3925  000C68  EF36  F006         	goto	u2191
  3926  000C6C                     u2191:
  3927  000C6C  EF4A  F006         	goto	l2939
  3928  000C70                     u2190:
  3929  000C70  1E18               	comf	(___aodiv@divisor+7)^0,f,c
  3930  000C72  1E17               	comf	(___aodiv@divisor+6)^0,f,c
  3931  000C74  1E16               	comf	(___aodiv@divisor+5)^0,f,c
  3932  000C76  1E15               	comf	(___aodiv@divisor+4)^0,f,c
  3933  000C78  1E14               	comf	(___aodiv@divisor+3)^0,f,c
  3934  000C7A  1E13               	comf	(___aodiv@divisor+2)^0,f,c
  3935  000C7C  1E12               	comf	(___aodiv@divisor+1)^0,f,c
  3936  000C7E  6C11               	negf	___aodiv@divisor^0,c
  3937  000C80  0E00               	movlw	0
  3938  000C82  2212               	addwfc	(___aodiv@divisor+1)^0,f,c
  3939  000C84  2213               	addwfc	(___aodiv@divisor+2)^0,f,c
  3940  000C86  2214               	addwfc	(___aodiv@divisor+3)^0,f,c
  3941  000C88  2215               	addwfc	(___aodiv@divisor+4)^0,f,c
  3942  000C8A  2216               	addwfc	(___aodiv@divisor+5)^0,f,c
  3943  000C8C  2217               	addwfc	(___aodiv@divisor+6)^0,f,c
  3944  000C8E  2218               	addwfc	(___aodiv@divisor+7)^0,f,c
  3945  000C90  0E01               	movlw	1
  3946  000C92  6E1A               	movwf	___aodiv@sign^0,c
  3947  000C94                     l2939:
  3948  000C94  BE10               	btfsc	(___aodiv@dividend+7)^0,7,c
  3949  000C96  EF51  F006         	goto	u2200
  3950  000C9A  EF4F  F006         	goto	u2201
  3951  000C9E                     u2201:
  3952  000C9E  EF63  F006         	goto	l2945
  3953  000CA2                     u2200:
  3954  000CA2  1E10               	comf	(___aodiv@dividend+7)^0,f,c
  3955  000CA4  1E0F               	comf	(___aodiv@dividend+6)^0,f,c
  3956  000CA6  1E0E               	comf	(___aodiv@dividend+5)^0,f,c
  3957  000CA8  1E0D               	comf	(___aodiv@dividend+4)^0,f,c
  3958  000CAA  1E0C               	comf	(___aodiv@dividend+3)^0,f,c
  3959  000CAC  1E0B               	comf	(___aodiv@dividend+2)^0,f,c
  3960  000CAE  1E0A               	comf	(___aodiv@dividend+1)^0,f,c
  3961  000CB0  6C09               	negf	___aodiv@dividend^0,c
  3962  000CB2  0E00               	movlw	0
  3963  000CB4  220A               	addwfc	(___aodiv@dividend+1)^0,f,c
  3964  000CB6  220B               	addwfc	(___aodiv@dividend+2)^0,f,c
  3965  000CB8  220C               	addwfc	(___aodiv@dividend+3)^0,f,c
  3966  000CBA  220D               	addwfc	(___aodiv@dividend+4)^0,f,c
  3967  000CBC  220E               	addwfc	(___aodiv@dividend+5)^0,f,c
  3968  000CBE  220F               	addwfc	(___aodiv@dividend+6)^0,f,c
  3969  000CC0  2210               	addwfc	(___aodiv@dividend+7)^0,f,c
  3970  000CC2  0E01               	movlw	1
  3971  000CC4  1A1A               	xorwf	___aodiv@sign^0,f,c
  3972  000CC6                     l2945:
  3973  000CC6  EE20  F01B         	lfsr	2,___aodiv@quotient
  3974  000CCA  0E07               	movlw	7
  3975  000CCC                     u2211:
  3976  000CCC  6ADE               	clrf	postinc2,c
  3977  000CCE  06E8               	decf	wreg,f,c
  3978  000CD0  E2FD               	bc	u2211
  3979  000CD2  5011               	movf	___aodiv@divisor^0,w,c
  3980  000CD4  1012               	iorwf	(___aodiv@divisor+1)^0,w,c
  3981  000CD6  1013               	iorwf	(___aodiv@divisor+2)^0,w,c
  3982  000CD8  1014               	iorwf	(___aodiv@divisor+3)^0,w,c
  3983  000CDA  1015               	iorwf	(___aodiv@divisor+4)^0,w,c
  3984  000CDC  1016               	iorwf	(___aodiv@divisor+5)^0,w,c
  3985  000CDE  1017               	iorwf	(___aodiv@divisor+6)^0,w,c
  3986  000CE0  1018               	iorwf	(___aodiv@divisor+7)^0,w,c
  3987  000CE2  B4D8               	btfsc	status,2,c
  3988  000CE4  EF76  F006         	goto	u2221
  3989  000CE8  EF78  F006         	goto	u2220
  3990  000CEC                     u2221:
  3991  000CEC  EFCA  F006         	goto	l2967
  3992  000CF0                     u2220:
  3993  000CF0  0E01               	movlw	1
  3994  000CF2  6E19               	movwf	___aodiv@counter^0,c
  3995  000CF4  EF86  F006         	goto	l2953
  3996  000CF8                     l2951:
  3997  000CF8  90D8               	bcf	status,0,c
  3998  000CFA  3611               	rlcf	___aodiv@divisor^0,f,c
  3999  000CFC  3612               	rlcf	(___aodiv@divisor+1)^0,f,c
  4000  000CFE  3613               	rlcf	(___aodiv@divisor+2)^0,f,c
  4001  000D00  3614               	rlcf	(___aodiv@divisor+3)^0,f,c
  4002  000D02  3615               	rlcf	(___aodiv@divisor+4)^0,f,c
  4003  000D04  3616               	rlcf	(___aodiv@divisor+5)^0,f,c
  4004  000D06  3617               	rlcf	(___aodiv@divisor+6)^0,f,c
  4005  000D08  3618               	rlcf	(___aodiv@divisor+7)^0,f,c
  4006  000D0A  2A19               	incf	___aodiv@counter^0,f,c
  4007  000D0C                     l2953:
  4008  000D0C  AE18               	btfss	(___aodiv@divisor+7)^0,7,c
  4009  000D0E  EF8B  F006         	goto	u2231
  4010  000D12  EF8D  F006         	goto	u2230
  4011  000D16                     u2231:
  4012  000D16  EF7C  F006         	goto	l2951
  4013  000D1A                     u2230:
  4014  000D1A                     l2955:
  4015  000D1A  90D8               	bcf	status,0,c
  4016  000D1C  361B               	rlcf	___aodiv@quotient^0,f,c
  4017  000D1E  361C               	rlcf	(___aodiv@quotient+1)^0,f,c
  4018  000D20  361D               	rlcf	(___aodiv@quotient+2)^0,f,c
  4019  000D22  361E               	rlcf	(___aodiv@quotient+3)^0,f,c
  4020  000D24  361F               	rlcf	(___aodiv@quotient+4)^0,f,c
  4021  000D26  3620               	rlcf	(___aodiv@quotient+5)^0,f,c
  4022  000D28  3621               	rlcf	(___aodiv@quotient+6)^0,f,c
  4023  000D2A  3622               	rlcf	(___aodiv@quotient+7)^0,f,c
  4024  000D2C  5011               	movf	___aodiv@divisor^0,w,c
  4025  000D2E  5C09               	subwf	___aodiv@dividend^0,w,c
  4026  000D30  5012               	movf	(___aodiv@divisor+1)^0,w,c
  4027  000D32  580A               	subwfb	(___aodiv@dividend+1)^0,w,c
  4028  000D34  5013               	movf	(___aodiv@divisor+2)^0,w,c
  4029  000D36  580B               	subwfb	(___aodiv@dividend+2)^0,w,c
  4030  000D38  5014               	movf	(___aodiv@divisor+3)^0,w,c
  4031  000D3A  580C               	subwfb	(___aodiv@dividend+3)^0,w,c
  4032  000D3C  5015               	movf	(___aodiv@divisor+4)^0,w,c
  4033  000D3E  580D               	subwfb	(___aodiv@dividend+4)^0,w,c
  4034  000D40  5016               	movf	(___aodiv@divisor+5)^0,w,c
  4035  000D42  580E               	subwfb	(___aodiv@dividend+5)^0,w,c
  4036  000D44  5017               	movf	(___aodiv@divisor+6)^0,w,c
  4037  000D46  580F               	subwfb	(___aodiv@dividend+6)^0,w,c
  4038  000D48  5018               	movf	(___aodiv@divisor+7)^0,w,c
  4039  000D4A  5810               	subwfb	(___aodiv@dividend+7)^0,w,c
  4040  000D4C  A0D8               	btfss	status,0,c
  4041  000D4E  EFAB  F006         	goto	u2241
  4042  000D52  EFAD  F006         	goto	u2240
  4043  000D56                     u2241:
  4044  000D56  EFBE  F006         	goto	l2963
  4045  000D5A                     u2240:
  4046  000D5A  5011               	movf	___aodiv@divisor^0,w,c
  4047  000D5C  5E09               	subwf	___aodiv@dividend^0,f,c
  4048  000D5E  5012               	movf	(___aodiv@divisor+1)^0,w,c
  4049  000D60  5A0A               	subwfb	(___aodiv@dividend+1)^0,f,c
  4050  000D62  5013               	movf	(___aodiv@divisor+2)^0,w,c
  4051  000D64  5A0B               	subwfb	(___aodiv@dividend+2)^0,f,c
  4052  000D66  5014               	movf	(___aodiv@divisor+3)^0,w,c
  4053  000D68  5A0C               	subwfb	(___aodiv@dividend+3)^0,f,c
  4054  000D6A  5015               	movf	(___aodiv@divisor+4)^0,w,c
  4055  000D6C  5A0D               	subwfb	(___aodiv@dividend+4)^0,f,c
  4056  000D6E  5016               	movf	(___aodiv@divisor+5)^0,w,c
  4057  000D70  5A0E               	subwfb	(___aodiv@dividend+5)^0,f,c
  4058  000D72  5017               	movf	(___aodiv@divisor+6)^0,w,c
  4059  000D74  5A0F               	subwfb	(___aodiv@dividend+6)^0,f,c
  4060  000D76  5018               	movf	(___aodiv@divisor+7)^0,w,c
  4061  000D78  5A10               	subwfb	(___aodiv@dividend+7)^0,f,c
  4062  000D7A  801B               	bsf	___aodiv@quotient^0,0,c
  4063  000D7C                     l2963:
  4064  000D7C  90D8               	bcf	status,0,c
  4065  000D7E  3218               	rrcf	(___aodiv@divisor+7)^0,f,c
  4066  000D80  3217               	rrcf	(___aodiv@divisor+6)^0,f,c
  4067  000D82  3216               	rrcf	(___aodiv@divisor+5)^0,f,c
  4068  000D84  3215               	rrcf	(___aodiv@divisor+4)^0,f,c
  4069  000D86  3214               	rrcf	(___aodiv@divisor+3)^0,f,c
  4070  000D88  3213               	rrcf	(___aodiv@divisor+2)^0,f,c
  4071  000D8A  3212               	rrcf	(___aodiv@divisor+1)^0,f,c
  4072  000D8C  3211               	rrcf	___aodiv@divisor^0,f,c
  4073  000D8E  2E19               	decfsz	___aodiv@counter^0,f,c
  4074  000D90  EF8D  F006         	goto	l2955
  4075  000D94                     l2967:
  4076  000D94  501A               	movf	___aodiv@sign^0,w,c
  4077  000D96  B4D8               	btfsc	status,2,c
  4078  000D98  EFD0  F006         	goto	u2251
  4079  000D9C  EFD2  F006         	goto	u2250
  4080  000DA0                     u2251:
  4081  000DA0  EFE2  F006         	goto	l2971
  4082  000DA4                     u2250:
  4083  000DA4  1E22               	comf	(___aodiv@quotient+7)^0,f,c
  4084  000DA6  1E21               	comf	(___aodiv@quotient+6)^0,f,c
  4085  000DA8  1E20               	comf	(___aodiv@quotient+5)^0,f,c
  4086  000DAA  1E1F               	comf	(___aodiv@quotient+4)^0,f,c
  4087  000DAC  1E1E               	comf	(___aodiv@quotient+3)^0,f,c
  4088  000DAE  1E1D               	comf	(___aodiv@quotient+2)^0,f,c
  4089  000DB0  1E1C               	comf	(___aodiv@quotient+1)^0,f,c
  4090  000DB2  6C1B               	negf	___aodiv@quotient^0,c
  4091  000DB4  0E00               	movlw	0
  4092  000DB6  221C               	addwfc	(___aodiv@quotient+1)^0,f,c
  4093  000DB8  221D               	addwfc	(___aodiv@quotient+2)^0,f,c
  4094  000DBA  221E               	addwfc	(___aodiv@quotient+3)^0,f,c
  4095  000DBC  221F               	addwfc	(___aodiv@quotient+4)^0,f,c
  4096  000DBE  2220               	addwfc	(___aodiv@quotient+5)^0,f,c
  4097  000DC0  2221               	addwfc	(___aodiv@quotient+6)^0,f,c
  4098  000DC2  2222               	addwfc	(___aodiv@quotient+7)^0,f,c
  4099  000DC4                     l2971:
  4100  000DC4  C01B  F009         	movff	___aodiv@quotient,?___aodiv
  4101  000DC8  C01C  F00A         	movff	___aodiv@quotient+1,?___aodiv+1
  4102  000DCC  C01D  F00B         	movff	___aodiv@quotient+2,?___aodiv+2
  4103  000DD0  C01E  F00C         	movff	___aodiv@quotient+3,?___aodiv+3
  4104  000DD4  C01F  F00D         	movff	___aodiv@quotient+4,?___aodiv+4
  4105  000DD8  C020  F00E         	movff	___aodiv@quotient+5,?___aodiv+5
  4106  000DDC  C021  F00F         	movff	___aodiv@quotient+6,?___aodiv+6
  4107  000DE0  C022  F010         	movff	___aodiv@quotient+7,?___aodiv+7
  4108  000DE4  0012               	return		;funcret
  4109  000DE6                     __end_of___aodiv:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _ctoa *****************
  4113 ;; Defined at:
  4114 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  4117 ;;		 -> NULL(0), 
  4118 ;;  c               1   39[COMRAM] unsigned char 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  w               2   40[COMRAM] int 
  4121 ;;  l               2    0        int 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   37[COMRAM] int 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;Total ram usage:        5 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    9
  4138 ;; This function calls:
  4139 ;;		_pad
  4140 ;; This function is called by:
  4141 ;;		_vfpfcnvrt
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text13
  4146  001296                     __ptext13:
  4147                           	callstack 0
  4148  001296                     _ctoa:
  4149                           	callstack 18
  4150  001296                     
  4151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4152  001296  504F               	movf	_width^0,w,c
  4153  001298  1050               	iorwf	(_width+1)^0,w,c
  4154  00129A  A4D8               	btfss	status,2,c
  4155  00129C  EF52  F009         	goto	u2441
  4156  0012A0  EF54  F009         	goto	u2440
  4157  0012A4                     u2441:
  4158  0012A4  EF5A  F009         	goto	l3059
  4159  0012A8                     u2440:
  4160  0012A8  C04F  F029         	movff	_width,ctoa@w
  4161  0012AC  C050  F02A         	movff	_width+1,ctoa@w+1
  4162  0012B0  EF60  F009         	goto	l3061
  4163  0012B4                     l3059:
  4164  0012B4  0EFF               	movlw	255
  4165  0012B6  244F               	addwf	_width^0,w,c
  4166  0012B8  6E29               	movwf	ctoa@w^0,c
  4167  0012BA  0EFF               	movlw	255
  4168  0012BC  2050               	addwfc	(_width+1)^0,w,c
  4169  0012BE  6E2A               	movwf	(ctoa@w+1)^0,c
  4170  0012C0                     l3061:
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  4173  0012C0  C028  F099         	movff	ctoa@c,_dbuf
  4174  0012C4                     
  4175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  4176  0012C4  0E00               	movlw	0
  4177  0012C6  0100               	movlb	0	; () banked
  4178  0012C8  6F9A               	movwf	(_dbuf+1)& (0+255),b
  4179  0012CA                     
  4180                           ; BSR set to: 0
  4181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  4182  0012CA  C026  F01B         	movff	ctoa@fp,pad@fp
  4183  0012CE  C027  F01C         	movff	ctoa@fp+1,pad@fp+1
  4184  0012D2  0E99               	movlw	low _dbuf
  4185  0012D4  6E1D               	movwf	pad@buf^0,c
  4186  0012D6  0E00               	movlw	high _dbuf
  4187  0012D8  6E1E               	movwf	(pad@buf+1)^0,c
  4188  0012DA  C029  F01F         	movff	ctoa@w,pad@p
  4189  0012DE  C02A  F020         	movff	ctoa@w+1,pad@p+1
  4190  0012E2  EC0F  F008         	call	_pad	;wreg free
  4191  0012E6  C01B  F026         	movff	?_pad,?_ctoa
  4192  0012EA  C01C  F027         	movff	?_pad+1,?_ctoa+1
  4193  0012EE  0012               	return		;funcret
  4194  0012F0                     __end_of_ctoa:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _pad *****************
  4198 ;; Defined at:
  4199 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  4202 ;;		 -> NULL(0), 
  4203 ;;  buf             2   28[COMRAM] PTR unsigned char 
  4204 ;;		 -> dbuf(32), 
  4205 ;;  p               2   30[COMRAM] int 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  w               2   35[COMRAM] int 
  4208 ;;  i               2   33[COMRAM] int 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2   26[COMRAM] int 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:       11 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    8
  4225 ;; This function calls:
  4226 ;;		_fputc
  4227 ;;		_fputs
  4228 ;;		_strlen
  4229 ;; This function is called by:
  4230 ;;		_ctoa
  4231 ;;		_dtoa
  4232 ;;		_xtoa
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text14
  4237  00101E                     __ptext14:
  4238                           	callstack 0
  4239  00101E                     _pad:
  4240                           	callstack 18
  4241  00101E                     
  4242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4243  00101E  A053               	btfss	_flags^0,0,c
  4244  001020  EF14  F008         	goto	u2321
  4245  001024  EF16  F008         	goto	u2320
  4246  001028                     u2321:
  4247  001028  EF20  F008         	goto	l3015
  4248  00102C                     u2320:
  4249  00102C                     
  4250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4251  00102C  C01D  F014         	movff	pad@buf,fputs@s
  4252  001030  C01E  F015         	movff	pad@buf+1,fputs@s+1
  4253  001034  C01B  F016         	movff	pad@fp,fputs@fp
  4254  001038  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  4255  00103C  EC78  F009         	call	_fputs	;wreg free
  4256  001040                     l3015:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4259  001040  BE20               	btfsc	(pad@p+1)^0,7,c
  4260  001042  EF25  F008         	goto	u2331
  4261  001046  EF27  F008         	goto	u2330
  4262  00104A                     u2331:
  4263  00104A  EF2D  F008         	goto	l3019
  4264  00104E                     u2330:
  4265  00104E  C01F  F024         	movff	pad@p,pad@w
  4266  001052  C020  F025         	movff	pad@p+1,pad@w+1
  4267  001056  EF31  F008         	goto	l1193
  4268  00105A                     l3019:
  4269  00105A  0E00               	movlw	0
  4270  00105C  6E25               	movwf	(pad@w+1)^0,c
  4271  00105E  0E00               	movlw	0
  4272  001060  6E24               	movwf	pad@w^0,c
  4273  001062                     l1193:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4276  001062  0E00               	movlw	0
  4277  001064  6E23               	movwf	(pad@i+1)^0,c
  4278  001066  0E00               	movlw	0
  4279  001068  6E22               	movwf	pad@i^0,c
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4282  00106A  EF43  F008         	goto	l3025
  4283  00106E                     l3021:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4286  00106E  0E00               	movlw	0
  4287  001070  6E0C               	movwf	(fputc@c+1)^0,c
  4288  001072  0E20               	movlw	32
  4289  001074  6E0B               	movwf	fputc@c^0,c
  4290  001076  C01B  F00D         	movff	pad@fp,fputc@fp
  4291  00107A  C01C  F00E         	movff	pad@fp+1,fputc@fp+1
  4292  00107E  EC70  F008         	call	_fputc	;wreg free
  4293  001082                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4295  001082  4A22               	infsnz	pad@i^0,f,c
  4296  001084  2A23               	incf	(pad@i+1)^0,f,c
  4297  001086                     l3025:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4300  001086  5024               	movf	pad@w^0,w,c
  4301  001088  5C22               	subwf	pad@i^0,w,c
  4302  00108A  5023               	movf	(pad@i+1)^0,w,c
  4303  00108C  0A80               	xorlw	128
  4304  00108E  6E21               	movwf	??_pad^0,c
  4305  001090  5025               	movf	(pad@w+1)^0,w,c
  4306  001092  0A80               	xorlw	128
  4307  001094  5821               	subwfb	??_pad^0,w,c
  4308  001096  A0D8               	btfss	status,0,c
  4309  001098  EF50  F008         	goto	u2341
  4310  00109C  EF52  F008         	goto	u2340
  4311  0010A0                     u2341:
  4312  0010A0  EF37  F008         	goto	l3021
  4313  0010A4                     u2340:
  4314  0010A4                     
  4315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4316  0010A4  B053               	btfsc	_flags^0,0,c
  4317  0010A6  EF57  F008         	goto	u2351
  4318  0010AA  EF59  F008         	goto	u2350
  4319  0010AE                     u2351:
  4320  0010AE  EF63  F008         	goto	l3029
  4321  0010B2                     u2350:
  4322  0010B2                     
  4323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4324  0010B2  C01D  F014         	movff	pad@buf,fputs@s
  4325  0010B6  C01E  F015         	movff	pad@buf+1,fputs@s+1
  4326  0010BA  C01B  F016         	movff	pad@fp,fputs@fp
  4327  0010BE  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  4328  0010C2  EC78  F009         	call	_fputs	;wreg free
  4329  0010C6                     l3029:
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4332  0010C6  C01D  F009         	movff	pad@buf,strlen@s
  4333  0010CA  C01E  F00A         	movff	pad@buf+1,strlen@s+1
  4334  0010CE  EC6E  F00A         	call	_strlen	;wreg free
  4335  0010D2  5024               	movf	pad@w^0,w,c
  4336  0010D4  2409               	addwf	?_strlen^0,w,c
  4337  0010D6  6E1B               	movwf	?_pad^0,c
  4338  0010D8  5025               	movf	(pad@w+1)^0,w,c
  4339  0010DA  200A               	addwfc	(?_strlen+1)^0,w,c
  4340  0010DC  6E1C               	movwf	(?_pad+1)^0,c
  4341  0010DE  0012               	return		;funcret
  4342  0010E0                     __end_of_pad:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _strlen *****************
  4346 ;; Defined at:
  4347 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4350 ;;		 -> dbuf(32), 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  a               2   10[COMRAM] PTR const unsigned char 
  4353 ;;		 -> dbuf(32), 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  2    8[COMRAM] unsigned int 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    4
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_pad
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text15
  4378  0014DC                     __ptext15:
  4379                           	callstack 0
  4380  0014DC                     _strlen:
  4381                           	callstack 21
  4382  0014DC  C009  F00B         	movff	strlen@s,strlen@a
  4383  0014E0  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  4384  0014E4  EF76  F00A         	goto	l2921
  4385  0014E8                     l2919:
  4386  0014E8  4A09               	infsnz	strlen@s^0,f,c
  4387  0014EA  2A0A               	incf	(strlen@s+1)^0,f,c
  4388  0014EC                     l2921:
  4389  0014EC  C009  FFD9         	movff	strlen@s,fsr2l
  4390  0014F0  C00A  FFDA         	movff	strlen@s+1,fsr2h
  4391  0014F4  50DF               	movf	indf2,w,c
  4392  0014F6  A4D8               	btfss	status,2,c
  4393  0014F8  EF80  F00A         	goto	u2161
  4394  0014FC  EF82  F00A         	goto	u2160
  4395  001500                     u2161:
  4396  001500  EF74  F00A         	goto	l2919
  4397  001504                     u2160:
  4398  001504  500B               	movf	strlen@a^0,w,c
  4399  001506  5C09               	subwf	strlen@s^0,w,c
  4400  001508  6E09               	movwf	?_strlen^0,c
  4401  00150A  500C               	movf	(strlen@a+1)^0,w,c
  4402  00150C  580A               	subwfb	(strlen@s+1)^0,w,c
  4403  00150E  6E0A               	movwf	(?_strlen+1)^0,c
  4404  001510  0012               	return		;funcret
  4405  001512                     __end_of_strlen:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _fputs *****************
  4409 ;; Defined at:
  4410 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  s               2   19[COMRAM] PTR const unsigned char 
  4413 ;;		 -> dbuf(32), 
  4414 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4415 ;;		 -> NULL(0), 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  i               2   24[COMRAM] int 
  4418 ;;  c               1   23[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2   19[COMRAM] int 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;Total ram usage:        7 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    7
  4435 ;; This function calls:
  4436 ;;		_fputc
  4437 ;; This function is called by:
  4438 ;;		_pad
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text16
  4443  0012F0                     __ptext16:
  4444                           	callstack 0
  4445  0012F0                     _fputs:
  4446                           	callstack 18
  4447  0012F0  0E00               	movlw	0
  4448  0012F2  6E1A               	movwf	(fputs@i+1)^0,c
  4449  0012F4  0E00               	movlw	0
  4450  0012F6  6E19               	movwf	fputs@i^0,c
  4451  0012F8  EF89  F009         	goto	l2915
  4452  0012FC                     l2911:
  4453  0012FC  C018  F00B         	movff	fputs@c,fputc@c
  4454  001300  6A0C               	clrf	(fputc@c+1)^0,c
  4455  001302  C016  F00D         	movff	fputs@fp,fputc@fp
  4456  001306  C017  F00E         	movff	fputs@fp+1,fputc@fp+1
  4457  00130A  EC70  F008         	call	_fputc	;wreg free
  4458  00130E  4A19               	infsnz	fputs@i^0,f,c
  4459  001310  2A1A               	incf	(fputs@i+1)^0,f,c
  4460  001312                     l2915:
  4461  001312  5019               	movf	fputs@i^0,w,c
  4462  001314  2414               	addwf	fputs@s^0,w,c
  4463  001316  6ED9               	movwf	fsr2l,c
  4464  001318  501A               	movf	(fputs@i+1)^0,w,c
  4465  00131A  2015               	addwfc	(fputs@s+1)^0,w,c
  4466  00131C  6EDA               	movwf	fsr2h,c
  4467  00131E  50DF               	movf	indf2,w,c
  4468  001320  6E18               	movwf	fputs@c^0,c
  4469  001322  5018               	movf	fputs@c^0,w,c
  4470  001324  A4D8               	btfss	status,2,c
  4471  001326  EF97  F009         	goto	u2151
  4472  00132A  EF99  F009         	goto	u2150
  4473  00132E                     u2151:
  4474  00132E  EF7E  F009         	goto	l2911
  4475  001332                     u2150:
  4476  001332  0012               	return		;funcret
  4477  001334                     __end_of_fputs:
  4478                           	callstack 0
  4479                           
  4480 ;; *************** function _fputc *****************
  4481 ;; Defined at:
  4482 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  c               2   10[COMRAM] int 
  4485 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  4486 ;;		 -> NULL(0), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  2   10[COMRAM] int 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        9 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    6
  4505 ;; This function calls:
  4506 ;;		_putch
  4507 ;; This function is called by:
  4508 ;;		_pad
  4509 ;;		_vfpfcnvrt
  4510 ;;		_fputs
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text17
  4515  0010E0                     __ptext17:
  4516                           	callstack 0
  4517  0010E0                     _fputc:
  4518                           	callstack 18
  4519  0010E0  500D               	movf	fputc@fp^0,w,c
  4520  0010E2  100E               	iorwf	(fputc@fp+1)^0,w,c
  4521  0010E4  B4D8               	btfsc	status,2,c
  4522  0010E6  EF77  F008         	goto	u2111
  4523  0010EA  EF79  F008         	goto	u2110
  4524  0010EE                     u2111:
  4525  0010EE  EF82  F008         	goto	l2899
  4526  0010F2                     u2110:
  4527  0010F2  500D               	movf	fputc@fp^0,w,c
  4528  0010F4  100E               	iorwf	(fputc@fp+1)^0,w,c
  4529  0010F6  A4D8               	btfss	status,2,c
  4530  0010F8  EF80  F008         	goto	u2121
  4531  0010FC  EF82  F008         	goto	u2120
  4532  001100                     u2121:
  4533  001100  EF87  F008         	goto	l2901
  4534  001104                     u2120:
  4535  001104                     l2899:
  4536  001104  500B               	movf	fputc@c^0,w,c
  4537  001106  ECA0  F00B         	call	_putch
  4538  00110A  EFBA  F008         	goto	l1310
  4539  00110E                     l2901:
  4540  00110E  EE20 F004          	lfsr	2,4
  4541  001112  500D               	movf	fputc@fp^0,w,c
  4542  001114  26D9               	addwf	fsr2l,f,c
  4543  001116  500E               	movf	(fputc@fp+1)^0,w,c
  4544  001118  22DA               	addwfc	fsr2h,f,c
  4545  00111A  50DE               	movf	postinc2,w,c
  4546  00111C  10DE               	iorwf	postinc2,w,c
  4547  00111E  B4D8               	btfsc	status,2,c
  4548  001120  EF94  F008         	goto	u2131
  4549  001124  EF96  F008         	goto	u2130
  4550  001128                     u2131:
  4551  001128  EFB1  F008         	goto	l2905
  4552  00112C                     u2130:
  4553  00112C  EE20 F004          	lfsr	2,4
  4554  001130  500D               	movf	fputc@fp^0,w,c
  4555  001132  26D9               	addwf	fsr2l,f,c
  4556  001134  500E               	movf	(fputc@fp+1)^0,w,c
  4557  001136  22DA               	addwfc	fsr2h,f,c
  4558  001138  EE10 F002          	lfsr	1,2
  4559  00113C  500D               	movf	fputc@fp^0,w,c
  4560  00113E  26E1               	addwf	fsr1l,f,c
  4561  001140  500E               	movf	(fputc@fp+1)^0,w,c
  4562  001142  22E2               	addwfc	fsr1h,f,c
  4563  001144  50DE               	movf	postinc2,w,c
  4564  001146  5CE6               	subwf	postinc1,w,c
  4565  001148  50E6               	movf	postinc1,w,c
  4566  00114A  0A80               	xorlw	128
  4567  00114C  6E13               	movwf	(??_fputc+4)^0,c
  4568  00114E  50DE               	movf	postinc2,w,c
  4569  001150  0A80               	xorlw	128
  4570  001152  5813               	subwfb	(??_fputc+4)^0,w,c
  4571  001154  B0D8               	btfsc	status,0,c
  4572  001156  EFAF  F008         	goto	u2141
  4573  00115A  EFB1  F008         	goto	u2140
  4574  00115E                     u2141:
  4575  00115E  EFBA  F008         	goto	l1310
  4576  001162                     u2140:
  4577  001162                     l2905:
  4578  001162  EE20 F002          	lfsr	2,2
  4579  001166  500D               	movf	fputc@fp^0,w,c
  4580  001168  26D9               	addwf	fsr2l,f,c
  4581  00116A  500E               	movf	(fputc@fp+1)^0,w,c
  4582  00116C  22DA               	addwfc	fsr2h,f,c
  4583  00116E  2ADE               	incf	postinc2,f,c
  4584  001170  0E00               	movlw	0
  4585  001172  22DD               	addwfc	postdec2,f,c
  4586  001174                     l1310:
  4587  001174  0012               	return		;funcret
  4588  001176                     __end_of_fputc:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _putch *****************
  4592 ;; Defined at:
  4593 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  txData          1    wreg     unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  txData          1    9[COMRAM] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;Total ram usage:        1 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    5
  4614 ;; This function calls:
  4615 ;;		_EUSART1_Write
  4616 ;; This function is called by:
  4617 ;;		_fputc
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text18
  4622  001740                     __ptext18:
  4623                           	callstack 0
  4624  001740                     _putch:
  4625                           	callstack 18
  4626                           
  4627                           ;incstack = 0
  4628                           ;putch@txData stored from wreg
  4629  001740  6E0A               	movwf	putch@txData^0,c
  4630  001742                     
  4631                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4632  001742  500A               	movf	putch@txData^0,w,c
  4633  001744  EC79  F00B         	call	_EUSART1_Write
  4634  001748  0012               	return		;funcret
  4635  00174A                     __end_of_putch:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _EUSART1_Write *****************
  4639 ;; Defined at:
  4640 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  txData          1    wreg     unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  txData          1    8[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        1 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    4
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_putch
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text19
  4669  0016F2                     __ptext19:
  4670                           	callstack 0
  4671  0016F2                     _EUSART1_Write:
  4672                           	callstack 18
  4673                           
  4674                           ;incstack = 0
  4675                           ;EUSART1_Write@txData stored from wreg
  4676  0016F2  6E09               	movwf	EUSART1_Write@txData^0,c
  4677  0016F4                     l452:
  4678                           
  4679                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4680  0016F4  A89E               	btfss	158,4,c	;volatile
  4681  0016F6  EF7F  F00B         	goto	u2101
  4682  0016FA  EF81  F00B         	goto	u2100
  4683  0016FE                     u2101:
  4684  0016FE  EF7A  F00B         	goto	l452
  4685  001702                     u2100:
  4686  001702                     
  4687                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4688  001702  C009  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4689  001706  0012               	return		;funcret
  4690  001708                     __end_of_EUSART1_Write:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _TMR1_WriteTimer *****************
  4694 ;; Defined at:
  4695 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  timerVal        2    8[COMRAM] unsigned short 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    4
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_main
  4720 ;;		_TMR1_Reload
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text20
  4725  001644                     __ptext20:
  4726                           	callstack 0
  4727  001644                     _TMR1_WriteTimer:
  4728                           	callstack 26
  4729  001644                     
  4730                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  4731  001644  A4CD               	btfss	205,2,c	;volatile
  4732  001646  EF27  F00B         	goto	u1891
  4733  00164A  EF29  F00B         	goto	u1890
  4734  00164E                     u1891:
  4735  00164E  EF31  F00B         	goto	l2671
  4736  001652                     u1890:
  4737  001652                     
  4738                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  4739  001652  90CD               	bcf	205,0,c	;volatile
  4740  001654                     
  4741                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  4742  001654  500A               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4743  001656  6ECF               	movwf	207,c	;volatile
  4744  001658                     
  4745                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  4746  001658  C009  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4747  00165C                     
  4748                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  4749  00165C  80CD               	bsf	205,0,c	;volatile
  4750                           
  4751                           ;mcc_generated_files/tmr1.c: 134:     }
  4752  00165E  EF35  F00B         	goto	l96
  4753  001662                     l2671:
  4754                           
  4755                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  4756  001662  500A               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4757  001664  6ECF               	movwf	207,c	;volatile
  4758  001666                     
  4759                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  4760  001666  C009  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4761  00166A                     l96:
  4762  00166A  0012               	return		;funcret
  4763  00166C                     __end_of_TMR1_WriteTimer:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _SYSTEM_Initialize *****************
  4767 ;; Defined at:
  4768 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    6
  4789 ;; This function calls:
  4790 ;;		_EPWM2_Initialize
  4791 ;;		_EUSART1_Initialize
  4792 ;;		_EUSART2_Initialize
  4793 ;;		_INTERRUPT_Initialize
  4794 ;;		_OSCILLATOR_Initialize
  4795 ;;		_PIN_MANAGER_Initialize
  4796 ;;		_TMR1_Initialize
  4797 ;;		_TMR2_Initialize
  4798 ;; This function is called by:
  4799 ;;		_main
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text21
  4804  001694                     __ptext21:
  4805                           	callstack 0
  4806  001694                     _SYSTEM_Initialize:
  4807                           	callstack 24
  4808  001694                     
  4809                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4810  001694  ECC8  F00B         	call	_INTERRUPT_Initialize	;wreg free
  4811  001698                     
  4812                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4813  001698  ECB9  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  4814  00169C                     
  4815                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4816  00169C  EC6B  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  4817  0016A0                     
  4818                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  4819  0016A0  EC5B  F00B         	call	_EPWM2_Initialize	;wreg free
  4820  0016A4                     
  4821                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  4822  0016A4  EC98  F00B         	call	_TMR2_Initialize	;wreg free
  4823  0016A8                     
  4824                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  4825  0016A8  ECCF  F00A         	call	_TMR1_Initialize	;wreg free
  4826  0016AC                     
  4827                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  4828  0016AC  ECDA  F009         	call	_EUSART1_Initialize	;wreg free
  4829  0016B0                     
  4830                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  4831  0016B0  ECBA  F009         	call	_EUSART2_Initialize	;wreg free
  4832  0016B4  0012               	return		;funcret
  4833  0016B6                     __end_of_SYSTEM_Initialize:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _TMR2_Initialize *****************
  4837 ;; Defined at:
  4838 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    4
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_SYSTEM_Initialize
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text22
  4867  001730                     __ptext22:
  4868                           	callstack 0
  4869  001730                     _TMR2_Initialize:
  4870                           	callstack 25
  4871  001730                     
  4872                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
  4873  001730  0E68               	movlw	104
  4874  001732  6EBB               	movwf	187,c	;volatile
  4875                           
  4876                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4877  001734  0E00               	movlw	0
  4878  001736  6EBC               	movwf	188,c	;volatile
  4879  001738                     
  4880                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4881  001738  929E               	bcf	158,1,c	;volatile
  4882                           
  4883                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  4884  00173A  0E05               	movlw	5
  4885  00173C  6EBA               	movwf	186,c	;volatile
  4886  00173E  0012               	return		;funcret
  4887  001740                     __end_of_TMR2_Initialize:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _TMR1_Initialize *****************
  4891 ;; Defined at:
  4892 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    5
  4913 ;; This function calls:
  4914 ;;		_TMR1_SetInterruptHandler
  4915 ;; This function is called by:
  4916 ;;		_SYSTEM_Initialize
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text23
  4921  00159E                     __ptext23:
  4922                           	callstack 0
  4923  00159E                     _TMR1_Initialize:
  4924                           	callstack 24
  4925  00159E                     
  4926                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4927  00159E  0E00               	movlw	0
  4928  0015A0  6ECC               	movwf	204,c	;volatile
  4929                           
  4930                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  4931  0015A2  0E00               	movlw	0
  4932  0015A4  6ECF               	movwf	207,c	;volatile
  4933                           
  4934                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4935  0015A6  0E00               	movlw	0
  4936  0015A8  6ECE               	movwf	206,c	;volatile
  4937  0015AA                     
  4938                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  4939  0015AA  CFCE F090          	movff	4046,_timer1ReloadVal	;volatile
  4940  0015AE  CFCF F091          	movff	4047,_timer1ReloadVal+1	;volatile
  4941  0015B2                     
  4942                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4943  0015B2  909E               	bcf	158,0,c	;volatile
  4944  0015B4                     
  4945                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4946  0015B4  809D               	bsf	157,0,c	;volatile
  4947  0015B6                     
  4948                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4949  0015B6  0E98               	movlw	low _TMR1_DefaultInterruptHandler
  4950  0015B8  6E09               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  4951  0015BA  0E17               	movlw	high _TMR1_DefaultInterruptHandler
  4952  0015BC  6E0A               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  4953  0015BE  ECA5  F00B         	call	_TMR1_SetInterruptHandler	;wreg free
  4954  0015C2                     
  4955                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  4956  0015C2  0E01               	movlw	1
  4957  0015C4  6ECD               	movwf	205,c	;volatile
  4958  0015C6  0012               	return		;funcret
  4959  0015C8                     __end_of_TMR1_Initialize:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _TMR1_SetInterruptHandler *****************
  4963 ;; Defined at:
  4964 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4967 ;;		 -> myTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    4
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_TMR1_Initialize
  4990 ;;		_main
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text24
  4995  00174A                     __ptext24:
  4996                           	callstack 0
  4997  00174A                     _TMR1_SetInterruptHandler:
  4998                           	callstack 26
  4999  00174A                     
  5000                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  5001  00174A  C009  F08E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5002  00174E  C00A  F08F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5003  001752  0012               	return		;funcret
  5004  001754                     __end_of_TMR1_SetInterruptHandler:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function _PIN_MANAGER_Initialize *****************
  5008 ;; Defined at:
  5009 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_SYSTEM_Initialize
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text25
  5038  001572                     __ptext25:
  5039                           	callstack 0
  5040  001572                     _PIN_MANAGER_Initialize:
  5041                           	callstack 25
  5042  001572                     
  5043                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5044  001572  0E00               	movlw	0
  5045  001574  6E89               	movwf	137,c	;volatile
  5046                           
  5047                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5048  001576  0E00               	movlw	0
  5049  001578  6E8A               	movwf	138,c	;volatile
  5050                           
  5051                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5052  00157A  0E00               	movlw	0
  5053  00157C  6E8B               	movwf	139,c	;volatile
  5054  00157E                     
  5055                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5056  00157E  6892               	setf	146,c	;volatile
  5057                           
  5058                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  5059  001580  0EBF               	movlw	191
  5060  001582  6E93               	movwf	147,c	;volatile
  5061                           
  5062                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  5063  001584  0EBD               	movlw	189
  5064  001586  6E94               	movwf	148,c	;volatile
  5065                           
  5066                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5067  001588  0E3C               	movlw	60
  5068  00158A  010F               	movlb	15	; () banked
  5069  00158C  6F3A               	movwf	58,b	;volatile
  5070                           
  5071                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5072  00158E  0E3F               	movlw	63
  5073  001590  6F39               	movwf	57,b	;volatile
  5074                           
  5075                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5076  001592  0E2F               	movlw	47
  5077  001594  6F38               	movwf	56,b	;volatile
  5078                           
  5079                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5080  001596  0E00               	movlw	0
  5081  001598  6E61               	movwf	97,c	;volatile
  5082  00159A                     
  5083                           ; BSR set to: 15
  5084                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5085  00159A  8EF1               	bsf	241,7,c	;volatile
  5086  00159C                     
  5087                           ; BSR set to: 15
  5088  00159C  0012               	return		;funcret
  5089  00159E                     __end_of_PIN_MANAGER_Initialize:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _OSCILLATOR_Initialize *****************
  5093 ;; Defined at:
  5094 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    4
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_SYSTEM_Initialize
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text26
  5123  0016D6                     __ptext26:
  5124                           	callstack 0
  5125  0016D6                     _OSCILLATOR_Initialize:
  5126                           	callstack 25
  5127  0016D6                     
  5128                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  5129  0016D6  0E70               	movlw	112
  5130  0016D8  6ED3               	movwf	211,c	;volatile
  5131                           
  5132                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  5133  0016DA  0E04               	movlw	4
  5134  0016DC  6ED2               	movwf	210,c	;volatile
  5135                           
  5136                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  5137  0016DE  0E40               	movlw	64
  5138  0016E0  6E9B               	movwf	155,c	;volatile
  5139  0016E2                     l30:
  5140                           
  5141                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  5142  0016E2  AED2               	btfss	4050,7,c	;volatile
  5143  0016E4  EF76  F00B         	goto	u1841
  5144  0016E8  EF78  F00B         	goto	u1840
  5145  0016EC                     u1841:
  5146  0016EC  EF71  F00B         	goto	l30
  5147  0016F0                     u1840:
  5148  0016F0  0012               	return		;funcret
  5149  0016F2                     __end_of_OSCILLATOR_Initialize:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _INTERRUPT_Initialize *****************
  5153 ;; Defined at:
  5154 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		None
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    4
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_SYSTEM_Initialize
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text27
  5183  001790                     __ptext27:
  5184                           	callstack 0
  5185  001790                     _INTERRUPT_Initialize:
  5186                           	callstack 25
  5187  001790                     
  5188                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5189  001790  9ED0               	bcf	208,7,c	;volatile
  5190  001792  0012               	return		;funcret
  5191  001794                     __end_of_INTERRUPT_Initialize:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _EUSART2_Initialize *****************
  5195 ;; Defined at:
  5196 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    5
  5217 ;; This function calls:
  5218 ;;		_EUSART2_SetErrorHandler
  5219 ;;		_EUSART2_SetFramingErrorHandler
  5220 ;;		_EUSART2_SetOverrunErrorHandler
  5221 ;; This function is called by:
  5222 ;;		_SYSTEM_Initialize
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text28
  5227  001374                     __ptext28:
  5228                           	callstack 0
  5229  001374                     _EUSART2_Initialize:
  5230                           	callstack 24
  5231  001374                     
  5232                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  5233  001374  0E08               	movlw	8
  5234  001376  6E70               	movwf	112,c	;volatile
  5235                           
  5236                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  5237  001378  0E90               	movlw	144
  5238  00137A  6E71               	movwf	113,c	;volatile
  5239                           
  5240                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  5241  00137C  0E24               	movlw	36
  5242  00137E  6E72               	movwf	114,c	;volatile
  5243                           
  5244                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0x0A;
  5245  001380  0E0A               	movlw	10
  5246  001382  6E75               	movwf	117,c	;volatile
  5247                           
  5248                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x1A;
  5249  001384  0E1A               	movlw	26
  5250  001386  6E76               	movwf	118,c	;volatile
  5251  001388                     
  5252                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  5253  001388  0E00               	movlw	0
  5254  00138A  6E09               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5255  00138C  0E00               	movlw	0
  5256  00138E  6E0A               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  5257  001390  ECAF  F00B         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  5258  001394                     
  5259                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  5260  001394  0E00               	movlw	0
  5261  001396  6E09               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  5262  001398  0E00               	movlw	0
  5263  00139A  6E0A               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5264  00139C  ECAA  F00B         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  5265  0013A0                     
  5266                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  5267  0013A0  0E00               	movlw	0
  5268  0013A2  6E09               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  5269  0013A4  0E00               	movlw	0
  5270  0013A6  6E0A               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  5271  0013A8  ECB4  F00B         	call	_EUSART2_SetErrorHandler	;wreg free
  5272  0013AC                     
  5273                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  5274  0013AC  0E00               	movlw	0
  5275  0013AE  0100               	movlb	0	; () banked
  5276  0013B0  6F93               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5277  0013B2                     
  5278                           ; BSR set to: 0
  5279  0013B2  0012               	return		;funcret
  5280  0013B4                     __end_of_EUSART2_Initialize:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  5284 ;; Defined at:
  5285 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5288 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    4
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_EUSART2_Initialize
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text29
  5315  001754                     __ptext29:
  5316                           	callstack 0
  5317  001754                     _EUSART2_SetOverrunErrorHandler:
  5318                           	callstack 24
  5319  001754                     
  5320                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  5321  001754  C009  F08A         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  5322  001758  C00A  F08B         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  5323  00175C  0012               	return		;funcret
  5324  00175E                     __end_of_EUSART2_SetOverrunErrorHandler:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  5328 ;; Defined at:
  5329 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5332 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;Total ram usage:        2 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    4
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_EUSART2_Initialize
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text30
  5359  00175E                     __ptext30:
  5360                           	callstack 0
  5361  00175E                     _EUSART2_SetFramingErrorHandler:
  5362                           	callstack 24
  5363  00175E                     
  5364                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  5365  00175E  C009  F08C         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  5366  001762  C00A  F08D         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  5367  001766  0012               	return		;funcret
  5368  001768                     __end_of_EUSART2_SetFramingErrorHandler:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _EUSART2_SetErrorHandler *****************
  5372 ;; Defined at:
  5373 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5376 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:        2 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    4
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_EUSART2_Initialize
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text31
  5403  001768                     __ptext31:
  5404                           	callstack 0
  5405  001768                     _EUSART2_SetErrorHandler:
  5406                           	callstack 24
  5407  001768                     
  5408                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  5409  001768  C009  F088         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  5410  00176C  C00A  F089         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  5411  001770  0012               	return		;funcret
  5412  001772                     __end_of_EUSART2_SetErrorHandler:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _EUSART1_Initialize *****************
  5416 ;; Defined at:
  5417 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    5
  5438 ;; This function calls:
  5439 ;;		_EUSART1_SetErrorHandler
  5440 ;;		_EUSART1_SetFramingErrorHandler
  5441 ;;		_EUSART1_SetOverrunErrorHandler
  5442 ;; This function is called by:
  5443 ;;		_SYSTEM_Initialize
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text32
  5448  0013B4                     __ptext32:
  5449                           	callstack 0
  5450  0013B4                     _EUSART1_Initialize:
  5451                           	callstack 24
  5452  0013B4                     
  5453                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5454  0013B4  0E08               	movlw	8
  5455  0013B6  6EB8               	movwf	184,c	;volatile
  5456                           
  5457                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5458  0013B8  0E90               	movlw	144
  5459  0013BA  6EAB               	movwf	171,c	;volatile
  5460                           
  5461                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5462  0013BC  0E24               	movlw	36
  5463  0013BE  6EAC               	movwf	172,c	;volatile
  5464                           
  5465                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5466  0013C0  0E82               	movlw	130
  5467  0013C2  6EAF               	movwf	175,c	;volatile
  5468                           
  5469                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5470  0013C4  0E06               	movlw	6
  5471  0013C6  6EB0               	movwf	176,c	;volatile
  5472  0013C8                     
  5473                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5474  0013C8  0E00               	movlw	0
  5475  0013CA  6E09               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5476  0013CC  0E00               	movlw	0
  5477  0013CE  6E0A               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5478  0013D0  ECBE  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5479  0013D4                     
  5480                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5481  0013D4  0E00               	movlw	0
  5482  0013D6  6E09               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5483  0013D8  0E00               	movlw	0
  5484  0013DA  6E0A               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5485  0013DC  ECB9  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5486  0013E0                     
  5487                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5488  0013E0  0E00               	movlw	0
  5489  0013E2  6E09               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5490  0013E4  0E00               	movlw	0
  5491  0013E6  6E0A               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5492  0013E8  ECC3  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5493  0013EC                     
  5494                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5495  0013EC  0E00               	movlw	0
  5496  0013EE  0100               	movlb	0	; () banked
  5497  0013F0  6F92               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5498  0013F2                     
  5499                           ; BSR set to: 0
  5500  0013F2  0012               	return		;funcret
  5501  0013F4                     __end_of_EUSART1_Initialize:
  5502                           	callstack 0
  5503                           
  5504 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5505 ;; Defined at:
  5506 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5509 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        2 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    4
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_EUSART1_Initialize
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text33
  5536  001772                     __ptext33:
  5537                           	callstack 0
  5538  001772                     _EUSART1_SetOverrunErrorHandler:
  5539                           	callstack 24
  5540  001772                     
  5541                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5542  001772  C009  F084         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5543  001776  C00A  F085         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5544  00177A  0012               	return		;funcret
  5545  00177C                     __end_of_EUSART1_SetOverrunErrorHandler:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5549 ;; Defined at:
  5550 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5553 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;Total ram usage:        2 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    4
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_EUSART1_Initialize
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text34
  5580  00177C                     __ptext34:
  5581                           	callstack 0
  5582  00177C                     _EUSART1_SetFramingErrorHandler:
  5583                           	callstack 24
  5584  00177C                     
  5585                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5586  00177C  C009  F086         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5587  001780  C00A  F087         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5588  001784  0012               	return		;funcret
  5589  001786                     __end_of_EUSART1_SetFramingErrorHandler:
  5590                           	callstack 0
  5591                           
  5592 ;; *************** function _EUSART1_SetErrorHandler *****************
  5593 ;; Defined at:
  5594 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  5597 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_EUSART1_Initialize
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text35
  5624  001786                     __ptext35:
  5625                           	callstack 0
  5626  001786                     _EUSART1_SetErrorHandler:
  5627                           	callstack 24
  5628  001786                     
  5629                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5630  001786  C009  F082         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5631  00178A  C00A  F083         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5632  00178E  0012               	return		;funcret
  5633  001790                     __end_of_EUSART1_SetErrorHandler:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function _EPWM2_Initialize *****************
  5637 ;; Defined at:
  5638 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_SYSTEM_Initialize
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text36
  5667  0016B6                     __ptext36:
  5668                           	callstack 0
  5669  0016B6                     _EPWM2_Initialize:
  5670                           	callstack 25
  5671  0016B6                     
  5672                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x1C;
  5673  0016B6  0E1C               	movlw	28
  5674  0016B8  6E66               	movwf	102,c	;volatile
  5675                           
  5676                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  5677  0016BA  0E00               	movlw	0
  5678  0016BC  6E64               	movwf	100,c	;volatile
  5679                           
  5680                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  5681  0016BE  0E80               	movlw	128
  5682  0016C0  6E65               	movwf	101,c	;volatile
  5683                           
  5684                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  5685  0016C2  0E01               	movlw	1
  5686  0016C4  6E63               	movwf	99,c	;volatile
  5687                           
  5688                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  5689  0016C6  0E00               	movlw	0
  5690  0016C8  6E68               	movwf	104,c	;volatile
  5691                           
  5692                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x34;
  5693  0016CA  0E34               	movlw	52
  5694  0016CC  6E67               	movwf	103,c	;volatile
  5695                           
  5696                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  5697  0016CE  0EE7               	movlw	-25
  5698  0016D0  010F               	movlb	15	; () banked
  5699  0016D2  1749               	andwf	73,f,b	;volatile
  5700  0016D4                     
  5701                           ; BSR set to: 15
  5702  0016D4  0012               	return		;funcret
  5703  0016D6                     __end_of_EPWM2_Initialize:
  5704                           	callstack 0
  5705                           
  5706 ;; *************** function _EUSART2_is_rx_ready *****************
  5707 ;; Defined at:
  5708 ;;		line 99 in file "mcc_generated_files/eusart2.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      _Bool 
  5715 ;; Registers used:
  5716 ;;		wreg
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    4
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text37
  5737  001708                     __ptext37:
  5738                           	callstack 0
  5739  001708                     _EUSART2_is_rx_ready:
  5740                           	callstack 26
  5741  001708                     
  5742                           ;mcc_generated_files/eusart2.c: 101:     return (_Bool)(PIR3bits.RC2IF);
  5743  001708  BAA4               	btfsc	164,5,c	;volatile
  5744  00170A  EF89  F00B         	goto	u1921
  5745  00170E  EF8C  F00B         	goto	u1920
  5746  001712                     u1921:
  5747  001712  0E01               	movlw	1
  5748  001714  EF8D  F00B         	goto	u1926
  5749  001718                     u1920:
  5750  001718  0E00               	movlw	0
  5751  00171A                     u1926:
  5752  00171A  0012               	return		;funcret
  5753  00171C                     __end_of_EUSART2_is_rx_ready:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _EUSART2_Read *****************
  5757 ;; Defined at:
  5758 ;;		line 113 in file "mcc_generated_files/eusart2.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      unsigned char 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    4
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text38
  5787  0015C8                     __ptext38:
  5788                           	callstack 0
  5789  0015C8                     _EUSART2_Read:
  5790                           	callstack 26
  5791  0015C8                     l357:
  5792                           
  5793                           ;mcc_generated_files/eusart2.c: 115:     while(!PIR3bits.RC2IF)
  5794  0015C8  AAA4               	btfss	164,5,c	;volatile
  5795  0015CA  EFE9  F00A         	goto	u1931
  5796  0015CE  EFEB  F00A         	goto	u1930
  5797  0015D2                     u1931:
  5798  0015D2  EFE4  F00A         	goto	l357
  5799  0015D6                     u1930:
  5800  0015D6                     
  5801                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  5802  0015D6  0E00               	movlw	0
  5803  0015D8  0100               	movlb	0	; () banked
  5804  0015DA  6F93               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5805  0015DC                     
  5806                           ; BSR set to: 0
  5807                           ;mcc_generated_files/eusart2.c: 121:     if(1 == RCSTA2bits.OERR)
  5808  0015DC  A271               	btfss	113,1,c	;volatile
  5809  0015DE  EFF3  F00A         	goto	u1941
  5810  0015E2  EFF5  F00A         	goto	u1940
  5811  0015E6                     u1941:
  5812  0015E6  EFF7  F00A         	goto	l2695
  5813  0015EA                     u1940:
  5814  0015EA                     
  5815                           ; BSR set to: 0
  5816                           ;mcc_generated_files/eusart2.c: 122:     {;mcc_generated_files/eusart2.c: 125:         R
      +                          CSTA2bits.CREN = 0;
  5817  0015EA  9871               	bcf	113,4,c	;volatile
  5818                           
  5819                           ;mcc_generated_files/eusart2.c: 126:         RCSTA2bits.CREN = 1;
  5820  0015EC  8871               	bsf	113,4,c	;volatile
  5821  0015EE                     l2695:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;mcc_generated_files/eusart2.c: 129:     return RCREG2;
  5825  0015EE  5074               	movf	116,w,c	;volatile
  5826  0015F0                     
  5827                           ; BSR set to: 0
  5828  0015F0  0012               	return		;funcret
  5829  0015F2                     __end_of_EUSART2_Read:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _EUSART1_is_rx_ready *****************
  5833 ;; Defined at:
  5834 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      _Bool 
  5841 ;; Registers used:
  5842 ;;		wreg
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    4
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_main
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text39
  5863  00171C                     __ptext39:
  5864                           	callstack 0
  5865  00171C                     _EUSART1_is_rx_ready:
  5866                           	callstack 26
  5867  00171C                     
  5868                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5869  00171C  BA9E               	btfsc	158,5,c	;volatile
  5870  00171E  EF93  F00B         	goto	u1951
  5871  001722  EF96  F00B         	goto	u1950
  5872  001726                     u1951:
  5873  001726  0E01               	movlw	1
  5874  001728  EF97  F00B         	goto	u1956
  5875  00172C                     u1950:
  5876  00172C  0E00               	movlw	0
  5877  00172E                     u1956:
  5878  00172E  0012               	return		;funcret
  5879  001730                     __end_of_EUSART1_is_rx_ready:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function _EUSART1_Read *****************
  5883 ;; Defined at:
  5884 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      unsigned char 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:        0 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    4
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;;		_getch
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text40
  5914  0015F2                     __ptext40:
  5915                           	callstack 0
  5916  0015F2                     _EUSART1_Read:
  5917                           	callstack 26
  5918  0015F2                     l445:
  5919                           
  5920                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5921  0015F2  AA9E               	btfss	158,5,c	;volatile
  5922  0015F4  EFFE  F00A         	goto	u1961
  5923  0015F8  EF00  F00B         	goto	u1960
  5924  0015FC                     u1961:
  5925  0015FC  EFF9  F00A         	goto	l445
  5926  001600                     u1960:
  5927  001600                     
  5928                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5929  001600  0E00               	movlw	0
  5930  001602  0100               	movlb	0	; () banked
  5931  001604  6F92               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5932  001606                     
  5933                           ; BSR set to: 0
  5934                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5935  001606  A2AB               	btfss	171,1,c	;volatile
  5936  001608  EF08  F00B         	goto	u1971
  5937  00160C  EF0A  F00B         	goto	u1970
  5938  001610                     u1971:
  5939  001610  EF0C  F00B         	goto	l2717
  5940  001614                     u1970:
  5941  001614                     
  5942                           ; BSR set to: 0
  5943                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5944  001614  98AB               	bcf	171,4,c	;volatile
  5945                           
  5946                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5947  001616  88AB               	bsf	171,4,c	;volatile
  5948  001618                     l2717:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5952  001618  50AE               	movf	174,w,c	;volatile
  5953  00161A                     
  5954                           ; BSR set to: 0
  5955  00161A  0012               	return		;funcret
  5956  00161C                     __end_of_EUSART1_Read:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _EPWM2_LoadDutyValue *****************
  5960 ;; Defined at:
  5961 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  dutyValue       2    8[COMRAM] unsigned short 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;Total ram usage:        4 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    4
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text41
  5990  001512                     __ptext41:
  5991                           	callstack 0
  5992  001512                     _EPWM2_LoadDutyValue:
  5993                           	callstack 26
  5994  001512                     
  5995                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  5996  001512  C009  F00B         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  5997  001516  C00A  F00C         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  5998  00151A  90D8               	bcf	status,0,c
  5999  00151C  320C               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6000  00151E  320B               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6001  001520  90D8               	bcf	status,0,c
  6002  001522  320C               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6003  001524  320B               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6004  001526  500B               	movf	??_EPWM2_LoadDutyValue^0,w,c
  6005  001528  6E67               	movwf	103,c	;volatile
  6006                           
  6007                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6008  00152A  C009  F00B         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6009  00152E  0E03               	movlw	3
  6010  001530  160B               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6011  001532  3A0B               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  6012  001534  0EF0               	movlw	240
  6013  001536  160B               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6014  001538  5066               	movf	102,w,c	;volatile
  6015  00153A  0BCF               	andlw	207
  6016  00153C  100B               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  6017  00153E  6E66               	movwf	102,c	;volatile
  6018  001540  0012               	return		;funcret
  6019  001542                     __end_of_EPWM2_LoadDutyValue:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function _INTERRUPT_InterruptManager *****************
  6023 ;; Defined at:
  6024 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;		None
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;Total ram usage:        2 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    3
  6045 ;; This function calls:
  6046 ;;		_TMR1_ISR
  6047 ;; This function is called by:
  6048 ;;		Interrupt level 2
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	intcode
  6053  000008                     __pintcode:
  6054                           	callstack 0
  6055  000008                     _INTERRUPT_InterruptManager:
  6056                           	callstack 18
  6057                           
  6058                           ;incstack = 0
  6059  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6060  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  6061  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6062  000012                     
  6063                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6064  000012  ACF2               	btfss	242,6,c	;volatile
  6065  000014  EF0E  F000         	goto	i2u198_41
  6066  000018  EF10  F000         	goto	i2u198_40
  6067  00001C                     i2u198_41:
  6068  00001C  EF20  F000         	goto	i2l199
  6069  000020                     i2u198_40:
  6070  000020                     
  6071                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6072  000020  A09D               	btfss	157,0,c	;volatile
  6073  000022  EF15  F000         	goto	i2u199_41
  6074  000026  EF17  F000         	goto	i2u199_40
  6075  00002A                     i2u199_41:
  6076  00002A  EF20  F000         	goto	i2l199
  6077  00002E                     i2u199_40:
  6078  00002E  A09E               	btfss	158,0,c	;volatile
  6079  000030  EF1C  F000         	goto	i2u200_41
  6080  000034  EF1E  F000         	goto	i2u200_40
  6081  000038                     i2u200_41:
  6082  000038  EF20  F000         	goto	i2l199
  6083  00003C                     i2u200_40:
  6084  00003C                     
  6085                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6086  00003C  EC18  F00A         	call	_TMR1_ISR	;wreg free
  6087  000040                     i2l199:
  6088  000040  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6089  000044  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6090  000048  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6091  00004A  0011               	retfie		f
  6092  00004C                     __end_of_INTERRUPT_InterruptManager:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _TMR1_ISR *****************
  6096 ;; Defined at:
  6097 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    2
  6118 ;; This function calls:
  6119 ;;		Absolute function
  6120 ;;		_TMR1_DefaultInterruptHandler
  6121 ;;		_myTMR1ISR
  6122 ;;		i2_TMR1_WriteTimer
  6123 ;; This function is called by:
  6124 ;;		_INTERRUPT_InterruptManager
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text43
  6129  001430                     __ptext43:
  6130                           	callstack 0
  6131  001430                     _TMR1_ISR:
  6132                           	callstack 18
  6133  001430                     
  6134                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  6135  001430  909E               	bcf	158,0,c	;volatile
  6136  001432                     
  6137                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  6138  001432  C090  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  6139  001436  C091  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  6140  00143A  EC36  F00B         	call	i2_TMR1_WriteTimer	;wreg free
  6141  00143E                     
  6142                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  6143  00143E  0100               	movlb	0	; () banked
  6144  001440  518E               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6145  001442  118F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6146  001444  B4D8               	btfsc	status,2,c
  6147  001446  EF27  F00A         	goto	i2u190_41
  6148  00144A  EF29  F00A         	goto	i2u190_40
  6149  00144E                     i2u190_41:
  6150  00144E  EF35  F00A         	goto	i2l109
  6151  001452                     i2u190_40:
  6152  001452                     
  6153                           ; BSR set to: 0
  6154                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  6155  001452  D802               	call	i2u191_48
  6156  001454  EF35  F00A         	goto	i2u191_49
  6157  001458                     i2u191_48:
  6158  001458  0005               	push	
  6159  00145A  6EFA               	movwf	pclath,c
  6160  00145C  518E               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6161  00145E  6EFD               	movwf	tosl,c
  6162  001460  518F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6163  001462  6EFE               	movwf	tosh,c
  6164  001464  6AFF               	clrf	tosu,c
  6165  001466  50FA               	movf	pclath,w,c
  6166  001468  0012               	return		;indir
  6167  00146A                     i2u191_49:
  6168  00146A                     i2l109:
  6169  00146A  0012               	return		;funcret
  6170  00146C                     __end_of_TMR1_ISR:
  6171                           	callstack 0
  6172                           
  6173 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6174 ;; Defined at:
  6175 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		None
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_TMR1_Initialize
  6199 ;;		_TMR1_ISR
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text44
  6204  001798                     __ptext44:
  6205                           	callstack 0
  6206  001798                     _TMR1_DefaultInterruptHandler:
  6207                           	callstack 19
  6208  001798  0012               	return		;funcret
  6209  00179A                     __end_of_TMR1_DefaultInterruptHandler:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _myTMR1ISR *****************
  6213 ;; Defined at:
  6214 ;;		line 187 in file "main.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        2 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    1
  6235 ;; This function calls:
  6236 ;;		i2_EPWM2_LoadDutyValue
  6237 ;;		i2_TMR1_WriteTimer
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;;		_TMR1_ISR
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text45
  6245  000F4A                     __ptext45:
  6246                           	callstack 0
  6247  000F4A                     _myTMR1ISR:
  6248                           	callstack 18
  6249  000F4A                     
  6250                           ;main.c: 189:                     newCharacterToSend = 0;;main.c: 190:                 }
      +                           else {;main.c: 192:                     else EPWM2_LoadDutyValue(25);
  6251  000F4A  0455               	decf	_newCharacterToSend^0,w,c
  6252  000F4C  A4D8               	btfss	status,2,c
  6253  000F4E  EFAB  F007         	goto	i2u185_41
  6254  000F52  EFAD  F007         	goto	i2u185_40
  6255  000F56                     i2u185_41:
  6256  000F56  EF07  F008         	goto	i2l2625
  6257  000F5A                     i2u185_40:
  6258  000F5A  EFF1  F007         	goto	i2l2623
  6259  000F5E                     i2l2597:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;main.c: 200: 
  6263  000F5E  0E00               	movlw	0
  6264  000F60  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6265  000F62  0E19               	movlw	25
  6266  000F64  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6267  000F66  ECA1  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6268  000F6A                     
  6269                           ;main.c: 201:             default:
  6270  000F6A  0E01               	movlw	1
  6271  000F6C  0100               	movlb	0	; () banked
  6272  000F6E  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  6273  000F70                     
  6274                           ; BSR set to: 0
  6275                           ;main.c: 202:                 tmr1ISRstate = TX_IDLE;
  6276  000F70  0E01               	movlw	1
  6277  000F72  6E56               	movwf	myTMR1ISR@mask^0,c
  6278                           
  6279                           ;main.c: 203:                 break;
  6280  000F74  EF07  F008         	goto	i2l2625
  6281  000F78                     i2l2603:
  6282                           
  6283                           ; BSR set to: 0
  6284  000F78  5056               	movf	myTMR1ISR@mask^0,w,c
  6285  000F7A  A4D8               	btfss	status,2,c
  6286  000F7C  EFC2  F007         	goto	i2u186_41
  6287  000F80  EFC4  F007         	goto	i2u186_40
  6288  000F84                     i2u186_41:
  6289  000F84  EFD0  F007         	goto	i2l2611
  6290  000F88                     i2u186_40:
  6291  000F88                     
  6292                           ; BSR set to: 0
  6293  000F88  0E00               	movlw	0
  6294  000F8A  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  6295  000F8C                     
  6296                           ; BSR set to: 0
  6297  000F8C  0E00               	movlw	0
  6298  000F8E  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6299  000F90  0E00               	movlw	0
  6300  000F92  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6301  000F94  ECA1  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6302  000F98  0E00               	movlw	0
  6303  000F9A  6E55               	movwf	_newCharacterToSend^0,c
  6304  000F9C  EFE8  F007         	goto	i2l2617
  6305  000FA0                     i2l2611:
  6306                           
  6307                           ; BSR set to: 0
  6308  000FA0  51EA               	movf	_letter& (0+255),w,b
  6309  000FA2  1456               	andwf	myTMR1ISR@mask^0,w,c
  6310  000FA4  0900               	iorlw	0
  6311  000FA6  B4D8               	btfsc	status,2,c
  6312  000FA8  EFD8  F007         	goto	i2u187_41
  6313  000FAC  EFDA  F007         	goto	i2u187_40
  6314  000FB0                     i2u187_41:
  6315  000FB0  EFE2  F007         	goto	i2l2615
  6316  000FB4                     i2u187_40:
  6317  000FB4                     
  6318                           ; BSR set to: 0
  6319  000FB4  0E00               	movlw	0
  6320  000FB6  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6321  000FB8  0E00               	movlw	0
  6322  000FBA  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6323  000FBC  ECA1  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6324  000FC0  EFE8  F007         	goto	i2l2617
  6325  000FC4                     i2l2615:
  6326                           
  6327                           ; BSR set to: 0
  6328  000FC4  0E00               	movlw	0
  6329  000FC6  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  6330  000FC8  0E19               	movlw	25
  6331  000FCA  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
  6332  000FCC  ECA1  F00A         	call	i2_EPWM2_LoadDutyValue	;wreg free
  6333  000FD0                     i2l2617:
  6334  000FD0  5056               	movf	myTMR1ISR@mask^0,w,c
  6335  000FD2  2456               	addwf	myTMR1ISR@mask^0,w,c
  6336  000FD4  6E56               	movwf	myTMR1ISR@mask^0,c
  6337  000FD6  EF07  F008         	goto	i2l2625
  6338  000FDA                     i2l2619:
  6339                           
  6340                           ; BSR set to: 0
  6341  000FDA  0E00               	movlw	0
  6342  000FDC  6F94               	movwf	myTMR1ISR@tmr1ISRstate& (0+255),b
  6343  000FDE  EF07  F008         	goto	i2l2625
  6344  000FE2                     i2l2623:
  6345  000FE2  0100               	movlb	0	; () banked
  6346  000FE4  5194               	movf	myTMR1ISR@tmr1ISRstate& (0+255),w,b
  6347  000FE6  6E05               	movwf	??_myTMR1ISR^0,c
  6348  000FE8  6A06               	clrf	(??_myTMR1ISR+1)^0,c
  6349                           
  6350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6351                           ; Switch size 1, requested type "simple"
  6352                           ; Number of cases is 1, Range of values is 0 to 0
  6353                           ; switch strategies available:
  6354                           ; Name         Instructions Cycles
  6355                           ; simple_byte            4     3 (average)
  6356                           ;	Chosen strategy is simple_byte
  6357  000FEA  5006               	movf	(??_myTMR1ISR+1)^0,w,c
  6358  000FEC  0A00               	xorlw	0	; case 0
  6359  000FEE  B4D8               	btfsc	status,2,c
  6360  000FF0  EFFC  F007         	goto	i2l3431
  6361  000FF4  EFED  F007         	goto	i2l2619
  6362  000FF8                     i2l3431:
  6363                           
  6364                           ; BSR set to: 0
  6365                           ; Switch size 1, requested type "simple"
  6366                           ; Number of cases is 2, Range of values is 0 to 1
  6367                           ; switch strategies available:
  6368                           ; Name         Instructions Cycles
  6369                           ; simple_byte            7     4 (average)
  6370                           ;	Chosen strategy is simple_byte
  6371  000FF8  5005               	movf	??_myTMR1ISR^0,w,c
  6372  000FFA  0A00               	xorlw	0	; case 0
  6373  000FFC  B4D8               	btfsc	status,2,c
  6374  000FFE  EFAF  F007         	goto	i2l2597
  6375  001002  0A01               	xorlw	1	; case 1
  6376  001004  B4D8               	btfsc	status,2,c
  6377  001006  EFBC  F007         	goto	i2l2603
  6378  00100A  EFED  F007         	goto	i2l2619
  6379  00100E                     i2l2625:
  6380  00100E  0EE5               	movlw	229
  6381  001010  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  6382  001012  0EF6               	movlw	246
  6383  001014  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  6384  001016  EC36  F00B         	call	i2_TMR1_WriteTimer	;wreg free
  6385  00101A  909E               	bcf	158,0,c	;volatile
  6386  00101C  0012               	return		;funcret
  6387  00101E                     __end_of_myTMR1ISR:
  6388                           	callstack 0
  6389                           
  6390 ;; *************** function i2_TMR1_WriteTimer *****************
  6391 ;; Defined at:
  6392 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  timerVal        2    0[COMRAM] unsigned short 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      void 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;Total ram usage:        2 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_TMR1_ISR
  6416 ;;		_myTMR1ISR
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text46
  6421  00166C                     __ptext46:
  6422                           	callstack 0
  6423  00166C                     i2_TMR1_WriteTimer:
  6424                           	callstack 19
  6425  00166C                     
  6426                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  6427  00166C  A4CD               	btfss	205,2,c	;volatile
  6428  00166E  EF3B  F00B         	goto	i2u183_41
  6429  001672  EF3D  F00B         	goto	i2u183_40
  6430  001676                     i2u183_41:
  6431  001676  EF45  F00B         	goto	i2l2541
  6432  00167A                     i2u183_40:
  6433  00167A                     
  6434                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  6435  00167A  90CD               	bcf	205,0,c	;volatile
  6436  00167C                     
  6437                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  6438  00167C  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  6439  00167E  6ECF               	movwf	207,c	;volatile
  6440  001680                     
  6441                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  6442  001680  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  6443  001684                     
  6444                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  6445  001684  80CD               	bsf	205,0,c	;volatile
  6446                           
  6447                           ;mcc_generated_files/tmr1.c: 134:     }
  6448  001686  EF49  F00B         	goto	i2l96
  6449  00168A                     i2l2541:
  6450                           
  6451                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  6452  00168A  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  6453  00168C  6ECF               	movwf	207,c	;volatile
  6454  00168E                     
  6455                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  6456  00168E  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  6457  001692                     i2l96:
  6458  001692  0012               	return		;funcret
  6459  001694                     __end_ofi2_TMR1_WriteTimer:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function i2_EPWM2_LoadDutyValue *****************
  6463 ;; Defined at:
  6464 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  dutyValue       2    0[COMRAM] unsigned short 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;Total ram usage:        4 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_myTMR1ISR
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text47
  6492  001542                     __ptext47:
  6493                           	callstack 0
  6494  001542                     i2_EPWM2_LoadDutyValue:
  6495                           	callstack 18
  6496  001542                     
  6497                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  6498  001542  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  6499  001546  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
  6500  00154A  90D8               	bcf	status,0,c
  6501  00154C  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  6502  00154E  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  6503  001550  90D8               	bcf	status,0,c
  6504  001552  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  6505  001554  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  6506  001556  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
  6507  001558  6E67               	movwf	103,c	;volatile
  6508                           
  6509                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6510  00155A  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  6511  00155E  0E03               	movlw	3
  6512  001560  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  6513  001562  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
  6514  001564  0EF0               	movlw	240
  6515  001566  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  6516  001568  5066               	movf	102,w,c	;volatile
  6517  00156A  0BCF               	andlw	207
  6518  00156C  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
  6519  00156E  6E66               	movwf	102,c	;volatile
  6520  001570  0012               	return		;funcret
  6521  001572                     __end_ofi2_EPWM2_LoadDutyValue:
  6522                           	callstack 0
  6523                           
  6524                           	psect	text48
  6525  000000                     __ptext48:
  6526                           	callstack 0
  6527  000000                     
  6528                           	psect	rparam
  6529  0000                     
  6530                           	psect	temp
  6531  000057                     btemp:
  6532                           	callstack 0
  6533  000057                     	ds	1
  6534  0000                     int$flags	set	btemp
  6535  0000                     wtemp8	set	btemp+1
  6536  0000                     ttemp5	set	btemp+1
  6537  0000                     ttemp6	set	btemp+4
  6538  0000                     ttemp7	set	btemp+8
  6539                           
  6540                           	psect	idloc
  6541                           
  6542                           ;Config register IDLOC0 @ 0x200000
  6543                           ;	unspecified, using default values
  6544  200000                     	org	2097152
  6545  200000  FF                 	db	255
  6546                           
  6547                           ;Config register IDLOC1 @ 0x200001
  6548                           ;	unspecified, using default values
  6549  200001                     	org	2097153
  6550  200001  FF                 	db	255
  6551                           
  6552                           ;Config register IDLOC2 @ 0x200002
  6553                           ;	unspecified, using default values
  6554  200002                     	org	2097154
  6555  200002  FF                 	db	255
  6556                           
  6557                           ;Config register IDLOC3 @ 0x200003
  6558                           ;	unspecified, using default values
  6559  200003                     	org	2097155
  6560  200003  FF                 	db	255
  6561                           
  6562                           ;Config register IDLOC4 @ 0x200004
  6563                           ;	unspecified, using default values
  6564  200004                     	org	2097156
  6565  200004  FF                 	db	255
  6566                           
  6567                           ;Config register IDLOC5 @ 0x200005
  6568                           ;	unspecified, using default values
  6569  200005                     	org	2097157
  6570  200005  FF                 	db	255
  6571                           
  6572                           ;Config register IDLOC6 @ 0x200006
  6573                           ;	unspecified, using default values
  6574  200006                     	org	2097158
  6575  200006  FF                 	db	255
  6576                           
  6577                           ;Config register IDLOC7 @ 0x200007
  6578                           ;	unspecified, using default values
  6579  200007                     	org	2097159
  6580  200007  FF                 	db	255
  6581                           
  6582                           	psect	config
  6583                           
  6584                           ; Padding undefined space
  6585  300000                     	org	3145728
  6586  300000  FF                 	db	255
  6587                           
  6588                           ;Config register CONFIG1H @ 0x300001
  6589                           ;	Oscillator Selection bits
  6590                           ;	FOSC = INTIO67, Internal oscillator block
  6591                           ;	4X PLL Enable
  6592                           ;	PLLCFG = OFF, Oscillator used directly
  6593                           ;	Primary clock enable bit
  6594                           ;	PRICLKEN = ON, Primary clock enabled
  6595                           ;	Fail-Safe Clock Monitor Enable bit
  6596                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6597                           ;	Internal/External Oscillator Switchover bit
  6598                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6599  300001                     	org	3145729
  6600  300001  28                 	db	40
  6601                           
  6602                           ;Config register CONFIG2L @ 0x300002
  6603                           ;	Power-up Timer Enable bit
  6604                           ;	PWRTEN = OFF, Power up timer disabled
  6605                           ;	Brown-out Reset Enable bits
  6606                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6607                           ;	Brown Out Reset Voltage bits
  6608                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6609  300002                     	org	3145730
  6610  300002  1F                 	db	31
  6611                           
  6612                           ;Config register CONFIG2H @ 0x300003
  6613                           ;	Watchdog Timer Enable bits
  6614                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6615                           ;	Watchdog Timer Postscale Select bits
  6616                           ;	WDTPS = 32768, 1:32768
  6617  300003                     	org	3145731
  6618  300003  3C                 	db	60
  6619                           
  6620                           ; Padding undefined space
  6621  300004                     	org	3145732
  6622  300004  FF                 	db	255
  6623                           
  6624                           ;Config register CONFIG3H @ 0x300005
  6625                           ;	CCP2 MUX bit
  6626                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6627                           ;	PORTB A/D Enable bit
  6628                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6629                           ;	P3A/CCP3 Mux bit
  6630                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6631                           ;	HFINTOSC Fast Start-up
  6632                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6633                           ;	Timer3 Clock input mux bit
  6634                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6635                           ;	ECCP2 B output mux bit
  6636                           ;	P2BMX = PORTB5, P2B is on RB5
  6637                           ;	MCLR Pin Enable bit
  6638                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6639  300005                     	org	3145733
  6640  300005  BF                 	db	191
  6641                           
  6642                           ;Config register CONFIG4L @ 0x300006
  6643                           ;	Stack Full/Underflow Reset Enable bit
  6644                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6645                           ;	Single-Supply ICSP Enable bit
  6646                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6647                           ;	Extended Instruction Set Enable bit
  6648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6649                           ;	Background Debug
  6650                           ;	DEBUG = OFF, Disabled
  6651  300006                     	org	3145734
  6652  300006  85                 	db	133
  6653                           
  6654                           ; Padding undefined space
  6655  300007                     	org	3145735
  6656  300007  FF                 	db	255
  6657                           
  6658                           ;Config register CONFIG5L @ 0x300008
  6659                           ;	Code Protection Block 0
  6660                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6661                           ;	Code Protection Block 1
  6662                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6663                           ;	Code Protection Block 2
  6664                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6665                           ;	Code Protection Block 3
  6666                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6667  300008                     	org	3145736
  6668  300008  0F                 	db	15
  6669                           
  6670                           ;Config register CONFIG5H @ 0x300009
  6671                           ;	Boot Block Code Protection bit
  6672                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6673                           ;	Data EEPROM Code Protection bit
  6674                           ;	CPD = OFF, Data EEPROM not code-protected
  6675  300009                     	org	3145737
  6676  300009  C0                 	db	192
  6677                           
  6678                           ;Config register CONFIG6L @ 0x30000A
  6679                           ;	Write Protection Block 0
  6680                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6681                           ;	Write Protection Block 1
  6682                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6683                           ;	Write Protection Block 2
  6684                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6685                           ;	Write Protection Block 3
  6686                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6687  30000A                     	org	3145738
  6688  30000A  0F                 	db	15
  6689                           
  6690                           ;Config register CONFIG6H @ 0x30000B
  6691                           ;	Configuration Register Write Protection bit
  6692                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6693                           ;	Boot Block Write Protection bit
  6694                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6695                           ;	Data EEPROM Write Protection bit
  6696                           ;	WRTD = OFF, Data EEPROM not write-protected
  6697  30000B                     	org	3145739
  6698  30000B  E0                 	db	224
  6699                           
  6700                           ;Config register CONFIG7L @ 0x30000C
  6701                           ;	Table Read Protection Block 0
  6702                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6703                           ;	Table Read Protection Block 1
  6704                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6705                           ;	Table Read Protection Block 2
  6706                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6707                           ;	Table Read Protection Block 3
  6708                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6709  30000C                     	org	3145740
  6710  30000C  0F                 	db	15
  6711                           
  6712                           ;Config register CONFIG7H @ 0x30000D
  6713                           ;	Boot Block Table Read Protection bit
  6714                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6715  30000D                     	org	3145741
  6716  30000D  40                 	db	64
  6717                           tosu	equ	0xFFF
  6718                           tosh	equ	0xFFE
  6719                           tosl	equ	0xFFD
  6720                           stkptr	equ	0xFFC
  6721                           pclatu	equ	0xFFB
  6722                           pclath	equ	0xFFA
  6723                           pcl	equ	0xFF9
  6724                           tblptru	equ	0xFF8
  6725                           tblptrh	equ	0xFF7
  6726                           tblptrl	equ	0xFF6
  6727                           tablat	equ	0xFF5
  6728                           prodh	equ	0xFF4
  6729                           prodl	equ	0xFF3
  6730                           indf0	equ	0xFEF
  6731                           postinc0	equ	0xFEE
  6732                           postdec0	equ	0xFED
  6733                           preinc0	equ	0xFEC
  6734                           plusw0	equ	0xFEB
  6735                           fsr0h	equ	0xFEA
  6736                           fsr0l	equ	0xFE9
  6737                           wreg	equ	0xFE8
  6738                           indf1	equ	0xFE7
  6739                           postinc1	equ	0xFE6
  6740                           postdec1	equ	0xFE5
  6741                           preinc1	equ	0xFE4
  6742                           plusw1	equ	0xFE3
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           bsr	equ	0xFE0
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           preinc2	equ	0xFDC
  6750                           plusw2	equ	0xFDB
  6751                           fsr2h	equ	0xFDA
  6752                           fsr2l	equ	0xFD9
  6753                           status	equ	0xFD8

Data Sizes:
    Strings     602
    Constant    0
    Data        4
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     47     139
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1779_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_28(CODE[17]), STR_27(CODE[14]), STR_26(CODE[21]), STR_25(CODE[32]), 
		 -> STR_24(CODE[31]), STR_23(CODE[21]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[8]), STR_19(CODE[52]), STR_18(CODE[43]), STR_17(CODE[19]), 
		 -> STR_16(CODE[37]), STR_15(CODE[34]), STR_14(CODE[24]), STR_13(CODE[21]), 
		 -> STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), 
		 -> STR_8(CODE[12]), STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), 
		 -> STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_28(CODE[17]), STR_27(CODE[14]), STR_26(CODE[21]), STR_25(CODE[32]), 
		 -> STR_24(CODE[31]), STR_23(CODE[21]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[8]), STR_19(CODE[52]), STR_18(CODE[43]), STR_17(CODE[19]), 
		 -> STR_16(CODE[37]), STR_15(CODE[34]), STR_14(CODE[24]), STR_13(CODE[21]), 
		 -> STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), 
		 -> STR_8(CODE[12]), STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), 
		 -> STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_28(CODE[17]), STR_27(CODE[14]), STR_26(CODE[21]), STR_25(CODE[32]), 
		 -> STR_24(CODE[31]), STR_23(CODE[21]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[8]), STR_19(CODE[52]), STR_18(CODE[43]), STR_17(CODE[19]), 
		 -> STR_16(CODE[37]), STR_15(CODE[34]), STR_14(CODE[24]), STR_13(CODE[21]), 
		 -> STR_12(CODE[7]), STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), 
		 -> STR_8(CODE[12]), STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), 
		 -> STR_4(CODE[70]), STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->i2_EPWM2_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   23385
                                             43 BANK0      4     4      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   21526
                                             33 BANK0     10     4      6
                       _EUSART2_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   18913
                                             76 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   18416
                                              0 BANK0     27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5925
                                             37 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             14 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6161
                                             37 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              8 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              8 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4174
                                             37 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3895
                                             26 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             19 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              9 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     340
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     320
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     428
                                              6 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     428
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _myTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _myTMR1ISR                                           2     2      0     288
                                              4 COMRAM     2     2      0
              i2_EPWM2_LoadDutyValue
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM2_LoadDutyValue                               4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _printf
     _EUSART2_Read (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _myTMR1ISR *
       i2_EPWM2_LoadDutyValue
       i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      12        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Oct 09 10:10:02 2020

                  __size_of_EPWM2_LoadDutyValue 0030                                              l30 16E2  
                                            l33 16F0                                              l50 16D4  
                                            l27 16B4                                              l53 1540  
                                            l82 15C6                                              l96 166A  
                                           l112 1752                                             l142 159C  
                                           l340 13B2                                             l252 006E  
                                           l190 1792                                             l158 173E  
                                           l270 027A                                             l255 0094  
                                           l361 15F0                                             l273 02B6  
                                           l265 0228                                             l436 172E  
                                           l348 171A                                             l428 13F2  
                                           l452 16F4                                             l276 02E0  
                                           l445 15F2                                             l357 15C8  
                                           l461 1748                                             l382 175C  
                                           l455 1706                                             l449 161A  
                                           l473 1784                                             l385 1770  
                                           l609 0F48                                             l379 1766  
                                           l476 177A                                             l479 178E  
                                           l596 0DE4                                             _PR2 000FBB  
        __end_of_EUSART2_SetFramingErrorHandler 1768         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 175E                                 _timer1ReloadVal 0090  
                                           _abs 1334                                             _pad 101E  
                               _TMR2_Initialize 1730                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                    _TXSTA2bits 000F72                        __end_of_EPWM2_Initialize 16D6  
                         i2_EPWM2_LoadDutyValue 1542                                            l1211 074A  
                                          ?_abs 001B                                            l1205 12EE  
                                          l1213 0752                                            l1310 1174  
                                          l1231 0988                                            l1160 1642  
                                          l3001 0EF2                                            l3011 101E  
                                          l3003 0EF8                                            l1324 1510  
                                          l1340 14A2                                            l1236 09C0  
                                          l3021 106E                                            l3013 102C  
                                          l3005 0F08                                            l3101 0826  
                                          l1261 0C5C                                            l1245 0A5E  
                                          l1318 1332                                            l1334 1294  
                                          l1238 09C8                                            l3023 1082  
                                          l3015 1040                                            l3007 0F28  
                                          l3111 08F6                                            l3103 088A  
                                          l3025 1086                                            l1193 1062  
                                          l3017 104E                                            l3033 1334  
                                          l3121 093C                                            l3105 08A4  
                                          l3113 0904                                            l3041 13F4  
                                          l1329 128C                                            l3201 03BC  
                                          l1266 06AA                                            l3027 10B2  
                                          l3019 105A                                            l3035 134E  
                                          l1283 136A                                            l3123 0948  
                                          l3115 0916                                            l3107 08C2  
                                          l3051 1280                                            l1259 0BFA  
                                          l3131 098A                                            l3203 03CC  
                                          l1196 10A4                                            l3029 10C6  
                                          l3061 12C0                                            l3125 0950  
                                          l3117 0924                                            l3109 08DC  
                                          l3037 14A4                                            l3045 1238  
                                          l3141 09E6                                            l3133 0998  
                                          l3213 0446                                            l3205 03D0  
                                          l3301 00F4                                            l1198 10DE  
                                          l1286 1372                                            l1278 11D0  
                                          l3063 12C4                                            l3055 1296  
                                          l3119 092A                                            l3127 0960  
                                          l3071 06CC                                            l1295 14DA  
                                          l3151 0A26                                            l3143 0A06  
                                          l3135 099A                                            l3231 0586  
                                          l3223 0514                                            l3215 046C  
                                          l3207 03F6                                            l1279 11D8  
                                          l3311 01F4                                            l3303 0102  
                                          l3065 12CA                                            l3057 12A8  
                                          l3081 073E                                            l3073 06F4  
                                          l1289 142E                                            l3049 126E  
                                          l3161 0AA4                                            l3153 0A42  
                                          l3145 0A0E                                            l3137 09B4  
                                          l3241 0634                                            l3233 05C4  
                                          l3225 053A                                            l3217 0492  
                                          l3209 042A                                            l3321 0214  
                                          l3313 0204                                            l3305 0110  
                                          l2451 174A                                            l3059 12B4  
                                          l3091 0788                                            l3083 075A  
                                          l3075 0714                                            l3171 0B14  
                                          l3155 0A52                                            l3147 0A18  
                                          l3139 09DE                                            l3243 0648  
                                          l3227 0560                                            l3219 04DC  
                                          l3331 0232                                            l3323 0218  
                                          l3307 0124                                            l2461 1772  
                                          l2453 175E                                            l3093 0792  
                                          l3085 076C                                            l3077 0722  
                                          l3069 06AC                                            l3181 0BB8  
                                          l3173 0B1A                                            l3165 0ADE  
                                          l3149 0A1E                                            l3229 0578  
                                          l3237 0600                                            l3253 0672  
                                          l3261 1176                                            l3341 0272  
                                          l3333 023E                                            l3325 022E  
                                          l3309 0130                                            l2711 1600  
                                          l2463 1786                                            l2455 1754  
                                          l2551 159A                                            l3095 0798  
                                          l3087 077A                                            l3079 0724  
                                          l3191 0C1E                                            l3183 0BD2  
                                          l3175 0B20                                            l3167 0AF0  
                                          l3159 0A92                                            l3255 0698  
                                          l3239 0626                                            l3247 0656  
                                          l3263 117E                                            l3271 1626  
                                          l3351 02DC                                            l3343 0288  
                                          l3335 0242                                            l3319 0208  
                                          l2713 1606                                            l2705 171C  
                                          l2457 1768                                            l2545 1790  
                                          l2553 16D6                                            l2561 159E  
                                          l3097 081A                                            l3089 0780  
                                          l3193 0C34                                            l3185 0BEC  
                                          l3169 0B04                                            l3177 0B7E  
                                          l3249 0664                                            l3265 118C  
                                          l3353 02F2                                            l3345 02A6  
                                          l3337 0256                                            l3361 0322  
                                          l3281 007C                                            l2715 1614  
                                          l2555 16B6                                            l2459 177C  
                                          l2547 1572                                            l2571 15C2  
                                          l2563 15AA                                            l2651 16A4  
                                          l2643 1694                                            l3099 0820  
                                          l3187 0C08                                            l3179 0B9A  
                                          l3267 11B2                                            l3355 02F6  
                                          l3347 02BA                                            l3339 025A  
                                          l3291 00BA                                            l3283 0090  
                                          l3275 0050                                            l2717 1618  
                                          l2709 15F2                                            l2581 13EC  
                                          l2573 13B4                                            l2549 157E  
                                          l2565 15B2                                            l2557 1730  
                                          l2653 16A8                                            l2645 1698  
                                          l2661 1644                                            l2901 110E  
                                          l3189 0C0E                                            l3197 0388  
                                          l3269 161C                                            l3429 0336  
                                          l3357 030C                                            l3349 02CA  
                                          l3293 00BC                                            l3285 00A8  
                                          l3277 0060                                            l2575 13C8  
                                          l2591 13AC                                            l2583 1374  
                                          l2567 15B4                                            l2559 1738  
                                          l2655 16AC                                            l2647 169C  
                                          l2663 1652                                            l2671 1662  
                                          l2903 112C                                            l2911 12FC  
                                          l3199 03AE                                            l3295 00CA  
                                          l3287 00AC                                            l3279 006C  
                                          l2577 13D4                                            l2585 1388  
                                          l2569 15B6                                            l2657 16B0  
                                          l2649 16A0                                            l2673 1666  
                                          l2665 1654                                            l2905 1162  
                                          l2913 130E                                            l2921 14EC  
                                          l3297 00D8                                            l3289 00B8  
                                          l2659 1512                                            l2691 15DC  
                                          l2683 1708                                            l2579 13E0  
                                          l2587 1394                                            l2667 1658  
                                          l2915 1312                                            l2923 1504  
                                          l2931 0C5E                                            l3299 00E6  
                                          l2693 15EA                                            l2589 13A0  
                                          l2669 165C                                            l2909 12F0  
                                          l2917 14DC                                            l2941 0CA2  
                                          l2933 0C62                                            ?_pad 001B  
                                          l2695 15EE                                            l2687 15C8  
                                          l2919 14E8                                            l2951 0CF8  
                                          l2943 0CC2                                            l2935 0C70  
                                          l2927 146C                                            l2689 15D6  
                                          l2961 0D7A                                            l2953 0D0C  
                                          l2945 0CC6                                            l2937 0C90  
                                          l2891 1702                                            l2971 0DC4  
                                          l2963 0D7C                                            l2955 0D1A  
                                          l2947 0CD2                                            l2939 0C94  
                                          l2893 1742                                            l2965 0D8E  
                                          l2957 0D2C                                            l2949 0CF0  
                                          l2981 0E18                                            l2895 10E0  
                                          l2959 0D5A                                            l2967 0D94  
                                          l2991 0E70                                            l2983 0E1C  
                                          l2975 0DE6                                            l2889 16F4  
                                          l2897 10F2                                            l2969 0DA4  
                                          l2993 0E84                                            l2985 0E2A  
                                          l2977 0DEA                                            l2899 1104  
                                          l2995 0E92                                            l2987 0E4A  
                                          l2979 0DF8                                            l2997 0EC0  
                                          l2989 0E68                                            l2999 0EE0  
                                          STR_1 FFE3                                            STR_2 FE74  
                                          STR_3 FF37                                            STR_4 FDA5  
                                          STR_5 FE4A                                            STR_6 FFFA  
                                          STR_7 FDEB                                            STR_8 FFCD  
                                          STR_9 FFD9                                    _transmitBusy 0097  
                                          u2100 1702                                            u2101 16FE  
                                          u2110 10F2                                            u2111 10EE  
                                          u2120 1104                                            u2200 0CA2  
                                          u2121 1100                                            u2201 0C9E  
                                          u2130 112C                                            u2131 1128  
                                          u2211 0CCC                                            u2140 1162  
                                          u2220 0CF0                                            u2300 0EC0  
                                          u2141 115E                                            u2221 0CEC  
                                          u2301 0EBC                                            _LATA 000F89  
                                          u2150 1332                                            u2230 0D1A  
                                          u2310 0F08                                            _LATB 000F8A  
                                          u2151 132E                                            u2231 0D16  
                                          u2311 0F04                                            _LATC 000F8B  
                                          u2160 1504                                            u2320 102C  
                                          u2240 0D5A                                            u2400 142A  
                                          u2161 1500                                            u2321 1028  
                                          u2241 0D56                                            u2330 104E  
                                          u2250 0DA4                                            u2170 149C  
                                          u2410 1268                                            u2331 104A  
                                          u2251 0DA0                                            u2171 1496  
                                          u2411 1262                                            u2340 10A4  
                                          u2260 0DF8                                            u2500 076C  
                                          u2180 149E                                            u2420 126A  
                                          u2341 10A0                                            u2261 0DF4  
                                          u2501 0768                                            u2350 10B2  
                                          u2190 0C70                                            u2270 0E2A  
                                          u2510 077A                                            u2430 1280  
                                          u2351 10AE                                            u2191 0C6C  
                                          u2271 0E26                                            u2511 0776  
                                          u2431 127C                                            u2440 12A8  
                                          u2280 0E68                                            u2360 134E  
                                          u2520 08A4                                            u2600 0998  
                                          u2441 12A4                                            u2281 0E64  
                                          u2361 134A                                            u2521 08A0  
                                          u2601 0994                                            u2290 0E92  
                                          u2530 08C2                                            u2450 06DC  
                                          u2370 14D4                                            u2610 09B4  
                                          u2291 0E8E                                            u2531 08BE  
                                          u2451 06D6                                            u2371 14CE  
                                          u2611 09B0                                            u2540 08DC  
                                          u2460 06DE                                            u2380 14D6  
                                          u2700 0B58                                            u2620 09DE  
                                          u2541 08D8                                            u2621 09DA  
                                          u2550 08F6                                            u2470 06F4  
                                          u2390 1428                                            u2710 0B9A  
                                          u2630 0A42                                            u2551 08F2  
                                          u2471 06F0                                            u2391 1422  
                                          u2711 0B96                                            u2631 0A3E  
                                          u1920 1718                                            u1840 16F0  
                                          u2560 0904                                            u2480 0722  
                                          u2720 0BB8                                            u2640 0A8C  
                                          u2800 0492                                            u1921 1712  
                                          u1841 16EC                                            u2561 0900  
                                          u2481 071E                                            u2721 0BB4  
                                          u2705 0B46                                            u2641 0A86  
                                          u2801 048E                                            u1930 15D6  
                                          u2570 0916                                            u2490 073E  
                                          u2730 0BD2                                            u2650 0A8E  
                                          u2810 053A                                            u1931 15D2  
                                          u2571 0912                                            u2491 073A  
                                          u2731 0BCE                                            u2811 0536  
                                          u1940 15EA                                            u2580 0924  
                                          u2740 0BEC                                            u2660 0AA4  
                                          u2820 0560                                            u2900 0252  
                                          u1941 15E6                                            u2581 0920  
                                          u2741 0BE8                                            u2661 0AA0  
                                          u2821 055C                                            u2901 024E  
                                          u1950 172C                                            u1926 171A  
                                          u2590 093C                                            u2750 0BFA  
                                          u2670 0AD8                                            u2830 0626  
                                          u2910 0288                                            u1951 1726  
                                          u2591 0938                                            u2751 0BF6  
                                          u2671 0AD2                                            u2831 0622  
                                          u2911 0284                                            u1960 1600  
                                          u2760 0C08                                            u2680 0ADA  
                                          u2840 11D0                                            u2920 02DC  
                                          u1961 15FC                                            u2761 0C04  
                                          u2841 11CC                                            u2921 02D8  
                                          u1970 1614                                            u1890 1652  
                                          u2690 0AF0                                            u2770 03AE  
                                          u2930 02F2                                            u2850 007C  
                                          u1971 1610                                            u1891 164E  
                                          u2691 0AEC                                            u2771 03AA  
                                          u2931 02EE                                            u2851 0078  
                                          u1956 172E                                            u2780 03F6  
                                          u2860 0090                                            u2781 03F2  
                                          u2861 008C                                            u2790 046C  
                                          u2870 00A8                                            u2791 0468  
                                          u2871 00A4                                            u2880 0124  
                                          u2881 0120                                            u2890 0228  
                                          u2891 0224                                            i2l53 1570  
                                          i2l96 1692                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 16F2                                            abs@a 001B  
                                          _dbuf 0099                                            _ctoa 1296  
                                          _main 0050                                            _dtoa 06AC  
                                 ?_EUSART1_Read 0001                                            _prec 0051  
                                 ?_EUSART2_Read 0001                                            _nout 0080  
                                          pad@i 0022                                            pad@p 001F  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0024                                            fsr2l 000FD9  
                                          btemp 0057                                            _xtoa 098A  
                                          start 004C                      ??_TMR1_SetInterruptHandler 000B  
                                  ___param_bank 000000                                           ??_abs 001D  
                                         ??_pad 0021                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 16F2                                 __end_of___aodiv 0DE6  
                                         ?_ctoa 0026                                           ?_main 0001  
                                         ?_dtoa 0026                                 __end_of___aomod 0F4A  
                                         STR_10 FDEB                                           STR_11 FFB0  
                                         STR_12 FFF3                                           STR_20 FFEB  
                                         STR_21 FE1D                                           STR_13 FF62  
                                         STR_22 FE1D                                           STR_14 FF1F  
                                         STR_23 FF77                                           STR_15 FEBE  
                                         STR_24 FF00                                           STR_16 FE99  
                                         STR_17 FF8C                                           STR_25 FEE0  
                                         STR_26 FF4D                                           STR_18 FE1F  
                                         STR_19 FDEB                                           STR_27 FFBF  
                                         STR_28 FF9F                                           ?_xtoa 0026  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                                         i2l115 1798                                           i2l109 146A  
                                         i2l199 0040                                           i2l297 101C  
                                  vfpfcnvrt@fmt 00BB                                    vfpfcnvrt@llu 00CB  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                 _transmitStart 0098                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                              __end_of_TMR1_ISR 146C                                           _flags 0053  
                                         _fputc 10E0                                 __end_of_isalpha 1430  
                                         _fputs 12F0                                           pad@fp 001B  
                                         _width 004F                                           ctoa@c 0028  
                                         _putch 1740                                           ctoa@w 0029  
                                         main@i 00E7                                           dtoa@d 0028  
                                         dtoa@i 0048                                           dtoa@n 0040  
                                         dtoa@p 003A                                           dtoa@s 003E  
                                         dtoa@w 003C                                 __end_of_islower 14A4  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 15C8  
                               __end_of_isupper 14DC                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0009  
                                ??_EUSART2_Read 0009                                           ttemp5 0058  
                                         ttemp6 005B                                           ttemp7 005F  
                                         status 000FD8                                           wtemp8 0058  
                                         xtoa@c 004B                                           xtoa@d 0028  
                                         xtoa@i 0049                                           xtoa@n 0041  
                                         xtoa@p 003D                                           xtoa@w 003F  
                                         xtoa@x 0030                                 __end_of_toupper 1296  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 1644  
                                  _toupper$1954 0015                                 __initialization 11DA  
                                  __end_of_ctoa 12F0                      __end_of_EUSART1_Initialize 13F4  
                                  __end_of_main 0388                                    __end_of_dtoa 098A  
                                  __end_of_xtoa 0C5E                         __end_of_TMR2_Initialize 1740  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0029  
                                        ??_main 00E4                                          ??_dtoa 0030  
                                        ??_xtoa 0031                                   __activetblptr 000003  
                   _EUSART2_DefaultErrorHandler 000000                          ?i2_EPWM2_LoadDutyValue 0001  
                    __end_of_EUSART2_Initialize 13B4                                          ?_fputc 000B  
                                        ?_fputs 0014                                          _CCPR2H 000F68  
                                        _CCPR2L 000F67                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                       TMR1_WriteTimer@timerVal 0009                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2601 0F70                                          i2l2531 166C  
                                        i2l2611 0FA0                                          i2l2603 0F78  
                                        i2l2533 167A                                          i2l2541 168A  
                                        i2l2613 0FB4                                          i2l2605 0F88  
                                        i2l2543 168E                                          i2l2535 167C  
                                        i2l3431 0FF8                                          i2l2615 0FC4  
                                        i2l2607 0F8C                                          i2l2623 0FE2  
                                        i2l2529 1542                                          i2l2537 1680  
                                        i2l2617 0FD0                                          i2l2609 0F98  
                                        i2l2625 100E                                          i2l2539 1684  
                                        i2l2627 101A                                          i2l2619 0FDA  
                                        i2l2723 0012                                          i2l2725 0020  
                                        i2l2727 002E                                          i2l2593 0F4A  
                                        i2l2681 1452                                          i2l2729 003C  
                                        i2l2675 1430                                          i2l2597 0F5E  
                                        i2l2677 1432                                          i2l2599 0F6A  
                                        i2l2679 143E                                          _RCREG1 000FAE  
                                        _RCREG2 000F74                                          _RCSTA1 000FAB  
                                        _RCSTA2 000F71                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72            __end_of_TMR1_DefaultInterruptHandler 179A  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 1798  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 004D  
                                     ??___aodiv 0019                                       ??___aomod 0019  
                      ?_EUSART1_SetErrorHandler 0009                                          _letter 00EA  
                                        clear_0 1210                                          clear_1 121C  
                                        clear_2 1228                     _EUSART2_FramingErrorHandler 008C  
                                        _printf 161C                                          pad@buf 001D  
              ??_EUSART1_SetOverrunErrorHandler 000B                 ?_EUSART1_SetOverrunErrorHandler 0009  
                                        ctoa@fp 0026                                          dtoa@fp 0026  
                                        _strlen 14DC                                          fputc@c 000B  
                                        fputs@c 0018                                          fputs@i 0019  
                                  __pdataCOMRAM 0056                                          fputs@s 0014  
                                     ??_isalpha 000B                                       ??_islower 000B  
                                  __mediumconst FDA4                                          tblptrh 000FF7  
                                     ??_isupper 000B                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 11DA  
                               ??_EUSART1_Write 0009                             _EPWM2_LoadDutyValue 1512  
      TMR1_SetInterruptHandler@InterruptHandler 0009                         __end_of_TMR1_WriteTimer 166C  
                                        xtoa@fp 0026                                       ??_toupper 0011  
                 __size_of_INTERRUPT_Initialize 0004                                ?_TMR1_Initialize 0001  
                  __size_of_EUSART2_is_rx_ready 0014                               _SYSTEM_Initialize 1694  
                                    __accesstop 0060                         __end_of__initialization 122E  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 0009  
                                  __pidataBANK0 1794                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 1176  
                                 __end_of_fputs 1334                                   __end_of_putch 174A  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 161C  
                          __end_of_EUSART2_Read 15F2                        ?_EUSART2_SetErrorHandler 0009  
                         _bitPeriodInTMR1Counts 00E8                               ?_EPWM2_Initialize 0001  
                                       ??_fputc 000F                       __end_of_SYSTEM_Initialize 16B6  
                                       ??_fputs 0018                              __size_of_myTMR1ISR 00D4  
                            ??_EPWM2_Initialize 0009                                         ??_putch 000A  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
              ??_EUSART2_SetFramingErrorHandler 000B                 ?_EUSART2_SetFramingErrorHandler 0009  
               __end_of_EUSART1_SetErrorHandler 1790                                   myTMR1ISR@mask 0056  
                         ??_EPWM2_LoadDutyValue 000B                                      ??_TMR1_ISR 0007  
                                       _CCP2CON 000F66                                         _ECCP2AS 000F64  
                                       ?_printf 00DA                                         ?_strlen 0009  
        __end_of_EUSART1_SetFramingErrorHandler 1786         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 177C                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0324                                         _OSCTUNE 000F9B  
                                       _PWM2CON 000F65                                         _SPBRGH1 000FB0  
                                       _SPBRGH2 000F76                           myTMR1ISR@tmr1ISRstate 0094  
                              ?_TMR1_WriteTimer 0009                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0C5E  
                                       ___aomod 0DE6                               __end_of_myTMR1ISR 101E  
                                     ?_vfprintf 00D4                             _EUSART1_is_rx_ready 171C  
                                       __pcinit 11DA                 __end_of_EUSART2_SetErrorHandler 1772  
                                       __ramtop 1000                                         __ptext0 0050  
                                       __ptext1 161C                                         __ptext2 1176  
                                       __ptext3 0388                                         __ptext4 098A  
                                       __ptext5 1238                                         __ptext6 146C  
                                       __ptext7 14A4                                         __ptext8 13F4  
                                       __ptext9 06AC                         ??i2_EPWM2_LoadDutyValue 0003  
                               __size_of_printf 0028                  ??_TMR1_DefaultInterruptHandler 0001  
                               __size_of_strlen 0036                                       _T1CONbits 000FCD  
            _EUSART2_DefaultOverrunErrorHandler 000000                           _OSCILLATOR_Initialize 16D6  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 13F4  
             __size_of_TMR1_SetInterruptHandler 000A                              _EUSART1_Initialize 13B4  
                                       _islower 146C                        ??_PIN_MANAGER_Initialize 0009  
                     ?_TMR1_SetInterruptHandler 0009                                         _isupper 14A4  
                                       main@cmd 00E6                      __size_of_SYSTEM_Initialize 0022  
                                       _toupper 1238                            end_of_initialization 122E  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000D                     _EUSART1_OverrunErrorHandler 0084  
                                       fputs@fp 0016                              _EUSART2_Initialize 1374  
                             __end_of_vfpfcnvrt 06AC                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                         __size_of_EUSART2_Read 002A                                      ??_vfprintf 004D  
                          ??_EUSART1_Initialize 000B                             ?_EUSART2_Initialize 0001  
                                       strlen@a 000B                             _EUSART2_is_rx_ready 1708  
                                       strlen@s 0009                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0009                           ??_EUSART1_is_rx_ready 0009  
                          ??_EUSART2_Initialize 000B                            ?_EUSART2_is_rx_ready 0001  
                                  _EUSART1_Read 15F2                                    _EUSART2_Read 15C8  
                  __end_of_INTERRUPT_Initialize 1794                       i2TMR1_WriteTimer@timerVal 0001  
                                   vfpfcnvrt@ap 00BD                                     vfpfcnvrt@fp 00B9  
                                   vfpfcnvrt@ll 00C3                                   __pidataCOMRAM 179A  
                             __size_of_TMR1_ISR 003C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1644                                  __end_of_strlen 1512  
                           start_initialization 11DA                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 1374                                     __end_of_pad 10E0  
                                   putch@txData 000A                           ??_EUSART2_is_rx_ready 0009  
                         __end_of_EUSART1_Write 1708                __size_of_EUSART2_SetErrorHandler 000A  
        __end_of_EUSART2_SetOverrunErrorHandler 175E         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 1754                       __size_of_EPWM2_Initialize 0020  
                      __size_of_TMR1_Initialize 002A                                     vfprintf@fmt 00D6  
                                   __pdataBANK0 00E8                                        ??_printf 004F  
                                      ??_strlen 000B                  i2EPWM2_LoadDutyValue@dutyValue 0001  
                                   __pbssCOMRAM 004F                                   __pcstackBANK0 00B9  
                              ___aodiv@dividend 0009                        __size_of_TMR2_Initialize 0010  
              ??_EUSART1_SetFramingErrorHandler 000B                 ?_EUSART1_SetFramingErrorHandler 0009  
                   __end_of_EPWM2_LoadDutyValue 1542                          _PIN_MANAGER_Initialize 1572  
                                     _dtoa$1864 0038                                _transmitIRBuffer 0060  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 1754  
                                 __pmediumconst FDA4                                        ?___aodiv 0009  
                                      ?___aomod 0009                                ___aodiv@quotient 001B  
                  ??_INTERRUPT_InterruptManager 0007                               __size_of_vfprintf 0064  
                                     _myTMR1ISR 0F4A                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70                  __size_ofi2_EPWM2_LoadDutyValue 0030  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0009  
                 __end_ofi2_EPWM2_LoadDutyValue 1572                            _EUSART1_ErrorHandler 0082  
                                      ?_islower 0009                                        ?_isupper 0009  
                       _EUSART1_SetErrorHandler 1786                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000F  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 1790  
       EUSART1_SetErrorHandler@interruptHandler 0009         EUSART2_SetErrorHandler@interruptHandler 0009  
                                      _PIE1bits 000F9D                        __size_of_TMR1_WriteTimer 0028  
                                      i2u200_40 003C                                        i2u200_41 0038  
           __size_of_INTERRUPT_InterruptManager 0044                                        i2u190_40 1452  
                                      i2u190_41 144E                                        i2u183_40 167A  
                                      i2u183_41 1676                                        i2u191_48 1458  
                                      i2u191_49 146A                                        i2u185_40 0F5A  
                                      i2u185_41 0F56                                        _PIR1bits 000F9E  
                                      i2u186_40 0F88                                        i2u186_41 0F84  
                                      i2u187_40 0FB4                                        i2u187_41 0FB0  
                                      _PIR3bits 000FA4                                        i2u198_40 0020  
                                      i2u198_41 001C                                        i2u199_40 002E  
                                      i2u199_41 002A                                        _RCONbits 000FD0  
                                      _TMR1_ISR 1430                                 _recieveIRBuffer 0100  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 0388  
                                     _xtoa$1874 0039                                       _xtoa$1875 003B  
                             ??_TMR1_Initialize 000B                                      ?_myTMR1ISR 0001  
                                    vfpfcnvrt@c 00D3                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 1768  
                             ??_TMR2_Initialize 0009                     _EUSART2_OverrunErrorHandler 008A  
                                      __Hrparam 0000                                _EPWM2_Initialize 16B6  
                             i2_TMR1_WriteTimer 166C                                      vfprintf@ap 00D8  
                                      __Lrparam 0000                                      vfprintf@fp 00D4  
                            ?i2_TMR1_WriteTimer 0001                         ??_OSCILLATOR_Initialize 0009  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 00B9  
                               ___aodiv@divisor 0011                        _TMR1_SetInterruptHandler 174A  
                               ___aodiv@counter 0019                             ??i2_TMR1_WriteTimer 0003  
                         _TMR1_InterruptHandler 008E                       ??_EUSART1_SetErrorHandler 000B  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 1730  
                          _EUSART2_ErrorHandler 0088                                __size_of_isalpha 003C  
                              __size_of_islower 0038                                        __ptext10 1334  
                                      __ptext11 0DE6                                        __ptext20 1644  
                                      __ptext12 0C5E                                        __ptext21 1694  
                                      __ptext13 1296                                      _T1GCONbits 000FCC  
                                      __ptext30 175E                                        __ptext22 1730  
                                      __ptext14 101E                                        __ptext31 1768  
                                      __ptext23 159E                                        __ptext15 14DC  
                                      __ptext40 15F2                                        __ptext32 13B4  
                                      __ptext24 174A                                        __ptext16 12F0  
                                      __ptext41 1512                                        __ptext33 1772  
                                      __ptext25 1572                                        __ptext17 10E0  
                                      __ptext34 177C                                        __ptext26 16D6  
                                      __ptext18 1740                                        __ptext43 1430  
                                      __ptext35 1786                                        __ptext27 1790  
                                      __ptext19 16F2                                        __ptext44 1798  
                                      __ptext36 16B6                                        __ptext28 1374  
                                      __ptext45 0F4A                                        __ptext37 1708  
                                      __ptext29 1754                                        __ptext46 166C  
                                      __ptext38 15C8                                        __ptext47 1542  
                                      __ptext39 171C                                        __ptext48 0000  
                              __size_of_isupper 0038                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 0040                                   __size_of_ctoa 005A  
                                 __size_of_main 0338                                   __size_of_dtoa 02DE  
            _EUSART2_DefaultFramingErrorHandler 000000                                   __size_of_xtoa 02D4  
                                   _receiveBusy 0096                       __end_ofi2_TMR1_WriteTimer 1694  
EUSART1_SetOverrunErrorHandler@interruptHandler 0009  EUSART2_SetOverrunErrorHandler@interruptHandler 0009  
                                      int$flags 0057                                        _vfprintf 1176  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00DA                               ??_TMR1_WriteTimer 000B  
                   _EUSART1_FramingErrorHandler 0086                                ___aomod@dividend 0009  
                                   ??_myTMR1ISR 0005                ??_EUSART2_SetOverrunErrorHandler 000B  
               ?_EUSART2_SetOverrunErrorHandler 0009                               _receiveNewMessage 0095  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 171C  
                                      isalpha@c 0009                          ??_INTERRUPT_Initialize 0009  
                     ??_EUSART2_SetErrorHandler 000B                                        intlevel2 0000  
                                      islower@c 0009                    EPWM2_LoadDutyValue@dutyValue 0009  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 177C  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1772  
                                    _RCSTA1bits 000FAB                                      _RCSTA2bits 000F71  
                                      isupper@c 0009                                        printf@ap 00E2  
EUSART1_SetFramingErrorHandler@interruptHandler 0009  EUSART2_SetFramingErrorHandler@interruptHandler 0009  
                               ___aomod@divisor 0011                                     ??_vfpfcnvrt 00BF  
                               ___aomod@counter 0019                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0092                              _newCharacterToSend 0055  
                                      toupper@c 000F                                    ___aodiv@sign 001A  
                __end_of_PIN_MANAGER_Initialize 159E                              _eusart2RxLastError 0093  
                    __size_ofi2_TMR1_WriteTimer 0028                                    ___aomod@sign 001A  
                               _TMR1_Initialize 159E                                    fp__myTMR1ISR 0000  
