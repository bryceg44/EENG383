

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Sep 17 16:08:48 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 05/05/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F26K22 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataBANK0
    61  00FE14                     __pidataBANK0:
    62                           	callstack 0
    63                           
    64                           ;initializer for _scale
    65  00FE14  4706               	dw	18182
    66  00FE16  430F               	dw	17167
    67  00FE18  3F42               	dw	16194
    68  00FE1A  3BC0               	dw	15296
    69  00FE1C  3868               	dw	14440
    70  00FE1E  353D               	dw	13629
    71  00FE20  323E               	dw	12862
    72  00FE22  2F6C               	dw	12140
    73  00FE24  2CC5               	dw	11461
    74  00FE26  2A3B               	dw	10811
    75  00FE28  27DC               	dw	10204
    76  00FE2A  259B               	dw	9627
    77  00FE2C  2383               	dw	9091
    78  00FE2E  2188               	dw	8584
    79  00FE30  1FA9               	dw	8105
    80  00FE32  1DE0               	dw	7648
    81  00FE34  1C34               	dw	7220
    82  00FE36  1A9E               	dw	6814
    83  00FE38  191F               	dw	6431
    84  00FE3A  17B6               	dw	6070
    85  00FE3C  1663               	dw	5731
    86  00FE3E  1521               	dw	5409
    87  00FE40  13F1               	dw	5105
    88  00FE42  12D3               	dw	4819
    89                           
    90                           ;initializer for main@F5785
    91  00FE44  7A12               	dw	31250
    92  00FE46  5B8D               	dw	23437
    93  00FE48  1E84               	dw	7812
    94  00FE4A  B71B               	dw	46875
    95  00FE4C  3D09               	dw	15625
    96  00FE4E  3D09               	dw	15625
    97  00FE50  3D09               	dw	15625
    98  00FE52  3D09               	dw	15625
    99  00FE54  3D09               	dw	15625
   100  00FE56  B71B               	dw	46875
   101  00FE58  3D09               	dw	15625
   102  00FE5A  7A12               	dw	31250
   103  00FE5C  5B8D               	dw	23437
   104  00FE5E  1E84               	dw	7812
   105  00FE60  B71B               	dw	46875
   106  00FE62  3D09               	dw	15625
   107  00FE64  3D09               	dw	15625
   108  00FE66  3D09               	dw	15625
   109  00FE68  3D09               	dw	15625
   110  00FE6A  3D09               	dw	15625
   111  00FE6C  B71B               	dw	46875
   112                           
   113                           ;initializer for main@F5783
   114  00FE6E  000C               	dw	12
   115  00FE70  000F               	dw	15
   116  00FE72  000F               	dw	15
   117  00FE74  0008               	dw	8
   118  00FE76  000A               	dw	10
   119  00FE78  000C               	dw	12
   120  00FE7A  000D               	dw	13
   121  00FE7C  000F               	dw	15
   122  00FE7E  0011               	dw	17
   123  00FE80  000A               	dw	10
   124  00FE82  0019               	dw	25
   125  00FE84  000C               	dw	12
   126  00FE86  000E               	dw	14
   127  00FE88  000E               	dw	14
   128  00FE8A  000F               	dw	15
   129  00FE8C  0011               	dw	17
   130  00FE8E  0013               	dw	19
   131  00FE90  0013               	dw	19
   132  00FE92  0011               	dw	17
   133  00FE94  0011               	dw	17
   134  00FE96  000F               	dw	15
   135  0000                     _ANSELA	set	3896
   136  0000                     _ANSELB	set	3897
   137  0000                     _ANSELC	set	3898
   138  0000                     _TMR1	set	4046
   139  0000                     _LATBbits	set	3978
   140  0000                     _PORTAbits	set	3968
   141  0000                     _OSCTUNE	set	3995
   142  0000                     _OSCCON2	set	4050
   143  0000                     _OSCCON	set	4051
   144  0000                     _INTCON2bits	set	4081
   145  0000                     _WPUB	set	3937
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISA	set	3986
   149  0000                     _LATC	set	3979
   150  0000                     _LATB	set	3978
   151  0000                     _LATA	set	3977
   152  0000                     _T0CON	set	4053
   153  0000                     _INTCONbits	set	4082
   154  0000                     _TMR0L	set	4054
   155  0000                     _TMR0H	set	4055
   156  0000                     _T0CONbits	set	4053
   157  0000                     _T1GCONbits	set	4044
   158  0000                     _T1CONbits	set	4045
   159  0000                     _T1CON	set	4045
   160  0000                     _PIR1bits	set	3998
   161  0000                     _TMR1L	set	4046
   162  0000                     _TMR1H	set	4047
   163  0000                     _T1GCON	set	4044
   164  0000                     _PLLRDY	set	32407
   165                           
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169  00FDE6                     __pcinit:
   170                           	callstack 0
   171  00FDE6                     start_initialization:
   172                           	callstack 0
   173  00FDE6                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Initialize objects allocated to BANK0 (132 bytes)
   177                           ; load TBLPTR registers with __pidataBANK0
   178  00FDE6  0E14               	movlw	low __pidataBANK0
   179  00FDE8  6EF6               	movwf	tblptrl,c
   180  00FDEA  0EFE               	movlw	high __pidataBANK0
   181  00FDEC  6EF7               	movwf	tblptrh,c
   182  00FDEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   183  00FDF0  6EF8               	movwf	tblptru,c
   184  00FDF2  EE00  F060         	lfsr	0,__pdataBANK0
   185  00FDF6  EE10 F084          	lfsr	1,132
   186  00FDFA                     copy_data0:
   187  00FDFA  0009               	tblrd		*+
   188  00FDFC  CFF5 FFEE          	movff	tablat,postinc0
   189  00FE00  50E5               	movf	postdec1,w,c
   190  00FE02  50E1               	movf	fsr1l,w,c
   191  00FE04  E1FA               	bnz	copy_data0
   192                           
   193                           ; Clear objects allocated to COMRAM (4 bytes)
   194  00FE06  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   195  00FE08  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   196  00FE0A  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   197  00FE0C  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   198  00FE0E                     end_of_initialization:
   199                           	callstack 0
   200  00FE0E                     __end_of__initialization:
   201                           	callstack 0
   202  00FE0E  0100               	movlb	0
   203  00FE10  EF4C  F07F         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206  00005C                     __pbssCOMRAM:
   207                           	callstack 0
   208  00005C                     _timer0ReloadVal:
   209                           	callstack 0
   210  00005C                     	ds	2
   211  00005E                     _timer1ReloadVal:
   212                           	callstack 0
   213  00005E                     	ds	2
   214                           
   215                           	psect	dataBANK0
   216  000060                     __pdataBANK0:
   217                           	callstack 0
   218  000060                     _scale:
   219                           	callstack 0
   220  000060                     	ds	48
   221  000090                     main@F5785:
   222                           	callstack 0
   223  000090                     	ds	42
   224  0000BA                     main@F5783:
   225                           	callstack 0
   226  0000BA                     	ds	42
   227                           
   228                           	psect	cstackCOMRAM
   229  000001                     __pcstackCOMRAM:
   230                           	callstack 0
   231  000001                     ??_TMR0_Initialize:
   232  000001                     TMR1_WriteTimer@timerVal:
   233                           	callstack 0
   234  000001                     TMR0_WriteTimer@timerVal:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  000001                     	ds	2
   239  000003                     ??_main:
   240                           
   241                           ; 1 bytes @ 0x2
   242  000003                     	ds	4
   243  000007                     main@duration:
   244                           	callstack 0
   245                           
   246                           ; 42 bytes @ 0x6
   247  000007                     	ds	42
   248  000031                     main@notes:
   249                           	callstack 0
   250                           
   251                           ; 42 bytes @ 0x30
   252  000031                     	ds	42
   253  00005B                     main@i:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x5A
   257  00005B                     	ds	1
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 81 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  i               1   90[COMRAM] unsigned char 
   269 ;;  notes          42   48[COMRAM] unsigned short [21]
   270 ;;  duration       42    6[COMRAM] unsigned short [21]
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Locals:        85       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;      Totals:        89       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;Total ram usage:       89 bytes
   285 ;; Hardware stack levels required when called:    2
   286 ;; This function calls:
   287 ;;		_SYSTEM_Initialize
   288 ;;		_TMR0_HasOverflowOccured
   289 ;;		_TMR0_Initialize
   290 ;;		_TMR0_WriteTimer
   291 ;;		_TMR1_HasOverflowOccured
   292 ;;		_TMR1_Initialize
   293 ;;		_TMR1_WriteTimer
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  00FE98                     __ptext0:
   301                           	callstack 0
   302  00FE98                     _main:
   303                           	callstack 29
   304  00FE98                     
   305                           ;main.c: 84:     uint16_t notes[21] = {12, 15, 15, 8, 10, 12, 13, 15, 17, 10, 25, 12, 14
      +                          , 14, 15, 17, 19, 19, 17, 17, 15};
   306  00FE98  EE20  F0BA         	lfsr	2,main@F5783
   307  00FE9C  EE10  F031         	lfsr	1,main@notes
   308  00FEA0  0E29               	movlw	41
   309  00FEA2                     u181:
   310  00FEA2  CFDB FFE3          	movff	plusw2,plusw1
   311  00FEA6  06E8               	decf	wreg,f,c
   312  00FEA8  E2FC               	bc	u181
   313                           
   314                           ;main.c: 85:     uint16_t duration[21] = {(15625 * 2), (15625 + (15625 / 2)), (15625 / 2
      +                          ), ((15625 * 2) + 15625), 15625, 15625, 15625, 15625, 15625, ((15625 * 2) + 15625), 1562
      +                          5, (15625 * 2), (15625 + (15625 / 2)), (15625 / 2), ((15625 * 2) + 15625), 15625, 15625,
      +                           15625,15625,15625, ((15625 * 2) + 15625)};
   315  00FEAA  EE20  F090         	lfsr	2,main@F5785
   316  00FEAE  EE10  F007         	lfsr	1,main@duration
   317  00FEB2  0E29               	movlw	41
   318  00FEB4                     u191:
   319  00FEB4  CFDB FFE3          	movff	plusw2,plusw1
   320  00FEB8  06E8               	decf	wreg,f,c
   321  00FEBA  E2FC               	bc	u191
   322  00FEBC                     
   323                           ;main.c: 87:     SYSTEM_Initialize();
   324  00FEBC  EC7D  F07E         	call	_SYSTEM_Initialize	;wreg free
   325  00FEC0                     l165:
   326  00FEC0  B480               	btfsc	128,2,c	;volatile
   327  00FEC2  EF65  F07F         	goto	u201
   328  00FEC6  EF67  F07F         	goto	u200
   329  00FECA                     u201:
   330  00FECA  EF60  F07F         	goto	l165
   331  00FECE                     u200:
   332  00FECE                     
   333                           ;main.c: 93:         for(uint8_t i = 0; i < 21; ++i) {
   334  00FECE  0E00               	movlw	0
   335  00FED0  6E5B               	movwf	main@i^0,c
   336  00FED2                     l1055:
   337                           
   338                           ;main.c: 94:             TMR0_Initialize();
   339  00FED2  ECB6  F07E         	call	_TMR0_Initialize	;wreg free
   340  00FED6                     
   341                           ;main.c: 95:             TMR0_WriteTimer(0x10000 - duration[i]);
   342  00FED6  505B               	movf	main@i^0,w,c
   343  00FED8  0D02               	mullw	2
   344  00FEDA  0E07               	movlw	low main@duration
   345  00FEDC  24F3               	addwf	243,w,c
   346  00FEDE  6ED9               	movwf	fsr2l,c
   347  00FEE0  0E00               	movlw	high main@duration
   348  00FEE2  20F4               	addwfc	prodh,w,c
   349  00FEE4  6EDA               	movwf	fsr2h,c
   350  00FEE6  CFDE F003          	movff	postinc2,??_main
   351  00FEEA  CFDD F004          	movff	postdec2,??_main+1
   352  00FEEE  5003               	movf	??_main^0,w,c
   353  00FEF0  0800               	sublw	0
   354  00FEF2  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
   355  00FEF4  5004               	movf	(??_main+1)^0,w,c
   356  00FEF6  A0D8               	btfss	status,0,c
   357  00FEF8  2AE8               	incf	wreg,f,c
   358  00FEFA  0800               	sublw	0
   359  00FEFC  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
   360  00FEFE  EC78  F07E         	call	_TMR0_WriteTimer	;wreg free
   361                           
   362                           ;main.c: 96:             while (TMR0_HasOverflowOccured() == 0) {
   363  00FF02  EFD6  F07F         	goto	l1069
   364  00FF06                     l1059:
   365                           
   366                           ;main.c: 97:                 if(notes[i] != 25) {
   367  00FF06  505B               	movf	main@i^0,w,c
   368  00FF08  0D02               	mullw	2
   369  00FF0A  0E31               	movlw	low main@notes
   370  00FF0C  24F3               	addwf	243,w,c
   371  00FF0E  6ED9               	movwf	fsr2l,c
   372  00FF10  0E00               	movlw	high main@notes
   373  00FF12  20F4               	addwfc	prodh,w,c
   374  00FF14  6EDA               	movwf	fsr2h,c
   375  00FF16  0E19               	movlw	25
   376  00FF18  18DE               	xorwf	postinc2,w,c
   377  00FF1A  10DE               	iorwf	postinc2,w,c
   378  00FF1C  B4D8               	btfsc	status,2,c
   379  00FF1E  EF93  F07F         	goto	u211
   380  00FF22  EF95  F07F         	goto	u210
   381  00FF26                     u211:
   382  00FF26  EFD6  F07F         	goto	l1069
   383  00FF2A                     u210:
   384  00FF2A                     
   385                           ;main.c: 98:                     TMR1_Initialize();
   386  00FF2A  ECA8  F07E         	call	_TMR1_Initialize	;wreg free
   387  00FF2E                     
   388                           ;main.c: 99:                     TMR1_WriteTimer(0x10000 - scale[notes[i]]);
   389  00FF2E  505B               	movf	main@i^0,w,c
   390  00FF30  0D02               	mullw	2
   391  00FF32  0E31               	movlw	low main@notes
   392  00FF34  24F3               	addwf	243,w,c
   393  00FF36  6ED9               	movwf	fsr2l,c
   394  00FF38  0E00               	movlw	high main@notes
   395  00FF3A  20F4               	addwfc	prodh,w,c
   396  00FF3C  6EDA               	movwf	fsr2h,c
   397  00FF3E  CFDE F003          	movff	postinc2,??_main
   398  00FF42  CFDD F004          	movff	postdec2,??_main+1
   399  00FF46  90D8               	bcf	status,0,c
   400  00FF48  3603               	rlcf	??_main^0,f,c
   401  00FF4A  3604               	rlcf	(??_main+1)^0,f,c
   402  00FF4C  0E60               	movlw	low _scale
   403  00FF4E  2403               	addwf	??_main^0,w,c
   404  00FF50  6ED9               	movwf	fsr2l,c
   405  00FF52  0E00               	movlw	high _scale
   406  00FF54  2004               	addwfc	(??_main+1)^0,w,c
   407  00FF56  6EDA               	movwf	fsr2h,c
   408  00FF58  CFDE F005          	movff	postinc2,??_main+2
   409  00FF5C  CFDD F006          	movff	postdec2,??_main+3
   410  00FF60  5005               	movf	(??_main+2)^0,w,c
   411  00FF62  0800               	sublw	0
   412  00FF64  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
   413  00FF66  5006               	movf	(??_main+3)^0,w,c
   414  00FF68  A0D8               	btfss	status,0,c
   415  00FF6A  2AE8               	incf	wreg,f,c
   416  00FF6C  0800               	sublw	0
   417  00FF6E  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
   418  00FF70  ECCA  F07E         	call	_TMR1_WriteTimer	;wreg free
   419  00FF74                     l1065:
   420  00FF74  EC90  F07E         	call	_TMR1_HasOverflowOccured	;wreg free
   421  00FF78  0900               	iorlw	0
   422  00FF7A  B4D8               	btfsc	status,2,c
   423  00FF7C  EFC2  F07F         	goto	u221
   424  00FF80  EFC4  F07F         	goto	u220
   425  00FF84                     u221:
   426  00FF84  EFBA  F07F         	goto	l1065
   427  00FF88                     u220:
   428  00FF88  BA8A               	btfsc	138,5,c	;volatile
   429  00FF8A  EFC9  F07F         	goto	u231
   430  00FF8E  EFCC  F07F         	goto	u230
   431  00FF92                     u231:
   432  00FF92  0E01               	movlw	1
   433  00FF94  EFCD  F07F         	goto	u236
   434  00FF98                     u230:
   435  00FF98  0E00               	movlw	0
   436  00FF9A                     u236:
   437  00FF9A  0AFF               	xorlw	255
   438  00FF9C  6E03               	movwf	??_main^0,c
   439  00FF9E  3A03               	swapf	??_main^0,f,c
   440  00FFA0  4603               	rlncf	??_main^0,f,c
   441  00FFA2  508A               	movf	138,w,c	;volatile
   442  00FFA4  1803               	xorwf	??_main^0,w,c
   443  00FFA6  0BDF               	andlw	-33
   444  00FFA8  1803               	xorwf	??_main^0,w,c
   445  00FFAA  6E8A               	movwf	138,c	;volatile
   446  00FFAC                     l1069:
   447                           
   448                           ;main.c: 96:             while (TMR0_HasOverflowOccured() == 0) {
   449  00FFAC  EC86  F07E         	call	_TMR0_HasOverflowOccured	;wreg free
   450  00FFB0  0900               	iorlw	0
   451  00FFB2  B4D8               	btfsc	status,2,c
   452  00FFB4  EFDE  F07F         	goto	u241
   453  00FFB8  EFE0  F07F         	goto	u240
   454  00FFBC                     u241:
   455  00FFBC  EF83  F07F         	goto	l1059
   456  00FFC0                     u240:
   457  00FFC0  9A8A               	bcf	138,5,c	;volatile
   458  00FFC2                     
   459                           ;main.c: 107:             TMR0_Initialize();
   460  00FFC2  ECB6  F07E         	call	_TMR0_Initialize	;wreg free
   461  00FFC6                     
   462                           ;main.c: 108:             TMR0_WriteTimer(0x10000 - (15625 / 8));
   463  00FFC6  0EF8               	movlw	248
   464  00FFC8  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
   465  00FFCA  0E5F               	movlw	95
   466  00FFCC  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
   467  00FFCE  EC78  F07E         	call	_TMR0_WriteTimer	;wreg free
   468  00FFD2                     l1075:
   469  00FFD2  EC86  F07E         	call	_TMR0_HasOverflowOccured	;wreg free
   470  00FFD6  0900               	iorlw	0
   471  00FFD8  B4D8               	btfsc	status,2,c
   472  00FFDA  EFF1  F07F         	goto	u251
   473  00FFDE  EFF3  F07F         	goto	u250
   474  00FFE2                     u251:
   475  00FFE2  EFE9  F07F         	goto	l1075
   476  00FFE6                     u250:
   477  00FFE6                     
   478                           ;main.c: 110:         }
   479  00FFE6  2A5B               	incf	main@i^0,f,c
   480  00FFE8  0E14               	movlw	20
   481  00FFEA  645B               	cpfsgt	main@i^0,c
   482  00FFEC  EFFA  F07F         	goto	u261
   483  00FFF0  EFFC  F07F         	goto	u260
   484  00FFF4                     u261:
   485  00FFF4  EF69  F07F         	goto	l1055
   486  00FFF8                     u260:
   487  00FFF8  EF60  F07F         	goto	l165
   488  00FFFC  EF00  F000         	goto	start
   489  010000                     __end_of_main:
   490                           	callstack 0
   491                           
   492 ;; *************** function _TMR1_WriteTimer *****************
   493 ;; Defined at:
   494 ;;		line 114 in file "mcc_generated_files/tmr1.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  timerVal        2    0[COMRAM] unsigned short 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;;		_TMR1_Reload
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523  00FD94                     __ptext1:
   524                           	callstack 0
   525  00FD94                     _TMR1_WriteTimer:
   526                           	callstack 30
   527  00FD94                     
   528                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
   529  00FD94  A4CD               	btfss	205,2,c	;volatile
   530  00FD96  EFCF  F07E         	goto	u151
   531  00FD9A  EFD1  F07E         	goto	u150
   532  00FD9E                     u151:
   533  00FD9E  EFD9  F07E         	goto	l1023
   534  00FDA2                     u150:
   535  00FDA2                     
   536                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
   537  00FDA2  90CD               	bcf	205,0,c	;volatile
   538  00FDA4                     
   539                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (timerVal >> 8);
   540  00FDA4  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
   541  00FDA6  6ECF               	movwf	207,c	;volatile
   542  00FDA8                     
   543                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t) timerVal;
   544  00FDA8  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
   545  00FDAC                     
   546                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
   547  00FDAC  80CD               	bsf	205,0,c	;volatile
   548                           
   549                           ;mcc_generated_files/tmr1.c: 127:     }
   550  00FDAE  EFDD  F07E         	goto	l35
   551  00FDB2                     l1023:
   552                           
   553                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (timerVal >> 8);
   554  00FDB2  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
   555  00FDB4  6ECF               	movwf	207,c	;volatile
   556  00FDB6                     
   557                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t) timerVal;
   558  00FDB6  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
   559  00FDBA                     l35:
   560  00FDBA  0012               	return		;funcret
   561  00FDBC                     __end_of_TMR1_WriteTimer:
   562                           	callstack 0
   563                           
   564 ;; *************** function _TMR1_HasOverflowOccured *****************
   565 ;; Defined at:
   566 ;;		line 151 in file "mcc_generated_files/tmr1.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      _Bool 
   573 ;; Registers used:
   574 ;;		wreg
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text2
   594  00FD20                     __ptext2:
   595                           	callstack 0
   596  00FD20                     _TMR1_HasOverflowOccured:
   597                           	callstack 30
   598  00FD20                     
   599                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
   600  00FD20  B09E               	btfsc	158,0,c	;volatile
   601  00FD22  EF95  F07E         	goto	u161
   602  00FD26  EF98  F07E         	goto	u160
   603  00FD2A                     u161:
   604  00FD2A  0E01               	movlw	1
   605  00FD2C  EF99  F07E         	goto	u166
   606  00FD30                     u160:
   607  00FD30  0E00               	movlw	0
   608  00FD32                     u166:
   609  00FD32  0012               	return		;funcret
   610  00FD34                     __end_of_TMR1_HasOverflowOccured:
   611                           	callstack 0
   612                           
   613 ;; *************** function _TMR0_WriteTimer *****************
   614 ;; Defined at:
   615 ;;		line 115 in file "mcc_generated_files/tmr0.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  timerVal        2    0[COMRAM] unsigned short 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text3
   643  00FCF0                     __ptext3:
   644                           	callstack 0
   645  00FCF0                     _TMR0_WriteTimer:
   646                           	callstack 30
   647  00FCF0                     
   648                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
   649  00FCF0  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
   650  00FCF2  6ED7               	movwf	215,c	;volatile
   651  00FCF4                     
   652                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
   653  00FCF4  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
   654  00FCF8  0012               	return		;funcret
   655  00FCFA                     __end_of_TMR0_WriteTimer:
   656                           	callstack 0
   657                           
   658 ;; *************** function _TMR0_HasOverflowOccured *****************
   659 ;; Defined at:
   660 ;;		line 129 in file "mcc_generated_files/tmr0.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      _Bool 
   667 ;; Registers used:
   668 ;;		wreg
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text4
   688  00FD0C                     __ptext4:
   689                           	callstack 0
   690  00FD0C                     _TMR0_HasOverflowOccured:
   691                           	callstack 30
   692  00FD0C                     
   693                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
   694  00FD0C  B4F2               	btfsc	242,2,c	;volatile
   695  00FD0E  EF8B  F07E         	goto	u171
   696  00FD12  EF8E  F07E         	goto	u170
   697  00FD16                     u171:
   698  00FD16  0E01               	movlw	1
   699  00FD18  EF8F  F07E         	goto	u176
   700  00FD1C                     u170:
   701  00FD1C  0E00               	movlw	0
   702  00FD1E                     u176:
   703  00FD1E  0012               	return		;funcret
   704  00FD20                     __end_of_TMR0_HasOverflowOccured:
   705                           	callstack 0
   706                           
   707 ;; *************** function _SYSTEM_Initialize *****************
   708 ;; Defined at:
   709 ;;		line 50 in file "mcc_generated_files/mcc.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		_OSCILLATOR_Initialize
   732 ;;		_PIN_MANAGER_Initialize
   733 ;;		_TMR0_Initialize
   734 ;;		_TMR1_Initialize
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text5
   741  00FCFA                     __ptext5:
   742                           	callstack 0
   743  00FCFA                     _SYSTEM_Initialize:
   744                           	callstack 29
   745  00FCFA                     
   746                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   747  00FCFA  ECDE  F07E         	call	_PIN_MANAGER_Initialize	;wreg free
   748                           
   749                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   750  00FCFE  EC9A  F07E         	call	_OSCILLATOR_Initialize	;wreg free
   751                           
   752                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
   753  00FD02  ECA8  F07E         	call	_TMR1_Initialize	;wreg free
   754  00FD06                     
   755                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   756  00FD06  ECB6  F07E         	call	_TMR0_Initialize	;wreg free
   757  00FD0A  0012               	return		;funcret
   758  00FD0C                     __end_of_SYSTEM_Initialize:
   759                           	callstack 0
   760                           
   761 ;; *************** function _TMR1_Initialize *****************
   762 ;; Defined at:
   763 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_SYSTEM_Initialize
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text6
   792  00FD50                     __ptext6:
   793                           	callstack 0
   794  00FD50                     _TMR1_Initialize:
   795                           	callstack 30
   796  00FD50                     
   797                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
   798  00FD50  0E00               	movlw	0
   799  00FD52  6ECC               	movwf	204,c	;volatile
   800                           
   801                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
   802  00FD54  0E00               	movlw	0
   803  00FD56  6ECF               	movwf	207,c	;volatile
   804                           
   805                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
   806  00FD58  0E00               	movlw	0
   807  00FD5A  6ECE               	movwf	206,c	;volatile
   808  00FD5C                     
   809                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
   810  00FD5C  CFCE F05E          	movff	4046,_timer1ReloadVal	;volatile
   811  00FD60  CFCF F05F          	movff	4047,_timer1ReloadVal+1	;volatile
   812  00FD64                     
   813                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
   814  00FD64  909E               	bcf	158,0,c	;volatile
   815                           
   816                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
   817  00FD66  0E01               	movlw	1
   818  00FD68  6ECD               	movwf	205,c	;volatile
   819  00FD6A  0012               	return		;funcret
   820  00FD6C                     __end_of_TMR1_Initialize:
   821                           	callstack 0
   822                           
   823 ;; *************** function _TMR0_Initialize *****************
   824 ;; Defined at:
   825 ;;		line 66 in file "mcc_generated_files/tmr0.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        2 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_SYSTEM_Initialize
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text7
   854  00FD6C                     __ptext7:
   855                           	callstack 0
   856  00FD6C                     _TMR0_Initialize:
   857                           	callstack 30
   858  00FD6C                     
   859                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
   860  00FD6C  9CD5               	bcf	213,6,c	;volatile
   861  00FD6E                     
   862                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFC;
   863  00FD6E  0EFC               	movlw	252
   864  00FD70  6ED7               	movwf	215,c	;volatile
   865                           
   866                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x17;
   867  00FD72  0E17               	movlw	23
   868  00FD74  6ED6               	movwf	214,c	;volatile
   869  00FD76                     
   870                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   871  00FD76  50D6               	movf	214,w,c	;volatile
   872  00FD78  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
   873  00FD7C  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
   874  00FD7E  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   875  00FD82  6A01               	clrf	??_TMR0_Initialize^0,c
   876  00FD84  1001               	iorwf	??_TMR0_Initialize^0,w,c
   877  00FD86  6E5C               	movwf	_timer0ReloadVal^0,c	;volatile
   878  00FD88  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
   879  00FD8A  6E5D               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   880  00FD8C                     
   881                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
   882  00FD8C  94F2               	bcf	242,2,c	;volatile
   883  00FD8E                     
   884                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
   885  00FD8E  0E97               	movlw	151
   886  00FD90  6ED5               	movwf	213,c	;volatile
   887  00FD92  0012               	return		;funcret
   888  00FD94                     __end_of_TMR0_Initialize:
   889                           	callstack 0
   890                           
   891 ;; *************** function _PIN_MANAGER_Initialize *****************
   892 ;; Defined at:
   893 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_SYSTEM_Initialize
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text8
   921  00FDBC                     __ptext8:
   922                           	callstack 0
   923  00FDBC                     _PIN_MANAGER_Initialize:
   924                           	callstack 29
   925  00FDBC                     
   926                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   927  00FDBC  0E00               	movlw	0
   928  00FDBE  6E89               	movwf	137,c	;volatile
   929                           
   930                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   931  00FDC0  0E00               	movlw	0
   932  00FDC2  6E8A               	movwf	138,c	;volatile
   933                           
   934                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   935  00FDC4  0E00               	movlw	0
   936  00FDC6  6E8B               	movwf	139,c	;volatile
   937  00FDC8                     
   938                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   939  00FDC8  6892               	setf	146,c	;volatile
   940                           
   941                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
   942  00FDCA  0EDF               	movlw	223
   943  00FDCC  6E93               	movwf	147,c	;volatile
   944  00FDCE                     
   945                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   946  00FDCE  6894               	setf	148,c	;volatile
   947                           
   948                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
   949  00FDD0  0EFC               	movlw	252
   950  00FDD2  010F               	movlb	15	; () banked
   951  00FDD4  6F3A               	movwf	58,b	;volatile
   952                           
   953                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
   954  00FDD6  0E1F               	movlw	31
   955  00FDD8  6F39               	movwf	57,b	;volatile
   956                           
   957                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x23;
   958  00FDDA  0E23               	movlw	35
   959  00FDDC  6F38               	movwf	56,b	;volatile
   960                           
   961                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   962  00FDDE  0E00               	movlw	0
   963  00FDE0  6E61               	movwf	97,c	;volatile
   964  00FDE2                     
   965                           ; BSR set to: 15
   966                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   967  00FDE2  8EF1               	bsf	241,7,c	;volatile
   968  00FDE4                     
   969                           ; BSR set to: 15
   970  00FDE4  0012               	return		;funcret
   971  00FDE6                     __end_of_PIN_MANAGER_Initialize:
   972                           	callstack 0
   973                           
   974 ;; *************** function _OSCILLATOR_Initialize *****************
   975 ;; Defined at:
   976 ;;		line 59 in file "mcc_generated_files/mcc.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_SYSTEM_Initialize
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text9
  1004  00FD34                     __ptext9:
  1005                           	callstack 0
  1006  00FD34                     _OSCILLATOR_Initialize:
  1007                           	callstack 29
  1008  00FD34                     
  1009                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  1010  00FD34  0E70               	movlw	112
  1011  00FD36  6ED3               	movwf	211,c	;volatile
  1012                           
  1013                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  1014  00FD38  0E04               	movlw	4
  1015  00FD3A  6ED2               	movwf	210,c	;volatile
  1016                           
  1017                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  1018  00FD3C  0E40               	movlw	64
  1019  00FD3E  6E9B               	movwf	155,c	;volatile
  1020  00FD40                     l132:
  1021                           
  1022                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  1023  00FD40  AED2               	btfss	4050,7,c	;volatile
  1024  00FD42  EFA5  F07E         	goto	u141
  1025  00FD46  EFA7  F07E         	goto	u140
  1026  00FD4A                     u141:
  1027  00FD4A  EFA0  F07E         	goto	l132
  1028  00FD4E                     u140:
  1029  00FD4E  0012               	return		;funcret
  1030  00FD50                     __end_of_OSCILLATOR_Initialize:
  1031                           	callstack 0
  1032  0000                     
  1033                           	psect	rparam
  1034  0000                     
  1035                           	psect	idloc
  1036                           
  1037                           ;Config register IDLOC0 @ 0x200000
  1038                           ;	unspecified, using default values
  1039  200000                     	org	2097152
  1040  200000  FF                 	db	255
  1041                           
  1042                           ;Config register IDLOC1 @ 0x200001
  1043                           ;	unspecified, using default values
  1044  200001                     	org	2097153
  1045  200001  FF                 	db	255
  1046                           
  1047                           ;Config register IDLOC2 @ 0x200002
  1048                           ;	unspecified, using default values
  1049  200002                     	org	2097154
  1050  200002  FF                 	db	255
  1051                           
  1052                           ;Config register IDLOC3 @ 0x200003
  1053                           ;	unspecified, using default values
  1054  200003                     	org	2097155
  1055  200003  FF                 	db	255
  1056                           
  1057                           ;Config register IDLOC4 @ 0x200004
  1058                           ;	unspecified, using default values
  1059  200004                     	org	2097156
  1060  200004  FF                 	db	255
  1061                           
  1062                           ;Config register IDLOC5 @ 0x200005
  1063                           ;	unspecified, using default values
  1064  200005                     	org	2097157
  1065  200005  FF                 	db	255
  1066                           
  1067                           ;Config register IDLOC6 @ 0x200006
  1068                           ;	unspecified, using default values
  1069  200006                     	org	2097158
  1070  200006  FF                 	db	255
  1071                           
  1072                           ;Config register IDLOC7 @ 0x200007
  1073                           ;	unspecified, using default values
  1074  200007                     	org	2097159
  1075  200007  FF                 	db	255
  1076                           
  1077                           	psect	config
  1078                           
  1079                           ; Padding undefined space
  1080  300000                     	org	3145728
  1081  300000  FF                 	db	255
  1082                           
  1083                           ;Config register CONFIG1H @ 0x300001
  1084                           ;	Oscillator Selection bits
  1085                           ;	FOSC = INTIO67, Internal oscillator block
  1086                           ;	4X PLL Enable
  1087                           ;	PLLCFG = OFF, Oscillator used directly
  1088                           ;	Primary clock enable bit
  1089                           ;	PRICLKEN = ON, Primary clock enabled
  1090                           ;	Fail-Safe Clock Monitor Enable bit
  1091                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1092                           ;	Internal/External Oscillator Switchover bit
  1093                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1094  300001                     	org	3145729
  1095  300001  28                 	db	40
  1096                           
  1097                           ;Config register CONFIG2L @ 0x300002
  1098                           ;	Power-up Timer Enable bit
  1099                           ;	PWRTEN = OFF, Power up timer disabled
  1100                           ;	Brown-out Reset Enable bits
  1101                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1102                           ;	Brown Out Reset Voltage bits
  1103                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1104  300002                     	org	3145730
  1105  300002  1F                 	db	31
  1106                           
  1107                           ;Config register CONFIG2H @ 0x300003
  1108                           ;	Watchdog Timer Enable bits
  1109                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1110                           ;	Watchdog Timer Postscale Select bits
  1111                           ;	WDTPS = 32768, 1:32768
  1112  300003                     	org	3145731
  1113  300003  3C                 	db	60
  1114                           
  1115                           ; Padding undefined space
  1116  300004                     	org	3145732
  1117  300004  FF                 	db	255
  1118                           
  1119                           ;Config register CONFIG3H @ 0x300005
  1120                           ;	CCP2 MUX bit
  1121                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1122                           ;	PORTB A/D Enable bit
  1123                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1124                           ;	P3A/CCP3 Mux bit
  1125                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1126                           ;	HFINTOSC Fast Start-up
  1127                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1128                           ;	Timer3 Clock input mux bit
  1129                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1130                           ;	ECCP2 B output mux bit
  1131                           ;	P2BMX = PORTB5, P2B is on RB5
  1132                           ;	MCLR Pin Enable bit
  1133                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1134  300005                     	org	3145733
  1135  300005  BF                 	db	191
  1136                           
  1137                           ;Config register CONFIG4L @ 0x300006
  1138                           ;	Stack Full/Underflow Reset Enable bit
  1139                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1140                           ;	Single-Supply ICSP Enable bit
  1141                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1142                           ;	Extended Instruction Set Enable bit
  1143                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1144                           ;	Background Debug
  1145                           ;	DEBUG = OFF, Disabled
  1146  300006                     	org	3145734
  1147  300006  85                 	db	133
  1148                           
  1149                           ; Padding undefined space
  1150  300007                     	org	3145735
  1151  300007  FF                 	db	255
  1152                           
  1153                           ;Config register CONFIG5L @ 0x300008
  1154                           ;	Code Protection Block 0
  1155                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1156                           ;	Code Protection Block 1
  1157                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1158                           ;	Code Protection Block 2
  1159                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1160                           ;	Code Protection Block 3
  1161                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1162  300008                     	org	3145736
  1163  300008  0F                 	db	15
  1164                           
  1165                           ;Config register CONFIG5H @ 0x300009
  1166                           ;	Boot Block Code Protection bit
  1167                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1168                           ;	Data EEPROM Code Protection bit
  1169                           ;	CPD = OFF, Data EEPROM not code-protected
  1170  300009                     	org	3145737
  1171  300009  C0                 	db	192
  1172                           
  1173                           ;Config register CONFIG6L @ 0x30000A
  1174                           ;	Write Protection Block 0
  1175                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1176                           ;	Write Protection Block 1
  1177                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1178                           ;	Write Protection Block 2
  1179                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1180                           ;	Write Protection Block 3
  1181                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1182  30000A                     	org	3145738
  1183  30000A  0F                 	db	15
  1184                           
  1185                           ;Config register CONFIG6H @ 0x30000B
  1186                           ;	Configuration Register Write Protection bit
  1187                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1188                           ;	Boot Block Write Protection bit
  1189                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1190                           ;	Data EEPROM Write Protection bit
  1191                           ;	WRTD = OFF, Data EEPROM not write-protected
  1192  30000B                     	org	3145739
  1193  30000B  E0                 	db	224
  1194                           
  1195                           ;Config register CONFIG7L @ 0x30000C
  1196                           ;	Table Read Protection Block 0
  1197                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1198                           ;	Table Read Protection Block 1
  1199                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1200                           ;	Table Read Protection Block 2
  1201                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1202                           ;	Table Read Protection Block 3
  1203                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1204  30000C                     	org	3145740
  1205  30000C  0F                 	db	15
  1206                           
  1207                           ;Config register CONFIG7H @ 0x30000D
  1208                           ;	Boot Block Table Read Protection bit
  1209                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1210  30000D                     	org	3145741
  1211  30000D  40                 	db	64
  1212                           tosu	equ	0xFFF
  1213                           tosh	equ	0xFFE
  1214                           tosl	equ	0xFFD
  1215                           stkptr	equ	0xFFC
  1216                           pclatu	equ	0xFFB
  1217                           pclath	equ	0xFFA
  1218                           pcl	equ	0xFF9
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           prodh	equ	0xFF4
  1224                           prodl	equ	0xFF3
  1225                           indf0	equ	0xFEF
  1226                           postinc0	equ	0xFEE
  1227                           postdec0	equ	0xFED
  1228                           preinc0	equ	0xFEC
  1229                           plusw0	equ	0xFEB
  1230                           fsr0h	equ	0xFEA
  1231                           fsr0l	equ	0xFE9
  1232                           wreg	equ	0xFE8
  1233                           indf1	equ	0xFE7
  1234                           postinc1	equ	0xFE6
  1235                           postdec1	equ	0xFE5
  1236                           preinc1	equ	0xFE4
  1237                           plusw1	equ	0xFE3
  1238                           fsr1h	equ	0xFE2
  1239                           fsr1l	equ	0xFE1
  1240                           bsr	equ	0xFE0
  1241                           indf2	equ	0xFDF
  1242                           postinc2	equ	0xFDE
  1243                           postdec2	equ	0xFDD
  1244                           preinc2	equ	0xFDC
  1245                           plusw2	equ	0xFDB
  1246                           fsr2h	equ	0xFDA
  1247                           fsr2l	equ	0xFD9
  1248                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        132
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160      0     132
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_TMR0_Initialize
    _main->_TMR0_WriteTimer
    _main->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                89    89      0     619
                                              2 COMRAM    89    89      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
                    _TMR0_WriteTimer
            _TMR1_HasOverflowOccured
                    _TMR1_Initialize
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR0_WriteTimer
   _TMR1_HasOverflowOccured
   _TMR1_Initialize
   _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3      12        0.0%
DATA                 0      0      E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Sep 17 16:08:48 2020

 __end_of_TMR0_HasOverflowOccured FD20                                l21 FD6A  
                              l35 FDBA                                l62 FD92  
                              l47 FD32                                l80 FD1E  
                              l74 FCF8                   _timer0ReloadVal 005C  
                             l107 FDE4                               l132 FD40  
                             l135 FD4E                               l129 FD0A  
                             l165 FEC0                               l179 FFC0  
                             l991 FD64                               l993 FD6C  
                             l995 FD6E                               l987 FD50  
                             l997 FD76                               l989 FD5C  
                             l999 FD8C                               u200 FECE  
                             u201 FECA                               u210 FF2A  
                             u211 FF26                               u140 FD4E  
                             u220 FF88                               u141 FD4A  
                             u221 FF84                               u150 FDA2  
                             u230 FF98                               u151 FD9E  
                             u231 FF92                               u160 FD30  
                             u240 FFC0                               u161 FD2A  
                             u241 FFBC                               u170 FD1C  
                             u250 FFE6                               u171 FD16  
                             u251 FFE2                               u260 FFF8  
                             u236 FF9A                               u261 FFF4  
                             u181 FEA2                               u166 FD32  
                             u191 FEB4                               u176 FD1E  
                 _timer1ReloadVal 005E                               prod 000FF3  
                             wreg 000FE8                              l1001 FD8E  
                            l1011 FD34                              l1003 FDBC  
                            l1005 FDC8                              l1021 FDAC  
                            l1013 FD94                              l1007 FDCE  
                            l1031 FCF0                              l1015 FDA2  
                            l1023 FDB2                              l1009 FDE2  
                            l1041 FD06                              l1033 FCF4  
                            l1025 FDB6                              l1017 FDA4  
                            l1035 FD0C                              l1027 FD20  
                            l1019 FDA8                              l1061 FF2A  
                            l1045 FE98                              l1039 FCFA  
                            l1071 FFC2                              l1063 FF2E  
                            l1055 FED2                              l1047 FEBC  
                            l1073 FFC6                              l1065 FF74  
                            l1057 FED6                              l1049 FECE  
                            l1075 FFD2                              l1067 FF88  
                            l1059 FF06                              l1077 FFE6  
                            l1069 FFAC                              l1079 FFE8  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B           _TMR1_HasOverflowOccured FD20  
                            _TMR1 000FCE                              _WPUB 000F61  
                            _main FE98                              fsr1l 000FE1  
                            fsr2l 000FD9                              prodl 000FF3  
                            start 0000                      ___param_bank 000000  
         __end_of_TMR0_Initialize FD94    __size_of_OSCILLATOR_Initialize 001C  
   __end_of_OSCILLATOR_Initialize FD50                             ?_main 0001  
                           _T0CON 000FD5                             _T1CON 000FCD  
                 _TMR0_WriteTimer FCF0                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                    main@duration 0007                             _scale 0060  
                           main@i 005B           __end_of_TMR1_Initialize FD6C  
                           tablat 000FF5                             plusw1 000FE3  
                           plusw2 000FDB                             status 000FD8  
                 _TMR1_WriteTimer FD94                   __initialization FDE6  
                    __end_of_main 0000                            ??_main 0003  
                   __activetblptr 000000         ??_TMR1_HasOverflowOccured 0001  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            _T1GCON 000FCC  
         TMR1_WriteTimer@timerVal 0001                            _OSCCON 000FD3  
                          _PLLRDY 007E97  __size_of_TMR0_HasOverflowOccured 0014  
         __end_of_TMR0_WriteTimer FCFA                  ?_TMR0_Initialize 0001  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8           __end_of_TMR1_WriteTimer FDBC  
                ?_TMR1_Initialize 0001                 _SYSTEM_Initialize FCFA  
                      __accesstop 0060           __end_of__initialization FE0E  
              ?_SYSTEM_Initialize 0001                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                      __pidataBANK0 FE14  
             ??_SYSTEM_Initialize 0003         __end_of_SYSTEM_Initialize FD0C  
                ?_TMR0_WriteTimer 0001                           _OSCCON2 000FD2  
                         _OSCTUNE 000F9B                  ?_TMR1_WriteTimer 0001  
         _TMR0_HasOverflowOccured FD0C                           __Hparam 0000  
                         __Lparam 0000                           __pcinit FDE6  
                         __ramtop 1000                           __ptext0 FE98  
                         __ptext1 FD94                           __ptext2 FD20  
                         __ptext3 FCF0                           __ptext4 FD0C  
                         __ptext5 FCFA                           __ptext6 FD50  
                         __ptext7 FD6C                           __ptext8 FDBC  
                         __ptext9 FD34                         _T0CONbits 000FD5  
                       _T1CONbits 000FCD             _OSCILLATOR_Initialize FD34  
        ??_PIN_MANAGER_Initialize 0001        __size_of_SYSTEM_Initialize 0012  
            end_of_initialization FE0E                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _PORTAbits 000F80  
       ??_TMR0_HasOverflowOccured 0001            ?_OSCILLATOR_Initialize 0001  
        ?_TMR1_HasOverflowOccured 0001               start_initialization FDE6  
        __size_of_TMR0_Initialize 0028   __size_of_PIN_MANAGER_Initialize 002A  
        __size_of_TMR1_Initialize 001C                       __pdataBANK0 0060  
                     __pbssCOMRAM 005C            _PIN_MANAGER_Initialize FDBC  
 __end_of_TMR1_HasOverflowOccured FD34          __size_of_TMR0_WriteTimer 000A  
               ??_TMR0_Initialize 0001                          _LATBbits 000F8A  
        __size_of_TMR1_WriteTimer 0028                          _PIR1bits 000F9E  
                       main@F5783 00BA                         main@F5785 0090  
               ??_TMR1_Initialize 0001                         main@notes 0031  
                     _INTCON2bits 000FF1                         copy_data0 FDFA  
                        __Hrparam 0000                          __Lrparam 0000  
         ??_OSCILLATOR_Initialize 0001                        _T1GCONbits 000FCC  
         TMR0_WriteTimer@timerVal 0001                 ??_TMR0_WriteTimer 0003  
__size_of_TMR1_HasOverflowOccured 0014                     __size_of_main 0168  
               ??_TMR1_WriteTimer 0003          ?_TMR0_HasOverflowOccured 0001  
                      _INTCONbits 000FF2           ?_PIN_MANAGER_Initialize 0001  
                 _TMR0_Initialize FD6C    __end_of_PIN_MANAGER_Initialize FDE6  
                 _TMR1_Initialize FD50  
