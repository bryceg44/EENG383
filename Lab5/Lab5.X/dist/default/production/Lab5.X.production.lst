

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Oct 01 18:08:20 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 09/04/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F26K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    99  0000                     
   100 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   101  0000                     
   102 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   103  0000                     
   104                           	psect	idataBANK0
   105  0010DA                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _deltaBlu
   109  0010DA  FFFF               	dw	65535
   110  0010DC  0000               	dw	0
   111  0010DE  0001               	dw	1
   112                           
   113                           ;initializer for _deltaGre
   114  0010E0  0000               	dw	0
   115  0010E2  0001               	dw	1
   116  0010E4  FFFF               	dw	65535
   117                           
   118                           ;initializer for _deltaRed
   119  0010E6  0001               	dw	1
   120  0010E8  FFFF               	dw	65535
   121  0010EA  0000               	dw	0
   122                           
   123                           ;initializer for _initBlu
   124  0010EC  00FF               	dw	255
   125  0010EE  0000               	dw	0
   126  0010F0  0000               	dw	0
   127                           
   128                           ;initializer for _initGre
   129  0010F2  0000               	dw	0
   130  0010F4  0000               	dw	0
   131  0010F6  00FF               	dw	255
   132                           
   133                           ;initializer for _initRed
   134  0010F8  0000               	dw	0
   135  0010FA  00FF               	dw	255
   136  0010FC  0000               	dw	0
   137                           
   138                           ;initializer for myTMR0ISR@bluVal
   139  0010FE  00FF               	dw	255
   140                           
   141                           ;initializer for _timerInterval
   142  001100  03E8               	dw	1000
   143  0000                     _ANSELA	set	3896
   144  0000                     _ANSELB	set	3897
   145  0000                     _ANSELC	set	3898
   146  0000                     _CCPTMRS0bits	set	3913
   147  0000                     _CCPR3L	set	3934
   148  0000                     _CCPR3H	set	3935
   149  0000                     _PSTR3CON	set	3930
   150  0000                     _PWM3CON	set	3932
   151  0000                     _ECCP3AS	set	3931
   152  0000                     _CCP3CON	set	3933
   153  0000                     _OSCTUNE	set	3995
   154  0000                     _OSCCON2	set	4050
   155  0000                     _OSCCON	set	4051
   156  0000                     _TXREG1	set	4013
   157  0000                     _RCREG1	set	4014
   158  0000                     _RCSTA1bits	set	4011
   159  0000                     _TXSTA1bits	set	4012
   160  0000                     _SPBRGH1	set	4016
   161  0000                     _SPBRG1	set	4015
   162  0000                     _TXSTA1	set	4012
   163  0000                     _RCSTA1	set	4011
   164  0000                     _BAUDCON1	set	4024
   165  0000                     _T0CON	set	4053
   166  0000                     _TMR0L	set	4054
   167  0000                     _TMR0H	set	4055
   168  0000                     _T0CONbits	set	4053
   169  0000                     _T2CONbits	set	4026
   170  0000                     _T2CON	set	4026
   171  0000                     _PIR1bits	set	3998
   172  0000                     _TMR2	set	4028
   173  0000                     _PR2	set	4027
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _WPUB	set	3937
   176  0000                     _TRISC	set	3988
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISA	set	3986
   179  0000                     _LATC	set	3979
   180  0000                     _LATB	set	3978
   181  0000                     _LATA	set	3977
   182  0000                     _INTCONbits	set	4082
   183  0000                     _RCONbits	set	4048
   184  0000                     _CCPR2L	set	3943
   185  0000                     _CCPR2H	set	3944
   186  0000                     _PSTR2CON	set	3939
   187  0000                     _PWM2CON	set	3941
   188  0000                     _ECCP2AS	set	3940
   189  0000                     _CCP2CON	set	3942
   190  0000                     _CCPR1L	set	4030
   191  0000                     _CCPR1H	set	4031
   192  0000                     _PSTR1CON	set	4025
   193  0000                     _PWM1CON	set	4023
   194  0000                     _ECCP1AS	set	4022
   195  0000                     _CCP1CON	set	4029
   196  0000                     _PLLRDY	set	32407
   197                           
   198                           	psect	mediumconst
   199  00FDE4                     __pmediumconst:
   200                           	callstack 0
   201  00FDE4  00                 	db	0
   202  00FDE5                     STR_21:
   203  00FDE5  2B                 	db	43
   204  00FDE6  2F                 	db	47
   205  00FDE7  2D                 	db	45
   206  00FDE8  3A                 	db	58	;':'
   207  00FDE9  20                 	db	32
   208  00FDEA  69                 	db	105	;'i'
   209  00FDEB  6E                 	db	110	;'n'
   210  00FDEC  63                 	db	99	;'c'
   211  00FDED  72                 	db	114	;'r'
   212  00FDEE  65                 	db	101	;'e'
   213  00FDEF  61                 	db	97	;'a'
   214  00FDF0  73                 	db	115	;'s'
   215  00FDF1  65                 	db	101	;'e'
   216  00FDF2  2F                 	db	47
   217  00FDF3  64                 	db	100	;'d'
   218  00FDF4  65                 	db	101	;'e'
   219  00FDF5  63                 	db	99	;'c'
   220  00FDF6  72                 	db	114	;'r'
   221  00FDF7  65                 	db	101	;'e'
   222  00FDF8  61                 	db	97	;'a'
   223  00FDF9  73                 	db	115	;'s'
   224  00FDFA  65                 	db	101	;'e'
   225  00FDFB  20                 	db	32
   226  00FDFC  74                 	db	116	;'t'
   227  00FDFD  68                 	db	104	;'h'
   228  00FDFE  65                 	db	101	;'e'
   229  00FDFF  20                 	db	32
   230  00FE00  63                 	db	99	;'c'
   231  00FE01  6F                 	db	111	;'o'
   232  00FE02  6C                 	db	108	;'l'
   233  00FE03  6F                 	db	111	;'o'
   234  00FE04  72                 	db	114	;'r'
   235  00FE05  20                 	db	32
   236  00FE06  74                 	db	116	;'t'
   237  00FE07  6F                 	db	111	;'o'
   238  00FE08  75                 	db	117	;'u'
   239  00FE09  72                 	db	114	;'r'
   240  00FE0A  20                 	db	32
   241  00FE0B  73                 	db	115	;'s'
   242  00FE0C  70                 	db	112	;'p'
   243  00FE0D  65                 	db	101	;'e'
   244  00FE0E  65                 	db	101	;'e'
   245  00FE0F  64                 	db	100	;'d'
   246  00FE10  2E                 	db	46
   247  00FE11  0D                 	db	13
   248  00FE12  0A                 	db	10
   249  00FE13  00                 	db	0
   250  00FE14                     STR_17:
   251  00FE14  47                 	db	71	;'G'
   252  00FE15  2F                 	db	47
   253  00FE16  67                 	db	103	;'g'
   254  00FE17  3A                 	db	58	;':'
   255  00FE18  20                 	db	32
   256  00FE19  69                 	db	105	;'i'
   257  00FE1A  6E                 	db	110	;'n'
   258  00FE1B  63                 	db	99	;'c'
   259  00FE1C  72                 	db	114	;'r'
   260  00FE1D  65                 	db	101	;'e'
   261  00FE1E  61                 	db	97	;'a'
   262  00FE1F  73                 	db	115	;'s'
   263  00FE20  65                 	db	101	;'e'
   264  00FE21  2F                 	db	47
   265  00FE22  64                 	db	100	;'d'
   266  00FE23  65                 	db	101	;'e'
   267  00FE24  63                 	db	99	;'c'
   268  00FE25  72                 	db	114	;'r'
   269  00FE26  65                 	db	101	;'e'
   270  00FE27  61                 	db	97	;'a'
   271  00FE28  73                 	db	115	;'s'
   272  00FE29  65                 	db	101	;'e'
   273  00FE2A  20                 	db	32
   274  00FE2B  47                 	db	71	;'G'
   275  00FE2C  72                 	db	114	;'r'
   276  00FE2D  65                 	db	101	;'e'
   277  00FE2E  65                 	db	101	;'e'
   278  00FE2F  6E                 	db	110	;'n'
   279  00FE30  20                 	db	32
   280  00FE31  69                 	db	105	;'i'
   281  00FE32  6E                 	db	110	;'n'
   282  00FE33  74                 	db	116	;'t'
   283  00FE34  65                 	db	101	;'e'
   284  00FE35  6E                 	db	110	;'n'
   285  00FE36  73                 	db	115	;'s'
   286  00FE37  69                 	db	105	;'i'
   287  00FE38  74                 	db	116	;'t'
   288  00FE39  79                 	db	121	;'y'
   289  00FE3A  0D                 	db	13
   290  00FE3B  0A                 	db	10
   291  00FE3C  00                 	db	0
   292  00FE3D                     STR_18:
   293  00FE3D  42                 	db	66	;'B'
   294  00FE3E  2F                 	db	47
   295  00FE3F  62                 	db	98	;'b'
   296  00FE40  3A                 	db	58	;':'
   297  00FE41  20                 	db	32
   298  00FE42  69                 	db	105	;'i'
   299  00FE43  6E                 	db	110	;'n'
   300  00FE44  63                 	db	99	;'c'
   301  00FE45  72                 	db	114	;'r'
   302  00FE46  65                 	db	101	;'e'
   303  00FE47  61                 	db	97	;'a'
   304  00FE48  73                 	db	115	;'s'
   305  00FE49  65                 	db	101	;'e'
   306  00FE4A  2F                 	db	47
   307  00FE4B  64                 	db	100	;'d'
   308  00FE4C  65                 	db	101	;'e'
   309  00FE4D  63                 	db	99	;'c'
   310  00FE4E  72                 	db	114	;'r'
   311  00FE4F  65                 	db	101	;'e'
   312  00FE50  61                 	db	97	;'a'
   313  00FE51  73                 	db	115	;'s'
   314  00FE52  65                 	db	101	;'e'
   315  00FE53  20                 	db	32
   316  00FE54  42                 	db	66	;'B'
   317  00FE55  6C                 	db	108	;'l'
   318  00FE56  75                 	db	117	;'u'
   319  00FE57  65                 	db	101	;'e'
   320  00FE58  20                 	db	32
   321  00FE59  69                 	db	105	;'i'
   322  00FE5A  6E                 	db	110	;'n'
   323  00FE5B  74                 	db	116	;'t'
   324  00FE5C  65                 	db	101	;'e'
   325  00FE5D  6E                 	db	110	;'n'
   326  00FE5E  73                 	db	115	;'s'
   327  00FE5F  69                 	db	105	;'i'
   328  00FE60  74                 	db	116	;'t'
   329  00FE61  79                 	db	121	;'y'
   330  00FE62  0D                 	db	13
   331  00FE63  0A                 	db	10
   332  00FE64  00                 	db	0
   333  00FE65                     STR_16:
   334  00FE65  52                 	db	82	;'R'
   335  00FE66  2F                 	db	47
   336  00FE67  72                 	db	114	;'r'
   337  00FE68  3A                 	db	58	;':'
   338  00FE69  20                 	db	32
   339  00FE6A  69                 	db	105	;'i'
   340  00FE6B  6E                 	db	110	;'n'
   341  00FE6C  63                 	db	99	;'c'
   342  00FE6D  72                 	db	114	;'r'
   343  00FE6E  65                 	db	101	;'e'
   344  00FE6F  61                 	db	97	;'a'
   345  00FE70  73                 	db	115	;'s'
   346  00FE71  65                 	db	101	;'e'
   347  00FE72  2F                 	db	47
   348  00FE73  64                 	db	100	;'d'
   349  00FE74  65                 	db	101	;'e'
   350  00FE75  63                 	db	99	;'c'
   351  00FE76  72                 	db	114	;'r'
   352  00FE77  65                 	db	101	;'e'
   353  00FE78  61                 	db	97	;'a'
   354  00FE79  73                 	db	115	;'s'
   355  00FE7A  65                 	db	101	;'e'
   356  00FE7B  20                 	db	32
   357  00FE7C  52                 	db	82	;'R'
   358  00FE7D  65                 	db	101	;'e'
   359  00FE7E  64                 	db	100	;'d'
   360  00FE7F  20                 	db	32
   361  00FE80  69                 	db	105	;'i'
   362  00FE81  6E                 	db	110	;'n'
   363  00FE82  74                 	db	116	;'t'
   364  00FE83  65                 	db	101	;'e'
   365  00FE84  6E                 	db	110	;'n'
   366  00FE85  73                 	db	115	;'s'
   367  00FE86  69                 	db	105	;'i'
   368  00FE87  74                 	db	116	;'t'
   369  00FE88  79                 	db	121	;'y'
   370  00FE89  0D                 	db	13
   371  00FE8A  0A                 	db	10
   372  00FE8B  00                 	db	0
   373  00FE8C                     STR_8:
   374  00FE8C  2D                 	db	45
   375  00FE8D  2D                 	db	45
   376  00FE8E  2D                 	db	45
   377  00FE8F  2D                 	db	45
   378  00FE90  2D                 	db	45
   379  00FE91  2D                 	db	45
   380  00FE92  2D                 	db	45
   381  00FE93  2D                 	db	45
   382  00FE94  2D                 	db	45
   383  00FE95  2D                 	db	45
   384  00FE96  2D                 	db	45
   385  00FE97  2D                 	db	45
   386  00FE98  2D                 	db	45
   387  00FE99  2D                 	db	45
   388  00FE9A  2D                 	db	45
   389  00FE9B  2D                 	db	45
   390  00FE9C  2D                 	db	45
   391  00FE9D  2D                 	db	45
   392  00FE9E  2D                 	db	45
   393  00FE9F  2D                 	db	45
   394  00FEA0  2D                 	db	45
   395  00FEA1  2D                 	db	45
   396  00FEA2  2D                 	db	45
   397  00FEA3  2D                 	db	45
   398  00FEA4  2D                 	db	45
   399  00FEA5  2D                 	db	45
   400  00FEA6  2D                 	db	45
   401  00FEA7  2D                 	db	45
   402  00FEA8  2D                 	db	45
   403  00FEA9  2D                 	db	45
   404  00FEAA  0D                 	db	13
   405  00FEAB  0A                 	db	10
   406  00FEAC  00                 	db	0
   407  00FEAD                     STR_19:
   408  00FEAD  43                 	db	67	;'C'
   409  00FEAE  2F                 	db	47
   410  00FEAF  63                 	db	99	;'c'
   411  00FEB0  3A                 	db	58	;':'
   412  00FEB1  20                 	db	32
   413  00FEB2  73                 	db	115	;'s'
   414  00FEB3  74                 	db	116	;'t'
   415  00FEB4  61                 	db	97	;'a'
   416  00FEB5  72                 	db	114	;'r'
   417  00FEB6  74                 	db	116	;'t'
   418  00FEB7  2F                 	db	47
   419  00FEB8  73                 	db	115	;'s'
   420  00FEB9  74                 	db	116	;'t'
   421  00FEBA  6F                 	db	111	;'o'
   422  00FEBB  70                 	db	112	;'p'
   423  00FEBC  20                 	db	32
   424  00FEBD  63                 	db	99	;'c'
   425  00FEBE  6F                 	db	111	;'o'
   426  00FEBF  6C                 	db	108	;'l'
   427  00FEC0  6F                 	db	111	;'o'
   428  00FEC1  72                 	db	114	;'r'
   429  00FEC2  20                 	db	32
   430  00FEC3  63                 	db	99	;'c'
   431  00FEC4  79                 	db	121	;'y'
   432  00FEC5  63                 	db	99	;'c'
   433  00FEC6  6C                 	db	108	;'l'
   434  00FEC7  65                 	db	101	;'e'
   435  00FEC8  0D                 	db	13
   436  00FEC9  0A                 	db	10
   437  00FECA  00                 	db	0
   438  00FECB                     STR_27:
   439  00FECB  74                 	db	116	;'t'
   440  00FECC  69                 	db	105	;'i'
   441  00FECD  6D                 	db	109	;'m'
   442  00FECE  65                 	db	101	;'e'
   443  00FECF  49                 	db	73	;'I'
   444  00FED0  6E                 	db	110	;'n'
   445  00FED1  74                 	db	116	;'t'
   446  00FED2  65                 	db	101	;'e'
   447  00FED3  72                 	db	114	;'r'
   448  00FED4  76                 	db	118	;'v'
   449  00FED5  61                 	db	97	;'a'
   450  00FED6  6C                 	db	108	;'l'
   451  00FED7  20                 	db	32
   452  00FED8  69                 	db	105	;'i'
   453  00FED9  73                 	db	115	;'s'
   454  00FEDA  20                 	db	32
   455  00FEDB  61                 	db	97	;'a'
   456  00FEDC  74                 	db	116	;'t'
   457  00FEDD  20                 	db	32
   458  00FEDE  69                 	db	105	;'i'
   459  00FEDF  74                 	db	116	;'t'
   460  00FEE0  73                 	db	115	;'s'
   461  00FEE1  20                 	db	32
   462  00FEE2  6D                 	db	109	;'m'
   463  00FEE3  69                 	db	105	;'i'
   464  00FEE4  6E                 	db	110	;'n'
   465  00FEE5  0D                 	db	13
   466  00FEE6  0A                 	db	10
   467  00FEE7  00                 	db	0
   468  00FEE8                     STR_26:
   469  00FEE8  74                 	db	116	;'t'
   470  00FEE9  69                 	db	105	;'i'
   471  00FEEA  6D                 	db	109	;'m'
   472  00FEEB  65                 	db	101	;'e'
   473  00FEEC  49                 	db	73	;'I'
   474  00FEED  6E                 	db	110	;'n'
   475  00FEEE  74                 	db	116	;'t'
   476  00FEEF  65                 	db	101	;'e'
   477  00FEF0  72                 	db	114	;'r'
   478  00FEF1  76                 	db	118	;'v'
   479  00FEF2  61                 	db	97	;'a'
   480  00FEF3  6C                 	db	108	;'l'
   481  00FEF4  20                 	db	32
   482  00FEF5  69                 	db	105	;'i'
   483  00FEF6  73                 	db	115	;'s'
   484  00FEF7  20                 	db	32
   485  00FEF8  61                 	db	97	;'a'
   486  00FEF9  74                 	db	116	;'t'
   487  00FEFA  20                 	db	32
   488  00FEFB  69                 	db	105	;'i'
   489  00FEFC  74                 	db	116	;'t'
   490  00FEFD  73                 	db	115	;'s'
   491  00FEFE  20                 	db	32
   492  00FEFF  6D                 	db	109	;'m'
   493  00FF00  61                 	db	97	;'a'
   494  00FF01  78                 	db	120	;'x'
   495  00FF02  0D                 	db	13
   496  00FF03  0A                 	db	10
   497  00FF04  00                 	db	0
   498  00FF05                     STR_15:
   499  00FF05  7A                 	db	122	;'z'
   500  00FF06  3A                 	db	58	;':'
   501  00FF07  20                 	db	32
   502  00FF08  43                 	db	67	;'C'
   503  00FF09  6C                 	db	108	;'l'
   504  00FF0A  65                 	db	101	;'e'
   505  00FF0B  61                 	db	97	;'a'
   506  00FF0C  72                 	db	114	;'r'
   507  00FF0D  20                 	db	32
   508  00FF0E  74                 	db	116	;'t'
   509  00FF0F  68                 	db	104	;'h'
   510  00FF10  65                 	db	101	;'e'
   511  00FF11  20                 	db	32
   512  00FF12  74                 	db	116	;'t'
   513  00FF13  65                 	db	101	;'e'
   514  00FF14  72                 	db	114	;'r'
   515  00FF15  6D                 	db	109	;'m'
   516  00FF16  69                 	db	105	;'i'
   517  00FF17  6E                 	db	110	;'n'
   518  00FF18  61                 	db	97	;'a'
   519  00FF19  6C                 	db	108	;'l'
   520  00FF1A  0D                 	db	13
   521  00FF1B  0A                 	db	10
   522  00FF1C  00                 	db	0
   523  00FF1D                     STR_3:
   524  00FF1D  43                 	db	67	;'C'
   525  00FF1E  6F                 	db	111	;'o'
   526  00FF1F  6E                 	db	110	;'n'
   527  00FF20  6E                 	db	110	;'n'
   528  00FF21  65                 	db	101	;'e'
   529  00FF22  63                 	db	99	;'c'
   530  00FF23  74                 	db	116	;'t'
   531  00FF24  20                 	db	32
   532  00FF25  6A                 	db	106	;'j'
   533  00FF26  75                 	db	117	;'u'
   534  00FF27  6D                 	db	109	;'m'
   535  00FF28  70                 	db	112	;'p'
   536  00FF29  65                 	db	101	;'e'
   537  00FF2A  72                 	db	114	;'r'
   538  00FF2B  20                 	db	32
   539  00FF2C  77                 	db	119	;'w'
   540  00FF2D  69                 	db	105	;'i'
   541  00FF2E  72                 	db	114	;'r'
   542  00FF2F  65                 	db	101	;'e'
   543  00FF30  73                 	db	115	;'s'
   544  00FF31  0D                 	db	13
   545  00FF32  0A                 	db	10
   546  00FF33  00                 	db	0
   547  00FF34                     STR_14:
   548  00FF34  5A                 	db	90	;'Z'
   549  00FF35  3A                 	db	58	;':'
   550  00FF36  20                 	db	32
   551  00FF37  52                 	db	82	;'R'
   552  00FF38  65                 	db	101	;'e'
   553  00FF39  73                 	db	115	;'s'
   554  00FF3A  65                 	db	101	;'e'
   555  00FF3B  74                 	db	116	;'t'
   556  00FF3C  20                 	db	32
   557  00FF3D  70                 	db	112	;'p'
   558  00FF3E  72                 	db	114	;'r'
   559  00FF3F  6F                 	db	111	;'o'
   560  00FF40  63                 	db	99	;'c'
   561  00FF41  65                 	db	101	;'e'
   562  00FF42  73                 	db	115	;'s'
   563  00FF43  73                 	db	115	;'s'
   564  00FF44  6F                 	db	111	;'o'
   565  00FF45  72                 	db	114	;'r'
   566  00FF46  0D                 	db	13
   567  00FF47  0A                 	db	10
   568  00FF48  00                 	db	0
   569  00FF49                     STR_5:
   570  00FF49  52                 	db	82	;'R'
   571  00FF4A  43                 	db	67	;'C'
   572  00FF4B  31                 	db	49	;'1'
   573  00FF4C  20                 	db	32
   574  00FF4D  3C                 	db	60	;'<'
   575  00FF4E  2D                 	db	45
   576  00FF4F  3E                 	db	62	;'>'
   577  00FF50  20                 	db	32
   578  00FF51  47                 	db	71	;'G'
   579  00FF52  72                 	db	114	;'r'
   580  00FF53  65                 	db	101	;'e'
   581  00FF54  65                 	db	101	;'e'
   582  00FF55  6E                 	db	110	;'n'
   583  00FF56  20                 	db	32
   584  00FF57  4C                 	db	76	;'L'
   585  00FF58  45                 	db	69	;'E'
   586  00FF59  44                 	db	68	;'D'
   587  00FF5A  0D                 	db	13
   588  00FF5B  0A                 	db	10
   589  00FF5C  00                 	db	0
   590  00FF5D                     STR_6:
   591  00FF5D  52                 	db	82	;'R'
   592  00FF5E  42                 	db	66	;'B'
   593  00FF5F  35                 	db	53	;'5'
   594  00FF60  20                 	db	32
   595  00FF61  3C                 	db	60	;'<'
   596  00FF62  2D                 	db	45
   597  00FF63  3E                 	db	62	;'>'
   598  00FF64  20                 	db	32
   599  00FF65  42                 	db	66	;'B'
   600  00FF66  6C                 	db	108	;'l'
   601  00FF67  75                 	db	117	;'u'
   602  00FF68  65                 	db	101	;'e'
   603  00FF69  20                 	db	32
   604  00FF6A  4C                 	db	76	;'L'
   605  00FF6B  45                 	db	69	;'E'
   606  00FF6C  44                 	db	68	;'D'
   607  00FF6D  0D                 	db	13
   608  00FF6E  0A                 	db	10
   609  00FF6F  00                 	db	0
   610  00FF70                     STR_4:
   611  00FF70  52                 	db	82	;'R'
   612  00FF71  43                 	db	67	;'C'
   613  00FF72  32                 	db	50	;'2'
   614  00FF73  20                 	db	32
   615  00FF74  3C                 	db	60	;'<'
   616  00FF75  2D                 	db	45
   617  00FF76  3E                 	db	62	;'>'
   618  00FF77  20                 	db	32
   619  00FF78  52                 	db	82	;'R'
   620  00FF79  65                 	db	101	;'e'
   621  00FF7A  64                 	db	100	;'d'
   622  00FF7B  20                 	db	32
   623  00FF7C  4C                 	db	76	;'L'
   624  00FF7D  45                 	db	69	;'E'
   625  00FF7E  44                 	db	68	;'D'
   626  00FF7F  0D                 	db	13
   627  00FF80  0A                 	db	10
   628  00FF81  00                 	db	0
   629  00FF82                     STR_20:
   630  00FF82  61                 	db	97	;'a'
   631  00FF83  3A                 	db	58	;':'
   632  00FF84  20                 	db	32
   633  00FF85  41                 	db	65	;'A'
   634  00FF86  6C                 	db	108	;'l'
   635  00FF87  6C                 	db	108	;'l'
   636  00FF88  20                 	db	32
   637  00FF89  4C                 	db	76	;'L'
   638  00FF8A  45                 	db	69	;'E'
   639  00FF8B  44                 	db	68	;'D'
   640  00FF8C  73                 	db	115	;'s'
   641  00FF8D  20                 	db	32
   642  00FF8E  6F                 	db	111	;'o'
   643  00FF8F  66                 	db	102	;'f'
   644  00FF90  66                 	db	102	;'f'
   645  00FF91  0D                 	db	13
   646  00FF92  0A                 	db	10
   647  00FF93  00                 	db	0
   648  00FF94                     STR_28:
   649  00FF94  55                 	db	85	;'U'
   650  00FF95  6E                 	db	110	;'n'
   651  00FF96  6B                 	db	107	;'k'
   652  00FF97  6E                 	db	110	;'n'
   653  00FF98  6F                 	db	111	;'o'
   654  00FF99  77                 	db	119	;'w'
   655  00FF9A  6E                 	db	110	;'n'
   656  00FF9B  20                 	db	32
   657  00FF9C  6B                 	db	107	;'k'
   658  00FF9D  65                 	db	101	;'e'
   659  00FF9E  79                 	db	121	;'y'
   660  00FF9F  20                 	db	32
   661  00FFA0  25                 	db	37
   662  00FFA1  63                 	db	99	;'c'
   663  00FFA2  0D                 	db	13
   664  00FFA3  0A                 	db	10
   665  00FFA4  00                 	db	0
   666  00FFA5                     STR_13:
   667  00FFA5  3F                 	db	63	;'?'
   668  00FFA6  3A                 	db	58	;':'
   669  00FFA7  20                 	db	32
   670  00FFA8  48                 	db	72	;'H'
   671  00FFA9  65                 	db	101	;'e'
   672  00FFAA  6C                 	db	108	;'l'
   673  00FFAB  70                 	db	112	;'p'
   674  00FFAC  20                 	db	32
   675  00FFAD  6D                 	db	109	;'m'
   676  00FFAE  65                 	db	101	;'e'
   677  00FFAF  6E                 	db	110	;'n'
   678  00FFB0  75                 	db	117	;'u'
   679  00FFB1  0D                 	db	13
   680  00FFB2  0A                 	db	10
   681  00FFB3  00                 	db	0
   682  00FFB4                     STR_9:
   683  00FFB4  09                 	db	9
   684  00FFB5  52                 	db	82	;'R'
   685  00FFB6  65                 	db	101	;'e'
   686  00FFB7  64                 	db	100	;'d'
   687  00FFB8  3A                 	db	58	;':'
   688  00FFB9  20                 	db	32
   689  00FFBA  20                 	db	32
   690  00FFBB  20                 	db	32
   691  00FFBC  30                 	db	48	;'0'
   692  00FFBD  78                 	db	120	;'x'
   693  00FFBE  25                 	db	37
   694  00FFBF  78                 	db	120	;'x'
   695  00FFC0  0D                 	db	13
   696  00FFC1  0A                 	db	10
   697  00FFC2  00                 	db	0
   698  00FFC3                     STR_11:
   699  00FFC3  09                 	db	9
   700  00FFC4  42                 	db	66	;'B'
   701  00FFC5  6C                 	db	108	;'l'
   702  00FFC6  75                 	db	117	;'u'
   703  00FFC7  65                 	db	101	;'e'
   704  00FFC8  3A                 	db	58	;':'
   705  00FFC9  20                 	db	32
   706  00FFCA  20                 	db	32
   707  00FFCB  30                 	db	48	;'0'
   708  00FFCC  78                 	db	120	;'x'
   709  00FFCD  25                 	db	37
   710  00FFCE  78                 	db	120	;'x'
   711  00FFCF  0D                 	db	13
   712  00FFD0  0A                 	db	10
   713  00FFD1  00                 	db	0
   714  00FFD2                     STR_10:
   715  00FFD2  09                 	db	9
   716  00FFD3  47                 	db	71	;'G'
   717  00FFD4  72                 	db	114	;'r'
   718  00FFD5  65                 	db	101	;'e'
   719  00FFD6  65                 	db	101	;'e'
   720  00FFD7  6E                 	db	110	;'n'
   721  00FFD8  3A                 	db	58	;':'
   722  00FFD9  20                 	db	32
   723  00FFDA  30                 	db	48	;'0'
   724  00FFDB  78                 	db	120	;'x'
   725  00FFDC  25                 	db	37
   726  00FFDD  78                 	db	120	;'x'
   727  00FFDE  0D                 	db	13
   728  00FFDF  0A                 	db	10
   729  00FFE0  00                 	db	0
   730  00FFE1                     STR_2:
   731  00FFE1  43                 	db	67	;'C'
   732  00FFE2  6F                 	db	111	;'o'
   733  00FFE3  6C                 	db	108	;'l'
   734  00FFE4  6F                 	db	111	;'o'
   735  00FFE5  72                 	db	114	;'r'
   736  00FFE6  20                 	db	32
   737  00FFE7  43                 	db	67	;'C'
   738  00FFE8  75                 	db	117	;'u'
   739  00FFE9  62                 	db	98	;'b'
   740  00FFEA  65                 	db	101	;'e'
   741  00FFEB  0D                 	db	13
   742  00FFEC  0A                 	db	10
   743  00FFED  00                 	db	0
   744  00FFEE                     STR_1:
   745  00FFEE  4C                 	db	76	;'L'
   746  00FFEF  61                 	db	97	;'a'
   747  00FFF0  62                 	db	98	;'b'
   748  00FFF1  20                 	db	32
   749  00FFF2  30                 	db	48	;'0'
   750  00FFF3  35                 	db	53	;'5'
   751  00FFF4  0D                 	db	13
   752  00FFF5  0A                 	db	10
   753  00FFF6  00                 	db	0
   754  00FFF7                     STR_25:
   755  00FFF7  53                 	db	83	;'S'
   756  00FFF8  74                 	db	116	;'t'
   757  00FFF9  61                 	db	97	;'a'
   758  00FFFA  72                 	db	114	;'r'
   759  00FFFB  74                 	db	116	;'t'
   760  00FFFC  0D                 	db	13
   761  00FFFD  0A                 	db	10
   762  00FFFE  00                 	db	0
   763  00FFFF  00                 	db	0	; dummy byte at the end
   764  0000                     
   765                           ; #config settings
   766                           
   767                           	psect	cinit
   768  000DBC                     __pcinit:
   769                           	callstack 0
   770  000DBC                     start_initialization:
   771                           	callstack 0
   772  000DBC                     __initialization:
   773                           	callstack 0
   774                           
   775                           ; Initialize objects allocated to BANK0 (40 bytes)
   776                           ; load TBLPTR registers with __pidataBANK0
   777  000DBC  0EDA               	movlw	low __pidataBANK0
   778  000DBE  6EF6               	movwf	tblptrl,c
   779  000DC0  0E10               	movlw	high __pidataBANK0
   780  000DC2  6EF7               	movwf	tblptrh,c
   781  000DC4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   782  000DC6  6EF8               	movwf	tblptru,c
   783  000DC8  EE00  F0C7         	lfsr	0,__pdataBANK0
   784  000DCC  EE10 F028          	lfsr	1,40
   785  000DD0                     copy_data0:
   786  000DD0  0009               	tblrd		*+
   787  000DD2  CFF5 FFEE          	movff	tablat,postinc0
   788  000DD6  50E5               	movf	postdec1,w,c
   789  000DD8  50E1               	movf	fsr1l,w,c
   790  000DDA  E1FA               	bnz	copy_data0
   791                           
   792                           ; Clear objects allocated to BANK0 (47 bytes)
   793  000DDC  EE00  F098         	lfsr	0,__pbssBANK0
   794  000DE0  0E2F               	movlw	47
   795  000DE2                     clear_0:
   796  000DE2  6AEE               	clrf	postinc0,c
   797  000DE4  06E8               	decf	wreg,f,c
   798  000DE6  E1FD               	bnz	clear_0
   799                           
   800                           ; Clear objects allocated to COMRAM (11 bytes)
   801  000DE8  EE00  F047         	lfsr	0,__pbssCOMRAM
   802  000DEC  0E0B               	movlw	11
   803  000DEE                     clear_1:
   804  000DEE  6AEE               	clrf	postinc0,c
   805  000DF0  06E8               	decf	wreg,f,c
   806  000DF2  E1FD               	bnz	clear_1
   807  000DF4                     end_of_initialization:
   808                           	callstack 0
   809  000DF4                     __end_of__initialization:
   810                           	callstack 0
   811  000DF4  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   812  000DF6  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   813  000DF8  0100               	movlb	0
   814  000DFA  EF31  F000         	goto	_main	;jump to C main() function
   815                           
   816                           	psect	bssCOMRAM
   817  000047                     __pbssCOMRAM:
   818                           	callstack 0
   819  000047                     _width:
   820                           	callstack 0
   821  000047                     	ds	2
   822  000049                     _prec:
   823                           	callstack 0
   824  000049                     	ds	2
   825  00004B                     _flags:
   826                           	callstack 0
   827  00004B                     	ds	2
   828  00004D                     _timer0ReloadVal:
   829                           	callstack 0
   830  00004D                     	ds	2
   831  00004F                     myTMR0ISR@edge:
   832                           	callstack 0
   833  00004F                     	ds	1
   834  000050                     myTMR0ISR@step:
   835                           	callstack 0
   836  000050                     	ds	1
   837  000051                     _eusart1RxLastError:
   838                           	callstack 0
   839  000051                     	ds	1
   840                           
   841                           	psect	bssBANK0
   842  000098                     __pbssBANK0:
   843                           	callstack 0
   844  000098                     _nout:
   845                           	callstack 0
   846  000098                     	ds	2
   847  00009A                     myTMR0ISR@greVal:
   848                           	callstack 0
   849  00009A                     	ds	2
   850  00009C                     myTMR0ISR@redVal:
   851                           	callstack 0
   852  00009C                     	ds	2
   853  00009E                     _EUSART1_ErrorHandler:
   854                           	callstack 0
   855  00009E                     	ds	2
   856  0000A0                     _EUSART1_OverrunErrorHandler:
   857                           	callstack 0
   858  0000A0                     	ds	2
   859  0000A2                     _EUSART1_FramingErrorHandler:
   860                           	callstack 0
   861  0000A2                     	ds	2
   862  0000A4                     _TMR0_InterruptHandler:
   863                           	callstack 0
   864  0000A4                     	ds	2
   865  0000A6                     _colorTour:
   866                           	callstack 0
   867  0000A6                     	ds	1
   868  0000A7                     _dbuf:
   869                           	callstack 0
   870  0000A7                     	ds	32
   871                           
   872                           	psect	dataBANK0
   873  0000C7                     __pdataBANK0:
   874                           	callstack 0
   875  0000C7                     _deltaBlu:
   876                           	callstack 0
   877  0000C7                     	ds	6
   878  0000CD                     _deltaGre:
   879                           	callstack 0
   880  0000CD                     	ds	6
   881  0000D3                     _deltaRed:
   882                           	callstack 0
   883  0000D3                     	ds	6
   884  0000D9                     _initBlu:
   885                           	callstack 0
   886  0000D9                     	ds	6
   887  0000DF                     _initGre:
   888                           	callstack 0
   889  0000DF                     	ds	6
   890  0000E5                     _initRed:
   891                           	callstack 0
   892  0000E5                     	ds	6
   893  0000EB                     myTMR0ISR@bluVal:
   894                           	callstack 0
   895  0000EB                     	ds	2
   896  0000ED                     _timerInterval:
   897                           	callstack 0
   898  0000ED                     	ds	2
   899                           
   900                           	psect	cstackBANK0
   901  000060                     __pcstackBANK0:
   902                           	callstack 0
   903  000060                     _xtoa$1433:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x0
   907  000060                     	ds	2
   908  000062                     _xtoa$1434:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2
   912  000062                     	ds	2
   913  000064                     xtoa@p:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x4
   917  000064                     	ds	2
   918  000066                     xtoa@w:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x6
   922  000066                     	ds	2
   923  000068                     xtoa@n:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x8
   927  000068                     	ds	8
   928  000070                     xtoa@i:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x10
   932  000070                     	ds	2
   933  000072                     xtoa@c:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x12
   937  000072                     	ds	2
   938  000074                     ?_vfpfcnvrt:
   939                           	callstack 0
   940  000074                     vfpfcnvrt@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x14
   944  000074                     	ds	2
   945  000076                     vfpfcnvrt@fmt:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x16
   949  000076                     	ds	2
   950  000078                     vfpfcnvrt@ap:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x18
   954  000078                     	ds	2
   955  00007A                     vfpfcnvrt@llu:
   956                           	callstack 0
   957                           
   958                           ; 8 bytes @ 0x1A
   959  00007A                     	ds	8
   960  000082                     vfpfcnvrt@c:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x22
   964  000082                     	ds	1
   965  000083                     ?_vfprintf:
   966                           	callstack 0
   967  000083                     vfprintf@fp:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x23
   971  000083                     	ds	2
   972  000085                     vfprintf@fmt:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x25
   976  000085                     	ds	2
   977  000087                     vfprintf@ap:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x27
   981  000087                     	ds	2
   982  000089                     ?_printf:
   983                           	callstack 0
   984  000089                     printf@fmt:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x29
   988  000089                     	ds	4
   989  00008D                     ??_main:
   990                           
   991                           ; 1 bytes @ 0x2D
   992  00008D                     	ds	2
   993  00008F                     main@cmd:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x2F
   997  00008F                     	ds	1
   998  000090                     main@i:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x30
  1002  000090                     	ds	1
  1003  000091                     main@i_898:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x31
  1007  000091                     	ds	1
  1008  000092                     main@dutyRed:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x32
  1012  000092                     	ds	2
  1013  000094                     main@dutyGre:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x34
  1017  000094                     	ds	2
  1018  000096                     main@dutyBlu:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x36
  1022  000096                     	ds	2
  1023                           
  1024                           	psect	cstackCOMRAM
  1025  000001                     __pcstackCOMRAM:
  1026                           	callstack 0
  1027  000001                     TMR0_WriteTimer@timerVal:
  1028                           	callstack 0
  1029  000001                     i2EPWM3_LoadDutyValue@dutyValue:
  1030                           	callstack 0
  1031  000001                     i2EPWM1_LoadDutyValue@dutyValue:
  1032                           	callstack 0
  1033  000001                     i2EPWM2_LoadDutyValue@dutyValue:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x0
  1037  000001                     	ds	2
  1038  000003                     ??i2_EPWM3_LoadDutyValue:
  1039  000003                     ??i2_EPWM1_LoadDutyValue:
  1040  000003                     ??i2_EPWM2_LoadDutyValue:
  1041                           
  1042                           ; 1 bytes @ 0x2
  1043  000003                     	ds	2
  1044  000005                     ??_myTMR0ISR:
  1045                           
  1046                           ; 1 bytes @ 0x4
  1047  000005                     	ds	2
  1048  000007                     ??_INTERRUPT_InterruptManager:
  1049                           
  1050                           ; 1 bytes @ 0x6
  1051  000007                     	ds	6
  1052  00000D                     ?_strlen:
  1053                           	callstack 0
  1054  00000D                     ?_isupper:
  1055                           	callstack 0
  1056  00000D                     ?_isalpha:
  1057                           	callstack 0
  1058  00000D                     ?_islower:
  1059                           	callstack 0
  1060  00000D                     EUSART1_Write@txData:
  1061                           	callstack 0
  1062  00000D                     EPWM3_LoadDutyValue@dutyValue:
  1063                           	callstack 0
  1064  00000D                     EPWM1_LoadDutyValue@dutyValue:
  1065                           	callstack 0
  1066  00000D                     EPWM2_LoadDutyValue@dutyValue:
  1067                           	callstack 0
  1068  00000D                     TMR0_SetInterruptHandler@InterruptHandler:
  1069                           	callstack 0
  1070  00000D                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1071                           	callstack 0
  1072  00000D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1073                           	callstack 0
  1074  00000D                     EUSART1_SetErrorHandler@interruptHandler:
  1075                           	callstack 0
  1076  00000D                     isalpha@c:
  1077                           	callstack 0
  1078  00000D                     isupper@c:
  1079                           	callstack 0
  1080  00000D                     strlen@s:
  1081                           	callstack 0
  1082  00000D                     islower@c:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xC
  1086  00000D                     	ds	1
  1087  00000E                     putch@txData:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0xD
  1091  00000E                     	ds	1
  1092  00000F                     ??_isupper:
  1093  00000F                     ??_isalpha:
  1094  00000F                     ??_islower:
  1095  00000F                     ??_EPWM3_LoadDutyValue:
  1096  00000F                     ??_EPWM1_LoadDutyValue:
  1097  00000F                     ??_EPWM2_LoadDutyValue:
  1098  00000F                     ??_TMR0_Initialize:
  1099  00000F                     fputc@c:
  1100                           	callstack 0
  1101  00000F                     strlen@a:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xE
  1105  00000F                     	ds	2
  1106  000011                     fputc@fp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x10
  1110  000011                     	ds	2
  1111  000013                     ??_fputc:
  1112  000013                     ?_toupper:
  1113                           	callstack 0
  1114  000013                     toupper@c:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x12
  1118  000013                     	ds	2
  1119  000015                     ??_toupper:
  1120                           
  1121                           ; 1 bytes @ 0x14
  1122  000015                     	ds	3
  1123  000018                     fputs@s:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x17
  1127  000018                     	ds	1
  1128  000019                     _toupper$1510:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x18
  1132  000019                     	ds	1
  1133  00001A                     fputs@fp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x19
  1137  00001A                     	ds	2
  1138  00001C                     fputs@c:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x1B
  1142  00001C                     	ds	1
  1143  00001D                     fputs@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x1C
  1147  00001D                     	ds	2
  1148  00001F                     ?_pad:
  1149                           	callstack 0
  1150  00001F                     pad@fp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1E
  1154  00001F                     	ds	2
  1155  000021                     pad@buf:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x20
  1159  000021                     	ds	2
  1160  000023                     pad@p:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x22
  1164  000023                     	ds	2
  1165  000025                     ??_pad:
  1166                           
  1167                           ; 1 bytes @ 0x24
  1168  000025                     	ds	1
  1169  000026                     pad@i:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x25
  1173  000026                     	ds	2
  1174  000028                     pad@w:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x27
  1178  000028                     	ds	2
  1179  00002A                     ?_ctoa:
  1180                           	callstack 0
  1181  00002A                     ?_xtoa:
  1182                           	callstack 0
  1183  00002A                     ctoa@fp:
  1184                           	callstack 0
  1185  00002A                     xtoa@fp:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x29
  1189  00002A                     	ds	2
  1190  00002C                     ctoa@c:
  1191                           	callstack 0
  1192  00002C                     xtoa@d:
  1193                           	callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x2B
  1196  00002C                     	ds	1
  1197  00002D                     ctoa@w:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x2C
  1201  00002D                     	ds	7
  1202  000034                     xtoa@x:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x33
  1206  000034                     	ds	1
  1207  000035                     ??_xtoa:
  1208                           
  1209                           ; 1 bytes @ 0x34
  1210  000035                     	ds	8
  1211  00003D                     ??_vfpfcnvrt:
  1212                           
  1213                           ; 1 bytes @ 0x3C
  1214  00003D                     	ds	4
  1215  000041                     vfprintf@cfmt:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x40
  1219  000041                     	ds	2
  1220  000043                     
  1221                           ; 1 bytes @ 0x42
  1222  000043                     	ds	2
  1223  000045                     printf@ap:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x44
  1227  000045                     	ds	2
  1228                           
  1229 ;;
  1230 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1231 ;;
  1232 ;; *************** function _main *****************
  1233 ;; Defined at:
  1234 ;;		line 55 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  i               1   49[BANK0 ] unsigned char 
  1239 ;;  i               1   48[BANK0 ] unsigned char 
  1240 ;;  dutyBlu         2   54[BANK0 ] unsigned short 
  1241 ;;  dutyGre         2   52[BANK0 ] unsigned short 
  1242 ;;  dutyRed         2   50[BANK0 ] unsigned short 
  1243 ;;  cmd             1   47[BANK0 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:       11 bytes
  1258 ;; Hardware stack levels required when called:   13
  1259 ;; This function calls:
  1260 ;;		_EPWM1_LoadDutyValue
  1261 ;;		_EPWM2_LoadDutyValue
  1262 ;;		_EPWM3_LoadDutyValue
  1263 ;;		_EUSART1_Read
  1264 ;;		_EUSART1_is_rx_ready
  1265 ;;		_SYSTEM_Initialize
  1266 ;;		_TMR0_SetInterruptHandler
  1267 ;;		_printf
  1268 ;; This function is called by:
  1269 ;;		Startup code after reset
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text0
  1274  000062                     __ptext0:
  1275                           	callstack 0
  1276  000062                     _main:
  1277                           	callstack 18
  1278  000062                     
  1279                           ;main.c: 57:  char cmd;;main.c: 59:  uint16_t dutyRed = 256;
  1280  000062  0E01               	movlw	1
  1281  000064  0100               	movlb	0	; () banked
  1282  000066  6F93               	movwf	(main@dutyRed+1)& (0+255),b
  1283  000068  0E00               	movlw	0
  1284  00006A  6F92               	movwf	main@dutyRed& (0+255),b
  1285                           
  1286                           ;main.c: 60:  uint16_t dutyGre = 256;
  1287  00006C  0E01               	movlw	1
  1288  00006E  6F95               	movwf	(main@dutyGre+1)& (0+255),b
  1289  000070  0E00               	movlw	0
  1290  000072  6F94               	movwf	main@dutyGre& (0+255),b
  1291                           
  1292                           ;main.c: 61:  uint16_t dutyBlu = 256;
  1293  000074  0E01               	movlw	1
  1294  000076  6F97               	movwf	(main@dutyBlu+1)& (0+255),b
  1295  000078  0E00               	movlw	0
  1296  00007A  6F96               	movwf	main@dutyBlu& (0+255),b
  1297  00007C                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 63:  SYSTEM_Initialize();
  1300  00007C  ECA9  F008         	call	_SYSTEM_Initialize	;wreg free
  1301  000080                     
  1302                           ;main.c: 64:  TMR0_SetInterruptHandler(myTMR0ISR);
  1303  000080  0E18               	movlw	low _myTMR0ISR
  1304  000082  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1305  000084  0E0A               	movlw	high _myTMR0ISR
  1306  000086  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1307  000088  EC1C  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  1308  00008C                     
  1309                           ;main.c: 65:  (INTCONbits.GIE = 1);
  1310  00008C  8EF2               	bsf	242,7,c	;volatile
  1311  00008E                     
  1312                           ;main.c: 66:  (INTCONbits.PEIE = 1);
  1313  00008E  8CF2               	bsf	242,6,c	;volatile
  1314  000090                     
  1315                           ;main.c: 68:  CCPR1L = CCPR2L = CCPR3L = 0xFF;
  1316  000090  010F               	movlb	15	; () banked
  1317  000092  695E               	setf	94,b	;volatile
  1318  000094  6867               	setf	103,c	;volatile
  1319  000096  68BE               	setf	190,c	;volatile
  1320  000098                     
  1321                           ; BSR set to: 15
  1322                           ;main.c: 70:  EPWM1_LoadDutyValue(dutyRed);
  1323  000098  0E01               	movlw	1
  1324  00009A  6E0E               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1325  00009C  0E00               	movlw	0
  1326  00009E  6E0D               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1327  0000A0  EC0F  F008         	call	_EPWM1_LoadDutyValue	;wreg free
  1328  0000A4                     
  1329                           ;main.c: 71:  EPWM2_LoadDutyValue(dutyGre);
  1330  0000A4  0E01               	movlw	1
  1331  0000A6  6E0E               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1332  0000A8  0E00               	movlw	0
  1333  0000AA  6E0D               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1334  0000AC  ECF7  F007         	call	_EPWM2_LoadDutyValue	;wreg free
  1335  0000B0                     
  1336                           ;main.c: 72:  EPWM3_LoadDutyValue(dutyBlu);
  1337  0000B0  0E01               	movlw	1
  1338  0000B2  6E0E               	movwf	(EPWM3_LoadDutyValue@dutyValue+1)^0,c
  1339  0000B4  0E00               	movlw	0
  1340  0000B6  6E0D               	movwf	EPWM3_LoadDutyValue@dutyValue^0,c
  1341  0000B8  ECC5  F007         	call	_EPWM3_LoadDutyValue	;wreg free
  1342  0000BC                     
  1343                           ;main.c: 74:  printf("Lab 05\r\n");
  1344  0000BC  0EEE               	movlw	low STR_1
  1345  0000BE  0100               	movlb	0	; () banked
  1346  0000C0  6F89               	movwf	printf@fmt& (0+255),b
  1347  0000C2  0EFF               	movlw	high STR_1
  1348  0000C4  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1349  0000C6  EC81  F008         	call	_printf	;wreg free
  1350  0000CA                     
  1351                           ;main.c: 75:  printf("Color Cube\r\n");
  1352  0000CA  0EE1               	movlw	low STR_2
  1353  0000CC  0100               	movlb	0	; () banked
  1354  0000CE  6F89               	movwf	printf@fmt& (0+255),b
  1355  0000D0  0EFF               	movlw	high STR_2
  1356  0000D2  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1357  0000D4  EC81  F008         	call	_printf	;wreg free
  1358  0000D8                     
  1359                           ;main.c: 76:  printf("Connect jumper wires\r\n");
  1360  0000D8  0E1D               	movlw	low STR_3
  1361  0000DA  0100               	movlb	0	; () banked
  1362  0000DC  6F89               	movwf	printf@fmt& (0+255),b
  1363  0000DE  0EFF               	movlw	high STR_3
  1364  0000E0  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1365  0000E2  EC81  F008         	call	_printf	;wreg free
  1366  0000E6                     
  1367                           ;main.c: 77:  printf("RC2 <-> Red LED\r\n");
  1368  0000E6  0E70               	movlw	low STR_4
  1369  0000E8  0100               	movlb	0	; () banked
  1370  0000EA  6F89               	movwf	printf@fmt& (0+255),b
  1371  0000EC  0EFF               	movlw	high STR_4
  1372  0000EE  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1373  0000F0  EC81  F008         	call	_printf	;wreg free
  1374  0000F4                     
  1375                           ;main.c: 78:  printf("RC1 <-> Green LED\r\n");
  1376  0000F4  0E49               	movlw	low STR_5
  1377  0000F6  0100               	movlb	0	; () banked
  1378  0000F8  6F89               	movwf	printf@fmt& (0+255),b
  1379  0000FA  0EFF               	movlw	high STR_5
  1380  0000FC  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1381  0000FE  EC81  F008         	call	_printf	;wreg free
  1382  000102                     
  1383                           ;main.c: 79:  printf("RB5 <-> Blue LED\r\n");
  1384  000102  0E5D               	movlw	low STR_6
  1385  000104  0100               	movlb	0	; () banked
  1386  000106  6F89               	movwf	printf@fmt& (0+255),b
  1387  000108  0EFF               	movlw	high STR_6
  1388  00010A  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1389  00010C  EC81  F008         	call	_printf	;wreg free
  1390  000110                     
  1391                           ;main.c: 80:  printf("\r\n");
  1392  000110  0EAA               	movlw	low (STR_8+30)
  1393  000112  0100               	movlb	0	; () banked
  1394  000114  6F89               	movwf	printf@fmt& (0+255),b
  1395  000116  0EFE               	movlw	high (STR_8+30)
  1396  000118  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1397  00011A  EC81  F008         	call	_printf	;wreg free
  1398  00011E                     l2639:
  1399                           
  1400                           ;main.c: 83:      if ((EUSART1_is_rx_ready())) {
  1401  00011E  EC05  F009         	call	_EUSART1_is_rx_ready	;wreg free
  1402  000122  0900               	iorlw	0
  1403  000124  B4D8               	btfsc	status,2,c
  1404  000126  EF97  F000         	goto	u1831
  1405  00012A  EF99  F000         	goto	u1830
  1406  00012E                     u1831:
  1407  00012E  EF8F  F000         	goto	l2639
  1408  000132                     u1830:
  1409  000132                     
  1410                           ;main.c: 84:          cmd = EUSART1_Read();
  1411  000132  EC95  F008         	call	_EUSART1_Read	;wreg free
  1412  000136  0100               	movlb	0	; () banked
  1413  000138  6F8F               	movwf	main@cmd& (0+255),b
  1414                           
  1415                           ;main.c: 85:          switch (cmd) {
  1416  00013A  EF2D  F002         	goto	l2739
  1417  00013E                     l2643:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 87:                  printf("------------------------------\r\n");
  1421  00013E  0E8C               	movlw	low STR_8
  1422  000140  6F89               	movwf	printf@fmt& (0+255),b
  1423  000142  0EFE               	movlw	high STR_8
  1424  000144  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1425  000146  EC81  F008         	call	_printf	;wreg free
  1426                           
  1427                           ;main.c: 88:                  printf("	Red:   0x%x\r\n", CCPR1L);
  1428  00014A  0EB4               	movlw	low STR_9
  1429  00014C  0100               	movlb	0	; () banked
  1430  00014E  6F89               	movwf	printf@fmt& (0+255),b
  1431  000150  0EFF               	movlw	high STR_9
  1432  000152  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1433  000154  CFBE F08B          	movff	4030,?_printf+2	;volatile
  1434  000158  6B8C               	clrf	(?_printf+3)& (0+255),b
  1435  00015A  EC81  F008         	call	_printf	;wreg free
  1436                           
  1437                           ;main.c: 89:                  printf("	Green: 0x%x\r\n", CCPR2L);
  1438  00015E  0ED2               	movlw	low STR_10
  1439  000160  0100               	movlb	0	; () banked
  1440  000162  6F89               	movwf	printf@fmt& (0+255),b
  1441  000164  0EFF               	movlw	high STR_10
  1442  000166  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1443  000168  CF67 F08B          	movff	3943,?_printf+2	;volatile
  1444  00016C  6B8C               	clrf	(?_printf+3)& (0+255),b
  1445  00016E  EC81  F008         	call	_printf	;wreg free
  1446                           
  1447                           ;main.c: 90:                  printf("	Blue:  0x%x\r\n", CCPR3L);
  1448  000172  0EC3               	movlw	low STR_11
  1449  000174  0100               	movlb	0	; () banked
  1450  000176  6F89               	movwf	printf@fmt& (0+255),b
  1451  000178  0EFF               	movlw	high STR_11
  1452  00017A  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1453  00017C  CF5E F08B          	movff	3934,?_printf+2	;volatile
  1454  000180  6B8C               	clrf	(?_printf+3)& (0+255),b
  1455  000182  EC81  F008         	call	_printf	;wreg free
  1456                           
  1457                           ;main.c: 91:                  printf("------------------------------\r\n");
  1458  000186  0E8C               	movlw	low STR_8
  1459  000188  0100               	movlb	0	; () banked
  1460  00018A  6F89               	movwf	printf@fmt& (0+255),b
  1461  00018C  0EFE               	movlw	high STR_8
  1462  00018E  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1463  000190  EC81  F008         	call	_printf	;wreg free
  1464                           
  1465                           ;main.c: 92:                  printf("?: Help menu\r\n");
  1466  000194  0EA5               	movlw	low STR_13
  1467  000196  0100               	movlb	0	; () banked
  1468  000198  6F89               	movwf	printf@fmt& (0+255),b
  1469  00019A  0EFF               	movlw	high STR_13
  1470  00019C  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1471  00019E  EC81  F008         	call	_printf	;wreg free
  1472                           
  1473                           ;main.c: 93:                  printf("Z: Reset processor\r\n");
  1474  0001A2  0E34               	movlw	low STR_14
  1475  0001A4  0100               	movlb	0	; () banked
  1476  0001A6  6F89               	movwf	printf@fmt& (0+255),b
  1477  0001A8  0EFF               	movlw	high STR_14
  1478  0001AA  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1479  0001AC  EC81  F008         	call	_printf	;wreg free
  1480                           
  1481                           ;main.c: 94:                  printf("z: Clear the terminal\r\n");
  1482  0001B0  0E05               	movlw	low STR_15
  1483  0001B2  0100               	movlb	0	; () banked
  1484  0001B4  6F89               	movwf	printf@fmt& (0+255),b
  1485  0001B6  0EFF               	movlw	high STR_15
  1486  0001B8  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1487  0001BA  EC81  F008         	call	_printf	;wreg free
  1488                           
  1489                           ;main.c: 95:                  printf("R/r: increase/decrease Red intensity\r\n");
  1490  0001BE  0E65               	movlw	low STR_16
  1491  0001C0  0100               	movlb	0	; () banked
  1492  0001C2  6F89               	movwf	printf@fmt& (0+255),b
  1493  0001C4  0EFE               	movlw	high STR_16
  1494  0001C6  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1495  0001C8  EC81  F008         	call	_printf	;wreg free
  1496                           
  1497                           ;main.c: 96:                  printf("G/g: increase/decrease Green intensity\r\n");
  1498  0001CC  0E14               	movlw	low STR_17
  1499  0001CE  0100               	movlb	0	; () banked
  1500  0001D0  6F89               	movwf	printf@fmt& (0+255),b
  1501  0001D2  0EFE               	movlw	high STR_17
  1502  0001D4  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1503  0001D6  EC81  F008         	call	_printf	;wreg free
  1504                           
  1505                           ;main.c: 97:                  printf("B/b: increase/decrease Blue intensity\r\n");
  1506  0001DA  0E3D               	movlw	low STR_18
  1507  0001DC  0100               	movlb	0	; () banked
  1508  0001DE  6F89               	movwf	printf@fmt& (0+255),b
  1509  0001E0  0EFE               	movlw	high STR_18
  1510  0001E2  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1511  0001E4  EC81  F008         	call	_printf	;wreg free
  1512                           
  1513                           ;main.c: 98:                  printf("C/c: start/stop color cycle\r\n");
  1514  0001E8  0EAD               	movlw	low STR_19
  1515  0001EA  0100               	movlb	0	; () banked
  1516  0001EC  6F89               	movwf	printf@fmt& (0+255),b
  1517  0001EE  0EFE               	movlw	high STR_19
  1518  0001F0  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1519  0001F2  EC81  F008         	call	_printf	;wreg free
  1520                           
  1521                           ;main.c: 99:                  printf("a: All LEDs off\r\n");
  1522  0001F6  0E82               	movlw	low STR_20
  1523  0001F8  0100               	movlb	0	; () banked
  1524  0001FA  6F89               	movwf	printf@fmt& (0+255),b
  1525  0001FC  0EFF               	movlw	high STR_20
  1526  0001FE  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1527  000200  EC81  F008         	call	_printf	;wreg free
  1528                           
  1529                           ;main.c: 100:                  printf("+/-: increase/decrease the color tour speed.\r\n"
      +                          );
  1530  000204  0EE5               	movlw	low STR_21
  1531  000206  0100               	movlb	0	; () banked
  1532  000208  6F89               	movwf	printf@fmt& (0+255),b
  1533  00020A  0EFD               	movlw	high STR_21
  1534  00020C  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1535  00020E  EC81  F008         	call	_printf	;wreg free
  1536                           
  1537                           ;main.c: 101:                  printf("------------------------------\r\n");
  1538  000212  0E8C               	movlw	low STR_8
  1539  000214  0100               	movlb	0	; () banked
  1540  000216  6F89               	movwf	printf@fmt& (0+255),b
  1541  000218  0EFE               	movlw	high STR_8
  1542  00021A  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1543  00021C  EC81  F008         	call	_printf	;wreg free
  1544                           
  1545                           ;main.c: 102:                  break;
  1546  000220  EF8F  F000         	goto	l2639
  1547  000224                     l2645:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 108:                  for (uint8_t i = 0; i < 40; i++) printf("\n");
  1551  000224  0E00               	movlw	0
  1552  000226  6F90               	movwf	main@i& (0+255),b
  1553  000228                     l2651:
  1554                           
  1555                           ; BSR set to: 0
  1556  000228  0EAB               	movlw	low (STR_8+31)
  1557  00022A  6F89               	movwf	printf@fmt& (0+255),b
  1558  00022C  0EFE               	movlw	high (STR_8+31)
  1559  00022E  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1560  000230  EC81  F008         	call	_printf	;wreg free
  1561  000234  0100               	movlb	0	; () banked
  1562  000236  2B90               	incf	main@i& (0+255),f,b
  1563  000238                     
  1564                           ; BSR set to: 0
  1565  000238  0E27               	movlw	39
  1566  00023A  6590               	cpfsgt	main@i& (0+255),b
  1567  00023C  EF22  F001         	goto	u1841
  1568  000240  EF24  F001         	goto	u1840
  1569  000244                     u1841:
  1570  000244  EF14  F001         	goto	l2651
  1571  000248                     u1840:
  1572  000248                     
  1573                           ; BSR set to: 0
  1574  000248  00FF               	reset		;# 
  1575                           
  1576                           ;main.c: 110:                  break;
  1577  00024A  EF8F  F000         	goto	l2639
  1578  00024E                     l2657:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 116:                  for (uint8_t i = 0; i < 40; i++) printf("\n");
  1582  00024E  0E00               	movlw	0
  1583  000250  6F91               	movwf	main@i_898& (0+255),b
  1584  000252                     l2663:
  1585                           
  1586                           ; BSR set to: 0
  1587  000252  0EAB               	movlw	low (STR_8+31)
  1588  000254  6F89               	movwf	printf@fmt& (0+255),b
  1589  000256  0EFE               	movlw	high (STR_8+31)
  1590  000258  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1591  00025A  EC81  F008         	call	_printf	;wreg free
  1592  00025E  0100               	movlb	0	; () banked
  1593  000260  2B91               	incf	main@i_898& (0+255),f,b
  1594  000262                     
  1595                           ; BSR set to: 0
  1596  000262  0E27               	movlw	39
  1597  000264  6591               	cpfsgt	main@i_898& (0+255),b
  1598  000266  EF37  F001         	goto	u1851
  1599  00026A  EF39  F001         	goto	u1850
  1600  00026E                     u1851:
  1601  00026E  EF29  F001         	goto	l2663
  1602  000272                     u1850:
  1603  000272  EF8F  F000         	goto	l2639
  1604  000276                     l2669:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 120:                  if (dutyRed <= 0xFF - 0x0f) dutyRed += 0x0f;
  1608  000276  5193               	movf	(main@dutyRed+1)& (0+255),w,b
  1609  000278  E107               	bnz	u1861
  1610  00027A  0EF1               	movlw	241
  1611  00027C  5D92               	subwf	main@dutyRed& (0+255),w,b
  1612  00027E  B0D8               	btfsc	status,0,c
  1613  000280  EF44  F001         	goto	u1861
  1614  000284  EF46  F001         	goto	u1860
  1615  000288                     u1861:
  1616  000288  EF4A  F001         	goto	l2673
  1617  00028C                     u1860:
  1618  00028C                     
  1619                           ; BSR set to: 0
  1620  00028C  0E0F               	movlw	15
  1621  00028E  2792               	addwf	main@dutyRed& (0+255),f,b
  1622  000290  0E00               	movlw	0
  1623  000292  2393               	addwfc	(main@dutyRed+1)& (0+255),f,b
  1624  000294                     l2673:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 121:                  EPWM1_LoadDutyValue(dutyRed);
  1628  000294  C092  F00D         	movff	main@dutyRed,EPWM1_LoadDutyValue@dutyValue
  1629  000298  C093  F00E         	movff	main@dutyRed+1,EPWM1_LoadDutyValue@dutyValue+1
  1630  00029C  EC0F  F008         	call	_EPWM1_LoadDutyValue	;wreg free
  1631                           
  1632                           ;main.c: 122:                  break;
  1633  0002A0  EF8F  F000         	goto	l2639
  1634  0002A4                     l2675:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 125:                  if (dutyRed >= 0x0f) dutyRed -= 0x0f;
  1638  0002A4  5193               	movf	(main@dutyRed+1)& (0+255),w,b
  1639  0002A6  E109               	bnz	u1870
  1640  0002A8  0E0F               	movlw	15
  1641  0002AA  5D92               	subwf	main@dutyRed& (0+255),w,b
  1642  0002AC  A0D8               	btfss	status,0,c
  1643  0002AE  EF5B  F001         	goto	u1871
  1644  0002B2  EF5D  F001         	goto	u1870
  1645  0002B6                     u1871:
  1646  0002B6  EF4A  F001         	goto	l2673
  1647  0002BA                     u1870:
  1648  0002BA                     
  1649                           ; BSR set to: 0
  1650  0002BA  0E0F               	movlw	15
  1651  0002BC  5F92               	subwf	main@dutyRed& (0+255),f,b
  1652  0002BE  0E00               	movlw	0
  1653  0002C0  5B93               	subwfb	(main@dutyRed+1)& (0+255),f,b
  1654  0002C2  EF4A  F001         	goto	l2673
  1655  0002C6                     l2681:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 130:                  if (dutyGre <= 0xFF - 0x0f) dutyGre += 0x0f;
  1659  0002C6  5195               	movf	(main@dutyGre+1)& (0+255),w,b
  1660  0002C8  E107               	bnz	u1881
  1661  0002CA  0EF1               	movlw	241
  1662  0002CC  5D94               	subwf	main@dutyGre& (0+255),w,b
  1663  0002CE  B0D8               	btfsc	status,0,c
  1664  0002D0  EF6C  F001         	goto	u1881
  1665  0002D4  EF6E  F001         	goto	u1880
  1666  0002D8                     u1881:
  1667  0002D8  EF72  F001         	goto	l2685
  1668  0002DC                     u1880:
  1669  0002DC                     
  1670                           ; BSR set to: 0
  1671  0002DC  0E0F               	movlw	15
  1672  0002DE  2794               	addwf	main@dutyGre& (0+255),f,b
  1673  0002E0  0E00               	movlw	0
  1674  0002E2  2395               	addwfc	(main@dutyGre+1)& (0+255),f,b
  1675  0002E4                     l2685:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 131:                  EPWM2_LoadDutyValue(dutyGre);
  1679  0002E4  C094  F00D         	movff	main@dutyGre,EPWM2_LoadDutyValue@dutyValue
  1680  0002E8  C095  F00E         	movff	main@dutyGre+1,EPWM2_LoadDutyValue@dutyValue+1
  1681  0002EC  ECF7  F007         	call	_EPWM2_LoadDutyValue	;wreg free
  1682                           
  1683                           ;main.c: 132:                  break;
  1684  0002F0  EF8F  F000         	goto	l2639
  1685  0002F4                     l2687:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 135:                  if (dutyGre >= 0x0f) dutyGre -= 0x0f;
  1689  0002F4  5195               	movf	(main@dutyGre+1)& (0+255),w,b
  1690  0002F6  E109               	bnz	u1890
  1691  0002F8  0E0F               	movlw	15
  1692  0002FA  5D94               	subwf	main@dutyGre& (0+255),w,b
  1693  0002FC  A0D8               	btfss	status,0,c
  1694  0002FE  EF83  F001         	goto	u1891
  1695  000302  EF85  F001         	goto	u1890
  1696  000306                     u1891:
  1697  000306  EF72  F001         	goto	l2685
  1698  00030A                     u1890:
  1699  00030A                     
  1700                           ; BSR set to: 0
  1701  00030A  0E0F               	movlw	15
  1702  00030C  5F94               	subwf	main@dutyGre& (0+255),f,b
  1703  00030E  0E00               	movlw	0
  1704  000310  5B95               	subwfb	(main@dutyGre+1)& (0+255),f,b
  1705  000312  EF72  F001         	goto	l2685
  1706  000316                     l2693:
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;main.c: 140:                  if (dutyBlu <= 0xFF - 0x0f) dutyBlu += 0x0f;
  1710  000316  5197               	movf	(main@dutyBlu+1)& (0+255),w,b
  1711  000318  E107               	bnz	u1901
  1712  00031A  0EF1               	movlw	241
  1713  00031C  5D96               	subwf	main@dutyBlu& (0+255),w,b
  1714  00031E  B0D8               	btfsc	status,0,c
  1715  000320  EF94  F001         	goto	u1901
  1716  000324  EF96  F001         	goto	u1900
  1717  000328                     u1901:
  1718  000328  EF9A  F001         	goto	l2697
  1719  00032C                     u1900:
  1720  00032C                     
  1721                           ; BSR set to: 0
  1722  00032C  0E0F               	movlw	15
  1723  00032E  2796               	addwf	main@dutyBlu& (0+255),f,b
  1724  000330  0E00               	movlw	0
  1725  000332  2397               	addwfc	(main@dutyBlu+1)& (0+255),f,b
  1726  000334                     l2697:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 141:                  EPWM3_LoadDutyValue(dutyBlu);
  1730  000334  C096  F00D         	movff	main@dutyBlu,EPWM3_LoadDutyValue@dutyValue
  1731  000338  C097  F00E         	movff	main@dutyBlu+1,EPWM3_LoadDutyValue@dutyValue+1
  1732  00033C  ECC5  F007         	call	_EPWM3_LoadDutyValue	;wreg free
  1733                           
  1734                           ;main.c: 142:                  break;
  1735  000340  EF8F  F000         	goto	l2639
  1736  000344                     l2699:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;main.c: 145:                  if (dutyBlu >= 0x0f) dutyBlu -= 0x0f;
  1740  000344  5197               	movf	(main@dutyBlu+1)& (0+255),w,b
  1741  000346  E109               	bnz	u1910
  1742  000348  0E0F               	movlw	15
  1743  00034A  5D96               	subwf	main@dutyBlu& (0+255),w,b
  1744  00034C  A0D8               	btfss	status,0,c
  1745  00034E  EFAB  F001         	goto	u1911
  1746  000352  EFAD  F001         	goto	u1910
  1747  000356                     u1911:
  1748  000356  EF9A  F001         	goto	l2697
  1749  00035A                     u1910:
  1750  00035A                     
  1751                           ; BSR set to: 0
  1752  00035A  0E0F               	movlw	15
  1753  00035C  5F96               	subwf	main@dutyBlu& (0+255),f,b
  1754  00035E  0E00               	movlw	0
  1755  000360  5B97               	subwfb	(main@dutyBlu+1)& (0+255),f,b
  1756  000362  EF9A  F001         	goto	l2697
  1757  000366                     l2705:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;main.c: 150:                  printf("Start\r\n");
  1761  000366  0EF7               	movlw	low STR_25
  1762  000368  6F89               	movwf	printf@fmt& (0+255),b
  1763  00036A  0EFF               	movlw	high STR_25
  1764  00036C  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1765  00036E  EC81  F008         	call	_printf	;wreg free
  1766  000372                     
  1767                           ;main.c: 151:                  if (!colorTour) {
  1768  000372  0100               	movlb	0	; () banked
  1769  000374  51A6               	movf	_colorTour& (0+255),w,b
  1770  000376  A4D8               	btfss	status,2,c
  1771  000378  EFC0  F001         	goto	u1921
  1772  00037C  EFC2  F001         	goto	u1920
  1773  000380                     u1921:
  1774  000380  EFCE  F001         	goto	l2711
  1775  000384                     u1920:
  1776  000384                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 152:                      dutyRed = initRed[0];
  1779  000384  C0E5  F092         	movff	_initRed,main@dutyRed
  1780  000388  C0E6  F093         	movff	_initRed+1,main@dutyRed+1
  1781                           
  1782                           ;main.c: 153:                      dutyGre = initGre[0];
  1783  00038C  C0DF  F094         	movff	_initGre,main@dutyGre
  1784  000390  C0E0  F095         	movff	_initGre+1,main@dutyGre+1
  1785                           
  1786                           ;main.c: 154:                      dutyBlu = initBlu[0];
  1787  000394  C0D9  F096         	movff	_initBlu,main@dutyBlu
  1788  000398  C0DA  F097         	movff	_initBlu+1,main@dutyBlu+1
  1789  00039C                     l2711:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;main.c: 156:                  timerInterval = 0x3E8;
  1793  00039C  0E03               	movlw	3
  1794  00039E  6FEE               	movwf	(_timerInterval+1)& (0+255),b
  1795  0003A0  0EE8               	movlw	232
  1796  0003A2  6FED               	movwf	_timerInterval& (0+255),b
  1797                           
  1798                           ;main.c: 157:                  colorTour = 1;
  1799  0003A4  0E01               	movlw	1
  1800  0003A6  6FA6               	movwf	_colorTour& (0+255),b
  1801                           
  1802                           ;main.c: 158:                  break;
  1803  0003A8  EF8F  F000         	goto	l2639
  1804  0003AC                     l2713:
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main.c: 161:                  colorTour = 0;
  1808  0003AC  0E00               	movlw	0
  1809  0003AE  6FA6               	movwf	_colorTour& (0+255),b
  1810                           
  1811                           ;main.c: 162:                  break;
  1812  0003B0  EF8F  F000         	goto	l2639
  1813  0003B4                     l2715:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 165:                  colorTour = 0;
  1817  0003B4  0E00               	movlw	0
  1818  0003B6  6FA6               	movwf	_colorTour& (0+255),b
  1819  0003B8                     
  1820                           ; BSR set to: 0
  1821                           ;main.c: 166:                  EPWM1_LoadDutyValue(256);
  1822  0003B8  0E01               	movlw	1
  1823  0003BA  6E0E               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1824  0003BC  0E00               	movlw	0
  1825  0003BE  6E0D               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1826  0003C0  EC0F  F008         	call	_EPWM1_LoadDutyValue	;wreg free
  1827  0003C4                     
  1828                           ;main.c: 167:                  EPWM2_LoadDutyValue(256);
  1829  0003C4  0E01               	movlw	1
  1830  0003C6  6E0E               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1831  0003C8  0E00               	movlw	0
  1832  0003CA  6E0D               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1833  0003CC  ECF7  F007         	call	_EPWM2_LoadDutyValue	;wreg free
  1834  0003D0                     
  1835                           ;main.c: 168:                  EPWM3_LoadDutyValue(256);
  1836  0003D0  0E01               	movlw	1
  1837  0003D2  6E0E               	movwf	(EPWM3_LoadDutyValue@dutyValue+1)^0,c
  1838  0003D4  0E00               	movlw	0
  1839  0003D6  6E0D               	movwf	EPWM3_LoadDutyValue@dutyValue^0,c
  1840  0003D8  ECC5  F007         	call	_EPWM3_LoadDutyValue	;wreg free
  1841                           
  1842                           ;main.c: 169:                  break;
  1843  0003DC  EF8F  F000         	goto	l2639
  1844  0003E0                     l2723:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 172:                  if(timerInterval <= 0x64){
  1848  0003E0  51EE               	movf	(_timerInterval+1)& (0+255),w,b
  1849  0003E2  E107               	bnz	u1931
  1850  0003E4  0E65               	movlw	101
  1851  0003E6  5DED               	subwf	_timerInterval& (0+255),w,b
  1852  0003E8  B0D8               	btfsc	status,0,c
  1853  0003EA  EFF9  F001         	goto	u1931
  1854  0003EE  EFFB  F001         	goto	u1930
  1855  0003F2                     u1931:
  1856  0003F2  EF03  F002         	goto	l2727
  1857  0003F6                     u1930:
  1858  0003F6                     
  1859                           ; BSR set to: 0
  1860                           ;main.c: 173:                         printf("timeInterval is at its max\r\n");
  1861  0003F6  0EE8               	movlw	low STR_26
  1862  0003F8  6F89               	movwf	printf@fmt& (0+255),b
  1863  0003FA  0EFE               	movlw	high STR_26
  1864  0003FC  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1865  0003FE  EC81  F008         	call	_printf	;wreg free
  1866                           
  1867                           ;main.c: 174:                     }
  1868  000402  EF8F  F000         	goto	l2639
  1869  000406                     l2727:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 176:                     timerInterval -= 0x64;
  1873  000406  0E64               	movlw	100
  1874  000408  5FED               	subwf	_timerInterval& (0+255),f,b
  1875  00040A  0E00               	movlw	0
  1876  00040C  5BEE               	subwfb	(_timerInterval+1)& (0+255),f,b
  1877  00040E  EF8F  F000         	goto	l2639
  1878  000412                     l2729:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 181:                     if(timerInterval >= 0xFF9C){
  1882  000412  0E9C               	movlw	156
  1883  000414  5DED               	subwf	_timerInterval& (0+255),w,b
  1884  000416  0EFF               	movlw	255
  1885  000418  59EE               	subwfb	(_timerInterval+1)& (0+255),w,b
  1886  00041A  A0D8               	btfss	status,0,c
  1887  00041C  EF12  F002         	goto	u1941
  1888  000420  EF14  F002         	goto	u1940
  1889  000424                     u1941:
  1890  000424  EF1C  F002         	goto	l2733
  1891  000428                     u1940:
  1892  000428                     
  1893                           ; BSR set to: 0
  1894                           ;main.c: 182:                         printf("timeInterval is at its min\r\n");
  1895  000428  0ECB               	movlw	low STR_27
  1896  00042A  6F89               	movwf	printf@fmt& (0+255),b
  1897  00042C  0EFE               	movlw	high STR_27
  1898  00042E  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1899  000430  EC81  F008         	call	_printf	;wreg free
  1900                           
  1901                           ;main.c: 183:                     }
  1902  000434  EF8F  F000         	goto	l2639
  1903  000438                     l2733:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 185:                     timerInterval += 0x64;
  1907  000438  0E64               	movlw	100
  1908  00043A  27ED               	addwf	_timerInterval& (0+255),f,b
  1909  00043C  0E00               	movlw	0
  1910  00043E  23EE               	addwfc	(_timerInterval+1)& (0+255),f,b
  1911  000440  EF8F  F000         	goto	l2639
  1912  000444                     l2735:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 192:                  printf("Unknown key %c\r\n", cmd);
  1916  000444  0E94               	movlw	low STR_28
  1917  000446  6F89               	movwf	printf@fmt& (0+255),b
  1918  000448  0EFF               	movlw	high STR_28
  1919  00044A  6F8A               	movwf	(printf@fmt+1)& (0+255),b
  1920  00044C  C08F  F08B         	movff	main@cmd,?_printf+2
  1921  000450  6B8C               	clrf	(?_printf+3)& (0+255),b
  1922  000452  EC81  F008         	call	_printf	;wreg free
  1923                           
  1924                           ;main.c: 193:                  break;
  1925  000456  EF8F  F000         	goto	l2639
  1926  00045A                     l2739:
  1927                           
  1928                           ; BSR set to: 0
  1929  00045A  518F               	movf	main@cmd& (0+255),w,b
  1930  00045C  6F8D               	movwf	??_main& (0+255),b
  1931  00045E  6B8E               	clrf	(??_main+1)& (0+255),b
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ;	Chosen strategy is simple_byte
  1940  000460  518E               	movf	(??_main+1)& (0+255),w,b
  1941  000462  0A00               	xorlw	0	; case 0
  1942  000464  B4D8               	btfsc	status,2,c
  1943  000466  EF37  F002         	goto	l2765
  1944  00046A  EF22  F002         	goto	l2735
  1945  00046E                     l2765:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ; Switch size 1, requested type "simple"
  1949                           ; Number of cases is 14, Range of values is 43 to 122
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte           43    22 (average)
  1953                           ;	Chosen strategy is simple_byte
  1954  00046E  518D               	movf	??_main& (0+255),w,b
  1955  000470  0A2B               	xorlw	43	; case 43
  1956  000472  B4D8               	btfsc	status,2,c
  1957  000474  EFF0  F001         	goto	l2723
  1958  000478  0A06               	xorlw	6	; case 45
  1959  00047A  B4D8               	btfsc	status,2,c
  1960  00047C  EF09  F002         	goto	l2729
  1961  000480  0A12               	xorlw	18	; case 63
  1962  000482  B4D8               	btfsc	status,2,c
  1963  000484  EF9F  F000         	goto	l2643
  1964  000488  0A7D               	xorlw	125	; case 66
  1965  00048A  B4D8               	btfsc	status,2,c
  1966  00048C  EFA2  F001         	goto	l2699
  1967  000490  0A01               	xorlw	1	; case 67
  1968  000492  B4D8               	btfsc	status,2,c
  1969  000494  EFB3  F001         	goto	l2705
  1970  000498  0A04               	xorlw	4	; case 71
  1971  00049A  B4D8               	btfsc	status,2,c
  1972  00049C  EF7A  F001         	goto	l2687
  1973  0004A0  0A15               	xorlw	21	; case 82
  1974  0004A2  B4D8               	btfsc	status,2,c
  1975  0004A4  EF52  F001         	goto	l2675
  1976  0004A8  0A08               	xorlw	8	; case 90
  1977  0004AA  B4D8               	btfsc	status,2,c
  1978  0004AC  EF12  F001         	goto	l2645
  1979  0004B0  0A3B               	xorlw	59	; case 97
  1980  0004B2  B4D8               	btfsc	status,2,c
  1981  0004B4  EFDA  F001         	goto	l2715
  1982  0004B8  0A03               	xorlw	3	; case 98
  1983  0004BA  B4D8               	btfsc	status,2,c
  1984  0004BC  EF8B  F001         	goto	l2693
  1985  0004C0  0A01               	xorlw	1	; case 99
  1986  0004C2  B4D8               	btfsc	status,2,c
  1987  0004C4  EFD6  F001         	goto	l2713
  1988  0004C8  0A04               	xorlw	4	; case 103
  1989  0004CA  B4D8               	btfsc	status,2,c
  1990  0004CC  EF63  F001         	goto	l2681
  1991  0004D0  0A15               	xorlw	21	; case 114
  1992  0004D2  B4D8               	btfsc	status,2,c
  1993  0004D4  EF3B  F001         	goto	l2669
  1994  0004D8  0A08               	xorlw	8	; case 122
  1995  0004DA  B4D8               	btfsc	status,2,c
  1996  0004DC  EF27  F001         	goto	l2657
  1997  0004E0  EF22  F002         	goto	l2735
  1998  0004E4  EF2F  F000         	goto	start
  1999  0004E8                     __end_of_main:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _printf *****************
  2003 ;; Defined at:
  2004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  fmt             2   41[BANK0 ] PTR const unsigned char 
  2007 ;;		 -> STR_28(17), STR_27(29), STR_26(29), STR_25(8), 
  2008 ;;		 -> STR_24(2), STR_23(2), STR_22(33), STR_21(47), 
  2009 ;;		 -> STR_20(18), STR_19(30), STR_18(40), STR_17(41), 
  2010 ;;		 -> STR_16(39), STR_15(24), STR_14(21), STR_13(15), 
  2011 ;;		 -> STR_12(33), STR_11(15), STR_10(15), STR_9(15), 
  2012 ;;		 -> STR_8(33), STR_7(3), STR_6(19), STR_5(20), 
  2013 ;;		 -> STR_4(18), STR_3(23), STR_2(13), STR_1(9), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  ap              2   68[COMRAM] PTR void [1]
  2016 ;;		 -> ?_printf(2), 
  2017 ;;  ret             2    0        int 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  2   41[BANK0 ] int 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;Total ram usage:        8 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:   12
  2034 ;; This function calls:
  2035 ;;		_vfprintf
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text1
  2042  001102                     __ptext1:
  2043                           	callstack 0
  2044  001102                     _printf:
  2045                           	callstack 18
  2046  001102  0E8B               	movlw	low (?_printf+2)
  2047  001104  6E45               	movwf	printf@ap^0,c
  2048  001106  0E00               	movlw	high (?_printf+2)
  2049  001108  6E46               	movwf	(printf@ap+1)^0,c
  2050  00110A  0E00               	movlw	0
  2051  00110C  0100               	movlb	0	; () banked
  2052  00110E  6F83               	movwf	vfprintf@fp& (0+255),b
  2053  001110  0E00               	movlw	0
  2054  001112  6F84               	movwf	(vfprintf@fp+1)& (0+255),b
  2055  001114  C089  F085         	movff	printf@fmt,vfprintf@fmt
  2056  001118  C08A  F086         	movff	printf@fmt+1,vfprintf@fmt+1
  2057  00111C  0E45               	movlw	low printf@ap
  2058  00111E  6F87               	movwf	vfprintf@ap& (0+255),b
  2059  001120  0E00               	movlw	high printf@ap
  2060  001122  6F88               	movwf	(vfprintf@ap+1)& (0+255),b
  2061  001124  EC2E  F006         	call	_vfprintf	;wreg free
  2062  001128  0012               	return		;funcret
  2063  00112A                     __end_of_printf:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _vfprintf *****************
  2067 ;; Defined at:
  2068 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  2071 ;;		 -> NULL(0), 
  2072 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
  2073 ;;		 -> STR_28(17), STR_27(29), STR_26(29), STR_25(8), 
  2074 ;;		 -> STR_24(2), STR_23(2), STR_22(33), STR_21(47), 
  2075 ;;		 -> STR_20(18), STR_19(30), STR_18(40), STR_17(41), 
  2076 ;;		 -> STR_16(39), STR_15(24), STR_14(21), STR_13(15), 
  2077 ;;		 -> STR_12(33), STR_11(15), STR_10(15), STR_9(15), 
  2078 ;;		 -> STR_8(33), STR_7(3), STR_6(19), STR_5(20), 
  2079 ;;		 -> STR_4(18), STR_3(23), STR_2(13), STR_1(9), 
  2080 ;;  ap              2   39[BANK0 ] PTR PTR void 
  2081 ;;		 -> printf@ap(2), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  cfmt            2   64[COMRAM] PTR unsigned char 
  2084 ;;		 -> STR_28(17), STR_27(29), STR_26(29), STR_25(8), 
  2085 ;;		 -> STR_24(2), STR_23(2), STR_22(33), STR_21(47), 
  2086 ;;		 -> STR_20(18), STR_19(30), STR_18(40), STR_17(41), 
  2087 ;;		 -> STR_16(39), STR_15(24), STR_14(21), STR_13(15), 
  2088 ;;		 -> STR_12(33), STR_11(15), STR_10(15), STR_9(15), 
  2089 ;;		 -> STR_8(33), STR_7(3), STR_6(19), STR_5(20), 
  2090 ;;		 -> STR_4(18), STR_3(23), STR_2(13), STR_1(9), 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2   35[BANK0 ] int 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        8 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:   11
  2107 ;; This function calls:
  2108 ;;		_vfpfcnvrt
  2109 ;; This function is called by:
  2110 ;;		_printf
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text2
  2115  000C5C                     __ptext2:
  2116                           	callstack 0
  2117  000C5C                     _vfprintf:
  2118                           	callstack 18
  2119  000C5C                     
  2120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2121  000C5C  C085  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  2122  000C60  C086  F042         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2123  000C64                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2125  000C64  0E00               	movlw	0
  2126  000C66  0100               	movlb	0	; () banked
  2127  000C68  6F99               	movwf	(_nout+1)& (0+255),b
  2128  000C6A  0E00               	movlw	0
  2129  000C6C  6F98               	movwf	_nout& (0+255),b
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2132  000C6E  EF4C  F006         	goto	l2599
  2133  000C72                     l2597:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2137  000C72  C083  F074         	movff	vfprintf@fp,vfpfcnvrt@fp
  2138  000C76  C084  F075         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2139  000C7A  0E41               	movlw	low vfprintf@cfmt
  2140  000C7C  6F76               	movwf	vfpfcnvrt@fmt& (0+255),b
  2141  000C7E  0E00               	movlw	high vfprintf@cfmt
  2142  000C80  6F77               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2143  000C82  C087  F078         	movff	vfprintf@ap,vfpfcnvrt@ap
  2144  000C86  C088  F079         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2145  000C8A  ECE1  F003         	call	_vfpfcnvrt	;wreg free
  2146  000C8E  0100               	movlb	0	; () banked
  2147  000C90  5174               	movf	?_vfpfcnvrt& (0+255),w,b
  2148  000C92  2798               	addwf	_nout& (0+255),f,b
  2149  000C94  5175               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2150  000C96  2399               	addwfc	(_nout+1)& (0+255),f,b
  2151  000C98                     l2599:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2155  000C98  C041  FFF6         	movff	vfprintf@cfmt,tblptrl
  2156  000C9C  C042  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2157  000CA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2158  000CA0  6AF8               	clrf	tblptru,c
  2159  000CA2                     	endif
  2160  000CA2                     	if	0	;tblptru may be non-zero
  2161  000CA2                     	endif
  2162  000CA2  0008               	tblrd		*
  2163  000CA4  50F5               	movf	tablat,w,c
  2164  000CA6  0900               	iorlw	0
  2165  000CA8  A4D8               	btfss	status,2,c
  2166  000CAA  EF59  F006         	goto	u1821
  2167  000CAE  EF5B  F006         	goto	u1820
  2168  000CB2                     u1821:
  2169  000CB2  EF39  F006         	goto	l2597
  2170  000CB6                     u1820:
  2171  000CB6                     
  2172                           ; BSR set to: 0
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2174  000CB6  C098  F083         	movff	_nout,?_vfprintf
  2175  000CBA  C099  F084         	movff	_nout+1,?_vfprintf+1
  2176  000CBE                     
  2177                           ; BSR set to: 0
  2178  000CBE  0012               	return		;funcret
  2179  000CC0                     __end_of_vfprintf:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _vfpfcnvrt *****************
  2183 ;; Defined at:
  2184 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2187 ;;		 -> NULL(0), 
  2188 ;;  fmt             2   22[BANK0 ] PTR PTR unsigned char 
  2189 ;;		 -> vfprintf@cfmt(2), 
  2190 ;;  ap              2   24[BANK0 ] PTR PTR void 
  2191 ;;		 -> printf@ap(2), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  llu             8   26[BANK0 ] unsigned long long 
  2194 ;;  ll              8    0        long long 
  2195 ;;  f               4    0        long long 
  2196 ;;  vp              3    0        PTR void 
  2197 ;;  ct              3    0        unsigned char [3]
  2198 ;;  cp              3    0        PTR unsigned char 
  2199 ;;  i               2    0        int 
  2200 ;;  done            2    0        int 
  2201 ;;  c               1   34[BANK0 ] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  2   20[BANK0 ] int 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         4      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:       19 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:   10
  2218 ;; This function calls:
  2219 ;;		_ctoa
  2220 ;;		_fputc
  2221 ;;		_xtoa
  2222 ;; This function is called by:
  2223 ;;		_vfprintf
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text3
  2228  0007C2                     __ptext3:
  2229                           	callstack 0
  2230  0007C2                     _vfpfcnvrt:
  2231                           	callstack 18
  2232  0007C2                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2234  0007C2  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  0007C6  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  0007CA  CFDE FFF6          	movff	postinc2,tblptrl
  2237  0007CE  CFDD FFF7          	movff	postdec2,tblptrh
  2238  0007D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2239  0007D2  6AF8               	clrf	tblptru,c
  2240  0007D4                     	endif
  2241  0007D4                     	if	0	;tblptru may be non-zero
  2242  0007D4                     	endif
  2243  0007D4  0008               	tblrd		*
  2244  0007D6  50F5               	movf	tablat,w,c
  2245  0007D8  0A25               	xorlw	37
  2246  0007DA  A4D8               	btfss	status,2,c
  2247  0007DC  EFF2  F003         	goto	u1771
  2248  0007E0  EFF4  F003         	goto	u1770
  2249  0007E4                     u1771:
  2250  0007E4  EFEF  F004         	goto	l2585
  2251  0007E8                     u1770:
  2252  0007E8                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2254  0007E8  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2255  0007EC  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2256  0007F0  2ADE               	incf	postinc2,f,c
  2257  0007F2  0E00               	movlw	0
  2258  0007F4  22DD               	addwfc	postdec2,f,c
  2259  0007F6                     
  2260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2261  0007F6  0E00               	movlw	0
  2262  0007F8  6E48               	movwf	(_width+1)^0,c
  2263  0007FA  0E00               	movlw	0
  2264  0007FC  6E47               	movwf	_width^0,c
  2265  0007FE  C047  F04B         	movff	_width,_flags
  2266  000802  C048  F04C         	movff	_width+1,_flags+1
  2267  000806                     
  2268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2269  000806  6849               	setf	_prec^0,c
  2270  000808  684A               	setf	(_prec+1)^0,c
  2271  00080A                     
  2272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2273  00080A  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2274  00080E  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2275  000812  CFDE FFF6          	movff	postinc2,tblptrl
  2276  000816  CFDD FFF7          	movff	postdec2,tblptrh
  2277  00081A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2278  00081A  6AF8               	clrf	tblptru,c
  2279  00081C                     	endif
  2280  00081C                     	if	0	;tblptru may be non-zero
  2281  00081C                     	endif
  2282  00081C  0008               	tblrd		*
  2283  00081E  50F5               	movf	tablat,w,c
  2284  000820  0A63               	xorlw	99
  2285  000822  A4D8               	btfss	status,2,c
  2286  000824  EF16  F004         	goto	u1781
  2287  000828  EF18  F004         	goto	u1780
  2288  00082C                     u1781:
  2289  00082C  EF40  F004         	goto	l2555
  2290  000830                     u1780:
  2291  000830                     
  2292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2293  000830  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  000834  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  000838  2ADE               	incf	postinc2,f,c
  2296  00083A  0E00               	movlw	0
  2297  00083C  22DD               	addwfc	postdec2,f,c
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2300  00083E  C078  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2301  000842  C079  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2302  000846  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  2303  00084A  0E02               	movlw	2
  2304  00084C  26DE               	addwf	postinc2,f,c
  2305  00084E  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  2306  000852  0E00               	movlw	0
  2307  000854  22DD               	addwfc	postdec2,f,c
  2308  000856  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2309  00085A  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2310  00085E  50DF               	movf	indf2,w,c
  2311  000860  0100               	movlb	0	; () banked
  2312  000862  6F82               	movwf	vfpfcnvrt@c& (0+255),b
  2313  000864                     
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2316  000864  C074  F02A         	movff	vfpfcnvrt@fp,ctoa@fp
  2317  000868  C075  F02B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2318  00086C  C082  F02C         	movff	vfpfcnvrt@c,ctoa@c
  2319  000870  EC8F  F006         	call	_ctoa	;wreg free
  2320  000874  C02A  F074         	movff	?_ctoa,?_vfpfcnvrt
  2321  000878  C02B  F075         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2322  00087C  EF0B  F005         	goto	l1172
  2323  000880                     l2555:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2326  000880  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327  000884  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328  000888  CFDE FFF6          	movff	postinc2,tblptrl
  2329  00088C  CFDD FFF7          	movff	postdec2,tblptrh
  2330  000890                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2331  000890  6AF8               	clrf	tblptru,c
  2332  000892                     	endif
  2333  000892                     	if	0	;tblptru may be non-zero
  2334  000892                     	endif
  2335  000892  0008               	tblrd		*
  2336  000894  50F5               	movf	tablat,w,c
  2337  000896  0A78               	xorlw	120
  2338  000898  B4D8               	btfsc	status,2,c
  2339  00089A  EF51  F004         	goto	u1791
  2340  00089E  EF53  F004         	goto	u1790
  2341  0008A2                     u1791:
  2342  0008A2  EF66  F004         	goto	l2559
  2343  0008A6                     u1790:
  2344  0008A6  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2345  0008AA  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2346  0008AE  CFDE FFF6          	movff	postinc2,tblptrl
  2347  0008B2  CFDD FFF7          	movff	postdec2,tblptrh
  2348  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2349  0008B6  6AF8               	clrf	tblptru,c
  2350  0008B8                     	endif
  2351  0008B8                     	if	0	;tblptru may be non-zero
  2352  0008B8                     	endif
  2353  0008B8  0008               	tblrd		*
  2354  0008BA  50F5               	movf	tablat,w,c
  2355  0008BC  0A58               	xorlw	88
  2356  0008BE  A4D8               	btfss	status,2,c
  2357  0008C0  EF64  F004         	goto	u1801
  2358  0008C4  EF66  F004         	goto	u1800
  2359  0008C8                     u1801:
  2360  0008C8  EFB6  F004         	goto	l2569
  2361  0008CC                     u1800:
  2362  0008CC                     l2559:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  2365  0008CC  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  0008D0  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  0008D4  CFDE FFF6          	movff	postinc2,tblptrl
  2368  0008D8  CFDD FFF7          	movff	postdec2,tblptrh
  2369  0008DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2370  0008DC  6AF8               	clrf	tblptru,c
  2371  0008DE                     	endif
  2372  0008DE                     	if	0	;tblptru may be non-zero
  2373  0008DE                     	endif
  2374  0008DE  0008               	tblrd		*
  2375  0008E0  CFF5 F082          	movff	tablat,vfpfcnvrt@c
  2376  0008E4                     
  2377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  2378  0008E4  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379  0008E8  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380  0008EC  2ADE               	incf	postinc2,f,c
  2381  0008EE  0E00               	movlw	0
  2382  0008F0  22DD               	addwfc	postdec2,f,c
  2383  0008F2                     
  2384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2385  0008F2  C078  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2386  0008F6  C079  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2387  0008FA  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  2388  0008FE  0E02               	movlw	2
  2389  000900  26DE               	addwf	postinc2,f,c
  2390  000902  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  2391  000906  0E00               	movlw	0
  2392  000908  22DD               	addwfc	postdec2,f,c
  2393  00090A  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2394  00090E  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2395  000912  CFDE F03F          	movff	postinc2,??_vfpfcnvrt+2
  2396  000916  CFDD F040          	movff	postdec2,??_vfpfcnvrt+3
  2397  00091A  C03F  F07A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2398  00091E  C040  F07B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2399  000922  0100               	movlb	0	; () banked
  2400  000924  6B7C               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2401  000926  6B7D               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2402  000928  6B7E               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2403  00092A  6B7F               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2404  00092C  6B80               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2405  00092E  6B81               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2406  000930                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  2409  000930  C074  F02A         	movff	vfpfcnvrt@fp,xtoa@fp
  2410  000934  C075  F02B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2411  000938  C07A  F02C         	movff	vfpfcnvrt@llu,xtoa@d
  2412  00093C  C07B  F02D         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2413  000940  C07C  F02E         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2414  000944  C07D  F02F         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2415  000948  C07E  F030         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2416  00094C  C07F  F031         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2417  000950  C080  F032         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2418  000954  C081  F033         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2419  000958  C082  F034         	movff	vfpfcnvrt@c,xtoa@x
  2420  00095C  EC74  F002         	call	_xtoa	;wreg free
  2421  000960  C02A  F074         	movff	?_xtoa,?_vfpfcnvrt
  2422  000964  C02B  F075         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2423  000968  EF0B  F005         	goto	l1172
  2424  00096C                     l2569:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2427  00096C  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2428  000970  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2429  000974  CFDE FFF6          	movff	postinc2,tblptrl
  2430  000978  CFDD FFF7          	movff	postdec2,tblptrh
  2431  00097C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2432  00097C  6AF8               	clrf	tblptru,c
  2433  00097E                     	endif
  2434  00097E                     	if	0	;tblptru may be non-zero
  2435  00097E                     	endif
  2436  00097E  0008               	tblrd		*
  2437  000980  50F5               	movf	tablat,w,c
  2438  000982  0A25               	xorlw	37
  2439  000984  A4D8               	btfss	status,2,c
  2440  000986  EFC7  F004         	goto	u1811
  2441  00098A  EFC9  F004         	goto	u1810
  2442  00098E                     u1811:
  2443  00098E  EFE1  F004         	goto	l2579
  2444  000992                     u1810:
  2445  000992                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2447  000992  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2448  000996  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2449  00099A  2ADE               	incf	postinc2,f,c
  2450  00099C  0E00               	movlw	0
  2451  00099E  22DD               	addwfc	postdec2,f,c
  2452  0009A0                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2454  0009A0  0E00               	movlw	0
  2455  0009A2  6E10               	movwf	(fputc@c+1)^0,c
  2456  0009A4  0E25               	movlw	37
  2457  0009A6  6E0F               	movwf	fputc@c^0,c
  2458  0009A8  C074  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2459  0009AC  C075  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2460  0009B0  ECE3  F005         	call	_fputc	;wreg free
  2461  0009B4                     l2575:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2464  0009B4  0E00               	movlw	0
  2465  0009B6  0100               	movlb	0	; () banked
  2466  0009B8  6F75               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2467  0009BA  0E01               	movlw	1
  2468  0009BC  6F74               	movwf	?_vfpfcnvrt& (0+255),b
  2469  0009BE  EF0B  F005         	goto	l1172
  2470  0009C2                     l2579:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2473  0009C2  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2474  0009C6  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  0009CA  2ADE               	incf	postinc2,f,c
  2476  0009CC  0E00               	movlw	0
  2477  0009CE  22DD               	addwfc	postdec2,f,c
  2478  0009D0                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2480  0009D0  0E00               	movlw	0
  2481  0009D2  0100               	movlb	0	; () banked
  2482  0009D4  6F75               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2483  0009D6  0E00               	movlw	0
  2484  0009D8  6F74               	movwf	?_vfpfcnvrt& (0+255),b
  2485  0009DA  EF0B  F005         	goto	l1172
  2486  0009DE                     l2585:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2489  0009DE  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490  0009E2  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491  0009E6  CFDE FFF6          	movff	postinc2,tblptrl
  2492  0009EA  CFDD FFF7          	movff	postdec2,tblptrh
  2493  0009EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2494  0009EE  6AF8               	clrf	tblptru,c
  2495  0009F0                     	endif
  2496  0009F0                     	if	0	;tblptru may be non-zero
  2497  0009F0                     	endif
  2498  0009F0  0008               	tblrd		*
  2499  0009F2  50F5               	movf	tablat,w,c
  2500  0009F4  6E0F               	movwf	fputc@c^0,c
  2501  0009F6  6A10               	clrf	(fputc@c+1)^0,c
  2502  0009F8  C074  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2503  0009FC  C075  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2504  000A00  ECE3  F005         	call	_fputc	;wreg free
  2505  000A04                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2507  000A04  C076  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2508  000A08  C077  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2509  000A0C  2ADE               	incf	postinc2,f,c
  2510  000A0E  0E00               	movlw	0
  2511  000A10  22DD               	addwfc	postdec2,f,c
  2512  000A12  EFDA  F004         	goto	l2575
  2513  000A16                     l1172:
  2514  000A16  0012               	return		;funcret
  2515  000A18                     __end_of_vfpfcnvrt:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _xtoa *****************
  2519 ;; Defined at:
  2520 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2523 ;;		 -> NULL(0), 
  2524 ;;  d               8   43[COMRAM] unsigned long long 
  2525 ;;  x               1   51[COMRAM] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  n               8    8[BANK0 ] unsigned long long 
  2528 ;;  c               2   18[BANK0 ] int 
  2529 ;;  i               2   16[BANK0 ] int 
  2530 ;;  w               2    6[BANK0 ] int 
  2531 ;;  p               2    4[BANK0 ] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2   41[COMRAM] int 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2541 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Totals:        19      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;Total ram usage:       39 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    9
  2548 ;; This function calls:
  2549 ;;		_isalpha
  2550 ;;		_isupper
  2551 ;;		_pad
  2552 ;;		_toupper
  2553 ;; This function is called by:
  2554 ;;		_vfpfcnvrt
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text4
  2559  0004E8                     __ptext4:
  2560                           	callstack 0
  2561  0004E8                     _xtoa:
  2562                           	callstack 18
  2563  0004E8                     
  2564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  2565  0004E8  BE4A               	btfsc	(_prec+1)^0,7,c
  2566  0004EA  EF79  F002         	goto	u1601
  2567  0004EE  EF7B  F002         	goto	u1600
  2568  0004F2                     u1601:
  2569  0004F2  EF7C  F002         	goto	l2477
  2570  0004F6                     u1600:
  2571  0004F6                     
  2572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  2573  0004F6  924B               	bcf	_flags^0,1,c
  2574  0004F8                     l2477:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  2577  0004F8  BE4A               	btfsc	(_prec+1)^0,7,c
  2578  0004FA  EF89  F002         	goto	u1610
  2579  0004FE  504A               	movf	(_prec+1)^0,w,c
  2580  000500  E106               	bnz	u1611
  2581  000502  0449               	decf	_prec^0,w,c
  2582  000504  B0D8               	btfsc	status,0,c
  2583  000506  EF87  F002         	goto	u1611
  2584  00050A  EF89  F002         	goto	u1610
  2585  00050E                     u1611:
  2586  00050E  EF90  F002         	goto	l1142
  2587  000512                     u1610:
  2588  000512  0E00               	movlw	0
  2589  000514  0100               	movlb	0	; () banked
  2590  000516  6F65               	movwf	(xtoa@p+1)& (0+255),b
  2591  000518  0E01               	movlw	1
  2592  00051A  6F64               	movwf	xtoa@p& (0+255),b
  2593  00051C  EF94  F002         	goto	l1144
  2594  000520                     l1142:
  2595  000520  C049  F064         	movff	_prec,xtoa@p
  2596  000524  C04A  F065         	movff	_prec+1,xtoa@p+1
  2597  000528                     l1144:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  2600  000528  C047  F066         	movff	_width,xtoa@w
  2601  00052C  C048  F067         	movff	_width+1,xtoa@w+1
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  2604  000530  A84B               	btfss	_flags^0,4,c
  2605  000532  EF9D  F002         	goto	u1621
  2606  000536  EF9F  F002         	goto	u1620
  2607  00053A                     u1621:
  2608  00053A  EFA4  F002         	goto	l2483
  2609  00053E                     u1620:
  2610  00053E                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  2612  00053E  0100               	movlb	0	; () banked
  2613  000540  0EFE               	movlw	254
  2614  000542  2766               	addwf	xtoa@w& (0+255),f,b
  2615  000544  0EFF               	movlw	255
  2616  000546  2367               	addwfc	(xtoa@w+1)& (0+255),f,b
  2617  000548                     l2483:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  2620  000548  C02C  F068         	movff	xtoa@d,xtoa@n
  2621  00054C  C02D  F069         	movff	xtoa@d+1,xtoa@n+1
  2622  000550  C02E  F06A         	movff	xtoa@d+2,xtoa@n+2
  2623  000554  C02F  F06B         	movff	xtoa@d+3,xtoa@n+3
  2624  000558  C030  F06C         	movff	xtoa@d+4,xtoa@n+4
  2625  00055C  C031  F06D         	movff	xtoa@d+5,xtoa@n+5
  2626  000560  C032  F06E         	movff	xtoa@d+6,xtoa@n+6
  2627  000564  C033  F06F         	movff	xtoa@d+7,xtoa@n+7
  2628  000568                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  2630  000568  0E00               	movlw	0
  2631  00056A  0100               	movlb	0	; () banked
  2632  00056C  6F71               	movwf	(xtoa@i+1)& (0+255),b
  2633  00056E  0E1F               	movlw	31
  2634  000570  6F70               	movwf	xtoa@i& (0+255),b
  2635  000572                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  2638  000572  0E00               	movlw	0
  2639  000574  6FC6               	movwf	(_dbuf+31)& (0+255),b
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2642  000576  EF71  F003         	goto	l2519
  2643  00057A                     l2489:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  2647  00057A  0770               	decf	xtoa@i& (0+255),f,b
  2648  00057C  A0D8               	btfss	status,0,c
  2649  00057E  0771               	decf	(xtoa@i+1)& (0+255),f,b
  2650  000580                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  2653  000580  0E0F               	movlw	15
  2654  000582  1568               	andwf	xtoa@n& (0+255),w,b
  2655  000584  6F72               	movwf	xtoa@c& (0+255),b
  2656  000586  6B73               	clrf	(xtoa@c+1)& (0+255),b
  2657  000588                     
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  2660  000588  BF73               	btfsc	(xtoa@c+1)& (0+255),7,b
  2661  00058A  EFD0  F002         	goto	u1631
  2662  00058E  5173               	movf	(xtoa@c+1)& (0+255),w,b
  2663  000590  E109               	bnz	u1630
  2664  000592  0E0A               	movlw	10
  2665  000594  5D72               	subwf	xtoa@c& (0+255),w,b
  2666  000596  A0D8               	btfss	status,0,c
  2667  000598  EFD0  F002         	goto	u1631
  2668  00059C  EFD2  F002         	goto	u1630
  2669  0005A0                     u1631:
  2670  0005A0  EFDA  F002         	goto	l2497
  2671  0005A4                     u1630:
  2672  0005A4                     
  2673                           ; BSR set to: 0
  2674  0005A4  0E57               	movlw	87
  2675  0005A6  2572               	addwf	xtoa@c& (0+255),w,b
  2676  0005A8  6F72               	movwf	xtoa@c& (0+255),b
  2677  0005AA  0E00               	movlw	0
  2678  0005AC  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  2679  0005AE  6F73               	movwf	(xtoa@c+1)& (0+255),b
  2680  0005B0  EFE0  F002         	goto	l1151
  2681  0005B4                     l2497:
  2682                           
  2683                           ; BSR set to: 0
  2684  0005B4  0E30               	movlw	48
  2685  0005B6  2572               	addwf	xtoa@c& (0+255),w,b
  2686  0005B8  6F72               	movwf	xtoa@c& (0+255),b
  2687  0005BA  0E00               	movlw	0
  2688  0005BC  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  2689  0005BE  6F73               	movwf	(xtoa@c+1)& (0+255),b
  2690  0005C0                     l1151:
  2691                           
  2692                           ; BSR set to: 0
  2693  0005C0  0EBF               	movlw	191
  2694  0005C2  6E35               	movwf	??_xtoa^0,c
  2695  0005C4  0EFF               	movlw	255
  2696  0005C6  6E36               	movwf	(??_xtoa+1)^0,c
  2697  0005C8  5034               	movf	xtoa@x^0,w,c
  2698  0005CA  6E37               	movwf	(??_xtoa+2)^0,c
  2699  0005CC  6A38               	clrf	(??_xtoa+3)^0,c
  2700  0005CE  5035               	movf	??_xtoa^0,w,c
  2701  0005D0  2637               	addwf	(??_xtoa+2)^0,f,c
  2702  0005D2  5036               	movf	(??_xtoa+1)^0,w,c
  2703  0005D4  2238               	addwfc	(??_xtoa+3)^0,f,c
  2704  0005D6  5038               	movf	(??_xtoa+3)^0,w,c
  2705  0005D8  E10A               	bnz	u1640
  2706  0005DA  0E1A               	movlw	26
  2707  0005DC  5C37               	subwf	(??_xtoa+2)^0,w,c
  2708  0005DE  A0D8               	btfss	status,0,c
  2709  0005E0  EFF4  F002         	goto	u1641
  2710  0005E4  EFF7  F002         	goto	u1640
  2711  0005E8                     u1641:
  2712  0005E8  0E01               	movlw	1
  2713  0005EA  EFF8  F002         	goto	u1650
  2714  0005EE                     u1640:
  2715  0005EE  0E00               	movlw	0
  2716  0005F0                     u1650:
  2717  0005F0  6F60               	movwf	_xtoa$1433& (0+255),b
  2718  0005F2  6B61               	clrf	(_xtoa$1433+1)& (0+255),b
  2719  0005F4                     
  2720                           ; BSR set to: 0
  2721  0005F4  5160               	movf	_xtoa$1433& (0+255),w,b
  2722  0005F6  1161               	iorwf	(_xtoa$1433+1)& (0+255),w,b
  2723  0005F8  B4D8               	btfsc	status,2,c
  2724  0005FA  EF01  F003         	goto	u1661
  2725  0005FE  EF03  F003         	goto	u1660
  2726  000602                     u1661:
  2727  000602  EF33  F003         	goto	l2511
  2728  000606                     u1660:
  2729  000606                     
  2730                           ; BSR set to: 0
  2731  000606  0E9F               	movlw	159
  2732  000608  6E35               	movwf	??_xtoa^0,c
  2733  00060A  0EFF               	movlw	255
  2734  00060C  6E36               	movwf	(??_xtoa+1)^0,c
  2735  00060E  0E20               	movlw	32
  2736  000610  1172               	iorwf	xtoa@c& (0+255),w,b
  2737  000612  6E37               	movwf	(??_xtoa+2)^0,c
  2738  000614  0E00               	movlw	0
  2739  000616  1173               	iorwf	(xtoa@c+1)& (0+255),w,b
  2740  000618  6E38               	movwf	(??_xtoa+3)^0,c
  2741  00061A  5035               	movf	??_xtoa^0,w,c
  2742  00061C  2637               	addwf	(??_xtoa+2)^0,f,c
  2743  00061E  5036               	movf	(??_xtoa+1)^0,w,c
  2744  000620  2238               	addwfc	(??_xtoa+3)^0,f,c
  2745  000622  5038               	movf	(??_xtoa+3)^0,w,c
  2746  000624  E10A               	bnz	u1670
  2747  000626  0E1A               	movlw	26
  2748  000628  5C37               	subwf	(??_xtoa+2)^0,w,c
  2749  00062A  A0D8               	btfss	status,0,c
  2750  00062C  EF1A  F003         	goto	u1671
  2751  000630  EF1D  F003         	goto	u1670
  2752  000634                     u1671:
  2753  000634  0E01               	movlw	1
  2754  000636  EF1E  F003         	goto	u1680
  2755  00063A                     u1670:
  2756  00063A  0E00               	movlw	0
  2757  00063C                     u1680:
  2758  00063C  6F62               	movwf	_xtoa$1434& (0+255),b
  2759  00063E  6B63               	clrf	(_xtoa$1434+1)& (0+255),b
  2760  000640                     
  2761                           ; BSR set to: 0
  2762  000640  5162               	movf	_xtoa$1434& (0+255),w,b
  2763  000642  1163               	iorwf	(_xtoa$1434+1)& (0+255),w,b
  2764  000644  B4D8               	btfsc	status,2,c
  2765  000646  EF27  F003         	goto	u1691
  2766  00064A  EF29  F003         	goto	u1690
  2767  00064E                     u1691:
  2768  00064E  EF33  F003         	goto	l2511
  2769  000652                     u1690:
  2770  000652                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  2773  000652  C072  F013         	movff	xtoa@c,toupper@c
  2774  000656  C073  F014         	movff	xtoa@c+1,toupper@c+1
  2775  00065A  EC60  F006         	call	_toupper	;wreg free
  2776  00065E  C013  F072         	movff	?_toupper,xtoa@c
  2777  000662  C014  F073         	movff	?_toupper+1,xtoa@c+1
  2778  000666                     l2511:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  2781  000666  0EA7               	movlw	low _dbuf
  2782  000668  0100               	movlb	0	; () banked
  2783  00066A  2570               	addwf	xtoa@i& (0+255),w,b
  2784  00066C  6ED9               	movwf	fsr2l,c
  2785  00066E  0E00               	movlw	high _dbuf
  2786  000670  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  2787  000672  6EDA               	movwf	fsr2h,c
  2788  000674  C072  FFDF         	movff	xtoa@c,indf2
  2789  000678                     
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  2792  000678  0764               	decf	xtoa@p& (0+255),f,b
  2793  00067A  A0D8               	btfss	status,0,c
  2794  00067C  0765               	decf	(xtoa@p+1)& (0+255),f,b
  2795  00067E                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  2798  00067E  0766               	decf	xtoa@w& (0+255),f,b
  2799  000680  A0D8               	btfss	status,0,c
  2800  000682  0767               	decf	(xtoa@w+1)& (0+255),f,b
  2801  000684                     
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  2804  000684  C068  F035         	movff	xtoa@n,??_xtoa
  2805  000688  C069  F036         	movff	xtoa@n+1,??_xtoa+1
  2806  00068C  C06A  F037         	movff	xtoa@n+2,??_xtoa+2
  2807  000690  C06B  F038         	movff	xtoa@n+3,??_xtoa+3
  2808  000694  C06C  F039         	movff	xtoa@n+4,??_xtoa+4
  2809  000698  C06D  F03A         	movff	xtoa@n+5,??_xtoa+5
  2810  00069C  C06E  F03B         	movff	xtoa@n+6,??_xtoa+6
  2811  0006A0  C06F  F03C         	movff	xtoa@n+7,??_xtoa+7
  2812  0006A4  0E05               	movlw	5
  2813  0006A6  EF5E  F003         	goto	u1700
  2814  0006AA                     u1705:
  2815  0006AA  90D8               	bcf	status,0,c
  2816  0006AC  323C               	rrcf	(??_xtoa+7)^0,f,c
  2817  0006AE  323B               	rrcf	(??_xtoa+6)^0,f,c
  2818  0006B0  323A               	rrcf	(??_xtoa+5)^0,f,c
  2819  0006B2  3239               	rrcf	(??_xtoa+4)^0,f,c
  2820  0006B4  3238               	rrcf	(??_xtoa+3)^0,f,c
  2821  0006B6  3237               	rrcf	(??_xtoa+2)^0,f,c
  2822  0006B8  3236               	rrcf	(??_xtoa+1)^0,f,c
  2823  0006BA  3235               	rrcf	??_xtoa^0,f,c
  2824  0006BC                     u1700:
  2825  0006BC  2EE8               	decfsz	wreg,f,c
  2826  0006BE  EF55  F003         	goto	u1705
  2827  0006C2  C035  F068         	movff	??_xtoa,xtoa@n
  2828  0006C6  C036  F069         	movff	??_xtoa+1,xtoa@n+1
  2829  0006CA  C037  F06A         	movff	??_xtoa+2,xtoa@n+2
  2830  0006CE  C038  F06B         	movff	??_xtoa+3,xtoa@n+3
  2831  0006D2  C039  F06C         	movff	??_xtoa+4,xtoa@n+4
  2832  0006D6  C03A  F06D         	movff	??_xtoa+5,xtoa@n+5
  2833  0006DA  C03B  F06E         	movff	??_xtoa+6,xtoa@n+6
  2834  0006DE  C03C  F06F         	movff	??_xtoa+7,xtoa@n+7
  2835  0006E2                     l2519:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2839  0006E2  BF71               	btfsc	(xtoa@i+1)& (0+255),7,b
  2840  0006E4  EF7D  F003         	goto	u1711
  2841  0006E8  5171               	movf	(xtoa@i+1)& (0+255),w,b
  2842  0006EA  E109               	bnz	u1710
  2843  0006EC  0E02               	movlw	2
  2844  0006EE  5D70               	subwf	xtoa@i& (0+255),w,b
  2845  0006F0  A0D8               	btfss	status,0,c
  2846  0006F2  EF7D  F003         	goto	u1711
  2847  0006F6  EF7F  F003         	goto	u1710
  2848  0006FA                     u1711:
  2849  0006FA  EFAF  F003         	goto	l1165
  2850  0006FE                     u1710:
  2851  0006FE                     
  2852                           ; BSR set to: 0
  2853  0006FE  5168               	movf	xtoa@n& (0+255),w,b
  2854  000700  1169               	iorwf	(xtoa@n+1)& (0+255),w,b
  2855  000702  116A               	iorwf	(xtoa@n+2)& (0+255),w,b
  2856  000704  116B               	iorwf	(xtoa@n+3)& (0+255),w,b
  2857  000706  116C               	iorwf	(xtoa@n+4)& (0+255),w,b
  2858  000708  116D               	iorwf	(xtoa@n+5)& (0+255),w,b
  2859  00070A  116E               	iorwf	(xtoa@n+6)& (0+255),w,b
  2860  00070C  116F               	iorwf	(xtoa@n+7)& (0+255),w,b
  2861  00070E  A4D8               	btfss	status,2,c
  2862  000710  EF8C  F003         	goto	u1721
  2863  000714  EF8E  F003         	goto	u1720
  2864  000718                     u1721:
  2865  000718  EFBD  F002         	goto	l2489
  2866  00071C                     u1720:
  2867  00071C                     
  2868                           ; BSR set to: 0
  2869  00071C  BF65               	btfsc	(xtoa@p+1)& (0+255),7,b
  2870  00071E  EF9B  F003         	goto	u1730
  2871  000722  5165               	movf	(xtoa@p+1)& (0+255),w,b
  2872  000724  E106               	bnz	u1731
  2873  000726  0564               	decf	xtoa@p& (0+255),w,b
  2874  000728  B0D8               	btfsc	status,0,c
  2875  00072A  EF99  F003         	goto	u1731
  2876  00072E  EF9B  F003         	goto	u1730
  2877  000732                     u1731:
  2878  000732  EFBD  F002         	goto	l2489
  2879  000736                     u1730:
  2880  000736                     
  2881                           ; BSR set to: 0
  2882  000736  BF67               	btfsc	(xtoa@w+1)& (0+255),7,b
  2883  000738  EFA6  F003         	goto	u1741
  2884  00073C  5167               	movf	(xtoa@w+1)& (0+255),w,b
  2885  00073E  E108               	bnz	u1740
  2886  000740  0566               	decf	xtoa@w& (0+255),w,b
  2887  000742  A0D8               	btfss	status,0,c
  2888  000744  EFA6  F003         	goto	u1741
  2889  000748  EFA8  F003         	goto	u1740
  2890  00074C                     u1741:
  2891  00074C  EFAF  F003         	goto	l1165
  2892  000750                     u1740:
  2893  000750                     
  2894                           ; BSR set to: 0
  2895  000750  B24B               	btfsc	_flags^0,1,c
  2896  000752  EFAD  F003         	goto	u1751
  2897  000756  EFAF  F003         	goto	u1750
  2898  00075A                     u1751:
  2899  00075A  EFBD  F002         	goto	l2489
  2900  00075E                     u1750:
  2901  00075E                     l1165:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2905  00075E  A84B               	btfss	_flags^0,4,c
  2906  000760  EFB4  F003         	goto	u1761
  2907  000764  EFB6  F003         	goto	u1760
  2908  000768                     u1761:
  2909  000768  EFCC  F003         	goto	l2535
  2910  00076C                     u1760:
  2911  00076C                     
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  2914  00076C  0770               	decf	xtoa@i& (0+255),f,b
  2915  00076E  A0D8               	btfss	status,0,c
  2916  000770  0771               	decf	(xtoa@i+1)& (0+255),f,b
  2917  000772                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  2920  000772  0EA7               	movlw	low _dbuf
  2921  000774  2570               	addwf	xtoa@i& (0+255),w,b
  2922  000776  6ED9               	movwf	fsr2l,c
  2923  000778  0E00               	movlw	high _dbuf
  2924  00077A  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  2925  00077C  6EDA               	movwf	fsr2h,c
  2926  00077E  C034  FFDF         	movff	xtoa@x,indf2
  2927  000782                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  2930  000782  0770               	decf	xtoa@i& (0+255),f,b
  2931  000784  A0D8               	btfss	status,0,c
  2932  000786  0771               	decf	(xtoa@i+1)& (0+255),f,b
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  2935  000788  0EA7               	movlw	low _dbuf
  2936  00078A  2570               	addwf	xtoa@i& (0+255),w,b
  2937  00078C  6ED9               	movwf	fsr2l,c
  2938  00078E  0E00               	movlw	high _dbuf
  2939  000790  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  2940  000792  6EDA               	movwf	fsr2h,c
  2941  000794  0E30               	movlw	48
  2942  000796  6EDF               	movwf	indf2,c
  2943  000798                     l2535:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  2947  000798  C02A  F01F         	movff	xtoa@fp,pad@fp
  2948  00079C  C02B  F020         	movff	xtoa@fp+1,pad@fp+1
  2949  0007A0  0EA7               	movlw	low _dbuf
  2950  0007A2  2570               	addwf	xtoa@i& (0+255),w,b
  2951  0007A4  6E21               	movwf	pad@buf^0,c
  2952  0007A6  0E00               	movlw	high _dbuf
  2953  0007A8  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  2954  0007AA  6E22               	movwf	(pad@buf+1)^0,c
  2955  0007AC  C066  F023         	movff	xtoa@w,pad@p
  2956  0007B0  C067  F024         	movff	xtoa@w+1,pad@p+1
  2957  0007B4  EC82  F005         	call	_pad	;wreg free
  2958  0007B8  C01F  F02A         	movff	?_pad,?_xtoa
  2959  0007BC  C020  F02B         	movff	?_pad+1,?_xtoa+1
  2960  0007C0  0012               	return		;funcret
  2961  0007C2                     __end_of_xtoa:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _toupper *****************
  2965 ;; Defined at:
  2966 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  c               2   18[COMRAM] int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2   18[COMRAM] int 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:        8 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    5
  2987 ;; This function calls:
  2988 ;;		_islower
  2989 ;; This function is called by:
  2990 ;;		_xtoa
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text5
  2995  000CC0                     __ptext5:
  2996                           	callstack 0
  2997  000CC0                     _toupper:
  2998                           	callstack 21
  2999  000CC0  0E9F               	movlw	159
  3000  000CC2  6E15               	movwf	??_toupper^0,c
  3001  000CC4  0EFF               	movlw	255
  3002  000CC6  6E16               	movwf	(??_toupper+1)^0,c
  3003  000CC8  C013  F017         	movff	toupper@c,??_toupper+2
  3004  000CCC  C014  F018         	movff	toupper@c+1,??_toupper+3
  3005  000CD0  5015               	movf	??_toupper^0,w,c
  3006  000CD2  2617               	addwf	(??_toupper+2)^0,f,c
  3007  000CD4  5016               	movf	(??_toupper+1)^0,w,c
  3008  000CD6  2218               	addwfc	(??_toupper+3)^0,f,c
  3009  000CD8  5018               	movf	(??_toupper+3)^0,w,c
  3010  000CDA  E10A               	bnz	u1560
  3011  000CDC  0E1A               	movlw	26
  3012  000CDE  5C17               	subwf	(??_toupper+2)^0,w,c
  3013  000CE0  A0D8               	btfss	status,0,c
  3014  000CE2  EF75  F006         	goto	u1561
  3015  000CE6  EF78  F006         	goto	u1560
  3016  000CEA                     u1561:
  3017  000CEA  0E01               	movlw	1
  3018  000CEC  EF79  F006         	goto	u1570
  3019  000CF0                     u1560:
  3020  000CF0  0E00               	movlw	0
  3021  000CF2                     u1570:
  3022  000CF2  6E19               	movwf	_toupper$1510^0,c
  3023  000CF4  6A1A               	clrf	(_toupper$1510+1)^0,c
  3024  000CF6  5019               	movf	_toupper$1510^0,w,c
  3025  000CF8  101A               	iorwf	(_toupper$1510+1)^0,w,c
  3026  000CFA  B4D8               	btfsc	status,2,c
  3027  000CFC  EF82  F006         	goto	u1581
  3028  000D00  EF84  F006         	goto	u1580
  3029  000D04                     u1581:
  3030  000D04  EF8A  F006         	goto	l1225
  3031  000D08                     u1580:
  3032  000D08  0E5F               	movlw	95
  3033  000D0A  1413               	andwf	toupper@c^0,w,c
  3034  000D0C  6E13               	movwf	?_toupper^0,c
  3035  000D0E  6A14               	clrf	(?_toupper+1)^0,c
  3036  000D10  EF8E  F006         	goto	l1230
  3037  000D14                     l1225:
  3038  000D14  C013  F013         	movff	toupper@c,?_toupper
  3039  000D18  C014  F014         	movff	toupper@c+1,?_toupper+1
  3040  000D1C                     l1230:
  3041  000D1C  0012               	return		;funcret
  3042  000D1E                     __end_of_toupper:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _islower *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  c               2   12[COMRAM] int 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  2   12[COMRAM] int 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;Total ram usage:        6 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    4
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_toupper
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text6
  3076  000E78                     __ptext6:
  3077                           	callstack 0
  3078  000E78                     _islower:
  3079                           	callstack 21
  3080  000E78  0E9F               	movlw	159
  3081  000E7A  6E0F               	movwf	??_islower^0,c
  3082  000E7C  0EFF               	movlw	255
  3083  000E7E  6E10               	movwf	(??_islower+1)^0,c
  3084  000E80  C00D  F011         	movff	islower@c,??_islower+2
  3085  000E84  C00E  F012         	movff	islower@c+1,??_islower+3
  3086  000E88  500F               	movf	??_islower^0,w,c
  3087  000E8A  2611               	addwf	(??_islower+2)^0,f,c
  3088  000E8C  5010               	movf	(??_islower+1)^0,w,c
  3089  000E8E  2212               	addwfc	(??_islower+3)^0,f,c
  3090  000E90  5012               	movf	(??_islower+3)^0,w,c
  3091  000E92  E10A               	bnz	u1460
  3092  000E94  0E1A               	movlw	26
  3093  000E96  5C11               	subwf	(??_islower+2)^0,w,c
  3094  000E98  A0D8               	btfss	status,0,c
  3095  000E9A  EF51  F007         	goto	u1461
  3096  000E9E  EF54  F007         	goto	u1460
  3097  000EA2                     u1461:
  3098  000EA2  0E01               	movlw	1
  3099  000EA4  EF55  F007         	goto	u1470
  3100  000EA8                     u1460:
  3101  000EA8  0E00               	movlw	0
  3102  000EAA                     u1470:
  3103  000EAA  6E0D               	movwf	?_islower^0,c
  3104  000EAC  6A0E               	clrf	(?_islower+1)^0,c
  3105  000EAE  0012               	return		;funcret
  3106  000EB0                     __end_of_islower:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _isupper *****************
  3110 ;; Defined at:
  3111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  c               2   12[COMRAM] int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2   12[COMRAM] int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;Total ram usage:        6 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    4
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_xtoa
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text7
  3140  000EB0                     __ptext7:
  3141                           	callstack 0
  3142  000EB0                     _isupper:
  3143                           	callstack 22
  3144  000EB0  0EBF               	movlw	191
  3145  000EB2  6E0F               	movwf	??_isupper^0,c
  3146  000EB4  0EFF               	movlw	255
  3147  000EB6  6E10               	movwf	(??_isupper+1)^0,c
  3148  000EB8  C00D  F011         	movff	isupper@c,??_isupper+2
  3149  000EBC  C00E  F012         	movff	isupper@c+1,??_isupper+3
  3150  000EC0  500F               	movf	??_isupper^0,w,c
  3151  000EC2  2611               	addwf	(??_isupper+2)^0,f,c
  3152  000EC4  5010               	movf	(??_isupper+1)^0,w,c
  3153  000EC6  2212               	addwfc	(??_isupper+3)^0,f,c
  3154  000EC8  5012               	movf	(??_isupper+3)^0,w,c
  3155  000ECA  E10A               	bnz	u1520
  3156  000ECC  0E1A               	movlw	26
  3157  000ECE  5C11               	subwf	(??_isupper+2)^0,w,c
  3158  000ED0  A0D8               	btfss	status,0,c
  3159  000ED2  EF6D  F007         	goto	u1521
  3160  000ED6  EF70  F007         	goto	u1520
  3161  000EDA                     u1521:
  3162  000EDA  0E01               	movlw	1
  3163  000EDC  EF71  F007         	goto	u1530
  3164  000EE0                     u1520:
  3165  000EE0  0E00               	movlw	0
  3166  000EE2                     u1530:
  3167  000EE2  6E0D               	movwf	?_isupper^0,c
  3168  000EE4  6A0E               	clrf	(?_isupper+1)^0,c
  3169  000EE6  0012               	return		;funcret
  3170  000EE8                     __end_of_isupper:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _isalpha *****************
  3174 ;; Defined at:
  3175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  c               2   12[COMRAM] int 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2   12[COMRAM] int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        6 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    4
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_xtoa
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text8
  3204  000E3C                     __ptext8:
  3205                           	callstack 0
  3206  000E3C                     _isalpha:
  3207                           	callstack 22
  3208  000E3C  0E9F               	movlw	159
  3209  000E3E  6E0F               	movwf	??_isalpha^0,c
  3210  000E40  0EFF               	movlw	255
  3211  000E42  6E10               	movwf	(??_isalpha+1)^0,c
  3212  000E44  0E20               	movlw	32
  3213  000E46  100D               	iorwf	isalpha@c^0,w,c
  3214  000E48  6E11               	movwf	(??_isalpha+2)^0,c
  3215  000E4A  0E00               	movlw	0
  3216  000E4C  100E               	iorwf	(isalpha@c+1)^0,w,c
  3217  000E4E  6E12               	movwf	(??_isalpha+3)^0,c
  3218  000E50  500F               	movf	??_isalpha^0,w,c
  3219  000E52  2611               	addwf	(??_isalpha+2)^0,f,c
  3220  000E54  5010               	movf	(??_isalpha+1)^0,w,c
  3221  000E56  2212               	addwfc	(??_isalpha+3)^0,f,c
  3222  000E58  5012               	movf	(??_isalpha+3)^0,w,c
  3223  000E5A  E10A               	bnz	u1540
  3224  000E5C  0E1A               	movlw	26
  3225  000E5E  5C11               	subwf	(??_isalpha+2)^0,w,c
  3226  000E60  A0D8               	btfss	status,0,c
  3227  000E62  EF35  F007         	goto	u1541
  3228  000E66  EF38  F007         	goto	u1540
  3229  000E6A                     u1541:
  3230  000E6A  0E01               	movlw	1
  3231  000E6C  EF39  F007         	goto	u1550
  3232  000E70                     u1540:
  3233  000E70  0E00               	movlw	0
  3234  000E72                     u1550:
  3235  000E72  6E0D               	movwf	?_isalpha^0,c
  3236  000E74  6A0E               	clrf	(?_isalpha+1)^0,c
  3237  000E76  0012               	return		;funcret
  3238  000E78                     __end_of_isalpha:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _ctoa *****************
  3242 ;; Defined at:
  3243 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  3246 ;;		 -> NULL(0), 
  3247 ;;  c               1   43[COMRAM] unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  w               2   44[COMRAM] int 
  3250 ;;  l               2    0        int 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  2   41[COMRAM] int 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        5 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    9
  3267 ;; This function calls:
  3268 ;;		_pad
  3269 ;; This function is called by:
  3270 ;;		_vfpfcnvrt
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text9
  3275  000D1E                     __ptext9:
  3276                           	callstack 0
  3277  000D1E                     _ctoa:
  3278                           	callstack 18
  3279  000D1E                     
  3280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3281  000D1E  5047               	movf	_width^0,w,c
  3282  000D20  1048               	iorwf	(_width+1)^0,w,c
  3283  000D22  A4D8               	btfss	status,2,c
  3284  000D24  EF96  F006         	goto	u1591
  3285  000D28  EF98  F006         	goto	u1590
  3286  000D2C                     u1591:
  3287  000D2C  EF9E  F006         	goto	l2463
  3288  000D30                     u1590:
  3289  000D30  C047  F02D         	movff	_width,ctoa@w
  3290  000D34  C048  F02E         	movff	_width+1,ctoa@w+1
  3291  000D38  EFA4  F006         	goto	l2465
  3292  000D3C                     l2463:
  3293  000D3C  0EFF               	movlw	255
  3294  000D3E  2447               	addwf	_width^0,w,c
  3295  000D40  6E2D               	movwf	ctoa@w^0,c
  3296  000D42  0EFF               	movlw	255
  3297  000D44  2048               	addwfc	(_width+1)^0,w,c
  3298  000D46  6E2E               	movwf	(ctoa@w+1)^0,c
  3299  000D48                     l2465:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  3302  000D48  C02C  F0A7         	movff	ctoa@c,_dbuf
  3303  000D4C                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  3305  000D4C  0E00               	movlw	0
  3306  000D4E  0100               	movlb	0	; () banked
  3307  000D50  6FA8               	movwf	(_dbuf+1)& (0+255),b
  3308  000D52                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  3311  000D52  C02A  F01F         	movff	ctoa@fp,pad@fp
  3312  000D56  C02B  F020         	movff	ctoa@fp+1,pad@fp+1
  3313  000D5A  0EA7               	movlw	low _dbuf
  3314  000D5C  6E21               	movwf	pad@buf^0,c
  3315  000D5E  0E00               	movlw	high _dbuf
  3316  000D60  6E22               	movwf	(pad@buf+1)^0,c
  3317  000D62  C02D  F023         	movff	ctoa@w,pad@p
  3318  000D66  C02E  F024         	movff	ctoa@w+1,pad@p+1
  3319  000D6A  EC82  F005         	call	_pad	;wreg free
  3320  000D6E  C01F  F02A         	movff	?_pad,?_ctoa
  3321  000D72  C020  F02B         	movff	?_pad+1,?_ctoa+1
  3322  000D76  0012               	return		;funcret
  3323  000D78                     __end_of_ctoa:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _pad *****************
  3327 ;; Defined at:
  3328 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  3331 ;;		 -> NULL(0), 
  3332 ;;  buf             2   32[COMRAM] PTR unsigned char 
  3333 ;;		 -> dbuf(32), 
  3334 ;;  p               2   34[COMRAM] int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  w               2   39[COMRAM] int 
  3337 ;;  i               2   37[COMRAM] int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2   30[COMRAM] int 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:       11 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    8
  3354 ;; This function calls:
  3355 ;;		_fputc
  3356 ;;		_fputs
  3357 ;;		_strlen
  3358 ;; This function is called by:
  3359 ;;		_ctoa
  3360 ;;		_xtoa
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text10
  3365  000B04                     __ptext10:
  3366                           	callstack 0
  3367  000B04                     _pad:
  3368                           	callstack 18
  3369  000B04                     
  3370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3371  000B04  A04B               	btfss	_flags^0,0,c
  3372  000B06  EF87  F005         	goto	u1481
  3373  000B0A  EF89  F005         	goto	u1480
  3374  000B0E                     u1481:
  3375  000B0E  EF93  F005         	goto	l2423
  3376  000B12                     u1480:
  3377  000B12                     
  3378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3379  000B12  C021  F018         	movff	pad@buf,fputs@s
  3380  000B16  C022  F019         	movff	pad@buf+1,fputs@s+1
  3381  000B1A  C01F  F01A         	movff	pad@fp,fputs@fp
  3382  000B1E  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  3383  000B22  ECBC  F006         	call	_fputs	;wreg free
  3384  000B26                     l2423:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3387  000B26  BE24               	btfsc	(pad@p+1)^0,7,c
  3388  000B28  EF98  F005         	goto	u1491
  3389  000B2C  EF9A  F005         	goto	u1490
  3390  000B30                     u1491:
  3391  000B30  EFA0  F005         	goto	l2427
  3392  000B34                     u1490:
  3393  000B34  C023  F028         	movff	pad@p,pad@w
  3394  000B38  C024  F029         	movff	pad@p+1,pad@w+1
  3395  000B3C  EFA4  F005         	goto	l1125
  3396  000B40                     l2427:
  3397  000B40  0E00               	movlw	0
  3398  000B42  6E29               	movwf	(pad@w+1)^0,c
  3399  000B44  0E00               	movlw	0
  3400  000B46  6E28               	movwf	pad@w^0,c
  3401  000B48                     l1125:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3404  000B48  0E00               	movlw	0
  3405  000B4A  6E27               	movwf	(pad@i+1)^0,c
  3406  000B4C  0E00               	movlw	0
  3407  000B4E  6E26               	movwf	pad@i^0,c
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3410  000B50  EFB6  F005         	goto	l2433
  3411  000B54                     l2429:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3414  000B54  0E00               	movlw	0
  3415  000B56  6E10               	movwf	(fputc@c+1)^0,c
  3416  000B58  0E20               	movlw	32
  3417  000B5A  6E0F               	movwf	fputc@c^0,c
  3418  000B5C  C01F  F011         	movff	pad@fp,fputc@fp
  3419  000B60  C020  F012         	movff	pad@fp+1,fputc@fp+1
  3420  000B64  ECE3  F005         	call	_fputc	;wreg free
  3421  000B68                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3423  000B68  4A26               	infsnz	pad@i^0,f,c
  3424  000B6A  2A27               	incf	(pad@i+1)^0,f,c
  3425  000B6C                     l2433:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3428  000B6C  5028               	movf	pad@w^0,w,c
  3429  000B6E  5C26               	subwf	pad@i^0,w,c
  3430  000B70  5027               	movf	(pad@i+1)^0,w,c
  3431  000B72  0A80               	xorlw	128
  3432  000B74  6E25               	movwf	??_pad^0,c
  3433  000B76  5029               	movf	(pad@w+1)^0,w,c
  3434  000B78  0A80               	xorlw	128
  3435  000B7A  5825               	subwfb	??_pad^0,w,c
  3436  000B7C  A0D8               	btfss	status,0,c
  3437  000B7E  EFC3  F005         	goto	u1501
  3438  000B82  EFC5  F005         	goto	u1500
  3439  000B86                     u1501:
  3440  000B86  EFAA  F005         	goto	l2429
  3441  000B8A                     u1500:
  3442  000B8A                     
  3443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3444  000B8A  B04B               	btfsc	_flags^0,0,c
  3445  000B8C  EFCA  F005         	goto	u1511
  3446  000B90  EFCC  F005         	goto	u1510
  3447  000B94                     u1511:
  3448  000B94  EFD6  F005         	goto	l2437
  3449  000B98                     u1510:
  3450  000B98                     
  3451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3452  000B98  C021  F018         	movff	pad@buf,fputs@s
  3453  000B9C  C022  F019         	movff	pad@buf+1,fputs@s+1
  3454  000BA0  C01F  F01A         	movff	pad@fp,fputs@fp
  3455  000BA4  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  3456  000BA8  ECBC  F006         	call	_fputs	;wreg free
  3457  000BAC                     l2437:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  3460  000BAC  C021  F00D         	movff	pad@buf,strlen@s
  3461  000BB0  C022  F00E         	movff	pad@buf+1,strlen@s+1
  3462  000BB4  EC90  F007         	call	_strlen	;wreg free
  3463  000BB8  5028               	movf	pad@w^0,w,c
  3464  000BBA  240D               	addwf	?_strlen^0,w,c
  3465  000BBC  6E1F               	movwf	?_pad^0,c
  3466  000BBE  5029               	movf	(pad@w+1)^0,w,c
  3467  000BC0  200E               	addwfc	(?_strlen+1)^0,w,c
  3468  000BC2  6E20               	movwf	(?_pad+1)^0,c
  3469  000BC4  0012               	return		;funcret
  3470  000BC6                     __end_of_pad:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _strlen *****************
  3474 ;; Defined at:
  3475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3478 ;;		 -> dbuf(32), 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  a               2   14[COMRAM] PTR const unsigned char 
  3481 ;;		 -> dbuf(32), 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  2   12[COMRAM] unsigned int 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;Total ram usage:        4 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    4
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_pad
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text11
  3506  000F20                     __ptext11:
  3507                           	callstack 0
  3508  000F20                     _strlen:
  3509                           	callstack 21
  3510  000F20  C00D  F00F         	movff	strlen@s,strlen@a
  3511  000F24  C00E  F010         	movff	strlen@s+1,strlen@a+1
  3512  000F28  EF98  F007         	goto	l2409
  3513  000F2C                     l2407:
  3514  000F2C  4A0D               	infsnz	strlen@s^0,f,c
  3515  000F2E  2A0E               	incf	(strlen@s+1)^0,f,c
  3516  000F30                     l2409:
  3517  000F30  C00D  FFD9         	movff	strlen@s,fsr2l
  3518  000F34  C00E  FFDA         	movff	strlen@s+1,fsr2h
  3519  000F38  50DF               	movf	indf2,w,c
  3520  000F3A  A4D8               	btfss	status,2,c
  3521  000F3C  EFA2  F007         	goto	u1451
  3522  000F40  EFA4  F007         	goto	u1450
  3523  000F44                     u1451:
  3524  000F44  EF96  F007         	goto	l2407
  3525  000F48                     u1450:
  3526  000F48  500F               	movf	strlen@a^0,w,c
  3527  000F4A  5C0D               	subwf	strlen@s^0,w,c
  3528  000F4C  6E0D               	movwf	?_strlen^0,c
  3529  000F4E  5010               	movf	(strlen@a+1)^0,w,c
  3530  000F50  580E               	subwfb	(strlen@s+1)^0,w,c
  3531  000F52  6E0E               	movwf	(?_strlen+1)^0,c
  3532  000F54  0012               	return		;funcret
  3533  000F56                     __end_of_strlen:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _fputs *****************
  3537 ;; Defined at:
  3538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  s               2   23[COMRAM] PTR const unsigned char 
  3541 ;;		 -> dbuf(32), 
  3542 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  3543 ;;		 -> NULL(0), 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  i               2   28[COMRAM] int 
  3546 ;;  c               1   27[COMRAM] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2   23[COMRAM] int 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;Total ram usage:        7 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    7
  3563 ;; This function calls:
  3564 ;;		_fputc
  3565 ;; This function is called by:
  3566 ;;		_pad
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text12
  3571  000D78                     __ptext12:
  3572                           	callstack 0
  3573  000D78                     _fputs:
  3574                           	callstack 18
  3575  000D78  0E00               	movlw	0
  3576  000D7A  6E1E               	movwf	(fputs@i+1)^0,c
  3577  000D7C  0E00               	movlw	0
  3578  000D7E  6E1D               	movwf	fputs@i^0,c
  3579  000D80  EFCD  F006         	goto	l2403
  3580  000D84                     l2399:
  3581  000D84  C01C  F00F         	movff	fputs@c,fputc@c
  3582  000D88  6A10               	clrf	(fputc@c+1)^0,c
  3583  000D8A  C01A  F011         	movff	fputs@fp,fputc@fp
  3584  000D8E  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  3585  000D92  ECE3  F005         	call	_fputc	;wreg free
  3586  000D96  4A1D               	infsnz	fputs@i^0,f,c
  3587  000D98  2A1E               	incf	(fputs@i+1)^0,f,c
  3588  000D9A                     l2403:
  3589  000D9A  501D               	movf	fputs@i^0,w,c
  3590  000D9C  2418               	addwf	fputs@s^0,w,c
  3591  000D9E  6ED9               	movwf	fsr2l,c
  3592  000DA0  501E               	movf	(fputs@i+1)^0,w,c
  3593  000DA2  2019               	addwfc	(fputs@s+1)^0,w,c
  3594  000DA4  6EDA               	movwf	fsr2h,c
  3595  000DA6  50DF               	movf	indf2,w,c
  3596  000DA8  6E1C               	movwf	fputs@c^0,c
  3597  000DAA  501C               	movf	fputs@c^0,w,c
  3598  000DAC  A4D8               	btfss	status,2,c
  3599  000DAE  EFDB  F006         	goto	u1441
  3600  000DB2  EFDD  F006         	goto	u1440
  3601  000DB6                     u1441:
  3602  000DB6  EFC2  F006         	goto	l2399
  3603  000DBA                     u1440:
  3604  000DBA  0012               	return		;funcret
  3605  000DBC                     __end_of_fputs:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _fputc *****************
  3609 ;; Defined at:
  3610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  c               2   14[COMRAM] int 
  3613 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3614 ;;		 -> NULL(0), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2   14[COMRAM] int 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        9 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    6
  3633 ;; This function calls:
  3634 ;;		_putch
  3635 ;; This function is called by:
  3636 ;;		_pad
  3637 ;;		_vfpfcnvrt
  3638 ;;		_fputs
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text13
  3643  000BC6                     __ptext13:
  3644                           	callstack 0
  3645  000BC6                     _fputc:
  3646                           	callstack 18
  3647  000BC6  5011               	movf	fputc@fp^0,w,c
  3648  000BC8  1012               	iorwf	(fputc@fp+1)^0,w,c
  3649  000BCA  B4D8               	btfsc	status,2,c
  3650  000BCC  EFEA  F005         	goto	u1401
  3651  000BD0  EFEC  F005         	goto	u1400
  3652  000BD4                     u1401:
  3653  000BD4  EFF5  F005         	goto	l2387
  3654  000BD8                     u1400:
  3655  000BD8  5011               	movf	fputc@fp^0,w,c
  3656  000BDA  1012               	iorwf	(fputc@fp+1)^0,w,c
  3657  000BDC  A4D8               	btfss	status,2,c
  3658  000BDE  EFF3  F005         	goto	u1411
  3659  000BE2  EFF5  F005         	goto	u1410
  3660  000BE6                     u1411:
  3661  000BE6  EFFA  F005         	goto	l2389
  3662  000BEA                     u1410:
  3663  000BEA                     l2387:
  3664  000BEA  500F               	movf	fputc@c^0,w,c
  3665  000BEC  EC17  F009         	call	_putch
  3666  000BF0  EF2D  F006         	goto	l1206
  3667  000BF4                     l2389:
  3668  000BF4  EE20 F004          	lfsr	2,4
  3669  000BF8  5011               	movf	fputc@fp^0,w,c
  3670  000BFA  26D9               	addwf	fsr2l,f,c
  3671  000BFC  5012               	movf	(fputc@fp+1)^0,w,c
  3672  000BFE  22DA               	addwfc	fsr2h,f,c
  3673  000C00  50DE               	movf	postinc2,w,c
  3674  000C02  10DE               	iorwf	postinc2,w,c
  3675  000C04  B4D8               	btfsc	status,2,c
  3676  000C06  EF07  F006         	goto	u1421
  3677  000C0A  EF09  F006         	goto	u1420
  3678  000C0E                     u1421:
  3679  000C0E  EF24  F006         	goto	l2393
  3680  000C12                     u1420:
  3681  000C12  EE20 F004          	lfsr	2,4
  3682  000C16  5011               	movf	fputc@fp^0,w,c
  3683  000C18  26D9               	addwf	fsr2l,f,c
  3684  000C1A  5012               	movf	(fputc@fp+1)^0,w,c
  3685  000C1C  22DA               	addwfc	fsr2h,f,c
  3686  000C1E  EE10 F002          	lfsr	1,2
  3687  000C22  5011               	movf	fputc@fp^0,w,c
  3688  000C24  26E1               	addwf	fsr1l,f,c
  3689  000C26  5012               	movf	(fputc@fp+1)^0,w,c
  3690  000C28  22E2               	addwfc	fsr1h,f,c
  3691  000C2A  50DE               	movf	postinc2,w,c
  3692  000C2C  5CE6               	subwf	postinc1,w,c
  3693  000C2E  50E6               	movf	postinc1,w,c
  3694  000C30  0A80               	xorlw	128
  3695  000C32  6E17               	movwf	(??_fputc+4)^0,c
  3696  000C34  50DE               	movf	postinc2,w,c
  3697  000C36  0A80               	xorlw	128
  3698  000C38  5817               	subwfb	(??_fputc+4)^0,w,c
  3699  000C3A  B0D8               	btfsc	status,0,c
  3700  000C3C  EF22  F006         	goto	u1431
  3701  000C40  EF24  F006         	goto	u1430
  3702  000C44                     u1431:
  3703  000C44  EF2D  F006         	goto	l1206
  3704  000C48                     u1430:
  3705  000C48                     l2393:
  3706  000C48  EE20 F002          	lfsr	2,2
  3707  000C4C  5011               	movf	fputc@fp^0,w,c
  3708  000C4E  26D9               	addwf	fsr2l,f,c
  3709  000C50  5012               	movf	(fputc@fp+1)^0,w,c
  3710  000C52  22DA               	addwfc	fsr2h,f,c
  3711  000C54  2ADE               	incf	postinc2,f,c
  3712  000C56  0E00               	movlw	0
  3713  000C58  22DD               	addwfc	postdec2,f,c
  3714  000C5A                     l1206:
  3715  000C5A  0012               	return		;funcret
  3716  000C5C                     __end_of_fputc:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _putch *****************
  3720 ;; Defined at:
  3721 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  txData          1    wreg     unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  txData          1   13[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        1 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    5
  3742 ;; This function calls:
  3743 ;;		_EUSART1_Write
  3744 ;; This function is called by:
  3745 ;;		_fputc
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text14
  3750  00122E                     __ptext14:
  3751                           	callstack 0
  3752  00122E                     _putch:
  3753                           	callstack 18
  3754                           
  3755                           ;incstack = 0
  3756                           ;putch@txData stored from wreg
  3757  00122E  6E0E               	movwf	putch@txData^0,c
  3758  001230                     
  3759                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3760  001230  500E               	movf	putch@txData^0,w,c
  3761  001232  ECFA  F008         	call	_EUSART1_Write
  3762  001236  0012               	return		;funcret
  3763  001238                     __end_of_putch:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _EUSART1_Write *****************
  3767 ;; Defined at:
  3768 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  txData          1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  txData          1   12[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    4
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_putch
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text15
  3797  0011F4                     __ptext15:
  3798                           	callstack 0
  3799  0011F4                     _EUSART1_Write:
  3800                           	callstack 18
  3801                           
  3802                           ;incstack = 0
  3803                           ;EUSART1_Write@txData stored from wreg
  3804  0011F4  6E0D               	movwf	EUSART1_Write@txData^0,c
  3805  0011F6                     l251:
  3806                           
  3807                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3808  0011F6  A89E               	btfss	158,4,c	;volatile
  3809  0011F8  EF00  F009         	goto	u1391
  3810  0011FC  EF02  F009         	goto	u1390
  3811  001200                     u1391:
  3812  001200  EFFB  F008         	goto	l251
  3813  001204                     u1390:
  3814  001204                     
  3815                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3816  001204  C00D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3817  001208  0012               	return		;funcret
  3818  00120A                     __end_of_EUSART1_Write:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _SYSTEM_Initialize *****************
  3822 ;; Defined at:
  3823 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    6
  3844 ;; This function calls:
  3845 ;;		_EPWM1_Initialize
  3846 ;;		_EPWM2_Initialize
  3847 ;;		_EPWM3_Initialize
  3848 ;;		_EUSART1_Initialize
  3849 ;;		_INTERRUPT_Initialize
  3850 ;;		_OSCILLATOR_Initialize
  3851 ;;		_PIN_MANAGER_Initialize
  3852 ;;		_TMR0_Initialize
  3853 ;;		_TMR2_Initialize
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text16
  3860  001152                     __ptext16:
  3861                           	callstack 0
  3862  001152                     _SYSTEM_Initialize:
  3863                           	callstack 24
  3864  001152                     
  3865                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3866  001152  EC35  F009         	call	_INTERRUPT_Initialize	;wreg free
  3867  001156                     
  3868                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3869  001156  EC57  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3870  00115A                     
  3871                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3872  00115A  ECEC  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3873  00115E                     
  3874                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  3875  00115E  ECCC  F008         	call	_EPWM2_Initialize	;wreg free
  3876  001162                     
  3877                           ;mcc_generated_files/mcc.c: 57:     EPWM3_Initialize();
  3878  001162  ECBC  F008         	call	_EPWM3_Initialize	;wreg free
  3879  001166                     
  3880                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  3881  001166  ECDC  F008         	call	_EPWM1_Initialize	;wreg free
  3882  00116A                     
  3883                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3884  00116A  EC0F  F009         	call	_TMR2_Initialize	;wreg free
  3885  00116E                     
  3886                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  3887  00116E  ECAB  F007         	call	_TMR0_Initialize	;wreg free
  3888  001172                     
  3889                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3890  001172  ECFF  F006         	call	_EUSART1_Initialize	;wreg free
  3891  001176  0012               	return		;funcret
  3892  001178                     __end_of_SYSTEM_Initialize:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _TMR2_Initialize *****************
  3896 ;; Defined at:
  3897 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    4
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_SYSTEM_Initialize
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text17
  3926  00121E                     __ptext17:
  3927                           	callstack 0
  3928  00121E                     _TMR2_Initialize:
  3929                           	callstack 25
  3930  00121E                     
  3931                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  3932  00121E  0E3F               	movlw	63
  3933  001220  6EBB               	movwf	187,c	;volatile
  3934                           
  3935                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3936  001222  0E00               	movlw	0
  3937  001224  6EBC               	movwf	188,c	;volatile
  3938  001226                     
  3939                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3940  001226  929E               	bcf	158,1,c	;volatile
  3941                           
  3942                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  3943  001228  0E06               	movlw	6
  3944  00122A  6EBA               	movwf	186,c	;volatile
  3945  00122C  0012               	return		;funcret
  3946  00122E                     __end_of_TMR2_Initialize:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _TMR0_Initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:        2 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    5
  3972 ;; This function calls:
  3973 ;;		_TMR0_SetInterruptHandler
  3974 ;; This function is called by:
  3975 ;;		_SYSTEM_Initialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text18
  3980  000F56                     __ptext18:
  3981                           	callstack 0
  3982  000F56                     _TMR0_Initialize:
  3983                           	callstack 24
  3984  000F56                     
  3985                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3986  000F56  9CD5               	bcf	213,6,c	;volatile
  3987  000F58                     
  3988                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xF5;
  3989  000F58  0EF5               	movlw	245
  3990  000F5A  6ED7               	movwf	215,c	;volatile
  3991  000F5C                     
  3992                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xFF;
  3993  000F5C  68D6               	setf	214,c	;volatile
  3994  000F5E                     
  3995                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3996  000F5E  50D6               	movf	214,w,c	;volatile
  3997  000F60  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  3998  000F64  6A10               	clrf	(??_TMR0_Initialize+1)^0,c
  3999  000F66  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4000  000F6A  6A0F               	clrf	??_TMR0_Initialize^0,c
  4001  000F6C  100F               	iorwf	??_TMR0_Initialize^0,w,c
  4002  000F6E  6E4D               	movwf	_timer0ReloadVal^0,c	;volatile
  4003  000F70  5010               	movf	(??_TMR0_Initialize+1)^0,w,c
  4004  000F72  6E4E               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4005  000F74                     
  4006                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4007  000F74  94F2               	bcf	242,2,c	;volatile
  4008  000F76                     
  4009                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4010  000F76  8AF2               	bsf	242,5,c	;volatile
  4011  000F78                     
  4012                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4013  000F78  0E6E               	movlw	low _TMR0_DefaultInterruptHandler
  4014  000F7A  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4015  000F7C  0E12               	movlw	high _TMR0_DefaultInterruptHandler
  4016  000F7E  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4017  000F80  EC1C  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  4018  000F84                     
  4019                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  4020  000F84  0E93               	movlw	147
  4021  000F86  6ED5               	movwf	213,c	;volatile
  4022  000F88  0012               	return		;funcret
  4023  000F8A                     __end_of_TMR0_Initialize:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _TMR0_SetInterruptHandler *****************
  4027 ;; Defined at:
  4028 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  InterruptHan    2   12[COMRAM] PTR FTN()void 
  4031 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;Total ram usage:        2 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    4
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_TMR0_Initialize
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text19
  4059  001238                     __ptext19:
  4060                           	callstack 0
  4061  001238                     _TMR0_SetInterruptHandler:
  4062                           	callstack 26
  4063  001238                     
  4064                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4065  001238  C00D  F0A4         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4066  00123C  C00E  F0A5         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4067  001240  0012               	return		;funcret
  4068  001242                     __end_of_TMR0_SetInterruptHandler:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _PIN_MANAGER_Initialize *****************
  4072 ;; Defined at:
  4073 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    4
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_SYSTEM_Initialize
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text20
  4102  0010AE                     __ptext20:
  4103                           	callstack 0
  4104  0010AE                     _PIN_MANAGER_Initialize:
  4105                           	callstack 25
  4106  0010AE                     
  4107                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4108  0010AE  0E00               	movlw	0
  4109  0010B0  6E89               	movwf	137,c	;volatile
  4110                           
  4111                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4112  0010B2  0E00               	movlw	0
  4113  0010B4  6E8A               	movwf	138,c	;volatile
  4114                           
  4115                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4116  0010B6  0E00               	movlw	0
  4117  0010B8  6E8B               	movwf	139,c	;volatile
  4118  0010BA                     
  4119                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4120  0010BA  6892               	setf	146,c	;volatile
  4121                           
  4122                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  4123  0010BC  0EDF               	movlw	223
  4124  0010BE  6E93               	movwf	147,c	;volatile
  4125                           
  4126                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB9;
  4127  0010C0  0EB9               	movlw	185
  4128  0010C2  6E94               	movwf	148,c	;volatile
  4129                           
  4130                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4131  0010C4  0E3C               	movlw	60
  4132  0010C6  010F               	movlb	15	; () banked
  4133  0010C8  6F3A               	movwf	58,b	;volatile
  4134                           
  4135                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4136  0010CA  0E3F               	movlw	63
  4137  0010CC  6F39               	movwf	57,b	;volatile
  4138                           
  4139                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4140  0010CE  0E2F               	movlw	47
  4141  0010D0  6F38               	movwf	56,b	;volatile
  4142                           
  4143                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4144  0010D2  0E00               	movlw	0
  4145  0010D4  6E61               	movwf	97,c	;volatile
  4146  0010D6                     
  4147                           ; BSR set to: 15
  4148                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4149  0010D6  8EF1               	bsf	241,7,c	;volatile
  4150  0010D8                     
  4151                           ; BSR set to: 15
  4152  0010D8  0012               	return		;funcret
  4153  0010DA                     __end_of_PIN_MANAGER_Initialize:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _OSCILLATOR_Initialize *****************
  4157 ;; Defined at:
  4158 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    4
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_SYSTEM_Initialize
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text21
  4187  0011D8                     __ptext21:
  4188                           	callstack 0
  4189  0011D8                     _OSCILLATOR_Initialize:
  4190                           	callstack 25
  4191  0011D8                     
  4192                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  4193  0011D8  0E70               	movlw	112
  4194  0011DA  6ED3               	movwf	211,c	;volatile
  4195                           
  4196                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  4197  0011DC  0E04               	movlw	4
  4198  0011DE  6ED2               	movwf	210,c	;volatile
  4199                           
  4200                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  4201  0011E0  0E40               	movlw	64
  4202  0011E2  6E9B               	movwf	155,c	;volatile
  4203  0011E4                     l310:
  4204                           
  4205                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  4206  0011E4  AED2               	btfss	4050,7,c	;volatile
  4207  0011E6  EFF7  F008         	goto	u1151
  4208  0011EA  EFF9  F008         	goto	u1150
  4209  0011EE                     u1151:
  4210  0011EE  EFF2  F008         	goto	l310
  4211  0011F2                     u1150:
  4212  0011F2  0012               	return		;funcret
  4213  0011F4                     __end_of_OSCILLATOR_Initialize:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _INTERRUPT_Initialize *****************
  4217 ;; Defined at:
  4218 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		None
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    4
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_SYSTEM_Initialize
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text22
  4247  00126A                     __ptext22:
  4248                           	callstack 0
  4249  00126A                     _INTERRUPT_Initialize:
  4250                           	callstack 25
  4251  00126A                     
  4252                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4253  00126A  9ED0               	bcf	208,7,c	;volatile
  4254  00126C  0012               	return		;funcret
  4255  00126E                     __end_of_INTERRUPT_Initialize:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _EUSART1_Initialize *****************
  4259 ;; Defined at:
  4260 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    5
  4281 ;; This function calls:
  4282 ;;		_EUSART1_SetErrorHandler
  4283 ;;		_EUSART1_SetFramingErrorHandler
  4284 ;;		_EUSART1_SetOverrunErrorHandler
  4285 ;; This function is called by:
  4286 ;;		_SYSTEM_Initialize
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text23
  4291  000DFE                     __ptext23:
  4292                           	callstack 0
  4293  000DFE                     _EUSART1_Initialize:
  4294                           	callstack 24
  4295  000DFE                     
  4296                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4297  000DFE  0E08               	movlw	8
  4298  000E00  6EB8               	movwf	184,c	;volatile
  4299                           
  4300                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4301  000E02  0E90               	movlw	144
  4302  000E04  6EAB               	movwf	171,c	;volatile
  4303                           
  4304                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4305  000E06  0E24               	movlw	36
  4306  000E08  6EAC               	movwf	172,c	;volatile
  4307                           
  4308                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4309  000E0A  0E82               	movlw	130
  4310  000E0C  6EAF               	movwf	175,c	;volatile
  4311                           
  4312                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4313  000E0E  0E06               	movlw	6
  4314  000E10  6EB0               	movwf	176,c	;volatile
  4315  000E12                     
  4316                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4317  000E12  0E00               	movlw	0
  4318  000E14  6E0D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4319  000E16  0E00               	movlw	0
  4320  000E18  6E0E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4321  000E1A  EC26  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4322  000E1E                     
  4323                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4324  000E1E  0E00               	movlw	0
  4325  000E20  6E0D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4326  000E22  0E00               	movlw	0
  4327  000E24  6E0E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4328  000E26  EC21  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4329  000E2A                     
  4330                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4331  000E2A  0E00               	movlw	0
  4332  000E2C  6E0D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4333  000E2E  0E00               	movlw	0
  4334  000E30  6E0E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4335  000E32  EC2B  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  4336  000E36                     
  4337                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4338  000E36  0E00               	movlw	0
  4339  000E38  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  4340  000E3A  0012               	return		;funcret
  4341  000E3C                     __end_of_EUSART1_Initialize:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4345 ;; Defined at:
  4346 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  4349 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    4
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_EUSART1_Initialize
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text24
  4376  001242                     __ptext24:
  4377                           	callstack 0
  4378  001242                     _EUSART1_SetOverrunErrorHandler:
  4379                           	callstack 24
  4380  001242                     
  4381                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4382  001242  C00D  F0A0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4383  001246  C00E  F0A1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4384  00124A  0012               	return		;funcret
  4385  00124C                     __end_of_EUSART1_SetOverrunErrorHandler:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4389 ;; Defined at:
  4390 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  4393 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    4
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_EUSART1_Initialize
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text25
  4420  00124C                     __ptext25:
  4421                           	callstack 0
  4422  00124C                     _EUSART1_SetFramingErrorHandler:
  4423                           	callstack 24
  4424  00124C                     
  4425                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4426  00124C  C00D  F0A2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4427  001250  C00E  F0A3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4428  001254  0012               	return		;funcret
  4429  001256                     __end_of_EUSART1_SetFramingErrorHandler:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _EUSART1_SetErrorHandler *****************
  4433 ;; Defined at:
  4434 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  4437 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    4
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_EUSART1_Initialize
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text26
  4464  001256                     __ptext26:
  4465                           	callstack 0
  4466  001256                     _EUSART1_SetErrorHandler:
  4467                           	callstack 24
  4468  001256                     
  4469                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4470  001256  C00D  F09E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4471  00125A  C00E  F09F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4472  00125E  0012               	return		;funcret
  4473  001260                     __end_of_EUSART1_SetErrorHandler:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _EPWM3_Initialize *****************
  4477 ;; Defined at:
  4478 ;;		line 64 in file "mcc_generated_files/epwm3.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    4
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_SYSTEM_Initialize
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text27
  4507  001178                     __ptext27:
  4508                           	callstack 0
  4509  001178                     _EPWM3_Initialize:
  4510                           	callstack 25
  4511  001178                     
  4512                           ;mcc_generated_files/epwm3.c: 69:  CCP3CON = 0x3C;
  4513  001178  0E3C               	movlw	60
  4514  00117A  010F               	movlb	15	; () banked
  4515  00117C  6F5D               	movwf	93,b	;volatile
  4516                           
  4517                           ;mcc_generated_files/epwm3.c: 72:  ECCP3AS = 0x00;
  4518  00117E  0E00               	movlw	0
  4519  001180  6F5B               	movwf	91,b	;volatile
  4520                           
  4521                           ;mcc_generated_files/epwm3.c: 75:  PWM3CON = 0x80;
  4522  001182  0E80               	movlw	128
  4523  001184  6F5C               	movwf	92,b	;volatile
  4524                           
  4525                           ;mcc_generated_files/epwm3.c: 78:  PSTR3CON = 0x01;
  4526  001186  0E01               	movlw	1
  4527  001188  6F5A               	movwf	90,b	;volatile
  4528                           
  4529                           ;mcc_generated_files/epwm3.c: 81:  CCPR3H = 0x00;
  4530  00118A  0E00               	movlw	0
  4531  00118C  6F5F               	movwf	95,b	;volatile
  4532                           
  4533                           ;mcc_generated_files/epwm3.c: 84:  CCPR3L = 0x1F;
  4534  00118E  0E1F               	movlw	31
  4535  001190  6F5E               	movwf	94,b	;volatile
  4536                           
  4537                           ;mcc_generated_files/epwm3.c: 87:  CCPTMRS0bits.C3TSEL = 0x0;
  4538  001192  0E3F               	movlw	-193
  4539  001194  1749               	andwf	73,f,b	;volatile
  4540  001196                     
  4541                           ; BSR set to: 15
  4542  001196  0012               	return		;funcret
  4543  001198                     __end_of_EPWM3_Initialize:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function _EPWM2_Initialize *****************
  4547 ;; Defined at:
  4548 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    4
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_SYSTEM_Initialize
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text28
  4577  001198                     __ptext28:
  4578                           	callstack 0
  4579  001198                     _EPWM2_Initialize:
  4580                           	callstack 25
  4581  001198                     
  4582                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  4583  001198  0E3C               	movlw	60
  4584  00119A  6E66               	movwf	102,c	;volatile
  4585                           
  4586                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  4587  00119C  0E00               	movlw	0
  4588  00119E  6E64               	movwf	100,c	;volatile
  4589                           
  4590                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  4591  0011A0  0E80               	movlw	128
  4592  0011A2  6E65               	movwf	101,c	;volatile
  4593                           
  4594                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  4595  0011A4  0E01               	movlw	1
  4596  0011A6  6E63               	movwf	99,c	;volatile
  4597                           
  4598                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  4599  0011A8  0E00               	movlw	0
  4600  0011AA  6E68               	movwf	104,c	;volatile
  4601                           
  4602                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x1F;
  4603  0011AC  0E1F               	movlw	31
  4604  0011AE  6E67               	movwf	103,c	;volatile
  4605                           
  4606                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  4607  0011B0  0EE7               	movlw	-25
  4608  0011B2  010F               	movlb	15	; () banked
  4609  0011B4  1749               	andwf	73,f,b	;volatile
  4610  0011B6                     
  4611                           ; BSR set to: 15
  4612  0011B6  0012               	return		;funcret
  4613  0011B8                     __end_of_EPWM2_Initialize:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _EPWM1_Initialize *****************
  4617 ;; Defined at:
  4618 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_SYSTEM_Initialize
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text29
  4647  0011B8                     __ptext29:
  4648                           	callstack 0
  4649  0011B8                     _EPWM1_Initialize:
  4650                           	callstack 25
  4651  0011B8                     
  4652                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4653  0011B8  0E3C               	movlw	60
  4654  0011BA  6EBD               	movwf	189,c	;volatile
  4655                           
  4656                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4657  0011BC  0E00               	movlw	0
  4658  0011BE  6EB6               	movwf	182,c	;volatile
  4659                           
  4660                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  4661  0011C0  0E80               	movlw	128
  4662  0011C2  6EB7               	movwf	183,c	;volatile
  4663                           
  4664                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  4665  0011C4  0E01               	movlw	1
  4666  0011C6  6EB9               	movwf	185,c	;volatile
  4667                           
  4668                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  4669  0011C8  0E00               	movlw	0
  4670  0011CA  6EBF               	movwf	191,c	;volatile
  4671                           
  4672                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  4673  0011CC  0E1F               	movlw	31
  4674  0011CE  6EBE               	movwf	190,c	;volatile
  4675                           
  4676                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  4677  0011D0  0EFC               	movlw	-4
  4678  0011D2  010F               	movlb	15	; () banked
  4679  0011D4  1749               	andwf	73,f,b	;volatile
  4680  0011D6                     
  4681                           ; BSR set to: 15
  4682  0011D6  0012               	return		;funcret
  4683  0011D8                     __end_of_EPWM1_Initialize:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _EUSART1_is_rx_ready *****************
  4687 ;; Defined at:
  4688 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      _Bool 
  4695 ;; Registers used:
  4696 ;;		wreg
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    4
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text30
  4717  00120A                     __ptext30:
  4718                           	callstack 0
  4719  00120A                     _EUSART1_is_rx_ready:
  4720                           	callstack 26
  4721  00120A                     
  4722                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4723  00120A  BA9E               	btfsc	158,5,c	;volatile
  4724  00120C  EF0A  F009         	goto	u1221
  4725  001210  EF0D  F009         	goto	u1220
  4726  001214                     u1221:
  4727  001214  0E01               	movlw	1
  4728  001216  EF0E  F009         	goto	u1226
  4729  00121A                     u1220:
  4730  00121A  0E00               	movlw	0
  4731  00121C                     u1226:
  4732  00121C  0012               	return		;funcret
  4733  00121E                     __end_of_EUSART1_is_rx_ready:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _EUSART1_Read *****************
  4737 ;; Defined at:
  4738 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      unsigned char 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    4
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;;		_getch
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text31
  4768  00112A                     __ptext31:
  4769                           	callstack 0
  4770  00112A                     _EUSART1_Read:
  4771                           	callstack 26
  4772  00112A                     l244:
  4773                           
  4774                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4775  00112A  AA9E               	btfss	158,5,c	;volatile
  4776  00112C  EF9A  F008         	goto	u1231
  4777  001130  EF9C  F008         	goto	u1230
  4778  001134                     u1231:
  4779  001134  EF95  F008         	goto	l244
  4780  001138                     u1230:
  4781  001138                     
  4782                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4783  001138  0E00               	movlw	0
  4784  00113A  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  4785  00113C                     
  4786                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4787  00113C  A2AB               	btfss	171,1,c	;volatile
  4788  00113E  EFA3  F008         	goto	u1241
  4789  001142  EFA5  F008         	goto	u1240
  4790  001146                     u1241:
  4791  001146  EFA7  F008         	goto	l2181
  4792  00114A                     u1240:
  4793  00114A                     
  4794                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4795  00114A  98AB               	bcf	171,4,c	;volatile
  4796                           
  4797                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4798  00114C  88AB               	bsf	171,4,c	;volatile
  4799  00114E                     l2181:
  4800                           
  4801                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4802  00114E  50AE               	movf	174,w,c	;volatile
  4803  001150  0012               	return		;funcret
  4804  001152                     __end_of_EUSART1_Read:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function _EPWM3_LoadDutyValue *****************
  4808 ;; Defined at:
  4809 ;;		line 90 in file "mcc_generated_files/epwm3.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        4 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    4
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_main
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text32
  4838  000F8A                     __ptext32:
  4839                           	callstack 0
  4840  000F8A                     _EPWM3_LoadDutyValue:
  4841                           	callstack 26
  4842  000F8A                     
  4843                           ;mcc_generated_files/epwm3.c: 90: void EPWM3_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm3.c: 91: {;mcc_generated_files/epwm3.c: 93:     CCPR3L = ((dutyValue & 0x
      +                          03FC)>>2);
  4844  000F8A  C00D  F00F         	movff	EPWM3_LoadDutyValue@dutyValue,??_EPWM3_LoadDutyValue
  4845  000F8E  C00E  F010         	movff	EPWM3_LoadDutyValue@dutyValue+1,??_EPWM3_LoadDutyValue+1
  4846  000F92  90D8               	bcf	status,0,c
  4847  000F94  3210               	rrcf	(??_EPWM3_LoadDutyValue+1)^0,f,c
  4848  000F96  320F               	rrcf	??_EPWM3_LoadDutyValue^0,f,c
  4849  000F98  90D8               	bcf	status,0,c
  4850  000F9A  3210               	rrcf	(??_EPWM3_LoadDutyValue+1)^0,f,c
  4851  000F9C  320F               	rrcf	??_EPWM3_LoadDutyValue^0,f,c
  4852  000F9E  500F               	movf	??_EPWM3_LoadDutyValue^0,w,c
  4853  000FA0  010F               	movlb	15	; () banked
  4854  000FA2  6F5E               	movwf	94,b	;volatile
  4855                           
  4856                           ;mcc_generated_files/epwm3.c: 96:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4857  000FA4  C00D  F00F         	movff	EPWM3_LoadDutyValue@dutyValue,??_EPWM3_LoadDutyValue
  4858  000FA8  0E03               	movlw	3
  4859  000FAA  160F               	andwf	??_EPWM3_LoadDutyValue^0,f,c
  4860  000FAC  3A0F               	swapf	??_EPWM3_LoadDutyValue^0,f,c
  4861  000FAE  0EF0               	movlw	240
  4862  000FB0  160F               	andwf	??_EPWM3_LoadDutyValue^0,f,c
  4863  000FB2  515D               	movf	93,w,b	;volatile
  4864  000FB4  0BCF               	andlw	207
  4865  000FB6  100F               	iorwf	??_EPWM3_LoadDutyValue^0,w,c
  4866  000FB8  6F5D               	movwf	93,b	;volatile
  4867  000FBA                     
  4868                           ; BSR set to: 15
  4869  000FBA  0012               	return		;funcret
  4870  000FBC                     __end_of_EPWM3_LoadDutyValue:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function _EPWM2_LoadDutyValue *****************
  4874 ;; Defined at:
  4875 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;Total ram usage:        4 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    4
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text33
  4904  000FEE                     __ptext33:
  4905                           	callstack 0
  4906  000FEE                     _EPWM2_LoadDutyValue:
  4907                           	callstack 26
  4908  000FEE                     
  4909                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  4910  000FEE  C00D  F00F         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  4911  000FF2  C00E  F010         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  4912  000FF6  90D8               	bcf	status,0,c
  4913  000FF8  3210               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  4914  000FFA  320F               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  4915  000FFC  90D8               	bcf	status,0,c
  4916  000FFE  3210               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  4917  001000  320F               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  4918  001002  500F               	movf	??_EPWM2_LoadDutyValue^0,w,c
  4919  001004  6E67               	movwf	103,c	;volatile
  4920                           
  4921                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4922  001006  C00D  F00F         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  4923  00100A  0E03               	movlw	3
  4924  00100C  160F               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  4925  00100E  3A0F               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  4926  001010  0EF0               	movlw	240
  4927  001012  160F               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  4928  001014  5066               	movf	102,w,c	;volatile
  4929  001016  0BCF               	andlw	207
  4930  001018  100F               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  4931  00101A  6E66               	movwf	102,c	;volatile
  4932  00101C  0012               	return		;funcret
  4933  00101E                     __end_of_EPWM2_LoadDutyValue:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _EPWM1_LoadDutyValue *****************
  4937 ;; Defined at:
  4938 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;Total ram usage:        4 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    4
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text34
  4967  00101E                     __ptext34:
  4968                           	callstack 0
  4969  00101E                     _EPWM1_LoadDutyValue:
  4970                           	callstack 26
  4971  00101E                     
  4972                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4973  00101E  C00D  F00F         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4974  001022  C00E  F010         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  4975  001026  90D8               	bcf	status,0,c
  4976  001028  3210               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4977  00102A  320F               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4978  00102C  90D8               	bcf	status,0,c
  4979  00102E  3210               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4980  001030  320F               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4981  001032  500F               	movf	??_EPWM1_LoadDutyValue^0,w,c
  4982  001034  6EBE               	movwf	190,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4985  001036  C00D  F00F         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4986  00103A  0E03               	movlw	3
  4987  00103C  160F               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4988  00103E  3A0F               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  4989  001040  0EF0               	movlw	240
  4990  001042  160F               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4991  001044  50BD               	movf	189,w,c	;volatile
  4992  001046  0BCF               	andlw	207
  4993  001048  100F               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  4994  00104A  6EBD               	movwf	189,c	;volatile
  4995  00104C  0012               	return		;funcret
  4996  00104E                     __end_of_EPWM1_LoadDutyValue:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function _INTERRUPT_InterruptManager *****************
  5000 ;; Defined at:
  5001 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;Total ram usage:        6 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    3
  5022 ;; This function calls:
  5023 ;;		_TMR0_ISR
  5024 ;; This function is called by:
  5025 ;;		Interrupt level 2
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	intcode
  5030  000008                     __pintcode:
  5031                           	callstack 0
  5032  000008                     _INTERRUPT_InterruptManager:
  5033                           	callstack 18
  5034                           
  5035                           ;incstack = 0
  5036  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5037  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  5038  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5039  000012  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5040  000016  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5041  00001A  CFF3 F00B          	movff	prodl,??_INTERRUPT_InterruptManager+4
  5042  00001E  CFF4 F00C          	movff	prodh,??_INTERRUPT_InterruptManager+5
  5043  000022                     
  5044                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5045  000022  AAF2               	btfss	242,5,c	;volatile
  5046  000024  EF16  F000         	goto	i2u125_41
  5047  000028  EF18  F000         	goto	i2u125_40
  5048  00002C                     i2u125_41:
  5049  00002C  EF21  F000         	goto	i2l76
  5050  000030                     i2u125_40:
  5051  000030  A4F2               	btfss	242,2,c	;volatile
  5052  000032  EF1D  F000         	goto	i2u126_41
  5053  000036  EF1F  F000         	goto	i2u126_40
  5054  00003A                     i2u126_41:
  5055  00003A  EF21  F000         	goto	i2l76
  5056  00003E                     i2u126_40:
  5057  00003E                     
  5058                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5059  00003E  EC74  F007         	call	_TMR0_ISR	;wreg free
  5060  000042                     i2l76:
  5061  000042  C00C  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  5062  000046  C00B  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  5063  00004A  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5064  00004E  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5065  000052  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5066  000056  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5067  00005A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5068  00005C  0011               	retfie		f
  5069  00005E                     __end_of_INTERRUPT_InterruptManager:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _TMR0_ISR *****************
  5073 ;; Defined at:
  5074 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		Absolute function
  5097 ;;		_TMR0_DefaultInterruptHandler
  5098 ;;		_myTMR0ISR
  5099 ;; This function is called by:
  5100 ;;		_INTERRUPT_InterruptManager
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text36
  5105  000EE8                     __ptext36:
  5106                           	callstack 0
  5107  000EE8                     _TMR0_ISR:
  5108                           	callstack 18
  5109  000EE8                     
  5110                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5111  000EE8  94F2               	bcf	242,2,c	;volatile
  5112  000EEA                     
  5113                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5114  000EEA  504E               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5115  000EEC  6ED7               	movwf	215,c	;volatile
  5116  000EEE                     
  5117                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5118  000EEE  C04D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5119  000EF2                     
  5120                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5121  000EF2  0100               	movlb	0	; () banked
  5122  000EF4  51A4               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5123  000EF6  11A5               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5124  000EF8  B4D8               	btfsc	status,2,c
  5125  000EFA  EF81  F007         	goto	i2u120_41
  5126  000EFE  EF83  F007         	goto	i2u120_40
  5127  000F02                     i2u120_41:
  5128  000F02  EF8F  F007         	goto	i2l178
  5129  000F06                     i2u120_40:
  5130  000F06                     
  5131                           ; BSR set to: 0
  5132                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5133  000F06  D802               	call	i2u121_48
  5134  000F08  EF8F  F007         	goto	i2u121_49
  5135  000F0C                     i2u121_48:
  5136  000F0C  0005               	push	
  5137  000F0E  6EFA               	movwf	pclath,c
  5138  000F10  51A4               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5139  000F12  6EFD               	movwf	tosl,c
  5140  000F14  51A5               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5141  000F16  6EFE               	movwf	tosh,c
  5142  000F18  6AFF               	clrf	tosu,c
  5143  000F1A  50FA               	movf	pclath,w,c
  5144  000F1C  0012               	return		;indir
  5145  000F1E                     i2u121_49:
  5146  000F1E                     i2l178:
  5147  000F1E  0012               	return		;funcret
  5148  000F20                     __end_of_TMR0_ISR:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5152 ;; Defined at:
  5153 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		None
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;Total ram usage:        0 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_TMR0_Initialize
  5177 ;;		_TMR0_ISR
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text37
  5182  00126E                     __ptext37:
  5183                           	callstack 0
  5184  00126E                     _TMR0_DefaultInterruptHandler:
  5185                           	callstack 19
  5186  00126E  0012               	return		;funcret
  5187  001270                     __end_of_TMR0_DefaultInterruptHandler:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _myTMR0ISR *****************
  5191 ;; Defined at:
  5192 ;;		line 200 in file "main.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:        2 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    1
  5213 ;; This function calls:
  5214 ;;		_TMR0_WriteTimer
  5215 ;;		i2_EPWM1_LoadDutyValue
  5216 ;;		i2_EPWM2_LoadDutyValue
  5217 ;;		i2_EPWM3_LoadDutyValue
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;;		_TMR0_ISR
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text38
  5225  000A18                     __ptext38:
  5226                           	callstack 0
  5227  000A18                     _myTMR0ISR:
  5228                           	callstack 18
  5229  000A18                     
  5230                           ;main.c: 201:  static uint8_t step = 0;;main.c: 202:  static uint8_t edge = 0;;main.c: 2
      +                          03:  static uint16_t redVal = 0x00;;main.c: 204:  static uint16_t greVal = 0x00;;main.c:
      +                           205:  static uint16_t bluVal = 0xff;;main.c: 207:  if(colorTour == 1){
  5231  000A18  0100               	movlb	0	; () banked
  5232  000A1A  05A6               	decf	_colorTour& (0+255),w,b
  5233  000A1C  A4D8               	btfss	status,2,c
  5234  000A1E  EF13  F005         	goto	i2u116_41
  5235  000A22  EF15  F005         	goto	i2u116_40
  5236  000A26                     i2u116_41:
  5237  000A26  EF81  F005         	goto	i2l413
  5238  000A2A                     i2u116_40:
  5239  000A2A                     
  5240                           ; BSR set to: 0
  5241                           ;main.c: 208:      TMR0_WriteTimer(0x10000 - timerInterval);
  5242  000A2A  51ED               	movf	_timerInterval& (0+255),w,b
  5243  000A2C  0800               	sublw	0
  5244  000A2E  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  5245  000A30  51EE               	movf	(_timerInterval+1)& (0+255),w,b
  5246  000A32  A0D8               	btfss	status,0,c
  5247  000A34  2AE8               	incf	wreg,f,c
  5248  000A36  0800               	sublw	0
  5249  000A38  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  5250  000A3A  EC30  F009         	call	_TMR0_WriteTimer	;wreg free
  5251  000A3E                     
  5252                           ;main.c: 209:      redVal = redVal + deltaRed[edge];
  5253  000A3E  504F               	movf	myTMR0ISR@edge^0,w,c
  5254  000A40  0D02               	mullw	2
  5255  000A42  0ED3               	movlw	low _deltaRed
  5256  000A44  24F3               	addwf	243,w,c
  5257  000A46  6ED9               	movwf	fsr2l,c
  5258  000A48  0E00               	movlw	high _deltaRed
  5259  000A4A  20F4               	addwfc	prodh,w,c
  5260  000A4C  6EDA               	movwf	fsr2h,c
  5261  000A4E  CFDE F005          	movff	postinc2,??_myTMR0ISR
  5262  000A52  CFDD F006          	movff	postdec2,??_myTMR0ISR+1
  5263  000A56  0100               	movlb	0	; () banked
  5264  000A58  519C               	movf	myTMR0ISR@redVal& (0+255),w,b
  5265  000A5A  2405               	addwf	??_myTMR0ISR^0,w,c
  5266  000A5C  6F9C               	movwf	myTMR0ISR@redVal& (0+255),b
  5267  000A5E  519D               	movf	(myTMR0ISR@redVal+1)& (0+255),w,b
  5268  000A60  2006               	addwfc	(??_myTMR0ISR+1)^0,w,c
  5269  000A62  6F9D               	movwf	(myTMR0ISR@redVal+1)& (0+255),b
  5270  000A64                     
  5271                           ; BSR set to: 0
  5272                           ;main.c: 210:      greVal = greVal + deltaGre[edge];
  5273  000A64  504F               	movf	myTMR0ISR@edge^0,w,c
  5274  000A66  0D02               	mullw	2
  5275  000A68  0ECD               	movlw	low _deltaGre
  5276  000A6A  24F3               	addwf	243,w,c
  5277  000A6C  6ED9               	movwf	fsr2l,c
  5278  000A6E  0E00               	movlw	high _deltaGre
  5279  000A70  20F4               	addwfc	prodh,w,c
  5280  000A72  6EDA               	movwf	fsr2h,c
  5281  000A74  CFDE F005          	movff	postinc2,??_myTMR0ISR
  5282  000A78  CFDD F006          	movff	postdec2,??_myTMR0ISR+1
  5283  000A7C  519A               	movf	myTMR0ISR@greVal& (0+255),w,b
  5284  000A7E  2405               	addwf	??_myTMR0ISR^0,w,c
  5285  000A80  6F9A               	movwf	myTMR0ISR@greVal& (0+255),b
  5286  000A82  519B               	movf	(myTMR0ISR@greVal+1)& (0+255),w,b
  5287  000A84  2006               	addwfc	(??_myTMR0ISR+1)^0,w,c
  5288  000A86  6F9B               	movwf	(myTMR0ISR@greVal+1)& (0+255),b
  5289  000A88                     
  5290                           ; BSR set to: 0
  5291                           ;main.c: 211:      bluVal = bluVal + deltaBlu[edge];
  5292  000A88  504F               	movf	myTMR0ISR@edge^0,w,c
  5293  000A8A  0D02               	mullw	2
  5294  000A8C  0EC7               	movlw	low _deltaBlu
  5295  000A8E  24F3               	addwf	243,w,c
  5296  000A90  6ED9               	movwf	fsr2l,c
  5297  000A92  0E00               	movlw	high _deltaBlu
  5298  000A94  20F4               	addwfc	prodh,w,c
  5299  000A96  6EDA               	movwf	fsr2h,c
  5300  000A98  CFDE F005          	movff	postinc2,??_myTMR0ISR
  5301  000A9C  CFDD F006          	movff	postdec2,??_myTMR0ISR+1
  5302  000AA0  51EB               	movf	myTMR0ISR@bluVal& (0+255),w,b
  5303  000AA2  2405               	addwf	??_myTMR0ISR^0,w,c
  5304  000AA4  6FEB               	movwf	myTMR0ISR@bluVal& (0+255),b
  5305  000AA6  51EC               	movf	(myTMR0ISR@bluVal+1)& (0+255),w,b
  5306  000AA8  2006               	addwfc	(??_myTMR0ISR+1)^0,w,c
  5307  000AAA  6FEC               	movwf	(myTMR0ISR@bluVal+1)& (0+255),b
  5308  000AAC                     
  5309                           ; BSR set to: 0
  5310                           ;main.c: 213:      EPWM1_LoadDutyValue(redVal);
  5311  000AAC  C09C  F001         	movff	myTMR0ISR@redVal,i2EPWM1_LoadDutyValue@dutyValue
  5312  000AB0  C09D  F002         	movff	myTMR0ISR@redVal+1,i2EPWM1_LoadDutyValue@dutyValue+1
  5313  000AB4  EC3F  F008         	call	i2_EPWM1_LoadDutyValue	;wreg free
  5314  000AB8                     
  5315                           ;main.c: 214:      EPWM2_LoadDutyValue(greVal);
  5316  000AB8  C09A  F001         	movff	myTMR0ISR@greVal,i2EPWM2_LoadDutyValue@dutyValue
  5317  000ABC  C09B  F002         	movff	myTMR0ISR@greVal+1,i2EPWM2_LoadDutyValue@dutyValue+1
  5318  000AC0  EC27  F008         	call	i2_EPWM2_LoadDutyValue	;wreg free
  5319  000AC4                     
  5320                           ;main.c: 215:      EPWM3_LoadDutyValue(bluVal);
  5321  000AC4  C0EB  F001         	movff	myTMR0ISR@bluVal,i2EPWM3_LoadDutyValue@dutyValue
  5322  000AC8  C0EC  F002         	movff	myTMR0ISR@bluVal+1,i2EPWM3_LoadDutyValue@dutyValue+1
  5323  000ACC  ECDE  F007         	call	i2_EPWM3_LoadDutyValue	;wreg free
  5324  000AD0                     
  5325                           ;main.c: 217:      step = step + 1;
  5326  000AD0  2850               	incf	myTMR0ISR@step^0,w,c
  5327  000AD2  6E50               	movwf	myTMR0ISR@step^0,c
  5328  000AD4                     
  5329                           ;main.c: 219:      if(step == 255){
  5330  000AD4  2850               	incf	myTMR0ISR@step^0,w,c
  5331  000AD6  A4D8               	btfss	status,2,c
  5332  000AD8  EF70  F005         	goto	i2u117_41
  5333  000ADC  EF72  F005         	goto	i2u117_40
  5334  000AE0                     i2u117_41:
  5335  000AE0  EF81  F005         	goto	i2l413
  5336  000AE4                     i2u117_40:
  5337  000AE4                     
  5338                           ;main.c: 220:          step = 0;
  5339  000AE4  0E00               	movlw	0
  5340  000AE6  6E50               	movwf	myTMR0ISR@step^0,c
  5341  000AE8                     
  5342                           ;main.c: 221:          edge = edge + 1;
  5343  000AE8  284F               	incf	myTMR0ISR@edge^0,w,c
  5344  000AEA  6E4F               	movwf	myTMR0ISR@edge^0,c
  5345  000AEC                     
  5346                           ;main.c: 222:          if(edge == 3){
  5347  000AEC  0E03               	movlw	3
  5348  000AEE  184F               	xorwf	myTMR0ISR@edge^0,w,c
  5349  000AF0  A4D8               	btfss	status,2,c
  5350  000AF2  EF7D  F005         	goto	i2u118_41
  5351  000AF6  EF7F  F005         	goto	i2u118_40
  5352  000AFA                     i2u118_41:
  5353  000AFA  EF81  F005         	goto	i2l413
  5354  000AFE                     i2u118_40:
  5355  000AFE                     
  5356                           ;main.c: 223:              edge = 0;
  5357  000AFE  0E00               	movlw	0
  5358  000B00  6E4F               	movwf	myTMR0ISR@edge^0,c
  5359  000B02                     i2l413:
  5360  000B02  0012               	return		;funcret
  5361  000B04                     __end_of_myTMR0ISR:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function i2_EPWM3_LoadDutyValue *****************
  5365 ;; Defined at:
  5366 ;;		line 90 in file "mcc_generated_files/epwm3.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        4 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_myTMR0ISR
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text39
  5394  000FBC                     __ptext39:
  5395                           	callstack 0
  5396  000FBC                     i2_EPWM3_LoadDutyValue:
  5397                           	callstack 18
  5398  000FBC                     
  5399                           ;mcc_generated_files/epwm3.c: 90: void EPWM3_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm3.c: 91: {;mcc_generated_files/epwm3.c: 93:     CCPR3L = ((dutyValue & 0x
      +                          03FC)>>2);
  5400  000FBC  C001  F003         	movff	i2EPWM3_LoadDutyValue@dutyValue,??i2_EPWM3_LoadDutyValue
  5401  000FC0  C002  F004         	movff	i2EPWM3_LoadDutyValue@dutyValue+1,??i2_EPWM3_LoadDutyValue+1
  5402  000FC4  90D8               	bcf	status,0,c
  5403  000FC6  3204               	rrcf	(??i2_EPWM3_LoadDutyValue+1)^0,f,c
  5404  000FC8  3203               	rrcf	??i2_EPWM3_LoadDutyValue^0,f,c
  5405  000FCA  90D8               	bcf	status,0,c
  5406  000FCC  3204               	rrcf	(??i2_EPWM3_LoadDutyValue+1)^0,f,c
  5407  000FCE  3203               	rrcf	??i2_EPWM3_LoadDutyValue^0,f,c
  5408  000FD0  5003               	movf	??i2_EPWM3_LoadDutyValue^0,w,c
  5409  000FD2  010F               	movlb	15	; () banked
  5410  000FD4  6F5E               	movwf	94,b	;volatile
  5411                           
  5412                           ;mcc_generated_files/epwm3.c: 96:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5413  000FD6  C001  F003         	movff	i2EPWM3_LoadDutyValue@dutyValue,??i2_EPWM3_LoadDutyValue
  5414  000FDA  0E03               	movlw	3
  5415  000FDC  1603               	andwf	??i2_EPWM3_LoadDutyValue^0,f,c
  5416  000FDE  3A03               	swapf	??i2_EPWM3_LoadDutyValue^0,f,c
  5417  000FE0  0EF0               	movlw	240
  5418  000FE2  1603               	andwf	??i2_EPWM3_LoadDutyValue^0,f,c
  5419  000FE4  515D               	movf	93,w,b	;volatile
  5420  000FE6  0BCF               	andlw	207
  5421  000FE8  1003               	iorwf	??i2_EPWM3_LoadDutyValue^0,w,c
  5422  000FEA  6F5D               	movwf	93,b	;volatile
  5423  000FEC                     
  5424                           ; BSR set to: 15
  5425  000FEC  0012               	return		;funcret
  5426  000FEE                     __end_ofi2_EPWM3_LoadDutyValue:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function i2_EPWM2_LoadDutyValue *****************
  5430 ;; Defined at:
  5431 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;Total ram usage:        4 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_myTMR0ISR
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text40
  5459  00104E                     __ptext40:
  5460                           	callstack 0
  5461  00104E                     i2_EPWM2_LoadDutyValue:
  5462                           	callstack 18
  5463  00104E                     
  5464                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  5465  00104E  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  5466  001052  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
  5467  001056  90D8               	bcf	status,0,c
  5468  001058  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  5469  00105A  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  5470  00105C  90D8               	bcf	status,0,c
  5471  00105E  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  5472  001060  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  5473  001062  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
  5474  001064  6E67               	movwf	103,c	;volatile
  5475                           
  5476                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5477  001066  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  5478  00106A  0E03               	movlw	3
  5479  00106C  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  5480  00106E  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
  5481  001070  0EF0               	movlw	240
  5482  001072  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  5483  001074  5066               	movf	102,w,c	;volatile
  5484  001076  0BCF               	andlw	207
  5485  001078  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
  5486  00107A  6E66               	movwf	102,c	;volatile
  5487  00107C  0012               	return		;funcret
  5488  00107E                     __end_ofi2_EPWM2_LoadDutyValue:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function i2_EPWM1_LoadDutyValue *****************
  5492 ;; Defined at:
  5493 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        4 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_myTMR0ISR
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text41
  5521  00107E                     __ptext41:
  5522                           	callstack 0
  5523  00107E                     i2_EPWM1_LoadDutyValue:
  5524                           	callstack 18
  5525  00107E                     
  5526                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5527  00107E  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  5528  001082  C002  F004         	movff	i2EPWM1_LoadDutyValue@dutyValue+1,??i2_EPWM1_LoadDutyValue+1
  5529  001086  90D8               	bcf	status,0,c
  5530  001088  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  5531  00108A  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  5532  00108C  90D8               	bcf	status,0,c
  5533  00108E  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  5534  001090  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  5535  001092  5003               	movf	??i2_EPWM1_LoadDutyValue^0,w,c
  5536  001094  6EBE               	movwf	190,c	;volatile
  5537                           
  5538                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5539  001096  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  5540  00109A  0E03               	movlw	3
  5541  00109C  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  5542  00109E  3A03               	swapf	??i2_EPWM1_LoadDutyValue^0,f,c
  5543  0010A0  0EF0               	movlw	240
  5544  0010A2  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  5545  0010A4  50BD               	movf	189,w,c	;volatile
  5546  0010A6  0BCF               	andlw	207
  5547  0010A8  1003               	iorwf	??i2_EPWM1_LoadDutyValue^0,w,c
  5548  0010AA  6EBD               	movwf	189,c	;volatile
  5549  0010AC  0012               	return		;funcret
  5550  0010AE                     __end_ofi2_EPWM1_LoadDutyValue:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function _TMR0_WriteTimer *****************
  5554 ;; Defined at:
  5555 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  timerVal        2    0[COMRAM] unsigned short 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_myTMR0ISR
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text42
  5583  001260                     __ptext42:
  5584                           	callstack 0
  5585  001260                     _TMR0_WriteTimer:
  5586                           	callstack 18
  5587  001260                     
  5588                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5589  001260  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  5590  001262  6ED7               	movwf	215,c	;volatile
  5591  001264                     
  5592                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5593  001264  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  5594  001268  0012               	return		;funcret
  5595  00126A                     __end_of_TMR0_WriteTimer:
  5596                           	callstack 0
  5597                           
  5598                           	psect	text43
  5599  000000                     __ptext43:
  5600                           	callstack 0
  5601  000000                     
  5602                           	psect	rparam
  5603  0000                     
  5604                           	psect	temp
  5605  000052                     btemp:
  5606                           	callstack 0
  5607  000052                     	ds	1
  5608  0000                     int$flags	set	btemp
  5609  0000                     wtemp8	set	btemp+1
  5610  0000                     ttemp5	set	btemp+1
  5611  0000                     ttemp6	set	btemp+4
  5612  0000                     ttemp7	set	btemp+8
  5613                           
  5614                           	psect	idloc
  5615                           
  5616                           ;Config register IDLOC0 @ 0x200000
  5617                           ;	unspecified, using default values
  5618  200000                     	org	2097152
  5619  200000  FF                 	db	255
  5620                           
  5621                           ;Config register IDLOC1 @ 0x200001
  5622                           ;	unspecified, using default values
  5623  200001                     	org	2097153
  5624  200001  FF                 	db	255
  5625                           
  5626                           ;Config register IDLOC2 @ 0x200002
  5627                           ;	unspecified, using default values
  5628  200002                     	org	2097154
  5629  200002  FF                 	db	255
  5630                           
  5631                           ;Config register IDLOC3 @ 0x200003
  5632                           ;	unspecified, using default values
  5633  200003                     	org	2097155
  5634  200003  FF                 	db	255
  5635                           
  5636                           ;Config register IDLOC4 @ 0x200004
  5637                           ;	unspecified, using default values
  5638  200004                     	org	2097156
  5639  200004  FF                 	db	255
  5640                           
  5641                           ;Config register IDLOC5 @ 0x200005
  5642                           ;	unspecified, using default values
  5643  200005                     	org	2097157
  5644  200005  FF                 	db	255
  5645                           
  5646                           ;Config register IDLOC6 @ 0x200006
  5647                           ;	unspecified, using default values
  5648  200006                     	org	2097158
  5649  200006  FF                 	db	255
  5650                           
  5651                           ;Config register IDLOC7 @ 0x200007
  5652                           ;	unspecified, using default values
  5653  200007                     	org	2097159
  5654  200007  FF                 	db	255
  5655                           
  5656                           	psect	config
  5657                           
  5658                           ; Padding undefined space
  5659  300000                     	org	3145728
  5660  300000  FF                 	db	255
  5661                           
  5662                           ;Config register CONFIG1H @ 0x300001
  5663                           ;	Oscillator Selection bits
  5664                           ;	FOSC = INTIO67, Internal oscillator block
  5665                           ;	4X PLL Enable
  5666                           ;	PLLCFG = OFF, Oscillator used directly
  5667                           ;	Primary clock enable bit
  5668                           ;	PRICLKEN = ON, Primary clock enabled
  5669                           ;	Fail-Safe Clock Monitor Enable bit
  5670                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5671                           ;	Internal/External Oscillator Switchover bit
  5672                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5673  300001                     	org	3145729
  5674  300001  28                 	db	40
  5675                           
  5676                           ;Config register CONFIG2L @ 0x300002
  5677                           ;	Power-up Timer Enable bit
  5678                           ;	PWRTEN = OFF, Power up timer disabled
  5679                           ;	Brown-out Reset Enable bits
  5680                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5681                           ;	Brown Out Reset Voltage bits
  5682                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5683  300002                     	org	3145730
  5684  300002  1F                 	db	31
  5685                           
  5686                           ;Config register CONFIG2H @ 0x300003
  5687                           ;	Watchdog Timer Enable bits
  5688                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5689                           ;	Watchdog Timer Postscale Select bits
  5690                           ;	WDTPS = 32768, 1:32768
  5691  300003                     	org	3145731
  5692  300003  3C                 	db	60
  5693                           
  5694                           ; Padding undefined space
  5695  300004                     	org	3145732
  5696  300004  FF                 	db	255
  5697                           
  5698                           ;Config register CONFIG3H @ 0x300005
  5699                           ;	CCP2 MUX bit
  5700                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5701                           ;	PORTB A/D Enable bit
  5702                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5703                           ;	P3A/CCP3 Mux bit
  5704                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5705                           ;	HFINTOSC Fast Start-up
  5706                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5707                           ;	Timer3 Clock input mux bit
  5708                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5709                           ;	ECCP2 B output mux bit
  5710                           ;	P2BMX = PORTB5, P2B is on RB5
  5711                           ;	MCLR Pin Enable bit
  5712                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5713  300005                     	org	3145733
  5714  300005  BF                 	db	191
  5715                           
  5716                           ;Config register CONFIG4L @ 0x300006
  5717                           ;	Stack Full/Underflow Reset Enable bit
  5718                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5719                           ;	Single-Supply ICSP Enable bit
  5720                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5721                           ;	Extended Instruction Set Enable bit
  5722                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5723                           ;	Background Debug
  5724                           ;	DEBUG = OFF, Disabled
  5725  300006                     	org	3145734
  5726  300006  85                 	db	133
  5727                           
  5728                           ; Padding undefined space
  5729  300007                     	org	3145735
  5730  300007  FF                 	db	255
  5731                           
  5732                           ;Config register CONFIG5L @ 0x300008
  5733                           ;	Code Protection Block 0
  5734                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5735                           ;	Code Protection Block 1
  5736                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5737                           ;	Code Protection Block 2
  5738                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5739                           ;	Code Protection Block 3
  5740                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5741  300008                     	org	3145736
  5742  300008  0F                 	db	15
  5743                           
  5744                           ;Config register CONFIG5H @ 0x300009
  5745                           ;	Boot Block Code Protection bit
  5746                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5747                           ;	Data EEPROM Code Protection bit
  5748                           ;	CPD = OFF, Data EEPROM not code-protected
  5749  300009                     	org	3145737
  5750  300009  C0                 	db	192
  5751                           
  5752                           ;Config register CONFIG6L @ 0x30000A
  5753                           ;	Write Protection Block 0
  5754                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5755                           ;	Write Protection Block 1
  5756                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5757                           ;	Write Protection Block 2
  5758                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5759                           ;	Write Protection Block 3
  5760                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5761  30000A                     	org	3145738
  5762  30000A  0F                 	db	15
  5763                           
  5764                           ;Config register CONFIG6H @ 0x30000B
  5765                           ;	Configuration Register Write Protection bit
  5766                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5767                           ;	Boot Block Write Protection bit
  5768                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5769                           ;	Data EEPROM Write Protection bit
  5770                           ;	WRTD = OFF, Data EEPROM not write-protected
  5771  30000B                     	org	3145739
  5772  30000B  E0                 	db	224
  5773                           
  5774                           ;Config register CONFIG7L @ 0x30000C
  5775                           ;	Table Read Protection Block 0
  5776                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5777                           ;	Table Read Protection Block 1
  5778                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5779                           ;	Table Read Protection Block 2
  5780                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5781                           ;	Table Read Protection Block 3
  5782                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5783  30000C                     	org	3145740
  5784  30000C  0F                 	db	15
  5785                           
  5786                           ;Config register CONFIG7H @ 0x30000D
  5787                           ;	Boot Block Table Read Protection bit
  5788                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5789  30000D                     	org	3145741
  5790  30000D  40                 	db	64
  5791                           tosu	equ	0xFFF
  5792                           tosh	equ	0xFFE
  5793                           tosl	equ	0xFFD
  5794                           stkptr	equ	0xFFC
  5795                           pclatu	equ	0xFFB
  5796                           pclath	equ	0xFFA
  5797                           pcl	equ	0xFF9
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           indf0	equ	0xFEF
  5805                           postinc0	equ	0xFEE
  5806                           postdec0	equ	0xFED
  5807                           preinc0	equ	0xFEC
  5808                           plusw0	equ	0xFEB
  5809                           fsr0h	equ	0xFEA
  5810                           fsr0l	equ	0xFE9
  5811                           wreg	equ	0xFE8
  5812                           indf1	equ	0xFE7
  5813                           postinc1	equ	0xFE6
  5814                           postdec1	equ	0xFE5
  5815                           preinc1	equ	0xFE4
  5816                           plusw1	equ	0xFE3
  5817                           fsr1h	equ	0xFE2
  5818                           fsr1l	equ	0xFE1
  5819                           bsr	equ	0xFE0
  5820                           indf2	equ	0xFDF
  5821                           postinc2	equ	0xFDE
  5822                           postdec2	equ	0xFDD
  5823                           preinc2	equ	0xFDC
  5824                           plusw2	equ	0xFDB
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8

Data Sizes:
    Strings     538
    Constant    0
    Data        40
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      81
    BANK0           160     56     143
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1352_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_28(CODE[17]), STR_27(CODE[29]), STR_26(CODE[29]), STR_25(CODE[8]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[33]), STR_21(CODE[47]), 
		 -> STR_20(CODE[18]), STR_19(CODE[30]), STR_18(CODE[40]), STR_17(CODE[41]), 
		 -> STR_16(CODE[39]), STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[15]), 
		 -> STR_12(CODE[33]), STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[33]), STR_7(CODE[3]), STR_6(CODE[19]), STR_5(CODE[20]), 
		 -> STR_4(CODE[18]), STR_3(CODE[23]), STR_2(CODE[13]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 47
		 -> STR_28(CODE[17]), STR_27(CODE[29]), STR_26(CODE[29]), STR_25(CODE[8]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[33]), STR_21(CODE[47]), 
		 -> STR_20(CODE[18]), STR_19(CODE[30]), STR_18(CODE[40]), STR_17(CODE[41]), 
		 -> STR_16(CODE[39]), STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[15]), 
		 -> STR_12(CODE[33]), STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[33]), STR_7(CODE[3]), STR_6(CODE[19]), STR_5(CODE[20]), 
		 -> STR_4(CODE[18]), STR_3(CODE[23]), STR_2(CODE[13]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_28(CODE[17]), STR_27(CODE[29]), STR_26(CODE[29]), STR_25(CODE[8]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[33]), STR_21(CODE[47]), 
		 -> STR_20(CODE[18]), STR_19(CODE[30]), STR_18(CODE[40]), STR_17(CODE[41]), 
		 -> STR_16(CODE[39]), STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[15]), 
		 -> STR_12(CODE[33]), STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[33]), STR_7(CODE[3]), STR_6(CODE[19]), STR_5(CODE[20]), 
		 -> STR_4(CODE[18]), STR_3(CODE[23]), STR_2(CODE[13]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_EPWM1_LoadDutyValue
    _myTMR0ISR->i2_EPWM2_LoadDutyValue
    _myTMR0ISR->i2_EPWM3_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   17156
                                             45 BANK0     11    11      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                _EPWM3_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   14618
                                             66 COMRAM     4     4      0
                                             41 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12011
                                             64 COMRAM     2     2      0
                                             35 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   11526
                                             60 COMRAM     4     4      0
                                             20 BANK0     15     9      6
                               _ctoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5655
                                             41 COMRAM    19     8     11
                                              0 BANK0     20    20      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             18 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3904
                                             41 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3625
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             13 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                   _EPWM3_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             14 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM3_LoadDutyValue                                  4     2      2     398
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     398
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     398
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0     330
                                              6 COMRAM     6     6      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     330
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           2     2      0     330
                                              4 COMRAM     2     2      0
                    _TMR0_WriteTimer
              i2_EPWM1_LoadDutyValue
              i2_EPWM2_LoadDutyValue
              i2_EPWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (13) i2_EPWM3_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM2_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM1_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EPWM2_LoadDutyValue
   _EPWM3_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EPWM3_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_WriteTimer
       i2_EPWM1_LoadDutyValue
       i2_EPWM2_LoadDutyValue
       i2_EPWM3_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      51       1       86.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E0      12        0.0%
DATA                 0      0      E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Oct 01 18:08:20 2020

                  __size_of_EPWM2_LoadDutyValue 0030                                              l20 0FBA  
                                            l40 104C                                              l17 1196  
                                            l60 101C                                              l37 11D6  
                                            l57 11B6                                              l69 126C  
                               _timer0ReloadVal 004D                                             l103 10D8  
                                           l310 11E4                                             l119 122C  
                                           l313 11F2                                             l235 121C  
                                           l227 0E3A                                             l307 1176  
                                           l251 11F6                                             l244 112A  
                                           l260 1236                                             l181 1240  
                                           l254 1208                                             l159 0F88  
                                           l248 1150                                             l272 1254  
                                           l275 124A                                             l278 125E  
                                           l369 0248                                             _PR2 000FBB  
                                           _pad 0B04                                 _TMR2_Initialize 121E  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                      __end_of_EPWM2_Initialize 11B8                           i2_EPWM2_LoadDutyValue 104E  
                                          l1130 0BC4                                            l1220 0F54  
                                          l2005 124C                                            l2101 0F78  
                                          l1125 0B48                                            l1206 0C5A  
                                          l1214 0DBA                                            l1230 0D1C  
                                          l1142 0520                                            l2007 1242  
                                          l2111 0E2A                                            l2103 0F84  
                                          l1151 05C0                                            l1128 0B8A  
                                          l1144 0528                                            l2009 1256  
                                          l2113 0E36                                            l2105 0DFE  
                                          l2201 1172                                            l1137 0D76  
                                          l1225 0D14                                            l2107 0E12  
                                          l2115 11D8                                            l1236 0EAE  
                                          l1172 0A16                                            l2109 0E1E  
                                          l1165 075E                                            l1181 0CB6  
                                          l1182 0CBE                                            l1094 1128  
                                          l2071 1178                                            l1191 0EE6  
                                          l1167 07C0                                            l2153 0F8A  
                                          l2073 11B8                                            l2081 10BA  
                                          l2401 0D96                                            l1185 0E76  
                                          l2155 101E                                            l2075 1198  
                                          l2083 10D6                                            l2091 0F58  
                                          l2403 0D9A                                            l2411 0F48  
                                          l2157 0FEE                                            l2181 114E  
                                          l2173 112A                                            l2077 126A  
                                          l2093 0F5C                                            l2085 121E  
                                          l2405 0F20                                            l2421 0B12  
                                          l2501 05F4                                            l2175 1138  
                                          l2079 10AE                                            l2095 0F5E  
                                          l2087 1226                                            l2191 115E  
                                          l2407 0F2C                                            l2431 0B68  
                                          l2423 0B26                                            l2415 0E78  
                                          l2503 0606                                            l2511 0666  
                                          l2177 113C                                            l2169 120A  
                                          l2097 0F74                                            l2089 0F56  
                                          l2193 1162                                            l2185 1152  
                                          l2409 0F30                                            l2433 0B6C  
                                          l2425 0B34                                            l2441 0EB0  
                                          l2521 06FE                                            l2513 0678  
                                          l2601 1102                                            l2179 114A  
                                          l2099 0F76                                            l2195 1166  
                                          l2187 1156                                            l2435 0B98  
                                          l2427 0B40                                            l2419 0B04  
                                          l2531 0772                                            l2523 071C  
                                          l2515 067E                                            l2507 0640  
                                          l2603 110A                                            l2611 0080  
                                          l2197 116A                                            l2189 115A  
                                          l2381 1230                                            l2437 0BAC  
                                          l2429 0B54                                            l2461 0D30  
                                          l2445 0E3C                                            l2453 0CF6  
                                          l2533 0782                                            l2525 0736  
                                          l2517 0684                                            l2509 0652  
                                          l2541 07E8                                            l2701 035A  
                                          l2621 00A4                                            l2613 008C  
                                          l2199 116E                                            l2391 0C12  
                                          l2383 0BC6                                            l2463 0D3C  
                                          l2455 0D08                                            l2535 0798  
                                          l2527 0750                                            l2519 06E2  
                                          l2551 0864                                            l2543 07F6  
                                          l2711 039C                                            l2631 00E6  
                                          l2623 00B0                                            l2615 008E  
                                          l2607 0062                                            l2377 11F6  
                                          l2393 0C48                                            l2385 0BD8  
                                          l2465 0D48                                            l2449 0CC0  
                                          l2529 076C                                            l2481 053E  
                                          l2473 04E8                                            l2561 08E4  
                                          l2545 0806                                            l2721 03D0  
                                          l2713 03AC                                            l2705 0366  
                                          l2641 0132                                            l2633 00F4  
                                          l2625 00BC                                            l2617 0090  
                                          l2609 007C                                            l2379 1204  
                                          l2387 0BEA                                            l2467 0D4C  
                                          l2459 0D1E                                            l2491 0580  
                                          l2483 0548                                            l2475 04F6  
                                          l2571 0992                                            l2563 08F2  
                                          l2555 0880                                            l2547 080A  
                                          l2539 07C2                                            l2731 0428  
                                          l2723 03E0                                            l2715 03B4  
                                          l2707 0372                                            l2651 0228  
                                          l2643 013E                                            l2635 0102  
                                          l2627 00CA                                            l2619 0098  
                                          l2389 0BF4                                            l2397 0D78  
                                          l2469 0D52                                            l2493 0588  
                                          l2485 0568                                            l2477 04F8  
                                          l2581 09D0                                            l2573 09A0  
                                          l2565 0930                                            l2557 08A6  
                                          l2549 0830                                            l2733 0438  
                                          l2725 03F6                                            l2717 03B8  
                                          l2709 0384                                            l2653 0234  
                                          l2645 0224                                            l2637 0110  
                                          l2629 00D8                                            l2399 0D84  
                                          l2495 05A4                                            l2487 0572  
                                          l2479 0512                                            l2575 09B4  
                                          l2559 08CC                                            l2735 0444  
                                          l2727 0406                                            l2719 03C4  
                                          l2671 028C                                            l2663 0252  
                                          l2655 0238                                            l2639 011E  
                                          l2497 05B4                                            l2489 057A  
                                          l2569 096C                                            l2585 09DE  
                                          l2593 0C5C                                            l2729 0412  
                                          l2681 02C6                                            l2673 0294  
                                          l2665 025E                                            l2657 024E  
                                          l2587 0A04                                            l2579 09C2  
                                          l2595 0C64                                            l2683 02DC  
                                          l2675 02A4                                            l2667 0262  
                                          l2739 045A                                            l2597 0C72  
                                          l2765 046E                                            l2693 0316  
                                          l2685 02E4                                            l2677 02BA  
                                          l2669 0276                                            ?_pad 001F  
                                          l2599 0C98                                            l2695 032C  
                                          l2687 02F4                                            l2697 0334  
                                          l2689 030A                                            l2699 0344  
                                          l1999 1238                                            STR_1 FFEE  
                                          STR_2 FFE1                                            STR_3 FF1D  
                                          STR_4 FF70                                            STR_5 FF49  
                                          STR_6 FF5D                                            STR_7 FEAA  
                                          STR_8 FE8C                                            STR_9 FFB4  
                                          u1220 121A                                            u1221 1214  
                                          u1230 1138                                            u1150 11F2  
                                          u1231 1134                                            u1151 11EE  
                                          u1240 114A                                            u1400 0BD8  
                                          u1241 1146                                            u1401 0BD4  
                                          u1226 121C                                            u1410 0BEA  
                                          u1411 0BE6                                            u1420 0C12  
                                          u1500 0B8A                                            u1421 0C0E  
                                          u1501 0B86                                            _LATA 000F89  
                                          u1430 0C48                                            u1510 0B98  
                                          _LATB 000F8A                                            u1431 0C44  
                                          u1511 0B94                                            _LATC 000F8B  
                                          u1440 0DBA                                            u1520 0EE0  
                                          u1600 04F6                                            u1441 0DB6  
                                          u1521 0EDA                                            u1601 04F2  
                                          u1450 0F48                                            u1530 0EE2  
                                          u1610 0512                                            u1451 0F44  
                                          u1611 050E                                            u1540 0E70  
                                          u1460 0EA8                                            u1700 06BC  
                                          u1620 053E                                            u1541 0E6A  
                                          u1461 0EA2                                            u1621 053A  
                                          u1390 1204                                            u1550 0E72  
                                          u1470 0EAA                                            u1710 06FE  
                                          u1630 05A4                                            u1391 1200  
                                          u1711 06FA                                            u1631 05A0  
                                          u1480 0B12                                            u1560 0CF0  
                                          u1720 071C                                            u1640 05EE  
                                          u1800 08CC                                            u1481 0B0E  
                                          u1561 0CEA                                            u1721 0718  
                                          u1705 06AA                                            u1641 05E8  
                                          u1801 08C8                                            u1490 0B34  
                                          u1570 0CF2                                            u1730 0736  
                                          u1650 05F0                                            u1810 0992  
                                          u1491 0B30                                            u1731 0732  
                                          u1811 098E                                            u1580 0D08  
                                          u1740 0750                                            u1660 0606  
                                          u1820 0CB6                                            u1900 032C  
                                          u1581 0D04                                            u1741 074C  
                                          u1661 0602                                            u1821 0CB2  
                                          u1901 0328                                            u1590 0D30  
                                          u1750 075E                                            u1670 063A  
                                          u1910 035A                                            u1830 0132  
                                          u1591 0D2C                                            u1751 075A  
                                          u1671 0634                                            u1911 0356  
                                          u1831 012E                                            u1760 076C  
                                          u1680 063C                                            u1920 0384  
                                          u1840 0248                                            u1761 0768  
                                          u1921 0380                                            u1841 0244  
                                          u1690 0652                                            u1770 07E8  
                                          u1930 03F6                                            u1850 0272  
                                          u1691 064E                                            u1771 07E4  
                                          u1931 03F2                                            u1851 026E  
                                          u1780 0830                                            u1940 0428  
                                          u1860 028C                                            u1781 082C  
                                          u1941 0424                                            u1861 0288  
                                          u1790 08A6                                            u1870 02BA  
                                          u1791 08A2                                            u1871 02B6  
                                          u1880 02DC                                            u1881 02D8  
                                          u1890 030A                                            u1891 0306  
                                          i2l20 0FEC                                            i2l40 10AC  
                                          i2l60 107C                                            i2l76 0042  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                   main@dutyBlu 0096                                     main@dutyGre 0094  
                                   main@dutyRed 0092                                   _EUSART1_Write 11F4  
                                          _dbuf 00A7                                            _ctoa 0D1E  
                                          _main 0062                                   ?_EUSART1_Read 0001  
                                          _prec 0049                                            _nout 0098  
                                          pad@i 0026                                            pad@p 0023  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0028                                            fsr2l 000FD9  
                                          btemp 0052                                            _xtoa 04E8  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 005E                           ??_EPWM1_LoadDutyValue 000F  
                      __end_of_EPWM3_Initialize 1198                                    ___param_bank 000000  
                                         ??_pad 0025                         __end_of_TMR0_Initialize 0F8A  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 11F4                                           ?_ctoa 002A  
                                         ?_main 0001                                           STR_10 FFD2  
                                         STR_11 FFC3                                           STR_12 FE8C  
                                         STR_20 FF82                                           STR_13 FFA5  
                                         STR_21 FDE5                                           STR_22 FE8C  
                                         STR_14 FF34                                           STR_23 FEAB  
                                         STR_15 FF05                                           STR_24 FEAB  
                                         STR_16 FE65                                           STR_25 FFF7  
                                         STR_17 FE14                                           STR_26 FEE8  
                                         STR_18 FE3D                                           STR_27 FECB  
                                         STR_19 FEAD                                           STR_28 FF94  
                                         _T0CON 000FD5                                           ?_xtoa 002A  
                                         _T2CON 000FBA                                           i2l171 1268  
                                         i2l413 0B02                                 _TMR0_WriteTimer 1260  
                                         i2l184 126E                                           i2l178 0F1E  
                                  vfpfcnvrt@fmt 0076                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 007A                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                     ?_TMR0_SetInterruptHandler 000D                                __end_of_TMR0_ISR 0F20  
                                         _flags 004B                                           _fputc 0BC6  
                               __end_of_isalpha 0E78                                           _fputs 0D78  
                                         pad@fp 001F                                           _width 0047  
                                         ctoa@c 002C                                           _putch 122E  
                                         ctoa@w 002D                                           main@i 0090  
                               __end_of_islower 0EB0                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 0EE8                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 000D  
                                         ttemp5 0053                                           ttemp6 0056  
                                         ttemp7 005A                                           status 000FD8  
                                         wtemp8 0053                                           xtoa@c 0072  
                                         xtoa@d 002C                                           xtoa@i 0070  
                                         xtoa@n 0068                                           xtoa@p 0064  
                                         xtoa@w 0066                                           xtoa@x 0034  
                               __end_of_toupper 0D1E              _EUSART1_DefaultFramingErrorHandler 000000  
                                  _toupper$1510 0019                                 __initialization 0DBC  
                                  __end_of_ctoa 0D78                      __end_of_EUSART1_Initialize 0E3C  
                                  __end_of_main 04E8                                    __end_of_xtoa 07C2  
                       __end_of_TMR2_Initialize 122E                     ?_INTERRUPT_InterruptManager 0001  
                       ??i2_EPWM1_LoadDutyValue 0003                                          ??_ctoa 002D  
                                        ??_main 008D                                          ??_xtoa 0035  
                                 __activetblptr 000003                          ?i2_EPWM2_LoadDutyValue 0001  
                                        ?_fputc 000F                                          ?_fputs 0018  
                                        _CCPR1H 000FBF                                          _CCPR2H 000F68  
                                        _CCPR1L 000FBE                                          _CCPR3H 000F5F  
                                        _CCPR2L 000F67                                          _CCPR3L 000F5E  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l2001 1260  
                                        i2l2003 1264                                          i2l2121 0A3E  
                                        i2l2131 0AC4                                          i2l2123 0A64  
                                        i2l2211 0030                                          i2l2141 0AEC  
                                        i2l2133 0AD0                                          i2l2125 0A88  
                                        i2l2117 0A18                                          i2l2213 003E  
                                        i2l2143 0AFE                                          i2l2135 0AD4  
                                        i2l2127 0AAC                                          i2l2119 0A2A  
                                        i2l2065 0FBC                                          i2l2137 0AE4  
                                        i2l2129 0AB8                                          i2l2161 0EEA  
                                        i2l2209 0022                                          i2l2067 107E  
                                        i2l2139 0AE8                                          i2l2163 0EEE  
                                        i2l2069 104E                                          i2l2165 0EF2  
                                        i2l2167 0F06                                          i2l2159 0EE8  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 0041                         __end_of_TMR0_WriteTimer 126A  
                      ?_EUSART1_SetErrorHandler 000D                                ?_TMR0_Initialize 0001  
                                        clear_0 0DE2                                          clear_1 0DEE  
                                        _printf 1102                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 000F                 ?_EUSART1_SetOverrunErrorHandler 000D  
                                        ctoa@fp 002A                                          _strlen 0F20  
                                        fputc@c 000F                                          fputs@c 001C  
                                        fputs@i 001D                                          fputs@s 0018  
                                     ??_isalpha 000F                                       ??_islower 000F  
                                  __mediumconst FDE4                                          tblptrh 000FF7  
                                     ??_isupper 000F                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 0CC0  
                               ??_EUSART1_Write 000D                             _EPWM2_LoadDutyValue 0FEE  
      TMR0_SetInterruptHandler@InterruptHandler 000D                                          xtoa@fp 002A  
                                     ??_toupper 0015                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 1152                                      __accesstop 0060  
                       __end_of__initialization 0DF4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                    EPWM3_LoadDutyValue@dutyValue 000D  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 000D                                    __pidataBANK0 10DA  
                           ??_SYSTEM_Initialize 0011                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 000D                    __size_of_EPWM3_LoadDutyValue 0032  
                                 __end_of_fputc 0C5C                                   __end_of_fputs 0DBC  
                                 __end_of_putch 1238                                ?_TMR2_Initialize 0001  
                i2EPWM1_LoadDutyValue@dutyValue 0001                            __end_of_EUSART1_Read 1152  
                             ?_EPWM2_Initialize 0001                                         ??_fputc 0013  
                     __end_of_SYSTEM_Initialize 1178                                         ??_fputs 001C  
                         i2_EPWM3_LoadDutyValue 0FBC                              __size_of_myTMR0ISR 00EC  
                            ??_EPWM2_Initialize 000D                                         ??_putch 000E  
                               myTMR0ISR@bluVal 00EB                                      __pbssBANK0 0098  
                               myTMR0ISR@greVal 009A                                 myTMR0ISR@redVal 009C  
                                 myTMR0ISR@edge 004F                                   myTMR0ISR@step 0050  
               __end_of_EUSART1_SetErrorHandler 1260                           ??_EPWM2_LoadDutyValue 000F  
                             ?_EPWM3_Initialize 0001                __end_of_TMR0_SetInterruptHandler 1242  
                                    ??_TMR0_ISR 0007                                ?_TMR0_WriteTimer 0001  
                            ??_EPWM3_Initialize 000D                                         _CCP1CON 000FBD  
                                       _CCP2CON 000F66                                         _CCP3CON 000F5D  
                                       _ECCP1AS 000FB6                                         _ECCP2AS 000F64  
                                       _ECCP3AS 000F5B                                         ?_printf 0089  
                                       ?_strlen 000D          __end_of_EUSART1_SetFramingErrorHandler 1256  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 124C  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0256  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _PWM2CON 000F65                                         _PWM3CON 000F5C  
                                       _SPBRGH1 000FB0                     __end_of_EPWM1_LoadDutyValue 104E  
                                       __Hparam 0000                                         __Lparam 0000  
                             __end_of_myTMR0ISR 0B04                                       ?_vfprintf 0083  
                           _EUSART1_is_rx_ready 120A                                         __pcinit 0DBC  
                                       __ramtop 1000                                         __ptext0 0062  
                                       __ptext1 1102                                         __ptext2 0C5C  
                                       __ptext3 07C2                                         __ptext4 04E8  
                                       __ptext5 0CC0                                         __ptext6 0E78  
                                       __ptext7 0EB0                                         __ptext8 0E3C  
                                       __ptext9 0D1E                         ??i2_EPWM2_LoadDutyValue 0003  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                __size_ofi2_EPWM1_LoadDutyValue 0030                                 __size_of_strlen 0036  
                 __end_ofi2_EPWM1_LoadDutyValue 10AE                                         _initBlu 00D9  
                                       _initGre 00DF                                         _initRed 00E5  
                         _OSCILLATOR_Initialize 11D8                                       _T2CONbits 000FBA  
                                  __size_of_pad 00C2                                         _isalpha 0E3C  
                            _EUSART1_Initialize 0DFE                                         _islower 0E78  
                      ??_PIN_MANAGER_Initialize 000D                                         _isupper 0EB0  
                        ?i2_EPWM3_LoadDutyValue 0001                                         main@cmd 008F  
                    __size_of_SYSTEM_Initialize 0026                                         _toupper 0CC0  
                          end_of_initialization 0DF4                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0011  
                   _EUSART1_OverrunErrorHandler 00A0                                         fputs@fp 001A  
                             __end_of_vfpfcnvrt 0A18                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 0041  
                          ??_EUSART1_Initialize 000F                                         strlen@a 000F  
                                       strlen@s 000D                        _TMR0_SetInterruptHandler 1238  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 000D  
                           _EPWM3_LoadDutyValue 0F8A                           ??_EUSART1_is_rx_ready 000D  
                                  _EUSART1_Read 112A                    __end_of_INTERRUPT_Initialize 126E  
                          ?_EPWM3_LoadDutyValue 000D                                     vfpfcnvrt@ap 0078  
                                   vfpfcnvrt@fp 0074                               __size_of_TMR0_ISR 0038  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 112A  
                                __end_of_strlen 0F56                             start_initialization 0DBC  
                     __size_of_EPWM1_Initialize 0020                        __size_of_TMR0_Initialize 0034  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_pad 0BC6  
                                   putch@txData 000E                    EPWM1_LoadDutyValue@dutyValue 000D  
                         __end_of_EUSART1_Write 120A                       __size_of_EPWM2_Initialize 0020  
                                   vfprintf@fmt 0085                           ??_EPWM3_LoadDutyValue 000F  
                                   __pdataBANK0 00C7                                        ??_printf 0043  
                                      ??_strlen 000F                  i2EPWM2_LoadDutyValue@dutyValue 0001  
                                   __pbssCOMRAM 0047                       __size_of_EPWM3_Initialize 0020  
                                 __pcstackBANK0 0060                        __size_of_TMR2_Initialize 0010  
              ??_EUSART1_SetFramingErrorHandler 000F                 ?_EUSART1_SetFramingErrorHandler 000D  
                   __end_of_EPWM2_LoadDutyValue 101E                           _TMR0_InterruptHandler 00A4  
                        _PIN_MANAGER_Initialize 10AE                                       __pintcode 0008  
                                 __pmediumconst FDE4                    ??_INTERRUPT_InterruptManager 0007  
                             __size_of_vfprintf 0064                                       _colorTour 00A6  
                                     _myTMR0ISR 0A18                         ??i2_EPWM3_LoadDutyValue 0003  
                                      _BAUDCON1 000FB8                  __size_ofi2_EPWM2_LoadDutyValue 0030  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 000D  
                 __end_ofi2_EPWM2_LoadDutyValue 107E                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 009E                                        ?_islower 000D  
                                      ?_isupper 000D                         _EUSART1_SetErrorHandler 1256  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 0013                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 126A                               ??_TMR0_Initialize 000F  
       EUSART1_SetErrorHandler@interruptHandler 000D                                        i2u120_40 0F06  
                                      i2u120_41 0F02                                        i2u121_48 0F0C  
                                      i2u121_49 0F1E                                        i2u116_40 0A2A  
                                      i2u116_41 0A26                                        i2u117_40 0AE4  
                                      i2u125_40 0030                                        i2u117_41 0AE0  
                                      i2u125_41 002C                                        i2u118_40 0AFE  
                                      i2u126_40 003E                                        i2u118_41 0AFA  
                                      i2u126_41 003A             __size_of_INTERRUPT_InterruptManager 0056  
                    ??_TMR0_SetInterruptHandler 000F                                        _PIR1bits 000F9E  
                  __size_of_EPWM1_LoadDutyValue 0030                                        _RCONbits 000FD0  
                                      _TMR0_ISR 0EE8                                        _PSTR1CON 000FB9  
                                      _PSTR2CON 000F63                                        _PSTR3CON 000F5A  
                                     _vfpfcnvrt 07C2                                       _xtoa$1433 0060  
                                     _xtoa$1434 0062                                       main@i_898 0091  
                                    ?_myTMR0ISR 0001                                _EPWM1_Initialize 11B8  
                         i2_EPWM1_LoadDutyValue 107E                                      vfpfcnvrt@c 0082  
                                   _INTCON2bits 000FF1                                       copy_data0 0DD0  
                         ?_INTERRUPT_Initialize 0001                               ??_TMR2_Initialize 000D  
                                      __Hrparam 0000                                _EPWM2_Initialize 1198  
                                    vfprintf@ap 0087                                        __Lrparam 0000  
                                    vfprintf@fp 0083                         ??_OSCILLATOR_Initialize 000D  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 0074  
                     ??_EUSART1_SetErrorHandler 000F                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 121E                                _EPWM3_Initialize 1178  
                              __size_of_isalpha 003C                                        _deltaBlu 00C7  
                                      _deltaGre 00CD                                        _deltaRed 00D3  
                              __size_of_islower 0038                                        __ptext10 0B04  
                                      __ptext11 0F20                                        __ptext20 10AE  
                                      __ptext12 0D78                                        __ptext21 11D8  
                                      __ptext13 0BC6                                        __ptext30 120A  
                                      __ptext22 126A                                        __ptext14 122E  
                                      __ptext31 112A                                        __ptext23 0DFE  
                                      __ptext15 11F4                                        __ptext40 104E  
                                      __ptext32 0F8A                                        __ptext24 1242  
                                      __ptext16 1152                                        __ptext41 107E  
                                      __ptext33 0FEE                                        __ptext25 124C  
                                      __ptext17 121E                                        __ptext42 1260  
                                      __ptext34 101E                                        __ptext26 1256  
                                      __ptext18 0F56                                        __ptext43 0000  
                                      __ptext27 1178                                        __ptext19 1238  
                                      __ptext36 0EE8                                        __ptext28 1198  
                                      __ptext37 126E                                        __ptext29 11B8  
                                      __ptext38 0A18                                        __ptext39 0FBC  
                              __size_of_isupper 0038                                   _timerInterval 00ED  
                       TMR0_WriteTimer@timerVal 0001                               ??_TMR0_WriteTimer 0003  
                              __size_of_toupper 005E                                   __size_of_ctoa 005A  
                                 __size_of_main 0486                                   __size_of_xtoa 02DA  
          __end_of_TMR0_DefaultInterruptHandler 1270           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 126E  EUSART1_SetOverrunErrorHandler@interruptHandler 000D  
                                      int$flags 0052                                        _vfprintf 0C5C  
            __end_of_INTERRUPT_InterruptManager 005E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0089                     _EUSART1_FramingErrorHandler 00A2  
                                   ??_myTMR0ISR 0005                          ?i2_EPWM1_LoadDutyValue 0001  
                                    _INTCONbits 000FF2                                        isalpha@c 000D  
                        ??_INTERRUPT_Initialize 000D                                        intlevel2 0000  
                                      islower@c 000D                    EPWM2_LoadDutyValue@dutyValue 000D  
                       ?_PIN_MANAGER_Initialize 0001                     __end_of_EPWM3_LoadDutyValue 0FBC  
        __end_of_EUSART1_SetOverrunErrorHandler 124C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1242                                      _RCSTA1bits 000FAB  
                                      isupper@c 000D                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 0045  
EUSART1_SetFramingErrorHandler@interruptHandler 000D                                     ??_vfpfcnvrt 003D  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0051  
                               _TMR0_Initialize 0F56                  __size_ofi2_EPWM3_LoadDutyValue 0032  
                                      toupper@c 0013                  i2EPWM3_LoadDutyValue@dutyValue 0001  
                 __end_ofi2_EPWM3_LoadDutyValue 0FEE                             _EPWM1_LoadDutyValue 101E  
                __end_of_PIN_MANAGER_Initialize 10DA                                    fp__myTMR0ISR 0000  
                      __end_of_EPWM1_Initialize 11D8                            ?_EPWM1_LoadDutyValue 000D  
